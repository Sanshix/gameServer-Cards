// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package message

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GameMode int32

const (
	// 未知游戏模式
	GameMode_GameMode_None GameMode = 0
	// 金币场
	GameMode_GameMode_Gold GameMode = 1
	// 房卡场
	GameMode_GameMode_Card GameMode = 2
	// 抢座模式,子模式
	GameMode_GameMode_Grab GameMode = 3
	// 开始游戏不需要准备的模式,子模式
	GameMode_GameMode_NoReady GameMode = 4
)

var GameMode_name = map[int32]string{
	0: "GameMode_None",
	1: "GameMode_Gold",
	2: "GameMode_Card",
	3: "GameMode_Grab",
	4: "GameMode_NoReady",
}

var GameMode_value = map[string]int32{
	"GameMode_None":    0,
	"GameMode_Gold":    1,
	"GameMode_Card":    2,
	"GameMode_Grab":    3,
	"GameMode_NoReady": 4,
}

func (x GameMode) String() string {
	return proto.EnumName(GameMode_name, int32(x))
}

func (GameMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

type ErrorCode int32

const (
	// 接口不存在
	ErrorCode_InterfaceNotFound ErrorCode = 0
	// 账号不存在
	ErrorCode_AccountNotFound ErrorCode = 1
	// 账号已注册
	ErrorCode_AccountExist ErrorCode = 2
	// 数据不存在
	ErrorCode_DataNotFound ErrorCode = 3
	// 数据已注册
	ErrorCode_DataExist ErrorCode = 4
	// 生成uuid失败
	ErrorCode_GenUuidFailed ErrorCode = 5
	// 生成短位id失败
	ErrorCode_GenShortIdFailed ErrorCode = 6
	// 服务器错误
	ErrorCode_ServerError ErrorCode = 7
	// 错误的游戏类型
	ErrorCode_GameTypeError ErrorCode = 8
	// 错误的游戏场次
	ErrorCode_GameSceneError ErrorCode = 9
	// 用户未登陆
	ErrorCode_UserNotLogin ErrorCode = 10
	// 数据格式错误
	ErrorCode_ErrorDataFormat ErrorCode = 11
	// 没有可加入的房间
	ErrorCode_NotJoinRoom ErrorCode = 12
	// 房间不存在
	ErrorCode_RoomNotExist ErrorCode = 13
	// 玩家不在房间中
	ErrorCode_NotInRoom ErrorCode = 14
	// 当前状态不可退出房间
	ErrorCode_NotAllowExitRoom ErrorCode = 15
	// 无法改变玩家状态
	ErrorCode_NotChangePlayerState ErrorCode = 16
	// 不能在当前房间状态做这个操作
	ErrorCode_WrongRoomState ErrorCode = 17
	// 无效的牌
	ErrorCode_InValidCard ErrorCode = 18
	// 顶号失败
	ErrorCode_KickSelfFailed ErrorCode = 19
	// 账号已在其他设备登陆
	ErrorCode_LoginOnOther ErrorCode = 20
	// 金币低于入场限制
	ErrorCode_LessThanEnterBalance ErrorCode = 21
	// 无效的礼包领取操作
	ErrorCode_InValidGetGift ErrorCode = 22
	// 领取奖励错误
	ErrorCode_GetRewardFailed ErrorCode = 23
	// 次数不足
	ErrorCode_NumLess ErrorCode = 24
	//用户不存在
	ErrorCode_UserNotExists ErrorCode = 25
	//重复操作
	ErrorCode_RepetitiveOperation ErrorCode = 26
	//无效的房间码
	ErrorCode_InValidRoomCode ErrorCode = 27
	//扣除房卡失败，游戏开启失败
	ErrorCode_StartRoomFail ErrorCode = 28
	//游戏已开起，无法加入房间
	ErrorCode_GameAlreadyStart ErrorCode = 29
	ErrorCode_LoginFailed      ErrorCode = 32
	//无效的请求
	ErrorCode_InvalidRequest ErrorCode = 33
	//有玩家未准备
	ErrorCode_HasNotReadyPlayer ErrorCode = 34
	//玩家在其他游戏中
	ErrorCode_PlayerInOtherGame ErrorCode = 35
	//用户名或密码错误
	ErrorCode_PasswordError ErrorCode = 36
	//不满足首充条件
	ErrorCode_InValidFirstChargeGift ErrorCode = 37
	// 玩家没权限操作; 比如轮到 玩家 1 出牌时, 如果收到 玩家 2 的出牌信息,那么要向 玩家
	ErrorCode_PlayerHaveNoPermissionsOpt ErrorCode = 209
	// 杠花麻将的逻辑错误码,占用 30 - 90
	ErrorCode_GangHuaMahjongErrCodeStart ErrorCode = 30
	// 玩家没权限操作; 比如轮到 玩家 1 出牌时, 如果收到 玩家 2 的出牌信息,那么要向 玩家 2 返回 GangHuaMahjongErrCodePlayerHaveNoPermissionsOpt
	ErrorCode_GangHuaMahjongErrCodePlayerHaveNoPermissionsOpt ErrorCode = 31
	ErrorCode_GangHuaMahjongErrCodeEnd                        ErrorCode = 70
	// 配置名称不能为空且长度不能超过256
	ErrorCode_ConfigNameCannotEmptyAndMaxLengthLessThan256 ErrorCode = 101
	//配置值长度不能超过1024
	ErrorCode_ConfigValueMaxLenthLessThan1024 ErrorCode = 102
	//备注长度不能超过256
	ErrorCode_ConfigRemarkMaxLenthLessThan256 ErrorCode = 103
	//游戏类型错误
	ErrorCode_ErrorGameType ErrorCode = 104
	//游戏场次错误
	ErrorCode_ErrorGameScene ErrorCode = 105
	//用户名只能为字母、数字或下划线组合且长度在4到12之间
	ErrorCode_AccountInvalid ErrorCode = 106
	//密码长度不能小于6位且不能大于64位
	ErrorCode_PasswordInvalid ErrorCode = 107
	//账号不可用
	ErrorCode_AccountDisabled ErrorCode = 108
	//权限不足
	ErrorCode_AuthorizationDenied ErrorCode = 403
	//账户余额不足
	ErrorCode_BalanceNotEnough ErrorCode = 109
	//无效操作
	ErrorCode_InvalidOperate ErrorCode = 110
	//参数错误
	ErrorCode_InvalidParameters ErrorCode = 111
	//超过时间范围
	ErrorCode_OutOfTimeRange ErrorCode = 112
	// 输入的验证码有误
	ErrorCode_CaptchaCodeErr ErrorCode = 113
	// 奖池分数不足
	ErrorCode_BonusErrNotEnough ErrorCode = 114
	//不能结算本周返利
	ErrorCode_SettleCurrentWeekIsNotAllowed ErrorCode = 115
	//龙虎错误码 150-200
	// 下注失败-非下注时间
	ErrorCode_NotInBetTime ErrorCode = 150
	// 用户不在房间里
	ErrorCode_UserNotInRoom ErrorCode = 151
	// 本次提交下注金额低于或等于上次提交
	ErrorCode_BetRequestInvalid ErrorCode = 152
	// 玩家金额不足
	ErrorCode_PlayerBalanceNotEnough ErrorCode = 153
	// 下注金额超出限红
	ErrorCode_BetRatioNotEnough ErrorCode = 154
	// 庄家不能下注
	ErrorCode_BankerCannotBet ErrorCode = 155
	// 玩家已经在申请庄家列表里面
	ErrorCode_PlayerAlreadyInBanker ErrorCode = 156
	// 庄家申请列表已经满了
	ErrorCode_BankersIsFull ErrorCode = 157
	// 玩家没权限操作; 比如轮到 玩家 1 出牌时, 如果收到 玩家 2 的出牌信息,那么要向 玩家 2 返回 JinhuaErrCodePlayerHaveNoPermissionsOpt
	ErrorCode_JinhuaErrCodePlayerHaveNoPermissionsOpt ErrorCode = 201
	//玩家跟注超过限制
	ErrorCode_JinhuaErrCodeHasCallGreaterThanMax ErrorCode = 202
	//错误的加注
	ErrorCode_JinhuaErrCodeErrorRaiseType ErrorCode = 203
	//连连看玩耍中不能观战
	ErrorCode_LinkUpErrCodeErrorWatchInPlay ErrorCode = 204
	//连连看的观战玩家不存在
	ErrorCode_LinkUpErrCodeErrorWatchPlayNotExit ErrorCode = 205
	//////////////////////////////////////////////////////////////////////////////////
	// 									临沧麻将错误码，占用210～230					//
	//////////////////////////////////////////////////////////////////////////////////
	// 临沧麻将：玩家没权限操作;比如轮到玩家1出牌，如果收到玩家2的出牌信息，则返回此错误
	ErrorCode_LinCangMahjongErrorCodeNoPermissionOutput ErrorCode = 210
	// 临沧麻将：玩家出的牌错误，比如手牌里就没这张牌
	ErrorCode_LinCangMahjongErrorCodeNoOutputCard ErrorCode = 211
	// 临沧麻将：玩家没权限操作;比如玩家1发送碰牌消息，但是服务器检测不能碰牌，则返回此错误
	ErrorCode_LinCangMahjongErrorCodeNoPermissionPong ErrorCode = 212
	// 临沧麻将：执行碰牌操作的玩家，手牌中没有一对其他玩家打出的麻将牌
	ErrorCode_LinCangMahjongErrorCodeNoPongCard ErrorCode = 213
	// 临沧麻将：玩家没权限操作;比如玩家1发送杠牌消息，但是服务器检测不能杠牌，则返回此错误
	ErrorCode_LinCangMahjongErrorCodeNoPermissionKong ErrorCode = 214
	// 临沧麻将：执行杠牌操作的玩家，手牌中没有一刻其他玩家打出的麻将牌
	ErrorCode_LinCangMahjongErrorCodeNoKongCard ErrorCode = 215
	// 临沧麻将：玩家没权限操作;比如玩家1胡牌，服务器没检测到玩家已经下叫，服务器既没检测到自摸，也没点测到点炮;
	ErrorCode_LinCangMahjongErrorCodeNoPermissionWin ErrorCode = 216
	//////////////////////////////////////////////////////////////////////////////////
	// 									血战麻将错误码，占用230～250					//
	//////////////////////////////////////////////////////////////////////////////////
	// 血战麻将：玩家定缺花色错误(花色只能为筒条万)
	ErrorCode_XueZhanMahjongErrorCodeBlankSuitColorError ErrorCode = 230
	// 血战麻将：玩家没权限出牌(流程错误)
	ErrorCode_XueZhanMahjongErrorCodeNoPermissionOutput ErrorCode = 231
	// 血战麻将：玩家出牌错误(麻将不合法、手牌中没这个牌;值错误)
	ErrorCode_XueZhanMahjongErrorCodeOutput ErrorCode = 232
	// 血战麻将：玩家没权限碰牌(流程错误)
	ErrorCode_XueZhanMahjongErrorCodeNoPermissionPong ErrorCode = 233
	// 血战麻将：玩家碰牌错误(玩家手牌中没有一对其他玩家刚打出的牌)
	ErrorCode_XueZhanMahjongErrorCodePong ErrorCode = 234
	// 血战麻将：玩家没权限杠牌
	ErrorCode_XueZhanMahjongErrorCodeNoPermissionKong ErrorCode = 235
	// 血战麻将：玩家杠牌错误(玩家手牌中没有一刻其他玩家刚打出的牌)
	ErrorCode_XueZhanMahjongErrorCodeKong ErrorCode = 236
	// 血战麻将：玩家没权限胡牌
	ErrorCode_XueZhanMahjongErrorCodeNoPermissionWin ErrorCode = 237
	// -----------------------------------------------------
	// 俱乐部错误码，占用301～350
	// -----------------------------------------------------
	// 俱乐部已经被部长解散，不可以再申请加入
	ErrorCode_ClubErrDissmissedByMaster ErrorCode = 301
	// 俱乐部会员数已经超过了上限
	ErrorCode_ClubErrMemberExceedLimit ErrorCode = 302
	// 申请人已经在俱乐部中，请勿重复申请
	ErrorCode_ClubErrApplicantAlreadyInClub ErrorCode = 303
	// 俱乐部成员列表为空(1.设置管理员;2.俱乐部成员退出;3.通过/禁止玩家入会)
	ErrorCode_ClubErrMemberListIsEmpty ErrorCode = 304
	// 目标操作用户不在成员列表中(1.设置管理员;2.俱乐部成员退出)
	ErrorCode_ClubErrOpMemberNotInMemberList ErrorCode = 305
	// 操作者权限不足
	ErrorCode_ClubErrOpPermissionDenied ErrorCode = 306
	// 发布俱乐部通知失败
	ErrorCode_ClubErrPublishNoticeFail ErrorCode = 307
	// 俱乐部创建邀请码失败
	ErrorCode_ClubErrCreateInviteCodeFail ErrorCode = 308
	// 创建的俱乐部名字已经存在
	ErrorCode_ClubErrDuplicateClubName ErrorCode = 309
	// 俱乐部数据插入数据库错误
	ErrorCode_ClubErrInsertClubInfoFail ErrorCode = 310
	// 获取俱乐部数据错误
	ErrorCode_ClubErrGetClubInfoFail ErrorCode = 311
	// 解析俱乐部数据错误
	ErrorCode_ClubErrParseClubInfoFail ErrorCode = 312
	// 序列化俱乐部数据错误
	ErrorCode_ClubErrSerializeClubInfoFail ErrorCode = 313
	// 冻结用户不可以进入房间
	ErrorCode_ClubErrFreezePlayerCantJoinClubRoom ErrorCode = 314
	// 用户不是俱乐部部长
	ErrorCode_ClubErrPlayerNotClubMaster ErrorCode = 315
	// 无法进入俱乐部: 俱乐部已经打烊
	ErrorCode_ClubErrPlayerCantJoinRoomBecauseClubClosed ErrorCode = 316
	// 创建俱乐部时输入的名字超过了限制字符的长度
	ErrorCode_ClubErrClubNameLengthOver ErrorCode = 317
	// 操作超时
	ErrorCode_ClubErrOpExpired ErrorCode = 318
	// 创建俱乐部房间失败
	ErrorCode_ClubErrCreateClubRoomFail ErrorCode = 319
	// 创建的房间类型不支持
	ErrorCode_ClubErrGameTypeNotSupport ErrorCode = 320
	// 已经发送申请
	ErrorCode_ClubErrJoinRequestIsSended ErrorCode = 321
	// 申请加入俱乐部必须要24小时候才能操作
	ErrorCode_ClubErrJoinRequestShoudBe24HourLater ErrorCode = 322
	//俱乐部不存在
	ErrorCode_ClubErrClubNotExists ErrorCode = 323
	//俱乐部已解散
	ErrorCode_ClubErrClubIsDismissed ErrorCode = 324
	// -----------------------------------------------------
	// 联盟错误码，占用351～400
	// -----------------------------------------------------
	// 创建联盟的名字超出了限制字符长度
	ErrorCode_LeagueErrLeagueNameLengthOver ErrorCode = 351
	// 创建联盟邀请码失败
	ErrorCode_LeagueErrCreateInviteCodeFail ErrorCode = 352
	// 联盟数据插入数据库错误
	ErrorCode_LeagueErrInsertLeagueInfoFail ErrorCode = 353
	// 创建的联盟名字已经存在
	ErrorCode_LeagueErrDuplicateLeagueName ErrorCode = 354
	// 不允许的操作：批量拒绝加入联盟
	ErrorCode_LeagueErrApplyRefuseAllForbidden ErrorCode = 355
	// 没有找到联盟会员
	ErrorCode_LeagueErrCannotFindMember ErrorCode = 356
	// 创建联盟房间失败
	ErrorCode_LeagueErrCreateLeagueRoomFail ErrorCode = 357
	// 金豆赠送失败
	ErrorCode_LeagueErrGiveBeanFail ErrorCode = 358
	// 金豆赠送失败，赠送者金豆不足
	ErrorCode_LeagueErrGiveBeanFailGiverHasNotEnoughBean ErrorCode = 359
	//全部请求的俱乐部已加入俱乐部
	ErrorCode_LeagueErrAllRequestClubsHasJoinedCurrentLeague ErrorCode = 360
	//联盟名称已存在
	ErrorCode_LeagueErrLeagueNameIsExists ErrorCode = 361
	//自己创建的联盟已经超过限制
	ErrorCode_LeagueErrCreatedLeagueIsGreaterThanMaxAllowed ErrorCode = 362
	//联盟不存在
	ErrorCode_LeagueErrLeagueIsNotExists ErrorCode = 363
	//申请不存在
	ErrorCode_LeagueErrRequestIsNotExists ErrorCode = 364
	//24小时内不能重复申请
	ErrorCode_LeagueErrCannotRequestIn24Hours ErrorCode = 365
	//不具有该角色
	ErrorCode_LeagueErrMemberHasNoRole ErrorCode = 366
	//已经具有该角色
	ErrorCode_LeagueErrMemberHasRole ErrorCode = 367
	//不能移除该成员代理角色
	ErrorCode_LeagueErrCannotRemoveAgentRole ErrorCode = 368
	//不允许创建房间
	ErrorCode_LeagueErrCreateRoomIsNotAllowed ErrorCode = 369
	//不允许加入房间
	ErrorCode_LeagueErrJoinRoomIsNotAllowed ErrorCode = 370
	//无效的分成
	ErrorCode_LeagueErrInvalidProfitRate ErrorCode = 371
	//俱乐部数量已达到最大
	ErrorCode_LeagueErrClubsIsGreaterThanMaxAllowed ErrorCode = 372
	//联盟已打烊
	ErrorCode_LeagueIsClosed ErrorCode = 373
	//24小时内只能领取一次
	ErrorCode_LeagueErrYouCanOnlyClaimOnceIn24Hours ErrorCode = 374
	// -----------------------------------------------------
	// 代理错误码，占用401～500
	// -----------------------------------------------------
	// 这个排线码已排满
	ErrorCode_LineCodeFull ErrorCode = 401
	// 该代理已经有上级了
	ErrorCode_ChildAlreadyHasParent ErrorCode = 402
	// 没有设置顶代
	ErrorCode_NoTopAgent ErrorCode = 404
	// 关系链已形成，无法设置顶代
	ErrorCode_CanNotSetTopAgent ErrorCode = 405
	// 下级不存在
	ErrorCode_UnderNotExsit ErrorCode = 406
	// 代理不存在
	ErrorCode_AgentNotExsit ErrorCode = 407
	// 排线码数量已达上限
	ErrorCode_LineCodeMax ErrorCode = 408
	// 排线码名称重复
	ErrorCode_LineCodeNameRepeated ErrorCode = 409
	// 排线码名称过长
	ErrorCode_LineCodeNameTooLong ErrorCode = 410
	// 排线码长度必须在1到10000之间
	ErrorCode_LineCodeMaxAgentError ErrorCode = 411
	// 没有可领取的佣金
	ErrorCode_NoCommission ErrorCode = 412
	// 玩家没有绑定上级
	ErrorCode_PlayerNoParent ErrorCode = 413
	// 玩家已经是代理了
	ErrorCode_PlayerAlreadyAgent ErrorCode = 414
	// 没有权限操作该玩家
	ErrorCode_NoPermissionForPlayer ErrorCode = 415
	// 佣金不足
	ErrorCode_CommissionNotEnough ErrorCode = 416
	// 上级不是代理
	ErrorCode_ParentNotAgent ErrorCode = 417
	// 赠送者不是代理
	ErrorCode_GiverNotIsAgent ErrorCode = 418
	// 被赠送者不是代理
	ErrorCode_BeGiverNotIsAgent ErrorCode = 419
	// 不是直属关系
	ErrorCode_NotDirectlyAgent ErrorCode = 420
	// 申请者不是代理
	ErrorCode_RequestNotAgent ErrorCode = 421
	// 只有1-3级顶代才能设置下级顶代
	ErrorCode_SetSonTopNeedTopIdentity ErrorCode = 422
	// 设定次级顶代玩家不是代理
	ErrorCode_SetSonTopNotAgent ErrorCode = 423
	// -----------------------------------------------------
	// 大厅错误码，占用501～600
	// -----------------------------------------------------
	// 赠送的必须大于0
	ErrorCode_GiveAwayMustMoreThanZero ErrorCode = 501
	// 赠送金额不能为小数
	ErrorCode_GiveAwayNotFloat ErrorCode = 502
	// 不能赠送给自己
	ErrorCode_GiveAwayNotSelf ErrorCode = 503
	// 服务器房间数量过多
	ErrorCode_TooManyRoomInServer ErrorCode = 504
	// 底分配置错误
	ErrorCode_AnteConfigError ErrorCode = 505
	// 房间人数已满
	ErrorCode_RoomFull ErrorCode = 506
	// 最大人数配置错误
	ErrorCode_MaxPlayerConfigError ErrorCode = 507
	// 支付模式配置错误
	ErrorCode_PayTypeConfigError ErrorCode = 508
	// 最大可玩局数配置错误
	ErrorCode_RoomAllPlayNumConfigError ErrorCode = 509
	// 无效的图片链接
	ErrorCode_InvalidImageUrl ErrorCode = 510
	// 不是一张图片jpeg/png
	ErrorCode_NotIsImageUrl ErrorCode = 511
	// 不是数字
	ErrorCode_NotIsNumber ErrorCode = 512
	// 长度限制不匹配
	ErrorCode_LengthNotMatched ErrorCode = 513
	// 金额不能为小数
	ErrorCode_BalanceNotFloat ErrorCode = 514
	// 金额必须为正数
	ErrorCode_BalanceMustIsPositive ErrorCode = 515
	// 银行密码错误
	ErrorCode_BankPasswordError ErrorCode = 516
	// 银行钱不够
	ErrorCode_BankBalanceNotEnough ErrorCode = 517
	// 有非法的符号
	ErrorCode_HasSpecialSymbol ErrorCode = 518
	// 入场限制配置错误
	ErrorCode_EnterConfigError ErrorCode = 519
	// 新密码与旧密码相同
	ErrorCode_NewOldPassWordAsSame ErrorCode = 520
	// 旧密码错误
	ErrorCode_OldPasswordError ErrorCode = 521
	// 必须是字母和数字
	ErrorCode_MustNumAndLetter ErrorCode = 522
	// 邮箱标题长度错误, 必须 1-50 字之间
	ErrorCode_EmailTotalLengthErr ErrorCode = 523
	// 邮箱文本长度错误，必须 0-200 字之间
	ErrorCode_EmailTextLengthErr ErrorCode = 524
	// 邮箱附件内容太多
	ErrorCode_EmailAttachTooMore ErrorCode = 525
	// 无效的邮件附件内容
	ErrorCode_InvalidEmailAttach ErrorCode = 526
	// 接收方邮箱数量达到上限
	ErrorCode_ReceiveEmailNumIsTop ErrorCode = 527
	// -----------------------------------------------------
	// 订单支付错误码，占用601～620
	// -----------------------------------------------------
	//无效的支付通道
	ErrorCode_InvalidChannel ErrorCode = 601
	// -----------------------------------------------------
	// 十三水错误代码
	// -----------------------------------------------------
	//倒水牌型
	ErrorCode_ErrorPokerType ErrorCode = 602
	//特殊牌型，不需要手动摆牌
	ErrorCode_ErrorPlaceSpetialType ErrorCode = 603
	//提交倒水牌型，系统默认摆牌
	ErrorCode_ErrorPlacePokerType ErrorCode = 604
	// -----------------------------------------------------
	// 打旋错误码，占用 651 ~ 700
	// -----------------------------------------------------
	// 座位有人了
	ErrorCode_SeatHasPeople ErrorCode = 651
	// 错误的座位号
	ErrorCode_SeatIndexInvalid ErrorCode = 652
	// 玩家不在桌子上
	ErrorCode_PlayerNotInTable ErrorCode = 653
	// 玩家已经在座位上了
	ErrorCode_PlayerAlreadyInTable ErrorCode = 654
	// 玩家没有留座
	ErrorCode_PlayerNotKeepSeat ErrorCode = 655
	// 金额太少
	ErrorCode_BalanceTooLess ErrorCode = 656
	// 金额太多
	ErrorCode_BalanceTooMore ErrorCode = 657
	// 上过座的玩家才能补充钵钵
	ErrorCode_TopUpNeedSeated ErrorCode = 658
	// 不满足挖矿领取条件
	ErrorCode_MiningNotCondition ErrorCode = 659
	// 交易密码为空
	ErrorCode_TransactionPasswordNil ErrorCode = 660
	// 交易密码和原密码不一致
	ErrorCode_TransactionPasswordUnequal ErrorCode = 661
	// 操作过于频繁，请稍后再试
	ErrorCode_TooFrequentOperation ErrorCode = 662
	// 发送短信出错，请稍后再试
	ErrorCode_SmsSendError ErrorCode = 663
	// 已绑定手机，无法再次绑定
	ErrorCode_AlreadyBindMobile ErrorCode = 664
	// 验证码错误
	ErrorCode_CaptchaError ErrorCode = 665
	// 密码不能为空
	ErrorCode_PasswordIsNull ErrorCode = 666
	// 该手机已绑定，无法再次绑定
	ErrorCode_MobileAlreadyBind ErrorCode = 667
)

var ErrorCode_name = map[int32]string{
	0:   "InterfaceNotFound",
	1:   "AccountNotFound",
	2:   "AccountExist",
	3:   "DataNotFound",
	4:   "DataExist",
	5:   "GenUuidFailed",
	6:   "GenShortIdFailed",
	7:   "ServerError",
	8:   "GameTypeError",
	9:   "GameSceneError",
	10:  "UserNotLogin",
	11:  "ErrorDataFormat",
	12:  "NotJoinRoom",
	13:  "RoomNotExist",
	14:  "NotInRoom",
	15:  "NotAllowExitRoom",
	16:  "NotChangePlayerState",
	17:  "WrongRoomState",
	18:  "InValidCard",
	19:  "KickSelfFailed",
	20:  "LoginOnOther",
	21:  "LessThanEnterBalance",
	22:  "InValidGetGift",
	23:  "GetRewardFailed",
	24:  "NumLess",
	25:  "UserNotExists",
	26:  "RepetitiveOperation",
	27:  "InValidRoomCode",
	28:  "StartRoomFail",
	29:  "GameAlreadyStart",
	32:  "LoginFailed",
	33:  "InvalidRequest",
	34:  "HasNotReadyPlayer",
	35:  "PlayerInOtherGame",
	36:  "PasswordError",
	37:  "InValidFirstChargeGift",
	209: "PlayerHaveNoPermissionsOpt",
	30:  "GangHuaMahjongErrCodeStart",
	31:  "GangHuaMahjongErrCodePlayerHaveNoPermissionsOpt",
	70:  "GangHuaMahjongErrCodeEnd",
	101: "ConfigNameCannotEmptyAndMaxLengthLessThan256",
	102: "ConfigValueMaxLenthLessThan1024",
	103: "ConfigRemarkMaxLenthLessThan256",
	104: "ErrorGameType",
	105: "ErrorGameScene",
	106: "AccountInvalid",
	107: "PasswordInvalid",
	108: "AccountDisabled",
	403: "AuthorizationDenied",
	109: "BalanceNotEnough",
	110: "InvalidOperate",
	111: "InvalidParameters",
	112: "OutOfTimeRange",
	113: "CaptchaCodeErr",
	114: "BonusErrNotEnough",
	115: "SettleCurrentWeekIsNotAllowed",
	150: "NotInBetTime",
	151: "UserNotInRoom",
	152: "BetRequestInvalid",
	153: "PlayerBalanceNotEnough",
	154: "BetRatioNotEnough",
	155: "BankerCannotBet",
	156: "PlayerAlreadyInBanker",
	157: "BankersIsFull",
	201: "JinhuaErrCodePlayerHaveNoPermissionsOpt",
	202: "JinhuaErrCodeHasCallGreaterThanMax",
	203: "JinhuaErrCodeErrorRaiseType",
	204: "LinkUpErrCodeErrorWatchInPlay",
	205: "LinkUpErrCodeErrorWatchPlayNotExit",
	210: "LinCangMahjongErrorCodeNoPermissionOutput",
	211: "LinCangMahjongErrorCodeNoOutputCard",
	212: "LinCangMahjongErrorCodeNoPermissionPong",
	213: "LinCangMahjongErrorCodeNoPongCard",
	214: "LinCangMahjongErrorCodeNoPermissionKong",
	215: "LinCangMahjongErrorCodeNoKongCard",
	216: "LinCangMahjongErrorCodeNoPermissionWin",
	230: "XueZhanMahjongErrorCodeBlankSuitColorError",
	231: "XueZhanMahjongErrorCodeNoPermissionOutput",
	232: "XueZhanMahjongErrorCodeOutput",
	233: "XueZhanMahjongErrorCodeNoPermissionPong",
	234: "XueZhanMahjongErrorCodePong",
	235: "XueZhanMahjongErrorCodeNoPermissionKong",
	236: "XueZhanMahjongErrorCodeKong",
	237: "XueZhanMahjongErrorCodeNoPermissionWin",
	301: "ClubErrDissmissedByMaster",
	302: "ClubErrMemberExceedLimit",
	303: "ClubErrApplicantAlreadyInClub",
	304: "ClubErrMemberListIsEmpty",
	305: "ClubErrOpMemberNotInMemberList",
	306: "ClubErrOpPermissionDenied",
	307: "ClubErrPublishNoticeFail",
	308: "ClubErrCreateInviteCodeFail",
	309: "ClubErrDuplicateClubName",
	310: "ClubErrInsertClubInfoFail",
	311: "ClubErrGetClubInfoFail",
	312: "ClubErrParseClubInfoFail",
	313: "ClubErrSerializeClubInfoFail",
	314: "ClubErrFreezePlayerCantJoinClubRoom",
	315: "ClubErrPlayerNotClubMaster",
	316: "ClubErrPlayerCantJoinRoomBecauseClubClosed",
	317: "ClubErrClubNameLengthOver",
	318: "ClubErrOpExpired",
	319: "ClubErrCreateClubRoomFail",
	320: "ClubErrGameTypeNotSupport",
	321: "ClubErrJoinRequestIsSended",
	322: "ClubErrJoinRequestShoudBe24HourLater",
	323: "ClubErrClubNotExists",
	324: "ClubErrClubIsDismissed",
	351: "LeagueErrLeagueNameLengthOver",
	352: "LeagueErrCreateInviteCodeFail",
	353: "LeagueErrInsertLeagueInfoFail",
	354: "LeagueErrDuplicateLeagueName",
	355: "LeagueErrApplyRefuseAllForbidden",
	356: "LeagueErrCannotFindMember",
	357: "LeagueErrCreateLeagueRoomFail",
	358: "LeagueErrGiveBeanFail",
	359: "LeagueErrGiveBeanFailGiverHasNotEnoughBean",
	360: "LeagueErrAllRequestClubsHasJoinedCurrentLeague",
	361: "LeagueErrLeagueNameIsExists",
	362: "LeagueErrCreatedLeagueIsGreaterThanMaxAllowed",
	363: "LeagueErrLeagueIsNotExists",
	364: "LeagueErrRequestIsNotExists",
	365: "LeagueErrCannotRequestIn24Hours",
	366: "LeagueErrMemberHasNoRole",
	367: "LeagueErrMemberHasRole",
	368: "LeagueErrCannotRemoveAgentRole",
	369: "LeagueErrCreateRoomIsNotAllowed",
	370: "LeagueErrJoinRoomIsNotAllowed",
	371: "LeagueErrInvalidProfitRate",
	372: "LeagueErrClubsIsGreaterThanMaxAllowed",
	373: "LeagueIsClosed",
	374: "LeagueErrYouCanOnlyClaimOnceIn24Hours",
	401: "LineCodeFull",
	402: "ChildAlreadyHasParent",
	404: "NoTopAgent",
	405: "CanNotSetTopAgent",
	406: "UnderNotExsit",
	407: "AgentNotExsit",
	408: "LineCodeMax",
	409: "LineCodeNameRepeated",
	410: "LineCodeNameTooLong",
	411: "LineCodeMaxAgentError",
	412: "NoCommission",
	413: "PlayerNoParent",
	414: "PlayerAlreadyAgent",
	415: "NoPermissionForPlayer",
	416: "CommissionNotEnough",
	417: "ParentNotAgent",
	418: "GiverNotIsAgent",
	419: "BeGiverNotIsAgent",
	420: "NotDirectlyAgent",
	421: "RequestNotAgent",
	422: "SetSonTopNeedTopIdentity",
	423: "SetSonTopNotAgent",
	501: "GiveAwayMustMoreThanZero",
	502: "GiveAwayNotFloat",
	503: "GiveAwayNotSelf",
	504: "TooManyRoomInServer",
	505: "AnteConfigError",
	506: "RoomFull",
	507: "MaxPlayerConfigError",
	508: "PayTypeConfigError",
	509: "RoomAllPlayNumConfigError",
	510: "InvalidImageUrl",
	511: "NotIsImageUrl",
	512: "NotIsNumber",
	513: "LengthNotMatched",
	514: "BalanceNotFloat",
	515: "BalanceMustIsPositive",
	516: "BankPasswordError",
	517: "BankBalanceNotEnough",
	518: "HasSpecialSymbol",
	519: "EnterConfigError",
	520: "NewOldPassWordAsSame",
	521: "OldPasswordError",
	522: "MustNumAndLetter",
	523: "EmailTotalLengthErr",
	524: "EmailTextLengthErr",
	525: "EmailAttachTooMore",
	526: "InvalidEmailAttach",
	527: "ReceiveEmailNumIsTop",
	601: "InvalidChannel",
	602: "ErrorPokerType",
	603: "ErrorPlaceSpetialType",
	604: "ErrorPlacePokerType",
	651: "SeatHasPeople",
	652: "SeatIndexInvalid",
	653: "PlayerNotInTable",
	654: "PlayerAlreadyInTable",
	655: "PlayerNotKeepSeat",
	656: "BalanceTooLess",
	657: "BalanceTooMore",
	658: "TopUpNeedSeated",
	659: "MiningNotCondition",
	660: "TransactionPasswordNil",
	661: "TransactionPasswordUnequal",
	662: "TooFrequentOperation",
	663: "SmsSendError",
	664: "AlreadyBindMobile",
	665: "CaptchaError",
	666: "PasswordIsNull",
	667: "MobileAlreadyBind",
}

var ErrorCode_value = map[string]int32{
	"InterfaceNotFound":          0,
	"AccountNotFound":            1,
	"AccountExist":               2,
	"DataNotFound":               3,
	"DataExist":                  4,
	"GenUuidFailed":              5,
	"GenShortIdFailed":           6,
	"ServerError":                7,
	"GameTypeError":              8,
	"GameSceneError":             9,
	"UserNotLogin":               10,
	"ErrorDataFormat":            11,
	"NotJoinRoom":                12,
	"RoomNotExist":               13,
	"NotInRoom":                  14,
	"NotAllowExitRoom":           15,
	"NotChangePlayerState":       16,
	"WrongRoomState":             17,
	"InValidCard":                18,
	"KickSelfFailed":             19,
	"LoginOnOther":               20,
	"LessThanEnterBalance":       21,
	"InValidGetGift":             22,
	"GetRewardFailed":            23,
	"NumLess":                    24,
	"UserNotExists":              25,
	"RepetitiveOperation":        26,
	"InValidRoomCode":            27,
	"StartRoomFail":              28,
	"GameAlreadyStart":           29,
	"LoginFailed":                32,
	"InvalidRequest":             33,
	"HasNotReadyPlayer":          34,
	"PlayerInOtherGame":          35,
	"PasswordError":              36,
	"InValidFirstChargeGift":     37,
	"PlayerHaveNoPermissionsOpt": 209,
	"GangHuaMahjongErrCodeStart": 30,
	"GangHuaMahjongErrCodePlayerHaveNoPermissionsOpt": 31,
	"GangHuaMahjongErrCodeEnd":                        70,
	"ConfigNameCannotEmptyAndMaxLengthLessThan256":    101,
	"ConfigValueMaxLenthLessThan1024":                 102,
	"ConfigRemarkMaxLenthLessThan256":                 103,
	"ErrorGameType":                                   104,
	"ErrorGameScene":                                  105,
	"AccountInvalid":                                  106,
	"PasswordInvalid":                                 107,
	"AccountDisabled":                                 108,
	"AuthorizationDenied":                             403,
	"BalanceNotEnough":                                109,
	"InvalidOperate":                                  110,
	"InvalidParameters":                               111,
	"OutOfTimeRange":                                  112,
	"CaptchaCodeErr":                                  113,
	"BonusErrNotEnough":                               114,
	"SettleCurrentWeekIsNotAllowed":                   115,
	"NotInBetTime":                                    150,
	"UserNotInRoom":                                   151,
	"BetRequestInvalid":                               152,
	"PlayerBalanceNotEnough":                          153,
	"BetRatioNotEnough":                               154,
	"BankerCannotBet":                                 155,
	"PlayerAlreadyInBanker":                           156,
	"BankersIsFull":                                   157,
	"JinhuaErrCodePlayerHaveNoPermissionsOpt":         201,
	"JinhuaErrCodeHasCallGreaterThanMax":              202,
	"JinhuaErrCodeErrorRaiseType":                     203,
	"LinkUpErrCodeErrorWatchInPlay":                   204,
	"LinkUpErrCodeErrorWatchPlayNotExit":              205,
	"LinCangMahjongErrorCodeNoPermissionOutput":       210,
	"LinCangMahjongErrorCodeNoOutputCard":             211,
	"LinCangMahjongErrorCodeNoPermissionPong":         212,
	"LinCangMahjongErrorCodeNoPongCard":               213,
	"LinCangMahjongErrorCodeNoPermissionKong":         214,
	"LinCangMahjongErrorCodeNoKongCard":               215,
	"LinCangMahjongErrorCodeNoPermissionWin":          216,
	"XueZhanMahjongErrorCodeBlankSuitColorError":      230,
	"XueZhanMahjongErrorCodeNoPermissionOutput":       231,
	"XueZhanMahjongErrorCodeOutput":                   232,
	"XueZhanMahjongErrorCodeNoPermissionPong":         233,
	"XueZhanMahjongErrorCodePong":                     234,
	"XueZhanMahjongErrorCodeNoPermissionKong":         235,
	"XueZhanMahjongErrorCodeKong":                     236,
	"XueZhanMahjongErrorCodeNoPermissionWin":          237,
	"ClubErrDissmissedByMaster":                       301,
	"ClubErrMemberExceedLimit":                        302,
	"ClubErrApplicantAlreadyInClub":                   303,
	"ClubErrMemberListIsEmpty":                        304,
	"ClubErrOpMemberNotInMemberList":                  305,
	"ClubErrOpPermissionDenied":                       306,
	"ClubErrPublishNoticeFail":                        307,
	"ClubErrCreateInviteCodeFail":                     308,
	"ClubErrDuplicateClubName":                        309,
	"ClubErrInsertClubInfoFail":                       310,
	"ClubErrGetClubInfoFail":                          311,
	"ClubErrParseClubInfoFail":                        312,
	"ClubErrSerializeClubInfoFail":                    313,
	"ClubErrFreezePlayerCantJoinClubRoom":             314,
	"ClubErrPlayerNotClubMaster":                      315,
	"ClubErrPlayerCantJoinRoomBecauseClubClosed":      316,
	"ClubErrClubNameLengthOver":                       317,
	"ClubErrOpExpired":                                318,
	"ClubErrCreateClubRoomFail":                       319,
	"ClubErrGameTypeNotSupport":                       320,
	"ClubErrJoinRequestIsSended":                      321,
	"ClubErrJoinRequestShoudBe24HourLater":            322,
	"ClubErrClubNotExists":                            323,
	"ClubErrClubIsDismissed":                          324,
	"LeagueErrLeagueNameLengthOver":                   351,
	"LeagueErrCreateInviteCodeFail":                   352,
	"LeagueErrInsertLeagueInfoFail":                   353,
	"LeagueErrDuplicateLeagueName":                    354,
	"LeagueErrApplyRefuseAllForbidden":                355,
	"LeagueErrCannotFindMember":                       356,
	"LeagueErrCreateLeagueRoomFail":                   357,
	"LeagueErrGiveBeanFail":                           358,
	"LeagueErrGiveBeanFailGiverHasNotEnoughBean":      359,
	"LeagueErrAllRequestClubsHasJoinedCurrentLeague":  360,
	"LeagueErrLeagueNameIsExists":                     361,
	"LeagueErrCreatedLeagueIsGreaterThanMaxAllowed":   362,
	"LeagueErrLeagueIsNotExists":                      363,
	"LeagueErrRequestIsNotExists":                     364,
	"LeagueErrCannotRequestIn24Hours":                 365,
	"LeagueErrMemberHasNoRole":                        366,
	"LeagueErrMemberHasRole":                          367,
	"LeagueErrCannotRemoveAgentRole":                  368,
	"LeagueErrCreateRoomIsNotAllowed":                 369,
	"LeagueErrJoinRoomIsNotAllowed":                   370,
	"LeagueErrInvalidProfitRate":                      371,
	"LeagueErrClubsIsGreaterThanMaxAllowed":           372,
	"LeagueIsClosed":                                  373,
	"LeagueErrYouCanOnlyClaimOnceIn24Hours":           374,
	"LineCodeFull":                                    401,
	"ChildAlreadyHasParent":                           402,
	"NoTopAgent":                                      404,
	"CanNotSetTopAgent":                               405,
	"UnderNotExsit":                                   406,
	"AgentNotExsit":                                   407,
	"LineCodeMax":                                     408,
	"LineCodeNameRepeated":                            409,
	"LineCodeNameTooLong":                             410,
	"LineCodeMaxAgentError":                           411,
	"NoCommission":                                    412,
	"PlayerNoParent":                                  413,
	"PlayerAlreadyAgent":                              414,
	"NoPermissionForPlayer":                           415,
	"CommissionNotEnough":                             416,
	"ParentNotAgent":                                  417,
	"GiverNotIsAgent":                                 418,
	"BeGiverNotIsAgent":                               419,
	"NotDirectlyAgent":                                420,
	"RequestNotAgent":                                 421,
	"SetSonTopNeedTopIdentity":                        422,
	"SetSonTopNotAgent":                               423,
	"GiveAwayMustMoreThanZero":                        501,
	"GiveAwayNotFloat":                                502,
	"GiveAwayNotSelf":                                 503,
	"TooManyRoomInServer":                             504,
	"AnteConfigError":                                 505,
	"RoomFull":                                        506,
	"MaxPlayerConfigError":                            507,
	"PayTypeConfigError":                              508,
	"RoomAllPlayNumConfigError":                       509,
	"InvalidImageUrl":                                 510,
	"NotIsImageUrl":                                   511,
	"NotIsNumber":                                     512,
	"LengthNotMatched":                                513,
	"BalanceNotFloat":                                 514,
	"BalanceMustIsPositive":                           515,
	"BankPasswordError":                               516,
	"BankBalanceNotEnough":                            517,
	"HasSpecialSymbol":                                518,
	"EnterConfigError":                                519,
	"NewOldPassWordAsSame":                            520,
	"OldPasswordError":                                521,
	"MustNumAndLetter":                                522,
	"EmailTotalLengthErr":                             523,
	"EmailTextLengthErr":                              524,
	"EmailAttachTooMore":                              525,
	"InvalidEmailAttach":                              526,
	"ReceiveEmailNumIsTop":                            527,
	"InvalidChannel":                                  601,
	"ErrorPokerType":                                  602,
	"ErrorPlaceSpetialType":                           603,
	"ErrorPlacePokerType":                             604,
	"SeatHasPeople":                                   651,
	"SeatIndexInvalid":                                652,
	"PlayerNotInTable":                                653,
	"PlayerAlreadyInTable":                            654,
	"PlayerNotKeepSeat":                               655,
	"BalanceTooLess":                                  656,
	"BalanceTooMore":                                  657,
	"TopUpNeedSeated":                                 658,
	"MiningNotCondition":                              659,
	"TransactionPasswordNil":                          660,
	"TransactionPasswordUnequal":                      661,
	"TooFrequentOperation":                            662,
	"SmsSendError":                                    663,
	"AlreadyBindMobile":                               664,
	"CaptchaError":                                    665,
	"PasswordIsNull":                                  666,
	"MobileAlreadyBind":                               667,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

// 金豆变更原因
type BeanChangeReason int32

const (
	// 原因容错
	BeanChangeReason_BeanChangeReason_None BeanChangeReason = 0
	// 送出金豆
	BeanChangeReason_BeanChangeReason_Give BeanChangeReason = 1
	// 获得金豆（被赠与）
	BeanChangeReason_BeanChangeReason_Receive BeanChangeReason = 2
	//下注
	BeanChangeReason_BeanChangeReason_Bet BeanChangeReason = 3
	//结算
	BeanChangeReason_BeanChangeReason_Settle BeanChangeReason = 4
	//佣金
	BeanChangeReason_BeanChangeReason_Commission BeanChangeReason = 5
)

var BeanChangeReason_name = map[int32]string{
	0: "BeanChangeReason_None",
	1: "BeanChangeReason_Give",
	2: "BeanChangeReason_Receive",
	3: "BeanChangeReason_Bet",
	4: "BeanChangeReason_Settle",
	5: "BeanChangeReason_Commission",
}

var BeanChangeReason_value = map[string]int32{
	"BeanChangeReason_None":       0,
	"BeanChangeReason_Give":       1,
	"BeanChangeReason_Receive":    2,
	"BeanChangeReason_Bet":        3,
	"BeanChangeReason_Settle":     4,
	"BeanChangeReason_Commission": 5,
}

func (x BeanChangeReason) String() string {
	return proto.EnumName(BeanChangeReason_name, int32(x))
}

func (BeanChangeReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}

//资源改变的原因，
type ResourceChangeReason int32

const (
	// 原因容错
	ResourceChangeReason_ReasonNone ResourceChangeReason = 0
	// 充值金币
	ResourceChangeReason_ChargeGold ResourceChangeReason = 1
	// 后台上下分
	ResourceChangeReason_BossChannge ResourceChangeReason = 2
	// 日结佣金领取
	ResourceChangeReason_DayCommission ResourceChangeReason = 3
	// 周结佣金领取
	ResourceChangeReason_WeekCommission ResourceChangeReason = 4
	// 存银行
	ResourceChangeReason_SaveMoneyByBank ResourceChangeReason = 5
	// 取银行
	ResourceChangeReason_WithDrawMoneyByBank ResourceChangeReason = 6
	// 普通赠送
	ResourceChangeReason_NorMalGiveAway ResourceChangeReason = 7
	// 抽调
	ResourceChangeReason_AgentDeploy ResourceChangeReason = 8
	// 出借
	ResourceChangeReason_AgentBorrow ResourceChangeReason = 9
	// 归还
	ResourceChangeReason_AgentBack ResourceChangeReason = 10
	// 礼包 101-200
	// 七日签到礼包产生的金币改变
	ResourceChangeReason_SignGiftGold ResourceChangeReason = 101
	// 三日签到礼包产生的金币改变
	ResourceChangeReason_TreeDayGiftGold ResourceChangeReason = 102
	// 首充礼包产生的金币改变
	ResourceChangeReason_FirstChargeGiftGold ResourceChangeReason = 103
	// 任务奖励 201
	ResourceChangeReason_TaskReward ResourceChangeReason = 201
	// 转盘奖励 211
	ResourceChangeReason_SpinReward ResourceChangeReason = 211
	// 玩家赠送 221
	ResourceChangeReason_PlayerGiveAway ResourceChangeReason = 221
	// 挖矿奖励 222
	ResourceChangeReason_MiningReward ResourceChangeReason = 222
	// 通比牛牛1001 - 1010
	// 通比牛牛结算时的金币改变
	ResourceChangeReason_CompareBullSettleGold ResourceChangeReason = 1001
	// 杠花麻将 1011 - 1020
	// 杠花麻将结算时的金币改变
	ResourceChangeReason_GangHuaMahjongSettleGold ResourceChangeReason = 1011
	// 疯狂牛牛1021 - 1030
	// 疯狂牛牛结算时的金币改变
	ResourceChangeReason_CrazyBullSettleGold ResourceChangeReason = 1021
	// 疯狂牛牛奖池汇入
	ResourceChangeReason_CrazyBullBonusIn ResourceChangeReason = 1022
	// 疯狂牛牛奖池汇出
	ResourceChangeReason_CrazyBullBonusOut ResourceChangeReason = 1023
	// 百人牛牛1031 -1040
	// 百人牛牛结算时的金币改变
	ResourceChangeReason_HundredBullSettleGold ResourceChangeReason = 1031
	// 百人牛牛结算时玩家流水
	ResourceChangeReason_HundredBullWaterBill ResourceChangeReason = 1032
	// 百人牛牛奖池汇入
	ResourceChangeReason_HundredBullBonusIn ResourceChangeReason = 1033
	// 百人牛牛奖池汇出
	ResourceChangeReason_HundredBullBonusOut ResourceChangeReason = 1034
	//炸金花1041- 1050
	//炸金花结算时的金币改变
	ResourceChangeReason_JinhuaSettleGold ResourceChangeReason = 1041
	// 龙虎1051-1060
	// 龙虎结算时的金币改变
	ResourceChangeReason_DragonTigerSettleGold ResourceChangeReason = 1051
	// 龙虎结算时玩家流水
	ResourceChangeReason_DragonTigerWaterBill ResourceChangeReason = 1052
	// 龙虎奖池汇入
	ResourceChangeReason_DragonTigerBonusIn ResourceChangeReason = 1053
	// 龙虎奖池汇出
	ResourceChangeReason_DragonTigerBonusOut ResourceChangeReason = 1054
	//连连看1061-1070
	//连连看结算时的金币改变
	ResourceChangeReason_LinkUpSettleGold ResourceChangeReason = 1061
	//十三水1071-1080
	//十三水结算时的金币改变
	ResourceChangeReason_ShiSanShuiSettleGold ResourceChangeReason = 1071
	// 临沧麻将1081-1090
	// 临沧麻将结算时的金币改变
	ResourceChangeReason_LinCangMahjongSettleGold ResourceChangeReason = 1081
	// 推筒子 1091-1100
	// 推筒子结算时的金币改变
	ResourceChangeReason_PushBobbinSettleGold ResourceChangeReason = 1091
	// 推筒子结算时玩家流水
	ResourceChangeReason_PushBobbinWaterBill ResourceChangeReason = 1092
	// 红黑 1101-1110
	// 红黑结算时的金币改变
	ResourceChangeReason_RedBlackSettleGold ResourceChangeReason = 1101
	// 红黑结算时玩家流水
	ResourceChangeReason_RedBlackWaterBill ResourceChangeReason = 1102
	// 红黑奖池汇入
	ResourceChangeReason_RedBlackBonusIn ResourceChangeReason = 1103
	// 红黑奖池汇出
	ResourceChangeReason_RedBlackBonusOut ResourceChangeReason = 1104
	// 百家乐1111-1120
	// 百家乐结算时的金币改变
	ResourceChangeReason_BaccaratSettleGold ResourceChangeReason = 1111
	// 百家乐奖池汇入
	ResourceChangeReason_BaccaratBonusIn ResourceChangeReason = 1112
	// 百家乐奖池汇出
	ResourceChangeReason_BaccaratBonusOut ResourceChangeReason = 1113
	// 血战麻将1121-1130
	// 血战麻将玩耍时杠牌金币改变
	ResourceChangeReason_XueZhanMahjongKongChangeGold ResourceChangeReason = 1121
	// 血战麻将结算时金币改变
	ResourceChangeReason_XueZhanMahjongSettleChangeGold ResourceChangeReason = 1122
	// 连线游戏1131-1140
	// 连线游戏结算
	ResourceChangeReason_LineGameSettleGold ResourceChangeReason = 1131
	// 连线游戏下注
	ResourceChangeReason_LineGameWager ResourceChangeReason = 1132
	// 打旋 1201-1300
	// 打旋结算时的金币改变
	ResourceChangeReason_DaXuanSettleGold ResourceChangeReason = 1201
	// 打旋结算时玩家流水
	ResourceChangeReason_DaXuanWaterBill ResourceChangeReason = 1202
	// 打旋奖池汇入
	ResourceChangeReason_DaXuanBonusIn ResourceChangeReason = 1203
	// 打旋奖池汇出
	ResourceChangeReason_DaXuanBonusOut ResourceChangeReason = 1204
	// 打旋强行退出惩罚
	ResourceChangeReason_DaXuanQuietPenalty ResourceChangeReason = 1205
	// 打旋上座消耗
	ResourceChangeReason_DaXuanUpSeat ResourceChangeReason = 1206
	// 打旋房间解散返回safeMoney
	ResourceChangeReason_DaXuanBackMoney ResourceChangeReason = 1207
	// 打旋补充钵钵
	ResourceChangeReason_DaXuanTopUp ResourceChangeReason = 1208
	// 打旋爆奖
	ResourceChangeReason_DaXuanPrizeBonus ResourceChangeReason = 1209
	// 开房间消耗
	ResourceChangeReason_CreateRoom ResourceChangeReason = 100000
	// 代付
	ResourceChangeReason_PayForOtherRoom ResourceChangeReason = 100001
	//玩游戏消耗（汇友）
	ResourceChangeReason_PlayGame ResourceChangeReason = 100002
	//分成
	ResourceChangeReason_Commission ResourceChangeReason = 100003
	// 管理后台奖池汇入
	ResourceChangeReason_BossBonusIn ResourceChangeReason = 100004
	// 管理后台奖池汇出
	ResourceChangeReason_BossBonusOut ResourceChangeReason = 100005
	//炸金花奖池汇入
	ResourceChangeReason_JinhuaGameBonusIn ResourceChangeReason = 100006
)

var ResourceChangeReason_name = map[int32]string{
	0:      "ReasonNone",
	1:      "ChargeGold",
	2:      "BossChannge",
	3:      "DayCommission",
	4:      "WeekCommission",
	5:      "SaveMoneyByBank",
	6:      "WithDrawMoneyByBank",
	7:      "NorMalGiveAway",
	8:      "AgentDeploy",
	9:      "AgentBorrow",
	10:     "AgentBack",
	101:    "SignGiftGold",
	102:    "TreeDayGiftGold",
	103:    "FirstChargeGiftGold",
	201:    "TaskReward",
	211:    "SpinReward",
	221:    "PlayerGiveAway",
	222:    "MiningReward",
	1001:   "CompareBullSettleGold",
	1011:   "GangHuaMahjongSettleGold",
	1021:   "CrazyBullSettleGold",
	1022:   "CrazyBullBonusIn",
	1023:   "CrazyBullBonusOut",
	1031:   "HundredBullSettleGold",
	1032:   "HundredBullWaterBill",
	1033:   "HundredBullBonusIn",
	1034:   "HundredBullBonusOut",
	1041:   "JinhuaSettleGold",
	1051:   "DragonTigerSettleGold",
	1052:   "DragonTigerWaterBill",
	1053:   "DragonTigerBonusIn",
	1054:   "DragonTigerBonusOut",
	1061:   "LinkUpSettleGold",
	1071:   "ShiSanShuiSettleGold",
	1081:   "LinCangMahjongSettleGold",
	1091:   "PushBobbinSettleGold",
	1092:   "PushBobbinWaterBill",
	1101:   "RedBlackSettleGold",
	1102:   "RedBlackWaterBill",
	1103:   "RedBlackBonusIn",
	1104:   "RedBlackBonusOut",
	1111:   "BaccaratSettleGold",
	1112:   "BaccaratBonusIn",
	1113:   "BaccaratBonusOut",
	1121:   "XueZhanMahjongKongChangeGold",
	1122:   "XueZhanMahjongSettleChangeGold",
	1131:   "LineGameSettleGold",
	1132:   "LineGameWager",
	1201:   "DaXuanSettleGold",
	1202:   "DaXuanWaterBill",
	1203:   "DaXuanBonusIn",
	1204:   "DaXuanBonusOut",
	1205:   "DaXuanQuietPenalty",
	1206:   "DaXuanUpSeat",
	1207:   "DaXuanBackMoney",
	1208:   "DaXuanTopUp",
	1209:   "DaXuanPrizeBonus",
	100000: "CreateRoom",
	100001: "PayForOtherRoom",
	100002: "PlayGame",
	100003: "Commission",
	100004: "BossBonusIn",
	100005: "BossBonusOut",
	100006: "JinhuaGameBonusIn",
}

var ResourceChangeReason_value = map[string]int32{
	"ReasonNone":                     0,
	"ChargeGold":                     1,
	"BossChannge":                    2,
	"DayCommission":                  3,
	"WeekCommission":                 4,
	"SaveMoneyByBank":                5,
	"WithDrawMoneyByBank":            6,
	"NorMalGiveAway":                 7,
	"AgentDeploy":                    8,
	"AgentBorrow":                    9,
	"AgentBack":                      10,
	"SignGiftGold":                   101,
	"TreeDayGiftGold":                102,
	"FirstChargeGiftGold":            103,
	"TaskReward":                     201,
	"SpinReward":                     211,
	"PlayerGiveAway":                 221,
	"MiningReward":                   222,
	"CompareBullSettleGold":          1001,
	"GangHuaMahjongSettleGold":       1011,
	"CrazyBullSettleGold":            1021,
	"CrazyBullBonusIn":               1022,
	"CrazyBullBonusOut":              1023,
	"HundredBullSettleGold":          1031,
	"HundredBullWaterBill":           1032,
	"HundredBullBonusIn":             1033,
	"HundredBullBonusOut":            1034,
	"JinhuaSettleGold":               1041,
	"DragonTigerSettleGold":          1051,
	"DragonTigerWaterBill":           1052,
	"DragonTigerBonusIn":             1053,
	"DragonTigerBonusOut":            1054,
	"LinkUpSettleGold":               1061,
	"ShiSanShuiSettleGold":           1071,
	"LinCangMahjongSettleGold":       1081,
	"PushBobbinSettleGold":           1091,
	"PushBobbinWaterBill":            1092,
	"RedBlackSettleGold":             1101,
	"RedBlackWaterBill":              1102,
	"RedBlackBonusIn":                1103,
	"RedBlackBonusOut":               1104,
	"BaccaratSettleGold":             1111,
	"BaccaratBonusIn":                1112,
	"BaccaratBonusOut":               1113,
	"XueZhanMahjongKongChangeGold":   1121,
	"XueZhanMahjongSettleChangeGold": 1122,
	"LineGameSettleGold":             1131,
	"LineGameWager":                  1132,
	"DaXuanSettleGold":               1201,
	"DaXuanWaterBill":                1202,
	"DaXuanBonusIn":                  1203,
	"DaXuanBonusOut":                 1204,
	"DaXuanQuietPenalty":             1205,
	"DaXuanUpSeat":                   1206,
	"DaXuanBackMoney":                1207,
	"DaXuanTopUp":                    1208,
	"DaXuanPrizeBonus":               1209,
	"CreateRoom":                     100000,
	"PayForOtherRoom":                100001,
	"PlayGame":                       100002,
	"Commission":                     100003,
	"BossBonusIn":                    100004,
	"BossBonusOut":                   100005,
	"JinhuaGameBonusIn":              100006,
}

func (x ResourceChangeReason) String() string {
	return proto.EnumName(ResourceChangeReason_name, int32(x))
}

func (ResourceChangeReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{3}
}

//用户来源
type PlayerSourceType int32

const (
	PlayerSourceType_PlayerSourceType_None     PlayerSourceType = 0
	PlayerSourceType_PlayerSourceType_Local    PlayerSourceType = 1
	PlayerSourceType_PlayerSourceType_WeChat   PlayerSourceType = 2
	PlayerSourceType_PlayerSourceType_QQ       PlayerSourceType = 3
	PlayerSourceType_PlayerSourceType_Alipay   PlayerSourceType = 4
	PlayerSourceType_PlayerSourceType_Google   PlayerSourceType = 5
	PlayerSourceType_PlayerSourceType_Facebook PlayerSourceType = 6
)

var PlayerSourceType_name = map[int32]string{
	0: "PlayerSourceType_None",
	1: "PlayerSourceType_Local",
	2: "PlayerSourceType_WeChat",
	3: "PlayerSourceType_QQ",
	4: "PlayerSourceType_Alipay",
	5: "PlayerSourceType_Google",
	6: "PlayerSourceType_Facebook",
}

var PlayerSourceType_value = map[string]int32{
	"PlayerSourceType_None":     0,
	"PlayerSourceType_Local":    1,
	"PlayerSourceType_WeChat":   2,
	"PlayerSourceType_QQ":       3,
	"PlayerSourceType_Alipay":   4,
	"PlayerSourceType_Google":   5,
	"PlayerSourceType_Facebook": 6,
}

func (x PlayerSourceType) String() string {
	return proto.EnumName(PlayerSourceType_name, int32(x))
}

func (PlayerSourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{4}
}

//玩家默认权限
type AuthorizationDef int32

const (
	AuthorizationDef_AuthorizationDefError AuthorizationDef = 0
	AuthorizationDef_Login_Login           AuthorizationDef = 1
	AuthorizationDef_Register_Register     AuthorizationDef = 2
	AuthorizationDef_Login_RBTLogin        AuthorizationDef = 3
	//获取全局配置
	AuthorizationDef_Config_GetGlobal AuthorizationDef = 4
	//设置全局配置
	AuthorizationDef_Config_SetGlobal AuthorizationDef = 5
	//获取游戏配置
	AuthorizationDef_Config_GetGameConfig AuthorizationDef = 6
	//根据游戏类型获取配置
	AuthorizationDef_Config_GetGameConfigByGameType AuthorizationDef = 7
	//根据游戏类型获和场次取配置
	AuthorizationDef_Config_GetGameConfigByGameTypeAndScene AuthorizationDef = 8
	//设置游戏配置
	AuthorizationDef_Config_SetGameConfig AuthorizationDef = 9
	//批量设置游戏配置
	AuthorizationDef_Config_SetGameConfigBatch AuthorizationDef = 10
	// 通比牛牛游戏接口
	// 请求协议 CompareBullDoRequest
	// 返回协议 dotype对应的reply协议
	AuthorizationDef_CompareBullRoute_Do AuthorizationDef = 11
	//管理员登录
	AuthorizationDef_Login_ManagerLogin AuthorizationDef = 12
	//权限管理——获取默认权限
	AuthorizationDef_AuthManager_GetDefaultAuth AuthorizationDef = 13
	//设置全局配置
	AuthorizationDef_ConfigManager_SetGlobalConfig AuthorizationDef = 14
	//获取全局配置
	AuthorizationDef_ConfigManager_GetGlobalConfigAll AuthorizationDef = 15
	//设置游戏配置
	AuthorizationDef_ConfigManager_SetGameConfig AuthorizationDef = 16
	//获取游戏配置
	AuthorizationDef_ConfigManager_GetGameConfigAll    AuthorizationDef = 17
	AuthorizationDef_AccountManager_GetAccountPageList AuthorizationDef = 18
	AuthorizationDef_AccountManager_NewAccount         AuthorizationDef = 19
	AuthorizationDef_AccountManager_UpdateAccount      AuthorizationDef = 20
	AuthorizationDef_AccountManager_DeleteAccount      AuthorizationDef = 21
	AuthorizationDef_AccountManager_SetAccountStatus   AuthorizationDef = 22
	//获取游戏是否开放
	AuthorizationDef_GameInfo_GameInfo AuthorizationDef = 23
	//获取游戏场次
	AuthorizationDef_ConfigManager_GetGameScene AuthorizationDef = 24
	//删除游戏场次
	AuthorizationDef_ConfigManager_DeleteGameScene AuthorizationDef = 25
	//踢人
	AuthorizationDef_AccountManager_KickPlayer AuthorizationDef = 27
	//上下分
	AuthorizationDef_AccountManager_AccountScore AuthorizationDef = 28
	//杠花麻将游戏请求接口
	AuthorizationDef_GangHuaMahjongRoute_Do AuthorizationDef = 29
	//获取签到礼包详情
	AuthorizationDef_Gift_GetSignGiftInfo AuthorizationDef = 30
	//领取签到礼包
	AuthorizationDef_Gift_ReceiveSignGift AuthorizationDef = 31
	//获取排行榜信息
	AuthorizationDef_LeaderBoard_GetLeaderBoard AuthorizationDef = 32
	//获取全部礼物配置
	AuthorizationDef_ConfigManager_GetGiftAllConfig AuthorizationDef = 33
	//新增礼物配置
	AuthorizationDef_ConfigManager_InsertGiftConfig AuthorizationDef = 34
	//修改礼物配置
	AuthorizationDef_ConfigManager_UpdateGiftConfig AuthorizationDef = 35
	//删除礼物配置
	AuthorizationDef_ConfigManager_DeleteGiftConfig AuthorizationDef = 36
	// 查询任务信息
	// 请求协议 TaskInfoRequest
	// 返回协议 TaskInfoReply
	AuthorizationDef_Task_Query AuthorizationDef = 37
	// 获得任务奖励
	// 请求协议 GetTaskInfoRewardRequest
	// 返回协议 GetTaskInfoRewardReply
	AuthorizationDef_Task_GetReward AuthorizationDef = 38
	// 获取配置信息
	// 请求协议 GetClientConfigRequest
	// 返回协议 GetClientConfigReply
	AuthorizationDef_ClientConfig_GetClientConfig AuthorizationDef = 39
	// 获取任务配置
	// 请求协议 GetTaskConfigRequest
	// 返回协议 GetTaskConfigReply
	AuthorizationDef_ConfigManager_GetTaskConfig AuthorizationDef = 40
	// 新增任务配置
	// 请求协议 InsertTaskConfigRequest
	// 返回协议 InsertTaskConfigReply
	AuthorizationDef_ConfigManager_InsertTaskConfig AuthorizationDef = 41
	// 修改任务配置
	// 请求协议 UpdateTaskConfigRequest
	// 返回协议 UpdateTaskConfigReply
	AuthorizationDef_ConfigManager_UpdateTaskConfig AuthorizationDef = 42
	// 删除任务配置
	// 请求协议 DeleteTaskConfigRequest
	// 返回协议 DeleteTaskConfigReply
	AuthorizationDef_ConfigManager_DeleteTaskConfig AuthorizationDef = 43
	// 转盘信息查询
	// 请求协议 SpinInfoRequest
	// 返回协议 SpinInfoReply
	AuthorizationDef_Spin_Query AuthorizationDef = 44
	// 转盘奖励获得
	// 请求协议 GetSpinRewardRequest
	// 返回协议 GetSpinRewardReply
	AuthorizationDef_Spin_GetReward AuthorizationDef = 45
	// 转盘记录获得
	// 请求协议 GetSpinRecordRequest
	// 返回协议 GetSpinRecordReply
	AuthorizationDef_Spin_GetRecord AuthorizationDef = 46
	//微信登录接口
	// 请求协议 WechatLoginRequest
	// 返回协议 LoginReply
	AuthorizationDef_WeChat_Login AuthorizationDef = 47
	// 玩家赠送接口
	// 请求协议 GiveAwayRequest
	// 返回协议 GiveAwayReply
	AuthorizationDef_GiveAway_GiveAwayByShortId AuthorizationDef = 48
	// 根据shortId获取玩家信息
	// 请求协议返回GetPlayerInfoByShortIdRequest
	// 返回协议GetPlayerInfoByShortIdReply
	AuthorizationDef_GetPlayerInfo_GetPlayerInfoByShortId AuthorizationDef = 49
	// 获取验证码图片
	// 请求协议返回 GetCaptchaRequest
	// 返回协议 GetCaptchaReply
	AuthorizationDef_Register_GetCaptchaPhoto AuthorizationDef = 50
	// 发送表情接口
	// 请求协议 SendSimpleChatRequest
	// 返回协议 SendSimpleChatReply
	AuthorizationDef_SimpleChat_SendSimpleChat AuthorizationDef = 51
	// 获取跑马灯列表接口
	// 请求协议 GetHorseRaceLampConfigRequest
	// 返回协议 GetHorseRaceLampConfigReply
	AuthorizationDef_HorseRaceLamp_GetHorseRaceLamp AuthorizationDef = 52
	// 添加跑马灯信息接口
	// 请求协议 InsertHorseRaceLampConfigRequest
	// 返回协议 InsertHorseRaceLampConfigReply
	AuthorizationDef_HorseRaceLamp_AddHorseRaceLamp AuthorizationDef = 53
	// 修改跑马灯信息接口
	// 请求协议 UpdateHorseRaceLampConfigRequest
	// 返回协议 UpdateHorseRaceLampConfigReply
	AuthorizationDef_HorseRaceLamp_UpdHorseRaceLamp AuthorizationDef = 54
	// 删除跑马灯信息接口
	// 请求协议 DeleteHorseRaceLampConfigRequest
	// 返回协议 DeleteHorseRaceLampConfigReply
	AuthorizationDef_HorseRaceLamp_DelHorseRaceLamp AuthorizationDef = 55
	// 获取公告列表接口
	// 请求协议 GetNoticeRequest
	// 返回协议 GetNoticeReply
	AuthorizationDef_Notice_GetNotice AuthorizationDef = 56
	// 添加公告列表接口
	// 请求协议 Notice
	// 返回协议 NoticeReply
	AuthorizationDef_Notice_AddNotice AuthorizationDef = 57
	// 修改公告列表接口
	// 请求协议 Notice
	// 返回协议 NoticeReply
	AuthorizationDef_Notice_UpdNotice AuthorizationDef = 58
	// 删除公告列表接口
	// 请求协议 Notice
	// 返回协议 NoticeReply
	AuthorizationDef_Notice_DelNotice AuthorizationDef = 59
	// 获取跑马灯列表接口-客户端
	// 请求协议 GetHorseRaceLampConfigRequest
	// 返回协议 GetHorseRaceLampConfigReply
	AuthorizationDef_HorseRaceLamp_GetHorseRaceLampPull AuthorizationDef = 60
	// 龙虎斗游戏接口
	// 请求协议 DragonTigerFightDoRequest
	// 返回协议 dotype对应的reply协议
	AuthorizationDef_DragonTigerFightRoute_Do AuthorizationDef = 70
	// 红黑游戏接口
	// 请求协议 RedBlackDoRequest
	// 返回协议 doType对应的reply协议
	AuthorizationDef_RedBlackRoute_Do AuthorizationDef = 71
	// 百人牛牛游戏接口
	// 请求协议 HundredBullDoRequest
	// 返回协议 dotype对应的reply协议
	AuthorizationDef_HundredBullRoute_Do AuthorizationDef = 80
	//炸金花游戏接口
	//请求协议 494
	//返回协议dotype对应的reply协议
	AuthorizationDef_JinhuaRoute_Do AuthorizationDef = 90
	//疯狂牛牛游戏接口
	//请求协议 CrazyBullDoRequest
	//返回协议dotype对应的reply协议
	AuthorizationDef_CrazyBullRoute_Do AuthorizationDef = 100
	//连连看游戏接口
	//请求协议 LinkUpDoRequest
	//返回协议dotype对应的reply协议
	AuthorizationDef_LinkUpRoute_Do AuthorizationDef = 101
	//十三水游戏接口
	//请求协议 ShiSanShuiDoRequest
	//返回协议dotype对应的reply协议
	AuthorizationDef_ShiSanShuiRoute_Do AuthorizationDef = 108
	//扯旋游戏接口
	//请求协议 DaXuanDoRequest
	//返回协议dotype对应的reply协议
	AuthorizationDef_DaXuanRoute_Do AuthorizationDef = 109
	//临沧麻将游戏接口
	//请求协议 LinCangMahjongDoRequest
	//返回协议dotype对应的reply协议
	AuthorizationDef_LinCangMahjongRoute_Do AuthorizationDef = 102
	// 推筒子游戏接口
	// 请求协议 PushBobbinDoRequest
	// 返回协议 dotype对应的reply协议
	AuthorizationDef_PushBobbinRoute_Do AuthorizationDef = 103
	//百家乐游戏接口
	//请求协议 BaccaratDoRequest
	//返回协议dotype对应的reply协议
	AuthorizationDef_BaccaratRoute_Do AuthorizationDef = 104
	// 获取机器人行为配置
	// 请求协议 GetRobotActionConfigRequest
	// 返回协议 GetRobotActionConfigReply
	AuthorizationDef_ConfigManager_GetRobotActionConfig AuthorizationDef = 105
	// 新增机器人行为配置
	// 请求协议 InsertRobotActionConfigRequest
	// 返回协议 InsertRobotActionConfigReply
	AuthorizationDef_ConfigManager_InsertRobotActionConfig AuthorizationDef = 106
	// 修改机器人行为配置
	// 请求协议 UpdateRobotActionConfigRequest
	// 返回协议 UpdateRobotActionConfigReply
	AuthorizationDef_ConfigManager_UpdateRobotActionConfig AuthorizationDef = 107
	// 获取机器人行为组配置
	// 请求协议 GetRobotActionGroupConfigRequest
	// 返回协议 GetRobotActionGroupConfigReply
	AuthorizationDef_ConfigManager_GetRobotActionGroupConfig AuthorizationDef = 110
	// 新增机器人行为组配置
	// 请求协议 InsertRobotActionGroupConfigRequest
	// 返回协议 InsertRobotActionGroupConfigReply
	AuthorizationDef_ConfigManager_InsertRobotActionGroupConfig AuthorizationDef = 111
	// 修改机器人行为组配置
	// 请求协议 UpdateRobotActionGroupConfigRequest
	// 返回协议 UpdateRobotActionGroupConfigReply
	AuthorizationDef_ConfigManager_UpdateRobotActionGroupConfig AuthorizationDef = 112
	// 获得机器人列表
	// 请求协议 GetRobotListRequest
	// 返回协议 GetRobotListReply
	AuthorizationDef_ConfigManager_GetRobotList AuthorizationDef = 115
	// 获得机器人管理器的配置
	// 请求协议 GetRobotManagerConfigRequest
	// 返回协议 GetRobotManagerConfigReply
	AuthorizationDef_RobotManager_GetRobotManagerConfig AuthorizationDef = 116
	//双连游戏接口
	//请求协议 DoubleLinkedDoRequest
	//返回协议dotype对应的reply协议
	AuthorizationDef_DoubleLinkedRoute_Do AuthorizationDef = 117
	// 后台获取奖池分数接口
	// 请求协议 GetBonusScoreRequest
	// 返回协议 GetBonusScoreReply
	AuthorizationDef_ConfigManager_GetBonusScore AuthorizationDef = 118
	// 后台增加/减少机器人奖池表分数
	// 请求协议 IncrRobotBonusScoreRequest
	// 返回协议 IncrRobotBonusScoreReply
	AuthorizationDef_ConfigManager_IncrRobotBonusScore AuthorizationDef = 119
	// 修改玩家名字接口
	// 请求协议 ReNameRequest
	// 返回协议 ReNameReply
	AuthorizationDef_GetPlayerInfo_ReName AuthorizationDef = 120
	// 修改玩家头像接口
	// 请求协议 ReHeadImgUrlRequest
	// 返回协议 ReHeadImgUrlReply
	AuthorizationDef_GetPlayerInfo_ReHeadImgUrl AuthorizationDef = 121
	// 银行存钱接口
	// 请求协议 BankSaveMoneyRequest
	// 返回协议 BankSaveMoneyReply
	AuthorizationDef_Bank_SaveMoneyByBank AuthorizationDef = 122
	// 银行取钱接口
	// 请求协议 BankWithDrawMoneyRequest
	// 返回协议 BankWithDrawMoneyReply
	AuthorizationDef_Bank_WithDrawMoneyByBank AuthorizationDef = 123
	// 修改银行密码接口
	// 请求协议 UpdateBankPasswordRequest
	// 返回协议 UpdateBankPasswordReply
	AuthorizationDef_Bank_UpdateBankPassword AuthorizationDef = 124
	// 管理后台查询房间信息
	// 请求协议 SelectRoomInfoByGameTypeRequest
	// 返回协议 SelectRoomInfoByGameTypeReply
	AuthorizationDef_RoomManager_SelectRoomByGameType AuthorizationDef = 125
	// 管理后台删除房间
	// 请求协议 DelRoomByGameTypeRequest
	// 返回协议 DelRoomByGameTypeReply
	AuthorizationDef_RoomManager_DelRoomByGameType AuthorizationDef = 126
	// 血战麻将游戏接口
	// 请求协议 XueZhanMahjongDoRequest
	// 返回协议dotype对应的reply协议
	AuthorizationDef_XueZhanMahjongRoute_Do AuthorizationDef = 127
	// 管理后台查询奖池记录
	// 请求协议 GetBonusChangeRecordPageListRequest
	// 返回协议 GetBonusChangeRecordPageListReply
	AuthorizationDef_ReportReader_GetBonusRecordPageList AuthorizationDef = 128
	// 后台增加/减少奖池表分数
	// 请求协议 IncrBonusScoreRequest
	// 返回协议 IncrBonusScoreReply
	AuthorizationDef_ConfigManager_IncrBonusScore AuthorizationDef = 129
	// 玩家获取奖池分数接口
	// 请求协议 PlayerGetBonusScoreRequest
	// 返回协议 PlayerGetBonusScoreReply
	AuthorizationDef_GameInfo_GetBonusScore AuthorizationDef = 130
	// 奔驰宝马游戏接口
	// 请求协议 BenzBMWDoRequest
	// 返回协议dotype对应的reply协议
	AuthorizationDef_BenzBMWRoute_Do AuthorizationDef = 131
	// 俱乐部创建
	// 请求协议 CreateClubRequest
	// 返回协议 CreateClubReply
	AuthorizationDef_ClubMasterManager_CreateClub AuthorizationDef = 201
	// 俱乐部解散
	// 请求协议 DismissClubRequest
	// 返回协议 DismissClubReply
	AuthorizationDef_ClubMasterManager_DismissClub AuthorizationDef = 202
	// 对玩家加入俱乐部申请进行处理
	// 请求协议 HandleJoinClubApplyRequest
	// 返回协议 HandleJoinClubApplyReply
	AuthorizationDef_ClubMasterManager_HandleJoinClubApply AuthorizationDef = 203
	// 创建俱乐部房间
	// 请求协议 CreateClubRoomRequest
	// 返回协议 CreateClubRoomReply
	AuthorizationDef_ClubMasterManager_CreateClubRoom AuthorizationDef = 204
	// 关闭俱乐部房间
	// 请求协议 CloseClubRoomRequest
	// 返回协议 CloseClubRoomReply
	AuthorizationDef_ClubMasterManager_CloseClubRoom AuthorizationDef = 205
	// 查询俱乐部成员列表
	// 请求协议 QueryClubMemberRequest
	// 返回协议 QueryClubMemberReply
	AuthorizationDef_ClubMasterManager_QueryClubMember AuthorizationDef = 206
	// 查询俱乐部申请人列表
	// 请求协议 QueryClubApplicantRequest
	// 返回协议 QueryClubApplicantReply
	AuthorizationDef_ClubMasterManager_QueryClubApplicant AuthorizationDef = 207
	// 部长将成员请出俱乐部
	// 请求协议 ClubMasterDropMemberRequest
	// 返回协议 HandleJoinClubApplyReply
	AuthorizationDef_ClubMasterManager_ClubMasterDropMember AuthorizationDef = 208
	// 放弃申请创建俱乐部
	// 请求协议 PlayerCancelCreateClubRequest
	// 返回协议 ListMyClub
	AuthorizationDef_ClubMasterManager_PlayerCancelCreateClub AuthorizationDef = 209
	// 部长发布俱乐部通告
	// 请求协议 PublishClubNoticeRequest
	// 返回协议 ListClubNotice
	AuthorizationDef_ClubMasterManager_PublishClubNotice AuthorizationDef = 210
	// 部长查询所有俱乐部通告
	// 请求协议 ListClubNoticeRequest
	// 返回协议 ListClubNotice
	AuthorizationDef_ClubMasterManager_ListClubNotice AuthorizationDef = 211
	// 部长设置管理员
	// 请求协议 ClubMasterSetManagerRequest
	// 返回协议 QueryClubMemberReply
	AuthorizationDef_ClubMasterManager_ClubMasterSetManager AuthorizationDef = 212
	// 设置俱乐部的属性
	// 请求协议 ClubSettingRequest
	// 返回协议 ClubSettingReply
	AuthorizationDef_ClubMasterManager_ClubSetting AuthorizationDef = 213
	// 冻结，解冻一个俱乐部会员
	// 请求协议 FreezeClubMemberRequest
	// 返回协议 FreezeClubMemberReply
	AuthorizationDef_ClubMasterManager_FreezeClubMember AuthorizationDef = 214
	// 设置，取消一个俱乐部会员的代付资格
	// 请求协议 SetClubRoomCreatorRequest
	// 返回协议 SetClubRoomCreatorReply
	AuthorizationDef_ClubMasterManager_SetClubRoomCreator AuthorizationDef = 215
	// 申请加入俱乐部
	// 请求协议 ApplyJoinClubRequest
	// 返回协议 ListMyClub
	AuthorizationDef_ClubMemberManager_ApplyJoinClub AuthorizationDef = 251
	// 查询我的俱乐部列表
	// 请求协议 QueryMyClubRequest
	// 返回协议 ListMyClub
	AuthorizationDef_ClubMemberManager_QueryMyClub AuthorizationDef = 252
	// 成员退出俱乐部
	// 请求协议 ClubMemberQuitRequest
	// 返回协议 ListMyClub
	AuthorizationDef_ClubMemberManager_ClubMemberQuit AuthorizationDef = 253
	// 俱乐部成员确认驱逐
	// 请求协议 ClubMemberConfirmDropRequest
	// 返回协议 ListMyClub
	AuthorizationDef_ClubMemberManager_ClubMemberConfirmDrop AuthorizationDef = 254
	// 玩家自行放弃申请加入俱乐部
	// 请求协议 PlayerCancelJoinClubRequest
	// 返回协议 ListMyClub
	AuthorizationDef_ClubMemberManager_PlayerCancelJoinClub AuthorizationDef = 255
	// 会员获得俱乐部通告
	// 请求协议 ClubMemberQueryNoticeRequest
	// 返回协议 ClubMemberQueryNoticeReply
	AuthorizationDef_ClubMemberManager_ClubMemberQueryNotice AuthorizationDef = 256
	// 会员请求俱乐部信息
	// 请求协议 QueryClubInfoRequest
	// 返回协议 QueryClubInfoReply
	AuthorizationDef_ClubMemberManager_QueryClubInfo AuthorizationDef = 257
	// 会员进入俱乐部房间
	// 请求协议 GameJoinRoomRequest
	// 返回协议 GameJoinRoomReply
	AuthorizationDef_ClubMemberManager_JoinClubRoom AuthorizationDef = 258
	// 会员进出俱乐部大厅(需要记录或从推送消息列表中移除)
	// 请求协议 EnterClubLobbyRequest
	// 返回协议 EnterClubLobbyReply
	AuthorizationDef_ClubMemberManager_EnterClubLobby AuthorizationDef = 259
	//根据俱乐部部长id获取名下俱乐部列表
	//请求协议 QueryClubsByMasterIDRequest
	//返回协议 ListMyClub
	AuthorizationDef_ClubMemberManager_QueryClubsByMasterID AuthorizationDef = 260
	//管理端查询游戏记录
	//请求协议GetGameRecordPageListRequest
	//返回协议GetGameRecordPageListReply
	AuthorizationDef_ReportReader_GetGameRecordPageList AuthorizationDef = 301
	//查询自己游戏记录
	//请求协议GetGameRecordPageListRequest
	//返回协议GetGameRecordPageListReply
	AuthorizationDef_ReportReader_GetSelfGameRecordPageList AuthorizationDef = 302
	//管理端查询金额变动记录
	//请求协议GetBalanceChangeRecordPageListRequest
	//返回协议GetBalanceChangeRecordPageListReply
	AuthorizationDef_ReportReader_GetBalanceChangeRecordPageList AuthorizationDef = 303
	//查询自己金额变动记录
	//请求协议 GetBalanceChangeRecordPageListRequest
	//返回协议 GetBalanceChangeRecordPageListReply
	AuthorizationDef_ReportReader_GetSelfBalanceChangeRecordPageList AuthorizationDef = 304
	// 获得血池配置（整个游戏）
	// 请求协议 GetBloodSlotConfigRequest
	// 返回协议 GetBloodSlotConfigReply
	AuthorizationDef_ConfigManager_GetBloodSlotConfig AuthorizationDef = 305
	// 修改血池配置
	// 请求协议 UpdateBloodSlotConfigRequest
	// 返回协议 UpdateBloodSlotConfigReply
	AuthorizationDef_ConfigManager_UpdateBloodSlotConfig AuthorizationDef = 306
	// 新增血池配置
	// 请求协议 AlertBloodSlotConfigRequest
	// 返回协议 AlertBloodSlotConfigReply
	AuthorizationDef_ConfigManager_AlertBloodSlotConfig AuthorizationDef = 307
	// 删除血池配置
	// 请求协议 DeleteBloodSlotConfigRequest
	// 返回协议 DeleteBloodSlotConfigReply
	AuthorizationDef_ConfigManager_DeleteBloodSlotConfig AuthorizationDef = 308
	// 获得血池配置（单）
	// 请求协议 GetOneBloodSlotConfigRequest
	// 返回协议 GetOneBloodSlotConfigReply
	AuthorizationDef_ConfigManager_GetOneBloodSlotConfig AuthorizationDef = 309
	// 获取房间码信息
	// 请求协议 RoomCodeInfo
	// 返回协议 RoomCodeInfo
	AuthorizationDef_GameInfo_GetRoomCodeInfo AuthorizationDef = 315
	// 获取玩家赠送记录
	// 请求协议 GetGiveAwayRecordPageListRequest
	// 返回协议 GetGiveAwayRecordPageListReply
	AuthorizationDef_ReportReader_GetSelfGiveAwayRecordPageList AuthorizationDef = 316
	//根据房卡记录表获取代理房卡消耗总数（汇友）
	// 请求协议 GetRoomCardConsumptionTotalByChangeRecordRequest
	// 返回协议 GetRoomCardConsumptionTotalByChangeRecordReply
	AuthorizationDef_ReportReader_GetRoomCardConsumptionTotalByChangeRecord AuthorizationDef = 317
	//根据房卡记录表获取代理房卡消耗总数（汇友）
	// 请求协议 GetRoomCardConsumptionTotalByChangeRecordRequest
	// 返回协议 GetRoomCardConsumptionTotalByChangeRecordReply
	AuthorizationDef_ReportReader_GetSelfRoomCardConsumptionTotalByChangeRecord AuthorizationDef = 318
	//根据房卡记录表获取代理直属消耗的房卡汇总（汇友）
	// 请求协议 GetRoomCardConsumptionByChangeRecordRequest
	// 返回协议 GetRoomCardConsumptionByChangeRecordReply
	AuthorizationDef_ReportReader_GetRoomCardConsumptionByChangeRecord AuthorizationDef = 319
	//根据房卡记录表获取代理直属消耗的房卡汇总（汇友）
	// 请求协议 GetRoomCardConsumptionByChangeRecordRequest
	// 返回协议 GetRoomCardConsumptionByChangeRecordReply
	AuthorizationDef_ReportReader_GetSelfRoomCardConsumptionByChangeRecord AuthorizationDef = 320
	//获取房卡变动记录(汇友)
	// 请求协议 GetRoomCardChangeRecordRequest
	// 返回协议 GetRoomCardChangeRecordReply
	AuthorizationDef_ReportReader_GetRoomCardChangeRecord AuthorizationDef = 321
	//获取个人房卡变动记录(汇友)
	// 请求协议 GetRoomCardChangeRecordRequest
	// 返回协议 GetRoomCardChangeRecordReply
	AuthorizationDef_ReportReader_GetSelfRoomCardChangeRecord AuthorizationDef = 322
	// 获取平台收益
	// 请求协议 GetPlatProfitRequest
	// 返回协议 GetPlatProfitReply
	AuthorizationDef_ReportReader_GetPlatProfit AuthorizationDef = 323
	// 联盟请求的相关操作
	// 请求 LeagueDoRequest
	// 创建：CreateLeagueRequest,CreateLeagueReply
	// 加入：JoinLeagueApplyRequest,JoinLeagueApplyReply
	// 退出：QuitLeagueRequest,QuitLeagueReply
	// 审核：HandleLeagueApplyRequest,HandleLeagueApplyReply
	// 设置管理员：SetManagerRequest,SetManagerReply
	// 冻结成员：FreezeLeagueMemberRequest,FreezeLeagueMemberReply
	// 设置/取消代理 SetAgentRequest,SetAgentReply
	// 设置代理分成 SetAgentProfitRateRequest,SetAgentProfitRateReply
	// 金豆赠送 GiveBeanRequest,GiveBeanReply
	// 创建房间 CreateLeagueRoomRequest,CreateLeagueRoomReply
	// 加入房间 GameJoinRoomRequest,GameJoinRoomReply
	// 解散房间 DissolveLeagueRoomRequest,DissolveLeagueRoomReply
	// 获取房间列表 GetLeagueRoomListRequest,GetLeagueRoomListReply
	// 获取我的联盟 GetMyLeagueListRequest,GetMyLeagueListReply
	// 获取申请列表 GetJoinLeagueRequestListRequest,GetJoinLeagueRequestListReply，
	// 获取成员列表 GetLeagueMembersRequest,GetLeagueMembersReply
	// 获取联盟信息 GetLeagueInfoRequest,GetLeagueInfoReply
	// 根据邀请码获取联盟信息和能加入的俱乐部信息 GetLeagueInfoByInviteRequest,GetLeagueInfoByInviteReply
	// 获取我的邀请的俱乐部的部长 GetMySubClubMasterRequst,GetMySubClubMasterReply
	// 修改联盟设置 UpdateLeagueSettingRequest,UpdateLeagueSettingReply
	// 解散联盟 DissolveLeagueRequest,DissolveLeagueReply
	// 设置抽水比例 SetLeagueGameCommissionRequest,SetLeagueGameCommissionReply
	// 获取分成金额 GetLeagueAgentCommissionRequest,GetLeagueAgentCommissionReply
	// 领取分成金额 ReceiveLeagueAgentCommissionRequest,ReceiveLeagueAgentCommissionReply
	// 获取下级分成列表 GetLeagueSubAgentCommissionRequest,GetLeagueSubAgentCommissionReply
	// 获取个人在联盟中的基本信息 GetSelfInfoOfLeagueRequest,GetSelfInfoOfLeagueReply
	// 获取个人在联盟的金币变动记录 GetBeanChangeRecordPageListRequest,GetBeanChangeRecordPageListReply
	AuthorizationDef_LeagueRoute_Do AuthorizationDef = 401
	// 通过排线码注册账号 - 无限+级别
	// 请求 RegisterRequest
	// 响应 RegisterReply
	AuthorizationDef_Register_RegisterByLineCode AuthorizationDef = 501
	// 通过直属码注册账号 - 无限+级别
	// 请求 RegisterRequest
	// 响应 RegisterReply
	AuthorizationDef_Register_RegisterByDirectly AuthorizationDef = 502
	// 设置顶代账号 - 无限+级别
	// 请求 SetTopAgentRequest
	// 响应 SetTopAgentReply
	AuthorizationDef_AgentRelationWrite_SetTopAgent AuthorizationDef = 503
	// 获得某个代理的业绩总览信息 - 无限
	// 请求 GetAgentAchievementInfoRequest
	// 响应 GetAgentAchievementInfoReply
	AuthorizationDef_AgentRead_GetAgentAchievementInfo AuthorizationDef = 504
	// 获得某个代理的佣金总览信息 - 无限
	// 请求 GetAgentCommissionInfoRequest
	// 响应 GetAgentCommissionInfoReply
	AuthorizationDef_AgentRead_GetAgentCommissionInfo AuthorizationDef = 505
	// 获得某个代理的下级总览信息 - 无限
	// 请求 GetAgentUnderInfoRequest
	// 响应 GetAgentUnderInfoReply
	AuthorizationDef_AgentRead_GetAgentUnderInfo AuthorizationDef = 506
	// 修改某项代理配置 - 无限
	// 请求 UpdateAgentConfigRequest
	// 响应 UpdateAgentConfigReply
	AuthorizationDef_ConfigManager_UpdateAgentConfig AuthorizationDef = 507
	// 获得代理配置 - 无限
	// 请求 GetAgentConfigRequest
	// 响应 GetAgentConfigReply
	AuthorizationDef_ConfigManager_GetAgentConfig AuthorizationDef = 508
	// 注册顶代账号 - 无限+级别
	// 请求 RegisterRequest
	// 响应 RegisterReply
	AuthorizationDef_Register_RegisterTopAgent AuthorizationDef = 509
	// 获得顶代账号信息 - 无限
	// 请求 GetTopAgentInfoRequest
	// 响应 GetTopAgentInfoReply
	AuthorizationDef_AgentRead_GetTopAgentInfo AuthorizationDef = 510
	//管理端查询业绩变动记录 无限+级别
	//请求协议GetAchievementChangeRecordPageListRequest
	//返回协议GetAchievementChangeRecordPageListReply
	AuthorizationDef_ReportReader_GetAchievementChangeRecordPageList AuthorizationDef = 511
	//管理端查询佣金提取记录 - 无限+级别
	//请求协议GetGetCommissionRecordPageListRequest
	//返回协议GetGetCommissionRecordPageListReply
	AuthorizationDef_ReportReader_GetGetCommissionRecordPageList AuthorizationDef = 512
	// 客户端接口     551-600
	// 创建排线码 - 无限+级别
	// 请求 CreateLineCodeRequest
	// 响应 CreateLineCodeReply
	AuthorizationDef_AgentRelationWrite_CreateLineCode AuthorizationDef = 551
	// 获得自己下级的某个代理的业绩总览信息 - 无限
	// 请求 GetAgentAchievementInfoRequest
	// 响应 GetAgentAchievementInfoReply
	AuthorizationDef_AgentRead_GetSelfUnderAgentAchievementInfo AuthorizationDef = 552
	// 获得排线码信息 - 无限
	// 请求 GetLineCodeRequest
	// 响应 GetLineCodeReply
	AuthorizationDef_AgentRead_GetLineCode AuthorizationDef = 553
	// 获得自己的佣金信息总览 - 无限
	// 请求 GetAgentCommissionInfoRequest
	// 响应 GetAgentCommissionInfoReply
	AuthorizationDef_AgentRead_GetSelfAgentCommissionInfo AuthorizationDef = 554
	// 获得自己的所有下级的总览信息 - 无限
	// 请求 GetAgentUnderInfoRequest
	// 响应 GetAgentUnderInfoReply
	AuthorizationDef_AgentRead_GetSelfAgentUnderInfo AuthorizationDef = 555
	// 领取自己的日结佣金 - 无限
	// 请求 GetDayCommissionRequest
	// 响应 GetDayCommissionReply
	AuthorizationDef_AgentGetReward_GetDayCommission AuthorizationDef = 556
	// 领取自己的周结佣金 - 无限
	// 请求 GetWeekCommissionRequest
	// 响应 GetWeekCommissionReply
	AuthorizationDef_AgentGetReward_GetWeekCommission AuthorizationDef = 557
	// 获得短位链接 - 无限+级别
	// 请求 GetShortURLRequest
	// 响应 GetShortURLReply
	AuthorizationDef_ShortURL_GetShortURL AuthorizationDef = 558
	//查询自己的业绩变动记录 -- 无限 + 级别
	//请求协议GetAchievementChangeRecordPageListRequest
	//返回协议GetAchievementChangeRecordPageListReply
	AuthorizationDef_ReportReader_GetSelfAchievementChangeRecordPageList AuthorizationDef = 559
	//查询自己的佣金提取记录 -- 无限 + 级别
	//请求协议GetGetCommissionRecordPageListRequest
	//返回协议GetGetCommissionRecordPageListReply
	AuthorizationDef_ReportReader_GetSelfGetCommissionRecordPageList AuthorizationDef = 560
	// 获取自己指定级别的下级玩家信息
	// 请求 GetChildByIdentityRequest
	// 响应 GetChildByIdentityReply
	AuthorizationDef_AgentRead_GetSelfDesignLevelAgentInfo AuthorizationDef = 561
	// 领取自己的佣金 - 级别
	// 请求 GetMeCommissionRequest
	// 响应 GetMeCommissionReply
	AuthorizationDef_AgentGetReward_GetMeCommission AuthorizationDef = 563
	// 绑定上级
	// 请求 BindParentByShortIDRequest
	// 响应 BindParentByShortIDReply
	AuthorizationDef_AgentChangeClient_BindParentByShortID AuthorizationDef = 564
	// 设为代理
	// 请求 SetPlayerToAgentRequest
	// 响应 SetPlayerToAgentReply
	AuthorizationDef_AgentChangeClient_SetPlayerToAgent AuthorizationDef = 565
	// 通过身份获得自身下级
	// 请求 GetChildByIdentityRequest
	// 响应 GetChildByIdentityReply
	AuthorizationDef_AgentRead_GetSelfChildByIdentity AuthorizationDef = 566
	// 调配
	// 请求 DeployMoneyRequest
	// 响应 DeployMoneyReply
	AuthorizationDef_AgentRead_DeployMoney AuthorizationDef = 567
	// 归还
	// 请求 BackMoneyRequest
	// 响应 BackMoneyReply
	AuthorizationDef_AgentRead_BackMoney AuthorizationDef = 568
	// 出借
	// 请求 BorrowMoneyRequest
	// 响应 BorrowMoneyReply
	AuthorizationDef_AgentRead_BorrowMoney AuthorizationDef = 569
	//汇友 获取自己的日结佣金，先抵扣房卡(适用汇友)
	//请求 GetDayCommissionByTypeRequest
	//回复 GetDayCommissionByTypeReply
	AuthorizationDef_AgentGetReward_GetDayCommissionWithDeduction AuthorizationDef = 570
	//获取汇友未结算返利列表（管理端用）
	//请求 GetAllianceLeaderUnSettledListRequest
	//回复 GetAllianceLeaderUnSettledListReply
	AuthorizationDef_AgentGetReward_GetAllianceLeaderUnSettledList AuthorizationDef = 571
	//汇友获取副盟主结算未结算信息（管理端用）
	//请求 GetAllianceLeaderUnSettledInfoRequest
	//回复 GetAllianceLeaderUnSettledInfoReply
	AuthorizationDef_AgentGetReward_GetAllianceLeaderUnSettledInfo AuthorizationDef = 572
	//汇友副盟主设置结算（管理端用）
	//请求 SetAllianceLeaderRoomCardSettleRequest
	//回复 SetAllianceLeaderRoomCardSettleReply
	AuthorizationDef_AgentGetReward_SetAllianceLeaderRoomCardSettle AuthorizationDef = 573
	//获取可领取的佣金汇总
	//请求 GetCanGetCommissionTotalRequest
	//回复 GetCanGetCommissionTotalReply
	AuthorizationDef_AgentGetReward_GetCanGetCommissionTotal AuthorizationDef = 574
	//获取玩家每日收益汇总
	//请求 GetAchievementTotalPerDayRequest
	//回复 GetAchievementTotalPerDayReply
	AuthorizationDef_ReportReader_GetSelfAchievementTotalPerDayRequest AuthorizationDef = 575
	//最近N天总收益
	//请求 GetAchievementTotalRequest
	//回复 GetAchievementTotalReply
	AuthorizationDef_ReportReader_GetSelfAchievementTotalRequest AuthorizationDef = 576
	//副盟主领取房卡返利
	//请求 GetAllianceLeaderRoomCardRequest
	//回复 GetAllianceLeaderRoomCardReply
	AuthorizationDef_AgentGetReward_GetAllianceLeaderRoomCard AuthorizationDef = 577
	// 获得玩家身份
	// 请求 GetAgentIdentityRequest
	// 响应 GetAgentIdentityReply
	AuthorizationDef_AgentRead_GetAgentIdentity AuthorizationDef = 578
	// 查找代理简略信息
	// 请求 FindChildByIdentityRequest
	// 响应 FindChildByIdentityReply
	AuthorizationDef_AgentRead_FindSelfChildByIdentity AuthorizationDef = 579
	// 设置子级顶代账号 - 级别
	// 请求 SetTopAgentRequest
	// 响应 SetTopAgentReply
	AuthorizationDef_AgentRelationWrite_SetSonTopAgent AuthorizationDef = 580
	//facebook登录接口
	// 请求协议 FacebookLoginRequest
	// 返回协议 LoginReply
	AuthorizationDef_Facebook_Login AuthorizationDef = 601
	//获取在线玩家
	// 请求协议 GetAccountPageListRequest
	// 返回协议 GetOnlineAccountPageListReply
	AuthorizationDef_AccountManager_GetOnlineAccountPageList AuthorizationDef = 602
	//获取房卡消费总和
	// 请求协议 GetRoomCardConsumptionRequest
	// 返回协议 GetRoomCardConsumptionReply
	AuthorizationDef_ReportReader_GetRoomCardConsumption AuthorizationDef = 603
	//获取游戏局数总和
	// 请求协议 GetGameRoundCountRequest
	// 返回协议 GetGameRoundCountReply
	AuthorizationDef_ReportReader_GetGameRoundStatistics AuthorizationDef = 604
	//获取俱乐部列表
	AuthorizationDef_ClubManager_GetClubPageList AuthorizationDef = 605
	//获取充值统计
	// 请求协议 GetChargeStatisticsRequest
	// 返回协议 GetChargeStatisticsReply
	AuthorizationDef_ReportReader_GetChargeStatistics AuthorizationDef = 606
	//获取注册人数统计
	//请求协议 GetRegistStatisticsRequest
	//返回协议 GetRegistStatisticsReply
	AuthorizationDef_ReportReader_GetRegistStatistics AuthorizationDef = 607
	// 获取支付通道配置
	// 请求协议 GetChannelConfigRequest
	// 返回协议 GetChannelConfigReply
	AuthorizationDef_ConfigManager_GetChannelConfig AuthorizationDef = 701
	// 新增支付通道配置
	// 请求协议 InsertChannelConfigRequest
	// 返回协议 InsertChannelConfigReply
	AuthorizationDef_ConfigManager_InsertChannelConfig AuthorizationDef = 702
	// 修改支付通道配置
	// 请求协议 UpdateChannelConfigRequest
	// 返回协议 UpdateChannelConfigReply
	AuthorizationDef_ConfigManager_UpdateChannelConfig AuthorizationDef = 703
	// 删除支付通道配置
	// 请求协议 DeleteChannelConfigRequest
	// 返回协议 DeleteChannelConfigReply
	AuthorizationDef_ConfigManager_DeleteChannelConfig AuthorizationDef = 704
	// 获取商品配置
	// 请求协议 GetProductConfigRequest
	// 返回协议 GetProductConfigReply
	AuthorizationDef_ConfigManager_GetProductConfig AuthorizationDef = 705
	// 新增商品配置
	// 请求协议 InsertProductConfigRequest
	// 返回协议 InsertProductConfigReply
	AuthorizationDef_ConfigManager_InsertProductConfig AuthorizationDef = 706
	// 修改商品配置
	// 请求协议 UpdateProductConfigRequest
	// 返回协议 UpdateProductConfigReply
	AuthorizationDef_ConfigManager_UpdateProductConfig AuthorizationDef = 707
	// 删除商品配置
	// 请求协议 DeleteProductConfigRequest
	// 返回协议 DeleteProductConfigReply
	AuthorizationDef_ConfigManager_DeleteProductConfig AuthorizationDef = 708
	// 创建订单
	// 请求协议 MysqlOrderInfo
	// 返回协议 CreateOrderReply
	AuthorizationDef_OrderInfo_CreateOrder AuthorizationDef = 709
	// 分页查询订单列表
	// 请求协议 GetOrderPageListRequest
	// 返回协议 GetOrderPageListReply
	AuthorizationDef_OrderInfo_QueryOrderList AuthorizationDef = 710
	//打旋查询房间列表接口
	//请求协议 GetRoomsDaXuanRequest
	//返回协议 GetRoomsDaXuanReply
	AuthorizationDef_DaXuanRoute_GetRoomsDaXuan AuthorizationDef = 711
	//连线游戏接口
	//请求协议 LineGameDoRequest
	//返回协议dotype对应的reply协议
	AuthorizationDef_LineGameRoute_Do AuthorizationDef = 712
	//打旋查询房间牌局回顾
	//请求协议 GetGameReviewRequest
	//返回协议 GetGameReviewReply
	AuthorizationDef_DaXuanRoute_GetGameReview AuthorizationDef = 713
	//打旋查询房间实时战绩
	//请求协议 GetRecordRequest
	//返回协议 GetRecordReply
	AuthorizationDef_DaXuanRoute_GetRecord AuthorizationDef = 714
	//获取挖矿进度
	//请求协议 GetMiningProgressRequest
	//返回协议 GetMiningProgressReply
	AuthorizationDef_Mining_GetMiningProgress AuthorizationDef = 715
	//领取挖矿奖励
	//请求协议 GetMiningRequest
	//返回协议 GetMiningReply
	AuthorizationDef_Mining_GetMining AuthorizationDef = 716
	//打旋修改交易密码
	//请求协议 UpdTransactionPasswordRequest
	//返回协议 UpdTransactionPasswordReply
	AuthorizationDef_DaXuanRoute_UpdTransactionPassword AuthorizationDef = 717
	//获得短信验证码接口
	//请求协议 GetSmsCaptchaRequest
	//返回协议 GetSmsCaptchaReply
	AuthorizationDef_Sms_GetSmsCaptcha AuthorizationDef = 718
	//绑定手机接口
	//请求协议 BindMobileRequest
	//返回协议 BindMobileReply
	AuthorizationDef_Sms_BindMobile AuthorizationDef = 719
)

var AuthorizationDef_name = map[int32]string{
	0:   "AuthorizationDefError",
	1:   "Login_Login",
	2:   "Register_Register",
	3:   "Login_RBTLogin",
	4:   "Config_GetGlobal",
	5:   "Config_SetGlobal",
	6:   "Config_GetGameConfig",
	7:   "Config_GetGameConfigByGameType",
	8:   "Config_GetGameConfigByGameTypeAndScene",
	9:   "Config_SetGameConfig",
	10:  "Config_SetGameConfigBatch",
	11:  "CompareBullRoute_Do",
	12:  "Login_ManagerLogin",
	13:  "AuthManager_GetDefaultAuth",
	14:  "ConfigManager_SetGlobalConfig",
	15:  "ConfigManager_GetGlobalConfigAll",
	16:  "ConfigManager_SetGameConfig",
	17:  "ConfigManager_GetGameConfigAll",
	18:  "AccountManager_GetAccountPageList",
	19:  "AccountManager_NewAccount",
	20:  "AccountManager_UpdateAccount",
	21:  "AccountManager_DeleteAccount",
	22:  "AccountManager_SetAccountStatus",
	23:  "GameInfo_GameInfo",
	24:  "ConfigManager_GetGameScene",
	25:  "ConfigManager_DeleteGameScene",
	27:  "AccountManager_KickPlayer",
	28:  "AccountManager_AccountScore",
	29:  "GangHuaMahjongRoute_Do",
	30:  "Gift_GetSignGiftInfo",
	31:  "Gift_ReceiveSignGift",
	32:  "LeaderBoard_GetLeaderBoard",
	33:  "ConfigManager_GetGiftAllConfig",
	34:  "ConfigManager_InsertGiftConfig",
	35:  "ConfigManager_UpdateGiftConfig",
	36:  "ConfigManager_DeleteGiftConfig",
	37:  "Task_Query",
	38:  "Task_GetReward",
	39:  "ClientConfig_GetClientConfig",
	40:  "ConfigManager_GetTaskConfig",
	41:  "ConfigManager_InsertTaskConfig",
	42:  "ConfigManager_UpdateTaskConfig",
	43:  "ConfigManager_DeleteTaskConfig",
	44:  "Spin_Query",
	45:  "Spin_GetReward",
	46:  "Spin_GetRecord",
	47:  "WeChat_Login",
	48:  "GiveAway_GiveAwayByShortId",
	49:  "GetPlayerInfo_GetPlayerInfoByShortId",
	50:  "Register_GetCaptchaPhoto",
	51:  "SimpleChat_SendSimpleChat",
	52:  "HorseRaceLamp_GetHorseRaceLamp",
	53:  "HorseRaceLamp_AddHorseRaceLamp",
	54:  "HorseRaceLamp_UpdHorseRaceLamp",
	55:  "HorseRaceLamp_DelHorseRaceLamp",
	56:  "Notice_GetNotice",
	57:  "Notice_AddNotice",
	58:  "Notice_UpdNotice",
	59:  "Notice_DelNotice",
	60:  "HorseRaceLamp_GetHorseRaceLampPull",
	70:  "DragonTigerFightRoute_Do",
	71:  "RedBlackRoute_Do",
	80:  "HundredBullRoute_Do",
	90:  "JinhuaRoute_Do",
	100: "CrazyBullRoute_Do",
	101: "LinkUpRoute_Do",
	108: "ShiSanShuiRoute_Do",
	109: "DaXuanRoute_Do",
	102: "LinCangMahjongRoute_Do",
	103: "PushBobbinRoute_Do",
	104: "BaccaratRoute_Do",
	105: "ConfigManager_GetRobotActionConfig",
	106: "ConfigManager_InsertRobotActionConfig",
	107: "ConfigManager_UpdateRobotActionConfig",
	110: "ConfigManager_GetRobotActionGroupConfig",
	111: "ConfigManager_InsertRobotActionGroupConfig",
	112: "ConfigManager_UpdateRobotActionGroupConfig",
	115: "ConfigManager_GetRobotList",
	116: "RobotManager_GetRobotManagerConfig",
	117: "DoubleLinkedRoute_Do",
	118: "ConfigManager_GetBonusScore",
	119: "ConfigManager_IncrRobotBonusScore",
	120: "GetPlayerInfo_ReName",
	121: "GetPlayerInfo_ReHeadImgUrl",
	122: "Bank_SaveMoneyByBank",
	123: "Bank_WithDrawMoneyByBank",
	124: "Bank_UpdateBankPassword",
	125: "RoomManager_SelectRoomByGameType",
	126: "RoomManager_DelRoomByGameType",
	127: "XueZhanMahjongRoute_Do",
	128: "ReportReader_GetBonusRecordPageList",
	129: "ConfigManager_IncrBonusScore",
	130: "GameInfo_GetBonusScore",
	131: "BenzBMWRoute_Do",
	201: "ClubMasterManager_CreateClub",
	202: "ClubMasterManager_DismissClub",
	203: "ClubMasterManager_HandleJoinClubApply",
	204: "ClubMasterManager_CreateClubRoom",
	205: "ClubMasterManager_CloseClubRoom",
	206: "ClubMasterManager_QueryClubMember",
	207: "ClubMasterManager_QueryClubApplicant",
	208: "ClubMasterManager_ClubMasterDropMember",
	209: "ClubMasterManager_PlayerCancelCreateClub",
	210: "ClubMasterManager_PublishClubNotice",
	211: "ClubMasterManager_ListClubNotice",
	212: "ClubMasterManager_ClubMasterSetManager",
	213: "ClubMasterManager_ClubSetting",
	214: "ClubMasterManager_FreezeClubMember",
	215: "ClubMasterManager_SetClubRoomCreator",
	251: "ClubMemberManager_ApplyJoinClub",
	252: "ClubMemberManager_QueryMyClub",
	253: "ClubMemberManager_ClubMemberQuit",
	254: "ClubMemberManager_ClubMemberConfirmDrop",
	255: "ClubMemberManager_PlayerCancelJoinClub",
	256: "ClubMemberManager_ClubMemberQueryNotice",
	257: "ClubMemberManager_QueryClubInfo",
	258: "ClubMemberManager_JoinClubRoom",
	259: "ClubMemberManager_EnterClubLobby",
	260: "ClubMemberManager_QueryClubsByMasterID",
	301: "ReportReader_GetGameRecordPageList",
	302: "ReportReader_GetSelfGameRecordPageList",
	303: "ReportReader_GetBalanceChangeRecordPageList",
	304: "ReportReader_GetSelfBalanceChangeRecordPageList",
	305: "ConfigManager_GetBloodSlotConfig",
	306: "ConfigManager_UpdateBloodSlotConfig",
	307: "ConfigManager_AlertBloodSlotConfig",
	308: "ConfigManager_DeleteBloodSlotConfig",
	309: "ConfigManager_GetOneBloodSlotConfig",
	315: "GameInfo_GetRoomCodeInfo",
	316: "ReportReader_GetSelfGiveAwayRecordPageList",
	317: "ReportReader_GetRoomCardConsumptionTotalByChangeRecord",
	318: "ReportReader_GetSelfRoomCardConsumptionTotalByChangeRecord",
	319: "ReportReader_GetRoomCardConsumptionByChangeRecord",
	320: "ReportReader_GetSelfRoomCardConsumptionByChangeRecord",
	321: "ReportReader_GetRoomCardChangeRecord",
	322: "ReportReader_GetSelfRoomCardChangeRecord",
	323: "ReportReader_GetPlatProfit",
	401: "LeagueRoute_Do",
	501: "Register_RegisterByLineCode",
	502: "Register_RegisterByDirectly",
	503: "AgentRelationWrite_SetTopAgent",
	504: "AgentRead_GetAgentAchievementInfo",
	505: "AgentRead_GetAgentCommissionInfo",
	506: "AgentRead_GetAgentUnderInfo",
	507: "ConfigManager_UpdateAgentConfig",
	508: "ConfigManager_GetAgentConfig",
	509: "Register_RegisterTopAgent",
	510: "AgentRead_GetTopAgentInfo",
	511: "ReportReader_GetAchievementChangeRecordPageList",
	512: "ReportReader_GetGetCommissionRecordPageList",
	551: "AgentRelationWrite_CreateLineCode",
	552: "AgentRead_GetSelfUnderAgentAchievementInfo",
	553: "AgentRead_GetLineCode",
	554: "AgentRead_GetSelfAgentCommissionInfo",
	555: "AgentRead_GetSelfAgentUnderInfo",
	556: "AgentGetReward_GetDayCommission",
	557: "AgentGetReward_GetWeekCommission",
	558: "ShortURL_GetShortURL",
	559: "ReportReader_GetSelfAchievementChangeRecordPageList",
	560: "ReportReader_GetSelfGetCommissionRecordPageList",
	561: "AgentRead_GetSelfDesignLevelAgentInfo",
	563: "AgentGetReward_GetMeCommission",
	564: "AgentChangeClient_BindParentByShortID",
	565: "AgentChangeClient_SetPlayerToAgent",
	566: "AgentRead_GetSelfChildByIdentity",
	567: "AgentRead_DeployMoney",
	568: "AgentRead_BackMoney",
	569: "AgentRead_BorrowMoney",
	570: "AgentGetReward_GetDayCommissionWithDeduction",
	571: "AgentGetReward_GetAllianceLeaderUnSettledList",
	572: "AgentGetReward_GetAllianceLeaderUnSettledInfo",
	573: "AgentGetReward_SetAllianceLeaderRoomCardSettle",
	574: "AgentGetReward_GetCanGetCommissionTotal",
	575: "ReportReader_GetSelfAchievementTotalPerDayRequest",
	576: "ReportReader_GetSelfAchievementTotalRequest",
	577: "AgentGetReward_GetAllianceLeaderRoomCard",
	578: "AgentRead_GetAgentIdentity",
	579: "AgentRead_FindSelfChildByIdentity",
	580: "AgentRelationWrite_SetSonTopAgent",
	601: "Facebook_Login",
	602: "AccountManager_GetOnlineAccountPageList",
	603: "ReportReader_GetRoomCardConsumption",
	604: "ReportReader_GetGameRoundStatistics",
	605: "ClubManager_GetClubPageList",
	606: "ReportReader_GetChargeStatistics",
	607: "ReportReader_GetRegistStatistics",
	701: "ConfigManager_GetChannelConfig",
	702: "ConfigManager_InsertChannelConfig",
	703: "ConfigManager_UpdateChannelConfig",
	704: "ConfigManager_DeleteChannelConfig",
	705: "ConfigManager_GetProductConfig",
	706: "ConfigManager_InsertProductConfig",
	707: "ConfigManager_UpdateProductConfig",
	708: "ConfigManager_DeleteProductConfig",
	709: "OrderInfo_CreateOrder",
	710: "OrderInfo_QueryOrderList",
	711: "DaXuanRoute_GetRoomsDaXuan",
	712: "LineGameRoute_Do",
	713: "DaXuanRoute_GetGameReview",
	714: "DaXuanRoute_GetRecord",
	715: "Mining_GetMiningProgress",
	716: "Mining_GetMining",
	717: "DaXuanRoute_UpdTransactionPassword",
	718: "Sms_GetSmsCaptcha",
	719: "Sms_BindMobile",
}

var AuthorizationDef_value = map[string]int32{
	"AuthorizationDefError":                                      0,
	"Login_Login":                                                1,
	"Register_Register":                                          2,
	"Login_RBTLogin":                                             3,
	"Config_GetGlobal":                                           4,
	"Config_SetGlobal":                                           5,
	"Config_GetGameConfig":                                       6,
	"Config_GetGameConfigByGameType":                             7,
	"Config_GetGameConfigByGameTypeAndScene":                     8,
	"Config_SetGameConfig":                                       9,
	"Config_SetGameConfigBatch":                                  10,
	"CompareBullRoute_Do":                                        11,
	"Login_ManagerLogin":                                         12,
	"AuthManager_GetDefaultAuth":                                 13,
	"ConfigManager_SetGlobalConfig":                              14,
	"ConfigManager_GetGlobalConfigAll":                           15,
	"ConfigManager_SetGameConfig":                                16,
	"ConfigManager_GetGameConfigAll":                             17,
	"AccountManager_GetAccountPageList":                          18,
	"AccountManager_NewAccount":                                  19,
	"AccountManager_UpdateAccount":                               20,
	"AccountManager_DeleteAccount":                               21,
	"AccountManager_SetAccountStatus":                            22,
	"GameInfo_GameInfo":                                          23,
	"ConfigManager_GetGameScene":                                 24,
	"ConfigManager_DeleteGameScene":                              25,
	"AccountManager_KickPlayer":                                  27,
	"AccountManager_AccountScore":                                28,
	"GangHuaMahjongRoute_Do":                                     29,
	"Gift_GetSignGiftInfo":                                       30,
	"Gift_ReceiveSignGift":                                       31,
	"LeaderBoard_GetLeaderBoard":                                 32,
	"ConfigManager_GetGiftAllConfig":                             33,
	"ConfigManager_InsertGiftConfig":                             34,
	"ConfigManager_UpdateGiftConfig":                             35,
	"ConfigManager_DeleteGiftConfig":                             36,
	"Task_Query":                                                 37,
	"Task_GetReward":                                             38,
	"ClientConfig_GetClientConfig":                               39,
	"ConfigManager_GetTaskConfig":                                40,
	"ConfigManager_InsertTaskConfig":                             41,
	"ConfigManager_UpdateTaskConfig":                             42,
	"ConfigManager_DeleteTaskConfig":                             43,
	"Spin_Query":                                                 44,
	"Spin_GetReward":                                             45,
	"Spin_GetRecord":                                             46,
	"WeChat_Login":                                               47,
	"GiveAway_GiveAwayByShortId":                                 48,
	"GetPlayerInfo_GetPlayerInfoByShortId":                       49,
	"Register_GetCaptchaPhoto":                                   50,
	"SimpleChat_SendSimpleChat":                                  51,
	"HorseRaceLamp_GetHorseRaceLamp":                             52,
	"HorseRaceLamp_AddHorseRaceLamp":                             53,
	"HorseRaceLamp_UpdHorseRaceLamp":                             54,
	"HorseRaceLamp_DelHorseRaceLamp":                             55,
	"Notice_GetNotice":                                           56,
	"Notice_AddNotice":                                           57,
	"Notice_UpdNotice":                                           58,
	"Notice_DelNotice":                                           59,
	"HorseRaceLamp_GetHorseRaceLampPull":                         60,
	"DragonTigerFightRoute_Do":                                   70,
	"RedBlackRoute_Do":                                           71,
	"HundredBullRoute_Do":                                        80,
	"JinhuaRoute_Do":                                             90,
	"CrazyBullRoute_Do":                                          100,
	"LinkUpRoute_Do":                                             101,
	"ShiSanShuiRoute_Do":                                         108,
	"DaXuanRoute_Do":                                             109,
	"LinCangMahjongRoute_Do":                                     102,
	"PushBobbinRoute_Do":                                         103,
	"BaccaratRoute_Do":                                           104,
	"ConfigManager_GetRobotActionConfig":                         105,
	"ConfigManager_InsertRobotActionConfig":                      106,
	"ConfigManager_UpdateRobotActionConfig":                      107,
	"ConfigManager_GetRobotActionGroupConfig":                    110,
	"ConfigManager_InsertRobotActionGroupConfig":                 111,
	"ConfigManager_UpdateRobotActionGroupConfig":                 112,
	"ConfigManager_GetRobotList":                                 115,
	"RobotManager_GetRobotManagerConfig":                         116,
	"DoubleLinkedRoute_Do":                                       117,
	"ConfigManager_GetBonusScore":                                118,
	"ConfigManager_IncrRobotBonusScore":                          119,
	"GetPlayerInfo_ReName":                                       120,
	"GetPlayerInfo_ReHeadImgUrl":                                 121,
	"Bank_SaveMoneyByBank":                                       122,
	"Bank_WithDrawMoneyByBank":                                   123,
	"Bank_UpdateBankPassword":                                    124,
	"RoomManager_SelectRoomByGameType":                           125,
	"RoomManager_DelRoomByGameType":                              126,
	"XueZhanMahjongRoute_Do":                                     127,
	"ReportReader_GetBonusRecordPageList":                        128,
	"ConfigManager_IncrBonusScore":                               129,
	"GameInfo_GetBonusScore":                                     130,
	"BenzBMWRoute_Do":                                            131,
	"ClubMasterManager_CreateClub":                               201,
	"ClubMasterManager_DismissClub":                              202,
	"ClubMasterManager_HandleJoinClubApply":                      203,
	"ClubMasterManager_CreateClubRoom":                           204,
	"ClubMasterManager_CloseClubRoom":                            205,
	"ClubMasterManager_QueryClubMember":                          206,
	"ClubMasterManager_QueryClubApplicant":                       207,
	"ClubMasterManager_ClubMasterDropMember":                     208,
	"ClubMasterManager_PlayerCancelCreateClub":                   209,
	"ClubMasterManager_PublishClubNotice":                        210,
	"ClubMasterManager_ListClubNotice":                           211,
	"ClubMasterManager_ClubMasterSetManager":                     212,
	"ClubMasterManager_ClubSetting":                              213,
	"ClubMasterManager_FreezeClubMember":                         214,
	"ClubMasterManager_SetClubRoomCreator":                       215,
	"ClubMemberManager_ApplyJoinClub":                            251,
	"ClubMemberManager_QueryMyClub":                              252,
	"ClubMemberManager_ClubMemberQuit":                           253,
	"ClubMemberManager_ClubMemberConfirmDrop":                    254,
	"ClubMemberManager_PlayerCancelJoinClub":                     255,
	"ClubMemberManager_ClubMemberQueryNotice":                    256,
	"ClubMemberManager_QueryClubInfo":                            257,
	"ClubMemberManager_JoinClubRoom":                             258,
	"ClubMemberManager_EnterClubLobby":                           259,
	"ClubMemberManager_QueryClubsByMasterID":                     260,
	"ReportReader_GetGameRecordPageList":                         301,
	"ReportReader_GetSelfGameRecordPageList":                     302,
	"ReportReader_GetBalanceChangeRecordPageList":                303,
	"ReportReader_GetSelfBalanceChangeRecordPageList":            304,
	"ConfigManager_GetBloodSlotConfig":                           305,
	"ConfigManager_UpdateBloodSlotConfig":                        306,
	"ConfigManager_AlertBloodSlotConfig":                         307,
	"ConfigManager_DeleteBloodSlotConfig":                        308,
	"ConfigManager_GetOneBloodSlotConfig":                        309,
	"GameInfo_GetRoomCodeInfo":                                   315,
	"ReportReader_GetSelfGiveAwayRecordPageList":                 316,
	"ReportReader_GetRoomCardConsumptionTotalByChangeRecord":     317,
	"ReportReader_GetSelfRoomCardConsumptionTotalByChangeRecord": 318,
	"ReportReader_GetRoomCardConsumptionByChangeRecord":          319,
	"ReportReader_GetSelfRoomCardConsumptionByChangeRecord":      320,
	"ReportReader_GetRoomCardChangeRecord":                       321,
	"ReportReader_GetSelfRoomCardChangeRecord":                   322,
	"ReportReader_GetPlatProfit":                                 323,
	"LeagueRoute_Do":                                             401,
	"Register_RegisterByLineCode":                                501,
	"Register_RegisterByDirectly":                                502,
	"AgentRelationWrite_SetTopAgent":                             503,
	"AgentRead_GetAgentAchievementInfo":                          504,
	"AgentRead_GetAgentCommissionInfo":                           505,
	"AgentRead_GetAgentUnderInfo":                                506,
	"ConfigManager_UpdateAgentConfig":                            507,
	"ConfigManager_GetAgentConfig":                               508,
	"Register_RegisterTopAgent":                                  509,
	"AgentRead_GetTopAgentInfo":                                  510,
	"ReportReader_GetAchievementChangeRecordPageList":            511,
	"ReportReader_GetGetCommissionRecordPageList":                512,
	"AgentRelationWrite_CreateLineCode":                          551,
	"AgentRead_GetSelfUnderAgentAchievementInfo":                 552,
	"AgentRead_GetLineCode":                                      553,
	"AgentRead_GetSelfAgentCommissionInfo":                       554,
	"AgentRead_GetSelfAgentUnderInfo":                            555,
	"AgentGetReward_GetDayCommission":                            556,
	"AgentGetReward_GetWeekCommission":                           557,
	"ShortURL_GetShortURL":                                       558,
	"ReportReader_GetSelfAchievementChangeRecordPageList":        559,
	"ReportReader_GetSelfGetCommissionRecordPageList":            560,
	"AgentRead_GetSelfDesignLevelAgentInfo":                      561,
	"AgentGetReward_GetMeCommission":                             563,
	"AgentChangeClient_BindParentByShortID":                      564,
	"AgentChangeClient_SetPlayerToAgent":                         565,
	"AgentRead_GetSelfChildByIdentity":                           566,
	"AgentRead_DeployMoney":                                      567,
	"AgentRead_BackMoney":                                        568,
	"AgentRead_BorrowMoney":                                      569,
	"AgentGetReward_GetDayCommissionWithDeduction":               570,
	"AgentGetReward_GetAllianceLeaderUnSettledList":              571,
	"AgentGetReward_GetAllianceLeaderUnSettledInfo":              572,
	"AgentGetReward_SetAllianceLeaderRoomCardSettle":             573,
	"AgentGetReward_GetCanGetCommissionTotal":                    574,
	"ReportReader_GetSelfAchievementTotalPerDayRequest":          575,
	"ReportReader_GetSelfAchievementTotalRequest":                576,
	"AgentGetReward_GetAllianceLeaderRoomCard":                   577,
	"AgentRead_GetAgentIdentity":                                 578,
	"AgentRead_FindSelfChildByIdentity":                          579,
	"AgentRelationWrite_SetSonTopAgent":                          580,
	"Facebook_Login":                                             601,
	"AccountManager_GetOnlineAccountPageList":                    602,
	"ReportReader_GetRoomCardConsumption":                        603,
	"ReportReader_GetGameRoundStatistics":                        604,
	"ClubManager_GetClubPageList":                                605,
	"ReportReader_GetChargeStatistics":                           606,
	"ReportReader_GetRegistStatistics":                           607,
	"ConfigManager_GetChannelConfig":                             701,
	"ConfigManager_InsertChannelConfig":                          702,
	"ConfigManager_UpdateChannelConfig":                          703,
	"ConfigManager_DeleteChannelConfig":                          704,
	"ConfigManager_GetProductConfig":                             705,
	"ConfigManager_InsertProductConfig":                          706,
	"ConfigManager_UpdateProductConfig":                          707,
	"ConfigManager_DeleteProductConfig":                          708,
	"OrderInfo_CreateOrder":                                      709,
	"OrderInfo_QueryOrderList":                                   710,
	"DaXuanRoute_GetRoomsDaXuan":                                 711,
	"LineGameRoute_Do":                                           712,
	"DaXuanRoute_GetGameReview":                                  713,
	"DaXuanRoute_GetRecord":                                      714,
	"Mining_GetMiningProgress":                                   715,
	"Mining_GetMining":                                           716,
	"DaXuanRoute_UpdTransactionPassword":                         717,
	"Sms_GetSmsCaptcha":                                          718,
	"Sms_BindMobile":                                             719,
}

func (x AuthorizationDef) String() string {
	return proto.EnumName(AuthorizationDef_name, int32(x))
}

func (AuthorizationDef) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{5}
}

type UserStatus int32

const (
	//无效
	UserStatus_invalid UserStatus = 0
	//正常
	UserStatus_normal UserStatus = 1
	//禁用
	UserStatus_disabled UserStatus = 2
	//删除
	UserStatus_deleted UserStatus = 3
)

var UserStatus_name = map[int32]string{
	0: "invalid",
	1: "normal",
	2: "disabled",
	3: "deleted",
}

var UserStatus_value = map[string]int32{
	"invalid":  0,
	"normal":   1,
	"disabled": 2,
	"deleted":  3,
}

func (x UserStatus) String() string {
	return proto.EnumName(UserStatus_name, int32(x))
}

func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{6}
}

// 游戏类型
type GameType int32

const (
	// 未知类型，用于容错
	GameType_None GameType = 0
	// 通比牛牛
	GameType_CompareBull GameType = 1
	//杠花麻将
	GameType_GangHuaMahjong GameType = 2
	//龙虎斗
	GameType_DragonTigerFight GameType = 3
	//连连看
	GameType_LinkUp GameType = 4
	// 百人牛牛
	GameType_HundredBull GameType = 5
	//疯狂牛牛
	GameType_CrazyBull GameType = 6
	//炸金花
	GameType_Jinhua GameType = 7
	//跑得快
	GameType_RunFast GameType = 8
	//十三水
	GameType_ShiSanShui GameType = 9
	//红黑
	GameType_RedBlack GameType = 10
	// 临沧麻将
	GameType_LinCangMahjong GameType = 11
	// 推筒子
	GameType_PushBobbin GameType = 12
	// 百家乐
	GameType_Baccarat GameType = 13
	// 双连
	GameType_DoubleLinked GameType = 14
	// 打旋
	GameType_DaXuan GameType = 15
	// 血战麻将
	GameType_XueZhanMahjong GameType = 16
	// 消消乐
	GameType_ClearJoy GameType = 17
	// 奔驰宝马
	GameType_BenzBMW GameType = 18
	// 连线游戏
	GameType_LineGame GameType = 19
	// 宝石大战
	GameType_GemWars GameType = 20
)

var GameType_name = map[int32]string{
	0:  "None",
	1:  "CompareBull",
	2:  "GangHuaMahjong",
	3:  "DragonTigerFight",
	4:  "LinkUp",
	5:  "HundredBull",
	6:  "CrazyBull",
	7:  "Jinhua",
	8:  "RunFast",
	9:  "ShiSanShui",
	10: "RedBlack",
	11: "LinCangMahjong",
	12: "PushBobbin",
	13: "Baccarat",
	14: "DoubleLinked",
	15: "DaXuan",
	16: "XueZhanMahjong",
	17: "ClearJoy",
	18: "BenzBMW",
	19: "LineGame",
	20: "GemWars",
}

var GameType_value = map[string]int32{
	"None":             0,
	"CompareBull":      1,
	"GangHuaMahjong":   2,
	"DragonTigerFight": 3,
	"LinkUp":           4,
	"HundredBull":      5,
	"CrazyBull":        6,
	"Jinhua":           7,
	"RunFast":          8,
	"ShiSanShui":       9,
	"RedBlack":         10,
	"LinCangMahjong":   11,
	"PushBobbin":       12,
	"Baccarat":         13,
	"DoubleLinked":     14,
	"DaXuan":           15,
	"XueZhanMahjong":   16,
	"ClearJoy":         17,
	"BenzBMW":          18,
	"LineGame":         19,
	"GemWars":          20,
}

func (x GameType) String() string {
	return proto.EnumName(GameType_name, int32(x))
}

func (GameType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{7}
}

// 房间状态
type RoomState int32

const (
	// 未知类型，用于容错
	RoomState_RoomStateNone RoomState = 0
	// 房间准备中状态
	RoomState_RoomStateReady RoomState = 1
	// 房间发牌状态
	RoomState_RoomStateDeal RoomState = 2
	// 房间游戏中状态
	RoomState_RoomStatePlay RoomState = 3
	// 房间结算中状态
	RoomState_RoomStateSettle RoomState = 4
	// 房间下注状态
	RoomState_RoomStateBet RoomState = 5
	// 房间空闲状态（百人牛牛）
	RoomState_RoomStateFree RoomState = 6
	// 房间定位开牌位置状态（百人牛牛）
	RoomState_RoomStateLocation RoomState = 7
	// 房间抢庄状态
	RoomState_RoomStateRushVillage RoomState = 8
	// 房间比牌状态
	RoomState_RoomStateCompare RoomState = 9
	// 房间捞状态(双连)
	RoomState_RoomStateLao RoomState = 10
	// 房间捞状态(庄)
	RoomState_RoomStateZhuangLao RoomState = 11
	// 房间庄家改变阶段
	RoomState_RoomStateBankChange RoomState = 12
	// 房间打骰子(麻将)
	RoomState_RoomStatePlayDice RoomState = 13
	// 房间换三张
	RoomState_RoomStateChangeThreeCards RoomState = 14
	// 房间定缺(麻将)
	RoomState_RoomStateBlankSuit RoomState = 15
	// 房间搓牌
	RoomState_RoomStateRubbingCards RoomState = 16
	// 房间分牌状态(扯璇)
	RoomState_RoomStatePart RoomState = 17
	// 房间大结算状态
	RoomState_RoomStateAllSettle RoomState = 18
)

var RoomState_name = map[int32]string{
	0:  "RoomStateNone",
	1:  "RoomStateReady",
	2:  "RoomStateDeal",
	3:  "RoomStatePlay",
	4:  "RoomStateSettle",
	5:  "RoomStateBet",
	6:  "RoomStateFree",
	7:  "RoomStateLocation",
	8:  "RoomStateRushVillage",
	9:  "RoomStateCompare",
	10: "RoomStateLao",
	11: "RoomStateZhuangLao",
	12: "RoomStateBankChange",
	13: "RoomStatePlayDice",
	14: "RoomStateChangeThreeCards",
	15: "RoomStateBlankSuit",
	16: "RoomStateRubbingCards",
	17: "RoomStatePart",
	18: "RoomStateAllSettle",
}

var RoomState_value = map[string]int32{
	"RoomStateNone":             0,
	"RoomStateReady":            1,
	"RoomStateDeal":             2,
	"RoomStatePlay":             3,
	"RoomStateSettle":           4,
	"RoomStateBet":              5,
	"RoomStateFree":             6,
	"RoomStateLocation":         7,
	"RoomStateRushVillage":      8,
	"RoomStateCompare":          9,
	"RoomStateLao":              10,
	"RoomStateZhuangLao":        11,
	"RoomStateBankChange":       12,
	"RoomStatePlayDice":         13,
	"RoomStateChangeThreeCards": 14,
	"RoomStateBlankSuit":        15,
	"RoomStateRubbingCards":     16,
	"RoomStatePart":             17,
	"RoomStateAllSettle":        18,
}

func (x RoomState) String() string {
	return proto.EnumName(RoomState_name, int32(x))
}

func (RoomState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{8}
}

// 房间中的玩家状态
type PlayerRoomState int32

const (
	// 未知类型，用于容错
	PlayerRoomState_PlayerRoomStateNone PlayerRoomState = 0
	// 玩家空闲中
	PlayerRoomState_PlayerRoomStateFree PlayerRoomState = 1
	// 玩家准备中
	PlayerRoomState_PlayerRoomStateReady PlayerRoomState = 2
	// 玩家游戏中 （百人场，玩家有上庄，下注等行为时也是这个状态，这个状态下玩家不能退出房间）
	PlayerRoomState_PlayerRoomStatePlay PlayerRoomState = 3
	// 玩家观战中
	PlayerRoomState_PlayerRoomStateWatch PlayerRoomState = 4
	// 玩家选择操作中（如：碰，杠，和等操作）
	PlayerRoomState_PlayerRoomStateOperate PlayerRoomState = 5
	// 玩家抢庄中
	PlayerRoomState_PlayerRoomStateRushVillage PlayerRoomState = 6
	// 玩家留座中
	PlayerRoomState_PlayerRoomStateKeepSeat PlayerRoomState = 7
)

var PlayerRoomState_name = map[int32]string{
	0: "PlayerRoomStateNone",
	1: "PlayerRoomStateFree",
	2: "PlayerRoomStateReady",
	3: "PlayerRoomStatePlay",
	4: "PlayerRoomStateWatch",
	5: "PlayerRoomStateOperate",
	6: "PlayerRoomStateRushVillage",
	7: "PlayerRoomStateKeepSeat",
}

var PlayerRoomState_value = map[string]int32{
	"PlayerRoomStateNone":        0,
	"PlayerRoomStateFree":        1,
	"PlayerRoomStateReady":       2,
	"PlayerRoomStatePlay":        3,
	"PlayerRoomStateWatch":       4,
	"PlayerRoomStateOperate":     5,
	"PlayerRoomStateRushVillage": 6,
	"PlayerRoomStateKeepSeat":    7,
}

func (x PlayerRoomState) String() string {
	return proto.EnumName(PlayerRoomState_name, int32(x))
}

func (PlayerRoomState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{9}
}

// 扑克牌面值
type PokerNum int32

const (
	// 未知类型，用于容错
	PokerNum_PokerNumNone       PokerNum = 0
	PokerNum_PokerNum1          PokerNum = 1
	PokerNum_PokerNum2          PokerNum = 2
	PokerNum_PokerNum3          PokerNum = 3
	PokerNum_PokerNum4          PokerNum = 4
	PokerNum_PokerNum5          PokerNum = 5
	PokerNum_PokerNum6          PokerNum = 6
	PokerNum_PokerNum7          PokerNum = 7
	PokerNum_PokerNum8          PokerNum = 8
	PokerNum_PokerNum9          PokerNum = 9
	PokerNum_PokerNum10         PokerNum = 10
	PokerNum_PokerNumJ          PokerNum = 11
	PokerNum_PokerNumQ          PokerNum = 12
	PokerNum_PokerNumK          PokerNum = 13
	PokerNum_PokerNumSmallJoker PokerNum = 20
	PokerNum_PokerNumBigJoker   PokerNum = 21
)

var PokerNum_name = map[int32]string{
	0:  "PokerNumNone",
	1:  "PokerNum1",
	2:  "PokerNum2",
	3:  "PokerNum3",
	4:  "PokerNum4",
	5:  "PokerNum5",
	6:  "PokerNum6",
	7:  "PokerNum7",
	8:  "PokerNum8",
	9:  "PokerNum9",
	10: "PokerNum10",
	11: "PokerNumJ",
	12: "PokerNumQ",
	13: "PokerNumK",
	20: "PokerNumSmallJoker",
	21: "PokerNumBigJoker",
}

var PokerNum_value = map[string]int32{
	"PokerNumNone":       0,
	"PokerNum1":          1,
	"PokerNum2":          2,
	"PokerNum3":          3,
	"PokerNum4":          4,
	"PokerNum5":          5,
	"PokerNum6":          6,
	"PokerNum7":          7,
	"PokerNum8":          8,
	"PokerNum9":          9,
	"PokerNum10":         10,
	"PokerNumJ":          11,
	"PokerNumQ":          12,
	"PokerNumK":          13,
	"PokerNumSmallJoker": 20,
	"PokerNumBigJoker":   21,
}

func (x PokerNum) String() string {
	return proto.EnumName(PokerNum_name, int32(x))
}

func (PokerNum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{10}
}

// 扑克牌花色
type PokerColor int32

const (
	// 未知类型，用于容错
	PokerColor_PokerColorNone PokerColor = 0
	// 方块
	PokerColor_PokerColorDiamond PokerColor = 1
	// 梅花
	PokerColor_PokerColorClub PokerColor = 2
	// 红桃
	PokerColor_PokerColorHeart PokerColor = 3
	// 黑桃
	PokerColor_PokerColorSpade PokerColor = 4
)

var PokerColor_name = map[int32]string{
	0: "PokerColorNone",
	1: "PokerColorDiamond",
	2: "PokerColorClub",
	3: "PokerColorHeart",
	4: "PokerColorSpade",
}

var PokerColor_value = map[string]int32{
	"PokerColorNone":    0,
	"PokerColorDiamond": 1,
	"PokerColorClub":    2,
	"PokerColorHeart":   3,
	"PokerColorSpade":   4,
}

func (x PokerColor) String() string {
	return proto.EnumName(PokerColor_name, int32(x))
}

func (PokerColor) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{11}
}

// 麻将牌花色
type MahjongColor int32

const (
	// 未知类型，用于容错
	MahjongColor_MahjongColorNone MahjongColor = 0
	// 筒
	MahjongColor_MahjongColorDot MahjongColor = 1
	// 条
	MahjongColor_MahjongColorBamboo MahjongColor = 2
	// 万
	MahjongColor_MahjongColorCharacter MahjongColor = 3
	// 箭牌：中、发、白，各4张，共12张
	MahjongColor_MahjongColorDragon MahjongColor = 4
	// 风牌：东、西、南、北，各4张，共16张
	MahjongColor_MahjongColorWind MahjongColor = 5
	// 花牌: 春、夏、秋、冬，梅、兰、竹、菊，各一张，共8张
	MahjongColor_MahjongColorFlower MahjongColor = 6
)

var MahjongColor_name = map[int32]string{
	0: "MahjongColorNone",
	1: "MahjongColorDot",
	2: "MahjongColorBamboo",
	3: "MahjongColorCharacter",
	4: "MahjongColorDragon",
	5: "MahjongColorWind",
	6: "MahjongColorFlower",
}

var MahjongColor_value = map[string]int32{
	"MahjongColorNone":      0,
	"MahjongColorDot":       1,
	"MahjongColorBamboo":    2,
	"MahjongColorCharacter": 3,
	"MahjongColorDragon":    4,
	"MahjongColorWind":      5,
	"MahjongColorFlower":    6,
}

func (x MahjongColor) String() string {
	return proto.EnumName(MahjongColor_name, int32(x))
}

func (MahjongColor) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{12}
}

// 麻将牌面值
type MahjongNum int32

const (
	// 当麻将花色为箭牌、风牌时，箭牌(1:红中,2:白板,3:发财);风牌(1:东风,2:南风,3:西风,4:北风)
	MahjongNum_MahjongNumNone MahjongNum = 0
	MahjongNum_MahjongNum1    MahjongNum = 1
	MahjongNum_MahjongNum2    MahjongNum = 2
	MahjongNum_MahjongNum3    MahjongNum = 3
	MahjongNum_MahjongNum4    MahjongNum = 4
	MahjongNum_MahjongNum5    MahjongNum = 5
	MahjongNum_MahjongNum6    MahjongNum = 6
	MahjongNum_MahjongNum7    MahjongNum = 7
	MahjongNum_MahjongNum8    MahjongNum = 8
	MahjongNum_MahjongNum9    MahjongNum = 9
)

var MahjongNum_name = map[int32]string{
	0: "MahjongNumNone",
	1: "MahjongNum1",
	2: "MahjongNum2",
	3: "MahjongNum3",
	4: "MahjongNum4",
	5: "MahjongNum5",
	6: "MahjongNum6",
	7: "MahjongNum7",
	8: "MahjongNum8",
	9: "MahjongNum9",
}

var MahjongNum_value = map[string]int32{
	"MahjongNumNone": 0,
	"MahjongNum1":    1,
	"MahjongNum2":    2,
	"MahjongNum3":    3,
	"MahjongNum4":    4,
	"MahjongNum5":    5,
	"MahjongNum6":    6,
	"MahjongNum7":    7,
	"MahjongNum8":    8,
	"MahjongNum9":    9,
}

func (x MahjongNum) String() string {
	return proto.EnumName(MahjongNum_name, int32(x))
}

func (MahjongNum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{13}
}

// 杠花麻将胡牌大类型
type GangHuaMahjongWinType int32

const (
	//无效
	GangHuaMahjongWinType_GangHuaMahjongWinType_invalid GangHuaMahjongWinType = 0
	// 3N + 2 普通胡牌
	GangHuaMahjongWinType_normalWin GangHuaMahjongWinType = 1
	// 对对胡
	GangHuaMahjongWinType_WinningWithAllPairedTiles GangHuaMahjongWinType = 2
	// 小7对
	GangHuaMahjongWinType_SevenPairs GangHuaMahjongWinType = 3
	// 小7对龙爪背
	GangHuaMahjongWinType_SevenPairsOfDragonClawBack GangHuaMahjongWinType = 4
)

var GangHuaMahjongWinType_name = map[int32]string{
	0: "GangHuaMahjongWinType_invalid",
	1: "normalWin",
	2: "WinningWithAllPairedTiles",
	3: "SevenPairs",
	4: "SevenPairsOfDragonClawBack",
}

var GangHuaMahjongWinType_value = map[string]int32{
	"GangHuaMahjongWinType_invalid": 0,
	"normalWin":                     1,
	"WinningWithAllPairedTiles":     2,
	"SevenPairs":                    3,
	"SevenPairsOfDragonClawBack":    4,
}

func (x GangHuaMahjongWinType) String() string {
	return proto.EnumName(GangHuaMahjongWinType_name, int32(x))
}

func (GangHuaMahjongWinType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{14}
}

// 杠花麻将胡牌番种
type GangHuaMahjongWinKind int32

const (
	//无效
	GangHuaMahjongWinKind_GangHuaMahjongWinKind_invalid GangHuaMahjongWinKind = 0
	// 天胡
	GangHuaMahjongWinKind_NaturalWin GangHuaMahjongWinKind = 1
	// 地胡
	GangHuaMahjongWinKind_EarthlyHand GangHuaMahjongWinKind = 2
	// 杠上花
	GangHuaMahjongWinKind_AfterAGang GangHuaMahjongWinKind = 3
	// 两杠上花
	GangHuaMahjongWinKind_AfterTwoGang GangHuaMahjongWinKind = 4
	// 三杠上花
	GangHuaMahjongWinKind_AfterThreeGang GangHuaMahjongWinKind = 5
	// 绝卡张
	GangHuaMahjongWinKind_UniqueKaZhang GangHuaMahjongWinKind = 6
	// 清一色
	GangHuaMahjongWinKind_AllOfOneSuit GangHuaMahjongWinKind = 7
)

var GangHuaMahjongWinKind_name = map[int32]string{
	0: "GangHuaMahjongWinKind_invalid",
	1: "NaturalWin",
	2: "EarthlyHand",
	3: "AfterAGang",
	4: "AfterTwoGang",
	5: "AfterThreeGang",
	6: "UniqueKaZhang",
	7: "AllOfOneSuit",
}

var GangHuaMahjongWinKind_value = map[string]int32{
	"GangHuaMahjongWinKind_invalid": 0,
	"NaturalWin":                    1,
	"EarthlyHand":                   2,
	"AfterAGang":                    3,
	"AfterTwoGang":                  4,
	"AfterThreeGang":                5,
	"UniqueKaZhang":                 6,
	"AllOfOneSuit":                  7,
}

func (x GangHuaMahjongWinKind) String() string {
	return proto.EnumName(GangHuaMahjongWinKind_name, int32(x))
}

func (GangHuaMahjongWinKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{15}
}

type GangHuaMahjongUserLastStatus int32

const (
	//无效
	GangHuaMahjongUserLastStatus_GangHuaMahjongUserLastStatus_invalid GangHuaMahjongUserLastStatus = 0
	//点炮
	GangHuaMahjongUserLastStatus_discard GangHuaMahjongUserLastStatus = 1
	//点炮胡/截胡
	GangHuaMahjongUserLastStatus_winByDiscard GangHuaMahjongUserLastStatus = 3
	//自摸胡
	GangHuaMahjongUserLastStatus_winBySelfDrawn GangHuaMahjongUserLastStatus = 4
	//输状态
	GangHuaMahjongUserLastStatus_lose GangHuaMahjongUserLastStatus = 5
)

var GangHuaMahjongUserLastStatus_name = map[int32]string{
	0: "GangHuaMahjongUserLastStatus_invalid",
	1: "discard",
	3: "winByDiscard",
	4: "winBySelfDrawn",
	5: "lose",
}

var GangHuaMahjongUserLastStatus_value = map[string]int32{
	"GangHuaMahjongUserLastStatus_invalid": 0,
	"discard":                              1,
	"winByDiscard":                         3,
	"winBySelfDrawn":                       4,
	"lose":                                 5,
}

func (x GangHuaMahjongUserLastStatus) String() string {
	return proto.EnumName(GangHuaMahjongUserLastStatus_name, int32(x))
}

func (GangHuaMahjongUserLastStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{16}
}

//金花出局类型
type JinhuaOutType int32

const (
	JinhuaOutType_JinhuaOutType_None JinhuaOutType = 0
	//玩家弃牌
	JinhuaOutType_JinhuaOutType_Fold JinhuaOutType = 1
	//玩家比牌
	JinhuaOutType_JinhuaOutType_Compare JinhuaOutType = 2
)

var JinhuaOutType_name = map[int32]string{
	0: "JinhuaOutType_None",
	1: "JinhuaOutType_Fold",
	2: "JinhuaOutType_Compare",
}

var JinhuaOutType_value = map[string]int32{
	"JinhuaOutType_None":    0,
	"JinhuaOutType_Fold":    1,
	"JinhuaOutType_Compare": 2,
}

func (x JinhuaOutType) String() string {
	return proto.EnumName(JinhuaOutType_name, int32(x))
}

func (JinhuaOutType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{17}
}

// 支付状态
type PayStatus int32

const (
	// 容错类型
	PayStatus_PayStatus_None PayStatus = 0
	// 等待支付中
	PayStatus_PayStatus_Wait PayStatus = 1
	// 支付成功
	PayStatus_PayStatus_Success PayStatus = 2
	// 支付失败
	PayStatus_PayStatus_Fail PayStatus = 3
)

var PayStatus_name = map[int32]string{
	0: "PayStatus_None",
	1: "PayStatus_Wait",
	2: "PayStatus_Success",
	3: "PayStatus_Fail",
}

var PayStatus_value = map[string]int32{
	"PayStatus_None":    0,
	"PayStatus_Wait":    1,
	"PayStatus_Success": 2,
	"PayStatus_Fail":    3,
}

func (x PayStatus) String() string {
	return proto.EnumName(PayStatus_name, int32(x))
}

func (PayStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{18}
}

// 支付类型
type PayType int32

const (
	// 容错类型
	PayType_PayType_None PayType = 0
	// 房主支付
	PayType_PayType_MasterPay PayType = 1
	// aa支付
	PayType_PayType_AA PayType = 2
)

var PayType_name = map[int32]string{
	0: "PayType_None",
	1: "PayType_MasterPay",
	2: "PayType_AA",
}

var PayType_value = map[string]int32{
	"PayType_None":      0,
	"PayType_MasterPay": 1,
	"PayType_AA":        2,
}

func (x PayType) String() string {
	return proto.EnumName(PayType_name, int32(x))
}

func (PayType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{19}
}

// 房间的类型
type RoomType int32

const (
	// 容错类型
	RoomType_RoomType_None RoomType = 0
	// 普通房间，由系统创建的房间
	RoomType_RoomType_Normal RoomType = 1
	// 玩家自建房
	RoomType_RoomType_PlayerRoom RoomType = 2
	// 俱乐部房间
	RoomType_RoomType_ClubRoom RoomType = 3
	// 联盟房间
	RoomType_RoomType_LeagueRoom RoomType = 4
	// 系统自建房
	RoomType_RoomType_SystemRoom RoomType = 5
)

var RoomType_name = map[int32]string{
	0: "RoomType_None",
	1: "RoomType_Normal",
	2: "RoomType_PlayerRoom",
	3: "RoomType_ClubRoom",
	4: "RoomType_LeagueRoom",
	5: "RoomType_SystemRoom",
}

var RoomType_value = map[string]int32{
	"RoomType_None":       0,
	"RoomType_Normal":     1,
	"RoomType_PlayerRoom": 2,
	"RoomType_ClubRoom":   3,
	"RoomType_LeagueRoom": 4,
	"RoomType_SystemRoom": 5,
}

func (x RoomType) String() string {
	return proto.EnumName(RoomType_name, int32(x))
}

func (RoomType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{20}
}

// 游戏类型通比牛牛的操作类型
type CompareBullDoType int32

const (
	// 未知类型，用于容错
	CompareBullDoType_CompareBullDo_None CompareBullDoType = 0
	// 通比牛牛加入房间
	CompareBullDoType_CompareBullDo_JoinRoom CompareBullDoType = 1
	// 通比牛牛退出房间
	CompareBullDoType_CompareBullDo_ExitRoom CompareBullDoType = 2
	// 通比牛牛改变玩家状态
	CompareBullDoType_CompareBullDo_ChangeState CompareBullDoType = 3
	// 通比牛牛玩家开牌
	CompareBullDoType_CompareBullDo_OpenCard CompareBullDoType = 4
	// 通比牛牛创建房间
	CompareBullDoType_CompareBullDo_CreateRoom CompareBullDoType = 5
	// 通比牛牛房卡场开始游戏
	CompareBullDoType_CompareBullDo_StartRoom CompareBullDoType = 6
)

var CompareBullDoType_name = map[int32]string{
	0: "CompareBullDo_None",
	1: "CompareBullDo_JoinRoom",
	2: "CompareBullDo_ExitRoom",
	3: "CompareBullDo_ChangeState",
	4: "CompareBullDo_OpenCard",
	5: "CompareBullDo_CreateRoom",
	6: "CompareBullDo_StartRoom",
}

var CompareBullDoType_value = map[string]int32{
	"CompareBullDo_None":        0,
	"CompareBullDo_JoinRoom":    1,
	"CompareBullDo_ExitRoom":    2,
	"CompareBullDo_ChangeState": 3,
	"CompareBullDo_OpenCard":    4,
	"CompareBullDo_CreateRoom":  5,
	"CompareBullDo_StartRoom":   6,
}

func (x CompareBullDoType) String() string {
	return proto.EnumName(CompareBullDoType_name, int32(x))
}

func (CompareBullDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{21}
}

// 游戏类型疯狂牛牛的操作类型
type CrazyBullDoType int32

const (
	// 未知类型，用于容错
	CrazyBullDoType_CrazyBullDo_None CrazyBullDoType = 0
	// 疯狂牛牛加入房间
	CrazyBullDoType_CrazyBullDo_JoinRoom CrazyBullDoType = 1
	// 疯狂牛牛退出房间
	CrazyBullDoType_CrazyBullDo_ExitRoom CrazyBullDoType = 2
	// 疯狂牛牛改变玩家状态
	CrazyBullDoType_CrazyBullDo_ChangeState CrazyBullDoType = 3
	// 疯狂牛牛玩家开牌
	CrazyBullDoType_CrazyBullDo_OpenCard CrazyBullDoType = 4
	// 疯狂牛牛玩家抢庄
	CrazyBullDoType_CrazyBullDo_RushVillage CrazyBullDoType = 5
	// 疯狂牛牛玩家下注
	CrazyBullDoType_CrazyBullDo_Bets CrazyBullDoType = 6
	// 疯狂牛牛创建房间
	CrazyBullDoType_CrazyBullDo_CreateRoom CrazyBullDoType = 7
	// 疯狂牛牛房卡场开始游戏
	CrazyBullDoType_CrazyBullDo_StartRoom CrazyBullDoType = 8
	// 疯狂牛牛搓牌
	CrazyBullDoType_CrazyBullDo_RubbingCards CrazyBullDoType = 9
)

var CrazyBullDoType_name = map[int32]string{
	0: "CrazyBullDo_None",
	1: "CrazyBullDo_JoinRoom",
	2: "CrazyBullDo_ExitRoom",
	3: "CrazyBullDo_ChangeState",
	4: "CrazyBullDo_OpenCard",
	5: "CrazyBullDo_RushVillage",
	6: "CrazyBullDo_Bets",
	7: "CrazyBullDo_CreateRoom",
	8: "CrazyBullDo_StartRoom",
	9: "CrazyBullDo_RubbingCards",
}

var CrazyBullDoType_value = map[string]int32{
	"CrazyBullDo_None":         0,
	"CrazyBullDo_JoinRoom":     1,
	"CrazyBullDo_ExitRoom":     2,
	"CrazyBullDo_ChangeState":  3,
	"CrazyBullDo_OpenCard":     4,
	"CrazyBullDo_RushVillage":  5,
	"CrazyBullDo_Bets":         6,
	"CrazyBullDo_CreateRoom":   7,
	"CrazyBullDo_StartRoom":    8,
	"CrazyBullDo_RubbingCards": 9,
}

func (x CrazyBullDoType) String() string {
	return proto.EnumName(CrazyBullDoType_name, int32(x))
}

func (CrazyBullDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{22}
}

// 游戏类型双连的操作类型
type DoubleLinkedDoType int32

const (
	// 未知类型，用于容错
	DoubleLinkedDoType_DoubleLinkedDo_None DoubleLinkedDoType = 0
	// 双连加入房间
	DoubleLinkedDoType_DoubleLinkedDo_JoinRoom DoubleLinkedDoType = 1
	// 双连退出房间
	DoubleLinkedDoType_DoubleLinkedDo_ExitRoom DoubleLinkedDoType = 2
	// 双连改变玩家状态
	DoubleLinkedDoType_DoubleLinkedDo_ChangeState DoubleLinkedDoType = 3
	// 双连玩家开牌
	DoubleLinkedDoType_DoubleLinkedDo_OpenCard DoubleLinkedDoType = 4
	// 双连玩家抢庄
	DoubleLinkedDoType_DoubleLinkedDo_RushVillage DoubleLinkedDoType = 5
	// 双连玩家下注
	DoubleLinkedDoType_DoubleLinkedDo_Bets DoubleLinkedDoType = 6
	// 双连玩家捞牌
	DoubleLinkedDoType_DoubleLinkedDo_Lao DoubleLinkedDoType = 7
	// 双连创建房间
	DoubleLinkedDoType_DoubleLinkedDo_CreateRoom DoubleLinkedDoType = 8
	// 双连比牌
	DoubleLinkedDoType_DoubleLinkedDo_Poker DoubleLinkedDoType = 9
	// 双连房卡场开始游戏
	DoubleLinkedDoType_DoubleLinkedDo_StartRoom DoubleLinkedDoType = 10
	// 双连搓牌
	DoubleLinkedDoType_DoubleLinkedDo_RubbingCards DoubleLinkedDoType = 11
)

var DoubleLinkedDoType_name = map[int32]string{
	0:  "DoubleLinkedDo_None",
	1:  "DoubleLinkedDo_JoinRoom",
	2:  "DoubleLinkedDo_ExitRoom",
	3:  "DoubleLinkedDo_ChangeState",
	4:  "DoubleLinkedDo_OpenCard",
	5:  "DoubleLinkedDo_RushVillage",
	6:  "DoubleLinkedDo_Bets",
	7:  "DoubleLinkedDo_Lao",
	8:  "DoubleLinkedDo_CreateRoom",
	9:  "DoubleLinkedDo_Poker",
	10: "DoubleLinkedDo_StartRoom",
	11: "DoubleLinkedDo_RubbingCards",
}

var DoubleLinkedDoType_value = map[string]int32{
	"DoubleLinkedDo_None":         0,
	"DoubleLinkedDo_JoinRoom":     1,
	"DoubleLinkedDo_ExitRoom":     2,
	"DoubleLinkedDo_ChangeState":  3,
	"DoubleLinkedDo_OpenCard":     4,
	"DoubleLinkedDo_RushVillage":  5,
	"DoubleLinkedDo_Bets":         6,
	"DoubleLinkedDo_Lao":          7,
	"DoubleLinkedDo_CreateRoom":   8,
	"DoubleLinkedDo_Poker":        9,
	"DoubleLinkedDo_StartRoom":    10,
	"DoubleLinkedDo_RubbingCards": 11,
}

func (x DoubleLinkedDoType) String() string {
	return proto.EnumName(DoubleLinkedDoType_name, int32(x))
}

func (DoubleLinkedDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{23}
}

// 游戏类型百家乐的操作类型
type BaccaratDoType int32

const (
	// 未知类型，用于容错
	BaccaratDoType_BaccaratDo_None BaccaratDoType = 0
	// 百家乐加入房间
	BaccaratDoType_BaccaratDo_JoinRoom BaccaratDoType = 1
	// 百家乐退出房间
	BaccaratDoType_BaccaratDo_ExitRoom BaccaratDoType = 2
	// 百家乐改变玩家状态
	BaccaratDoType_BaccaratDo_ChangeState BaccaratDoType = 3
	// 百家乐玩家上庄
	BaccaratDoType_BaccaratDo_RushVillage BaccaratDoType = 4
	// 百家乐玩家下注
	BaccaratDoType_BaccaratDo_Bets BaccaratDoType = 5
	// 百家乐玩家下庄
	BaccaratDoType_BaccaratDo_RushVillageDown BaccaratDoType = 6
)

var BaccaratDoType_name = map[int32]string{
	0: "BaccaratDo_None",
	1: "BaccaratDo_JoinRoom",
	2: "BaccaratDo_ExitRoom",
	3: "BaccaratDo_ChangeState",
	4: "BaccaratDo_RushVillage",
	5: "BaccaratDo_Bets",
	6: "BaccaratDo_RushVillageDown",
}

var BaccaratDoType_value = map[string]int32{
	"BaccaratDo_None":            0,
	"BaccaratDo_JoinRoom":        1,
	"BaccaratDo_ExitRoom":        2,
	"BaccaratDo_ChangeState":     3,
	"BaccaratDo_RushVillage":     4,
	"BaccaratDo_Bets":            5,
	"BaccaratDo_RushVillageDown": 6,
}

func (x BaccaratDoType) String() string {
	return proto.EnumName(BaccaratDoType_name, int32(x))
}

func (BaccaratDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{24}
}

// 牛牛的牌型
type CompareBullPokerType int32

const (
	// 未知类型，用于容错,也表示无牛
	CompareBullPokerType_CompareBullCardType_None CompareBullPokerType = 0
	// 普通牛的类型
	// 牛1
	CompareBullPokerType_CompareBullCardType_Bull1 CompareBullPokerType = 1
	CompareBullPokerType_CompareBullCardType_Bull2 CompareBullPokerType = 2
	CompareBullPokerType_CompareBullCardType_Bull3 CompareBullPokerType = 3
	CompareBullPokerType_CompareBullCardType_Bull4 CompareBullPokerType = 4
	CompareBullPokerType_CompareBullCardType_Bull5 CompareBullPokerType = 5
	CompareBullPokerType_CompareBullCardType_Bull6 CompareBullPokerType = 6
	CompareBullPokerType_CompareBullCardType_Bull7 CompareBullPokerType = 7
	CompareBullPokerType_CompareBullCardType_Bull8 CompareBullPokerType = 8
	CompareBullPokerType_CompareBullCardType_Bull9 CompareBullPokerType = 9
	// 牛牛
	CompareBullPokerType_CompareBullCardType_BullBull CompareBullPokerType = 100
	// 五小牛
	CompareBullPokerType_CompareBullCardType_LittleBull CompareBullPokerType = 200
)

var CompareBullPokerType_name = map[int32]string{
	0:   "CompareBullCardType_None",
	1:   "CompareBullCardType_Bull1",
	2:   "CompareBullCardType_Bull2",
	3:   "CompareBullCardType_Bull3",
	4:   "CompareBullCardType_Bull4",
	5:   "CompareBullCardType_Bull5",
	6:   "CompareBullCardType_Bull6",
	7:   "CompareBullCardType_Bull7",
	8:   "CompareBullCardType_Bull8",
	9:   "CompareBullCardType_Bull9",
	100: "CompareBullCardType_BullBull",
	200: "CompareBullCardType_LittleBull",
}

var CompareBullPokerType_value = map[string]int32{
	"CompareBullCardType_None":       0,
	"CompareBullCardType_Bull1":      1,
	"CompareBullCardType_Bull2":      2,
	"CompareBullCardType_Bull3":      3,
	"CompareBullCardType_Bull4":      4,
	"CompareBullCardType_Bull5":      5,
	"CompareBullCardType_Bull6":      6,
	"CompareBullCardType_Bull7":      7,
	"CompareBullCardType_Bull8":      8,
	"CompareBullCardType_Bull9":      9,
	"CompareBullCardType_BullBull":   100,
	"CompareBullCardType_LittleBull": 200,
}

func (x CompareBullPokerType) String() string {
	return proto.EnumName(CompareBullPokerType_name, int32(x))
}

func (CompareBullPokerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{25}
}

// 疯狂牛牛的牌型倍数
type CrazyBullPokerType int32

const (
	// 未知类型，用于容错
	CrazyBullPokerType_CrazyBullCardType_None CrazyBullPokerType = 0
	// 普通牛的类型
	//无牛和牛一表示一倍
	CrazyBullPokerType_CrazyBullCardType_Bull1 CrazyBullPokerType = 1
	CrazyBullPokerType_CrazyBullCardType_Bull2 CrazyBullPokerType = 2
	CrazyBullPokerType_CrazyBullCardType_Bull3 CrazyBullPokerType = 3
	CrazyBullPokerType_CrazyBullCardType_Bull4 CrazyBullPokerType = 4
	CrazyBullPokerType_CrazyBullCardType_Bull5 CrazyBullPokerType = 5
	CrazyBullPokerType_CrazyBullCardType_Bull6 CrazyBullPokerType = 6
	CrazyBullPokerType_CrazyBullCardType_Bull7 CrazyBullPokerType = 7
	CrazyBullPokerType_CrazyBullCardType_Bull8 CrazyBullPokerType = 8
	CrazyBullPokerType_CrazyBullCardType_Bull9 CrazyBullPokerType = 9
	// 牛牛
	CrazyBullPokerType_CrazyBullCardType_BullBull CrazyBullPokerType = 10
	// 五小牛
	CrazyBullPokerType_CrazyBullCardType_LittleBull CrazyBullPokerType = 16
	// 炸弹牛
	CrazyBullPokerType_CrazyBullCardType_BoomBull CrazyBullPokerType = 15
	// 同花牛
	CrazyBullPokerType_CrazyBullCardType_SameFlowerBull CrazyBullPokerType = 14
	// 葫芦牛
	CrazyBullPokerType_CrazyBullCardType_GourdBull CrazyBullPokerType = 13
	// 顺子牛
	CrazyBullPokerType_CrazyBullCardType_AlongBull CrazyBullPokerType = 12
	// 五花牛
	CrazyBullPokerType_CrazyBullCardType_StreakyBull CrazyBullPokerType = 11
	// 同花顺牛
	CrazyBullPokerType_CrazyBullCardType_FlushBull CrazyBullPokerType = 17
)

var CrazyBullPokerType_name = map[int32]string{
	0:  "CrazyBullCardType_None",
	1:  "CrazyBullCardType_Bull1",
	2:  "CrazyBullCardType_Bull2",
	3:  "CrazyBullCardType_Bull3",
	4:  "CrazyBullCardType_Bull4",
	5:  "CrazyBullCardType_Bull5",
	6:  "CrazyBullCardType_Bull6",
	7:  "CrazyBullCardType_Bull7",
	8:  "CrazyBullCardType_Bull8",
	9:  "CrazyBullCardType_Bull9",
	10: "CrazyBullCardType_BullBull",
	16: "CrazyBullCardType_LittleBull",
	15: "CrazyBullCardType_BoomBull",
	14: "CrazyBullCardType_SameFlowerBull",
	13: "CrazyBullCardType_GourdBull",
	12: "CrazyBullCardType_AlongBull",
	11: "CrazyBullCardType_StreakyBull",
	17: "CrazyBullCardType_FlushBull",
}

var CrazyBullPokerType_value = map[string]int32{
	"CrazyBullCardType_None":           0,
	"CrazyBullCardType_Bull1":          1,
	"CrazyBullCardType_Bull2":          2,
	"CrazyBullCardType_Bull3":          3,
	"CrazyBullCardType_Bull4":          4,
	"CrazyBullCardType_Bull5":          5,
	"CrazyBullCardType_Bull6":          6,
	"CrazyBullCardType_Bull7":          7,
	"CrazyBullCardType_Bull8":          8,
	"CrazyBullCardType_Bull9":          9,
	"CrazyBullCardType_BullBull":       10,
	"CrazyBullCardType_LittleBull":     16,
	"CrazyBullCardType_BoomBull":       15,
	"CrazyBullCardType_SameFlowerBull": 14,
	"CrazyBullCardType_GourdBull":      13,
	"CrazyBullCardType_AlongBull":      12,
	"CrazyBullCardType_StreakyBull":    11,
	"CrazyBullCardType_FlushBull":      17,
}

func (x CrazyBullPokerType) String() string {
	return proto.EnumName(CrazyBullPokerType_name, int32(x))
}

func (CrazyBullPokerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{26}
}

// 双连的牌型倍数
type DoubleLinkedPokerType int32

const (
	// 未知类型，用于容错
	DoubleLinkedPokerType_DoubleLinkedCardType_None DoubleLinkedPokerType = 0
	//双联
	DoubleLinkedPokerType_DoubleLinkedCardType_DoubleLink DoubleLinkedPokerType = 1
	//三联
	DoubleLinkedPokerType_DoubleLinkedCardType_Trio DoubleLinkedPokerType = 2
	//对子
	DoubleLinkedPokerType_DoubleLinkedCardType_Pair DoubleLinkedPokerType = 3
	//三嘎啦
	DoubleLinkedPokerType_DoubleLinkedCardType_3GaLa DoubleLinkedPokerType = 4
	//杂色拖拉机
	DoubleLinkedPokerType_DoubleLinkedCardType_TuoLaJi DoubleLinkedPokerType = 5
	//清拖拉机
	DoubleLinkedPokerType_DoubleLinkedCardType_QingTuoLaJi DoubleLinkedPokerType = 6
	//3P
	DoubleLinkedPokerType_DoubleLinkedCardType_3P DoubleLinkedPokerType = 7
)

var DoubleLinkedPokerType_name = map[int32]string{
	0: "DoubleLinkedCardType_None",
	1: "DoubleLinkedCardType_DoubleLink",
	2: "DoubleLinkedCardType_Trio",
	3: "DoubleLinkedCardType_Pair",
	4: "DoubleLinkedCardType_3GaLa",
	5: "DoubleLinkedCardType_TuoLaJi",
	6: "DoubleLinkedCardType_QingTuoLaJi",
	7: "DoubleLinkedCardType_3P",
}

var DoubleLinkedPokerType_value = map[string]int32{
	"DoubleLinkedCardType_None":        0,
	"DoubleLinkedCardType_DoubleLink":  1,
	"DoubleLinkedCardType_Trio":        2,
	"DoubleLinkedCardType_Pair":        3,
	"DoubleLinkedCardType_3GaLa":       4,
	"DoubleLinkedCardType_TuoLaJi":     5,
	"DoubleLinkedCardType_QingTuoLaJi": 6,
	"DoubleLinkedCardType_3P":          7,
}

func (x DoubleLinkedPokerType) String() string {
	return proto.EnumName(DoubleLinkedPokerType_name, int32(x))
}

func (DoubleLinkedPokerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{27}
}

// 玩家座位变动原因
type RoomSeatsChangeReason int32

const (
	// 未知类型，用于容错
	RoomSeatsChangeReason_RoomSeatsChangeReason_None RoomSeatsChangeReason = 0
	// 加入房间
	RoomSeatsChangeReason_RoomSeatsChangeReason_Join RoomSeatsChangeReason = 1
	// 退出房间
	RoomSeatsChangeReason_RoomSeatsChangeReason_Exit RoomSeatsChangeReason = 2
	// 长时间不准备踢出房间
	RoomSeatsChangeReason_RoomSeatsChangeReason_KickNotReady RoomSeatsChangeReason = 3
	// 余额不足踢出房间
	RoomSeatsChangeReason_RoomSeatsChangeReason_KickNoBalance RoomSeatsChangeReason = 4
	// 离线了踢出房间
	RoomSeatsChangeReason_RoomSeatsChangeReason_KickDisconnect RoomSeatsChangeReason = 5
	// 房间解散
	RoomSeatsChangeReason_RoomSeatsChangeReason_RoomDisSolve RoomSeatsChangeReason = 6
)

var RoomSeatsChangeReason_name = map[int32]string{
	0: "RoomSeatsChangeReason_None",
	1: "RoomSeatsChangeReason_Join",
	2: "RoomSeatsChangeReason_Exit",
	3: "RoomSeatsChangeReason_KickNotReady",
	4: "RoomSeatsChangeReason_KickNoBalance",
	5: "RoomSeatsChangeReason_KickDisconnect",
	6: "RoomSeatsChangeReason_RoomDisSolve",
}

var RoomSeatsChangeReason_value = map[string]int32{
	"RoomSeatsChangeReason_None":           0,
	"RoomSeatsChangeReason_Join":           1,
	"RoomSeatsChangeReason_Exit":           2,
	"RoomSeatsChangeReason_KickNotReady":   3,
	"RoomSeatsChangeReason_KickNoBalance":  4,
	"RoomSeatsChangeReason_KickDisconnect": 5,
	"RoomSeatsChangeReason_RoomDisSolve":   6,
}

func (x RoomSeatsChangeReason) String() string {
	return proto.EnumName(RoomSeatsChangeReason_name, int32(x))
}

func (RoomSeatsChangeReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{28}
}

type Roles int32

const (
	Roles_Error Roles = 0
	//访客
	Roles_Guest Roles = 1
	//玩家
	Roles_Player Roles = 2
	//代理
	Roles_Agent Roles = 4
	//系统管理
	Roles_Manager Roles = 8
	//机器人
	Roles_Robot Roles = 16
)

var Roles_name = map[int32]string{
	0:  "Error",
	1:  "Guest",
	2:  "Player",
	4:  "Agent",
	8:  "Manager",
	16: "Robot",
}

var Roles_value = map[string]int32{
	"Error":   0,
	"Guest":   1,
	"Player":  2,
	"Agent":   4,
	"Manager": 8,
	"Robot":   16,
}

func (x Roles) String() string {
	return proto.EnumName(Roles_name, int32(x))
}

func (Roles) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{29}
}

// 游戏类型杠花麻将的操作类型
type GangHuaMahjongDoType int32

const (
	// 未知类型，用于容错
	GangHuaMahjongDoType_GangHuaMahjong_None GangHuaMahjongDoType = 0
	// 加入房间
	GangHuaMahjongDoType_GangHuaMahjong_JoinRoom GangHuaMahjongDoType = 1
	// 退出房间
	GangHuaMahjongDoType_GangHuaMahjong_ExitRoom GangHuaMahjongDoType = 2
	// 改变玩家状态
	GangHuaMahjongDoType_GangHuaMahjong_ChangeState GangHuaMahjongDoType = 3
	// 玩家出牌前判断能否 碰/杠/胡
	GangHuaMahjongDoType_GangHuaMahjong_beforeOperate GangHuaMahjongDoType = 4
	// 玩家 碰/杠/胡/出牌等操作
	GangHuaMahjongDoType_GangHuaMahjong_Operate GangHuaMahjongDoType = 5
	// 下庄
	GangHuaMahjongDoType_GangHuaMahjong_XiaZhuang GangHuaMahjongDoType = 6
	// 买点
	GangHuaMahjongDoType_GangHuaMahjong_MaiDian GangHuaMahjongDoType = 7
)

var GangHuaMahjongDoType_name = map[int32]string{
	0: "GangHuaMahjong_None",
	1: "GangHuaMahjong_JoinRoom",
	2: "GangHuaMahjong_ExitRoom",
	3: "GangHuaMahjong_ChangeState",
	4: "GangHuaMahjong_beforeOperate",
	5: "GangHuaMahjong_Operate",
	6: "GangHuaMahjong_XiaZhuang",
	7: "GangHuaMahjong_MaiDian",
}

var GangHuaMahjongDoType_value = map[string]int32{
	"GangHuaMahjong_None":          0,
	"GangHuaMahjong_JoinRoom":      1,
	"GangHuaMahjong_ExitRoom":      2,
	"GangHuaMahjong_ChangeState":   3,
	"GangHuaMahjong_beforeOperate": 4,
	"GangHuaMahjong_Operate":       5,
	"GangHuaMahjong_XiaZhuang":     6,
	"GangHuaMahjong_MaiDian":       7,
}

func (x GangHuaMahjongDoType) String() string {
	return proto.EnumName(GangHuaMahjongDoType_name, int32(x))
}

func (GangHuaMahjongDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{30}
}

// 玩家碰，杠，听，胡操作
type GangHuaMahjongOperateType int32

const (
	//容错
	GangHuaMahjongOperateType_GangHuaMahjongOperateType_None GangHuaMahjongOperateType = 0
	// 过
	GangHuaMahjongOperateType_GangHuaMahjongOperateType_DoNothing GangHuaMahjongOperateType = 1
	// 出牌
	GangHuaMahjongOperateType_GangHuaMahjongOperateType_Discard GangHuaMahjongOperateType = 2
	// 碰
	GangHuaMahjongOperateType_GangHuaMahjongOperateType_Pong GangHuaMahjongOperateType = 3
	// 杠
	GangHuaMahjongOperateType_GangHuaMahjongOperateType_Kong GangHuaMahjongOperateType = 4
	// 听
	GangHuaMahjongOperateType_GangHuaMahjongOperateType_ReadyHand GangHuaMahjongOperateType = 5
	// 胡
	GangHuaMahjongOperateType_GangHuaMahjongOperateType_Win GangHuaMahjongOperateType = 6
	// 摸明牌
	GangHuaMahjongOperateType_GangHuaMahjongOperateType_SelectOpenCard GangHuaMahjongOperateType = 7
)

var GangHuaMahjongOperateType_name = map[int32]string{
	0: "GangHuaMahjongOperateType_None",
	1: "GangHuaMahjongOperateType_DoNothing",
	2: "GangHuaMahjongOperateType_Discard",
	3: "GangHuaMahjongOperateType_Pong",
	4: "GangHuaMahjongOperateType_Kong",
	5: "GangHuaMahjongOperateType_ReadyHand",
	6: "GangHuaMahjongOperateType_Win",
	7: "GangHuaMahjongOperateType_SelectOpenCard",
}

var GangHuaMahjongOperateType_value = map[string]int32{
	"GangHuaMahjongOperateType_None":           0,
	"GangHuaMahjongOperateType_DoNothing":      1,
	"GangHuaMahjongOperateType_Discard":        2,
	"GangHuaMahjongOperateType_Pong":           3,
	"GangHuaMahjongOperateType_Kong":           4,
	"GangHuaMahjongOperateType_ReadyHand":      5,
	"GangHuaMahjongOperateType_Win":            6,
	"GangHuaMahjongOperateType_SelectOpenCard": 7,
}

func (x GangHuaMahjongOperateType) String() string {
	return proto.EnumName(GangHuaMahjongOperateType_name, int32(x))
}

func (GangHuaMahjongOperateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{31}
}

// 杠的类型
type GangHuaMahjongKongType int32

const (
	//容错
	GangHuaMahjongKongType_GangHuaMahjongKongType_None GangHuaMahjongKongType = 0
	// 直杠, 玩家手中有三张一样的牌, 其他玩家打出另外一张相同的牌
	GangHuaMahjongKongType_GangHuaMahjongKongType_Zhi GangHuaMahjongKongType = 1
	// 补杠, 玩家碰牌后, 又摸到一张相同的牌
	GangHuaMahjongKongType_GangHuaMahjongKongType_Bu GangHuaMahjongKongType = 2
	// 暗杠, 玩家手中有4张一样的牌,
	GangHuaMahjongKongType_GangHuaMahjongKongType_An GangHuaMahjongKongType = 3
)

var GangHuaMahjongKongType_name = map[int32]string{
	0: "GangHuaMahjongKongType_None",
	1: "GangHuaMahjongKongType_Zhi",
	2: "GangHuaMahjongKongType_Bu",
	3: "GangHuaMahjongKongType_An",
}

var GangHuaMahjongKongType_value = map[string]int32{
	"GangHuaMahjongKongType_None": 0,
	"GangHuaMahjongKongType_Zhi":  1,
	"GangHuaMahjongKongType_Bu":   2,
	"GangHuaMahjongKongType_An":   3,
}

func (x GangHuaMahjongKongType) String() string {
	return proto.EnumName(GangHuaMahjongKongType_name, int32(x))
}

func (GangHuaMahjongKongType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{32}
}

//定义礼包的类型
type GiftType int32

const (
	// 礼包容错
	GiftType_GiftNone GiftType = 0
	//签到礼包
	GiftType_SignGift GiftType = 1
	//三日礼包
	GiftType_ThreeDayGift GiftType = 2
	// 首充礼包
	GiftType_FirstChargeGift GiftType = 3
)

var GiftType_name = map[int32]string{
	0: "GiftNone",
	1: "SignGift",
	2: "ThreeDayGift",
	3: "FirstChargeGift",
}

var GiftType_value = map[string]int32{
	"GiftNone":        0,
	"SignGift":        1,
	"ThreeDayGift":    2,
	"FirstChargeGift": 3,
}

func (x GiftType) String() string {
	return proto.EnumName(GiftType_name, int32(x))
}

func (GiftType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{33}
}

//礼包状态
type GiftStatus int32

const (
	//不可领，可领，已经领
	GiftStatus_Can_not GiftStatus = 0
	GiftStatus_Can     GiftStatus = 1
	GiftStatus_Already GiftStatus = 2
)

var GiftStatus_name = map[int32]string{
	0: "Can_not",
	1: "Can",
	2: "Already",
}

var GiftStatus_value = map[string]int32{
	"Can_not": 0,
	"Can":     1,
	"Already": 2,
}

func (x GiftStatus) String() string {
	return proto.EnumName(GiftStatus_name, int32(x))
}

func (GiftStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{34}
}

//奖励通用的类型
type RewardType int32

const (
	//容错
	RewardType_RewardNone RewardType = 0
	//金币
	RewardType_Golden RewardType = 1
	//转盘次数
	RewardType_SpinNum RewardType = 2
	//钻石
	RewardType_Diamond RewardType = 3
)

var RewardType_name = map[int32]string{
	0: "RewardNone",
	1: "Golden",
	2: "SpinNum",
	3: "Diamond",
}

var RewardType_value = map[string]int32{
	"RewardNone": 0,
	"Golden":     1,
	"SpinNum":    2,
	"Diamond":    3,
}

func (x RewardType) String() string {
	return proto.EnumName(RewardType_name, int32(x))
}

func (RewardType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{35}
}

//排行榜类型
type LeaderBoardType int32

const (
	// 容错类型
	LeaderBoardType_Type_None LeaderBoardType = 0
	// 富豪排行榜--金币
	LeaderBoardType_Nabob LeaderBoardType = 1
	// 大赢家排行榜--赢的钱的总和
	LeaderBoardType_BigWinner LeaderBoardType = 2
)

var LeaderBoardType_name = map[int32]string{
	0: "Type_None",
	1: "Nabob",
	2: "BigWinner",
}

var LeaderBoardType_value = map[string]int32{
	"Type_None": 0,
	"Nabob":     1,
	"BigWinner": 2,
}

func (x LeaderBoardType) String() string {
	return proto.EnumName(LeaderBoardType_name, int32(x))
}

func (LeaderBoardType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{36}
}

//游戏的大类型
type GameCateGoryType int32

const (
	// 容错类型
	GameCateGoryType_GameCateGoryType_None GameCateGoryType = 0
	// 麻将大类
	GameCateGoryType_GameCateGoryType_Mahjong GameCateGoryType = 1
	// 扑克大类
	GameCateGoryType_GameCateGoryType_Poker GameCateGoryType = 2
	// 百人场
	GameCateGoryType_GameCateGoryType_Hundred GameCateGoryType = 3
	// 对战场
	GameCateGoryType_GameCateGoryType_Fight GameCateGoryType = 4
)

var GameCateGoryType_name = map[int32]string{
	0: "GameCateGoryType_None",
	1: "GameCateGoryType_Mahjong",
	2: "GameCateGoryType_Poker",
	3: "GameCateGoryType_Hundred",
	4: "GameCateGoryType_Fight",
}

var GameCateGoryType_value = map[string]int32{
	"GameCateGoryType_None":    0,
	"GameCateGoryType_Mahjong": 1,
	"GameCateGoryType_Poker":   2,
	"GameCateGoryType_Hundred": 3,
	"GameCateGoryType_Fight":   4,
}

func (x GameCateGoryType) String() string {
	return proto.EnumName(GameCateGoryType_name, int32(x))
}

func (GameCateGoryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{37}
}

//商品类型
type ProductType int32

const (
	// 容错类型
	ProductType_ProductType_None ProductType = 0
	//房卡
	ProductType_ProductType_Card ProductType = 1
	//钻石
	ProductType_ProductType_Diamond ProductType = 2
)

var ProductType_name = map[int32]string{
	0: "ProductType_None",
	1: "ProductType_Card",
	2: "ProductType_Diamond",
}

var ProductType_value = map[string]int32{
	"ProductType_None":    0,
	"ProductType_Card":    1,
	"ProductType_Diamond": 2,
}

func (x ProductType) String() string {
	return proto.EnumName(ProductType_name, int32(x))
}

func (ProductType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{38}
}

//币种
type Currency int32

const (
	// 容错类型
	Currency_Currency_None Currency = 0
	//缅甸缅元
	Currency_Currency_Myanmar_kyat Currency = 104
	//泰铢
	Currency_Currency_Thai_baht Currency = 764
	//美元
	Currency_Currency_United_States_dollar Currency = 840
	//印尼盾
	Currency_Currency_Indonesian_rupiah Currency = 360
)

var Currency_name = map[int32]string{
	0:   "Currency_None",
	104: "Currency_Myanmar_kyat",
	764: "Currency_Thai_baht",
	840: "Currency_United_States_dollar",
	360: "Currency_Indonesian_rupiah",
}

var Currency_value = map[string]int32{
	"Currency_None":                 0,
	"Currency_Myanmar_kyat":         104,
	"Currency_Thai_baht":            764,
	"Currency_United_States_dollar": 840,
	"Currency_Indonesian_rupiah":    360,
}

func (x Currency) String() string {
	return proto.EnumName(Currency_name, int32(x))
}

func (Currency) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{39}
}

//任务的类型
type TaskType int32

const (
	// 容错类型
	TaskType_Task_None TaskType = 0
	// 玩一把游戏
	TaskType_Task_PlayGame TaskType = 1
	//充值
	TaskType_Task_Recharge TaskType = 2
)

var TaskType_name = map[int32]string{
	0: "Task_None",
	1: "Task_PlayGame",
	2: "Task_Recharge",
}

var TaskType_value = map[string]int32{
	"Task_None":     0,
	"Task_PlayGame": 1,
	"Task_Recharge": 2,
}

func (x TaskType) String() string {
	return proto.EnumName(TaskType_name, int32(x))
}

func (TaskType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{40}
}

//任务状态
type TaskStatus int32

const (
	// 容错类型
	TaskStatus_TaskStatus_None TaskStatus = 0
	// 进行中
	TaskStatus_TaskStatus_Doing TaskStatus = 1
	// 可领取
	TaskStatus_TaskStatus_CanGet TaskStatus = 2
	// 已领取
	TaskStatus_TaskStatus_AlreadyGet TaskStatus = 3
)

var TaskStatus_name = map[int32]string{
	0: "TaskStatus_None",
	1: "TaskStatus_Doing",
	2: "TaskStatus_CanGet",
	3: "TaskStatus_AlreadyGet",
}

var TaskStatus_value = map[string]int32{
	"TaskStatus_None":       0,
	"TaskStatus_Doing":      1,
	"TaskStatus_CanGet":     2,
	"TaskStatus_AlreadyGet": 3,
}

func (x TaskStatus) String() string {
	return proto.EnumName(TaskStatus_name, int32(x))
}

func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{41}
}

//配置类型
type ConfigType int32

const (
	// 容错类型
	ConfigType_ConfigType_None ConfigType = 0
	// 全局配置
	ConfigType_ConfigType_Global ConfigType = 1
	// 游戏配置
	ConfigType_ConfigType_Games ConfigType = 2
	// 礼包配置
	ConfigType_ConfigType_Gifts ConfigType = 3
	// 任务配置
	ConfigType_ConfigType_Tasks ConfigType = 4
)

var ConfigType_name = map[int32]string{
	0: "ConfigType_None",
	1: "ConfigType_Global",
	2: "ConfigType_Games",
	3: "ConfigType_Gifts",
	4: "ConfigType_Tasks",
}

var ConfigType_value = map[string]int32{
	"ConfigType_None":   0,
	"ConfigType_Global": 1,
	"ConfigType_Games":  2,
	"ConfigType_Gifts":  3,
	"ConfigType_Tasks":  4,
}

func (x ConfigType) String() string {
	return proto.EnumName(ConfigType_name, int32(x))
}

func (ConfigType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{42}
}

// 游戏类型连连看的操作类型
type LinkUpDoType int32

const (
	// 未知类型，用于容错
	LinkUpDoType_LinkUpDo_None LinkUpDoType = 0
	// 加入房间
	LinkUpDoType_LinkUpDo_JoinRoom LinkUpDoType = 1
	// 退出房间
	LinkUpDoType_LinkUpDo_ExitRoom LinkUpDoType = 2
	// 改变玩家状态
	LinkUpDoType_LinkUpDo_ChangeState LinkUpDoType = 3
	//连接消除
	LinkUpDoType_LinkUpDo_ClearIcon LinkUpDoType = 4
	//连连看设置观战
	LinkUpDoType_LinkUpDo_Watch LinkUpDoType = 5
	// 连连看创建房间
	LinkUpDoType_LinkUpDo_CreateRoom LinkUpDoType = 6
	// 连连看房卡场开始游戏
	LinkUpDoType_LinkUpDo_StartRoom LinkUpDoType = 7
)

var LinkUpDoType_name = map[int32]string{
	0: "LinkUpDo_None",
	1: "LinkUpDo_JoinRoom",
	2: "LinkUpDo_ExitRoom",
	3: "LinkUpDo_ChangeState",
	4: "LinkUpDo_ClearIcon",
	5: "LinkUpDo_Watch",
	6: "LinkUpDo_CreateRoom",
	7: "LinkUpDo_StartRoom",
}

var LinkUpDoType_value = map[string]int32{
	"LinkUpDo_None":        0,
	"LinkUpDo_JoinRoom":    1,
	"LinkUpDo_ExitRoom":    2,
	"LinkUpDo_ChangeState": 3,
	"LinkUpDo_ClearIcon":   4,
	"LinkUpDo_Watch":       5,
	"LinkUpDo_CreateRoom":  6,
	"LinkUpDo_StartRoom":   7,
}

func (x LinkUpDoType) String() string {
	return proto.EnumName(LinkUpDoType_name, int32(x))
}

func (LinkUpDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{43}
}

// 游戏类型跑得快的操作类型
type RunFastDoType int32

const (
	// 未知类型，用于容错
	RunFastDoType_RunFastDo_None RunFastDoType = 0
	// 加入房间
	RunFastDoType_RunFastDo_JoinRoom RunFastDoType = 1
	// 退出房间
	RunFastDoType_RunFastDo_ExitRoom RunFastDoType = 2
	// 改变玩家状态
	RunFastDoType_RunFastDo_ChangeState RunFastDoType = 3
	// 玩家出牌操作
	RunFastDoType_RunFastDo_Operate RunFastDoType = 4
)

var RunFastDoType_name = map[int32]string{
	0: "RunFastDo_None",
	1: "RunFastDo_JoinRoom",
	2: "RunFastDo_ExitRoom",
	3: "RunFastDo_ChangeState",
	4: "RunFastDo_Operate",
}

var RunFastDoType_value = map[string]int32{
	"RunFastDo_None":        0,
	"RunFastDo_JoinRoom":    1,
	"RunFastDo_ExitRoom":    2,
	"RunFastDo_ChangeState": 3,
	"RunFastDo_Operate":     4,
}

func (x RunFastDoType) String() string {
	return proto.EnumName(RunFastDoType_name, int32(x))
}

func (RunFastDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{44}
}

//打芒类型
type DaXuanMongoType int32

const (
	//手手芒
	DaXuanMongoType_DaXuanMongoType_None DaXuanMongoType = 0
	//休芒
	DaXuanMongoType_DaXuanMongoType_Xiu DaXuanMongoType = 1
	//揍芒
	DaXuanMongoType_DaXuanMongoType_Zou DaXuanMongoType = 2
)

var DaXuanMongoType_name = map[int32]string{
	0: "DaXuanMongoType_None",
	1: "DaXuanMongoType_Xiu",
	2: "DaXuanMongoType_Zou",
}

var DaXuanMongoType_value = map[string]int32{
	"DaXuanMongoType_None": 0,
	"DaXuanMongoType_Xiu":  1,
	"DaXuanMongoType_Zou":  2,
}

func (x DaXuanMongoType) String() string {
	return proto.EnumName(DaXuanMongoType_name, int32(x))
}

func (DaXuanMongoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{45}
}

//扯旋牌的类型标记，头牌、尾牌
type DaXuanPartPokerFlag int32

const (
	DaXuanPartPokerFlag_DaXuanPartPokerFlag_None DaXuanPartPokerFlag = 0
	//初始底牌
	DaXuanPartPokerFlag_DaXuanPartPokerFlag_Start DaXuanPartPokerFlag = 1
	//尾牌
	DaXuanPartPokerFlag_DaXuanPartPokerFlag_Tail DaXuanPartPokerFlag = 2
)

var DaXuanPartPokerFlag_name = map[int32]string{
	0: "DaXuanPartPokerFlag_None",
	1: "DaXuanPartPokerFlag_Start",
	2: "DaXuanPartPokerFlag_Tail",
}

var DaXuanPartPokerFlag_value = map[string]int32{
	"DaXuanPartPokerFlag_None":  0,
	"DaXuanPartPokerFlag_Start": 1,
	"DaXuanPartPokerFlag_Tail":  2,
}

func (x DaXuanPartPokerFlag) String() string {
	return proto.EnumName(DaXuanPartPokerFlag_name, int32(x))
}

func (DaXuanPartPokerFlag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{46}
}

// 打旋游戏中的的操作步骤
type DaXuanOperateStep int32

const (
	DaXuanOperateStep_DaXuanOperate_None DaXuanOperateStep = 0
	// 第一次派牌，前两张暗牌
	DaXuanOperateStep_DaXuanOperate_DealFirst DaXuanOperateStep = 1
	// 玩家第一轮发言
	DaXuanOperateStep_DaXuanOperate_SpeakFirst DaXuanOperateStep = 2
	// 第二次派牌，第三张明牌
	DaXuanOperateStep_DaXuanOperate_DealSecond DaXuanOperateStep = 3
	// 玩家第二轮发言
	DaXuanOperateStep_DaXuanOperate_SpeakSecond DaXuanOperateStep = 4
	// 第三次派牌，第四张明牌
	DaXuanOperateStep_DaXuanOperate_DealThird DaXuanOperateStep = 5
	// 玩家第三轮发言
	DaXuanOperateStep_DaXuanOperate_SpeakThird DaXuanOperateStep = 6
)

var DaXuanOperateStep_name = map[int32]string{
	0: "DaXuanOperate_None",
	1: "DaXuanOperate_DealFirst",
	2: "DaXuanOperate_SpeakFirst",
	3: "DaXuanOperate_DealSecond",
	4: "DaXuanOperate_SpeakSecond",
	5: "DaXuanOperate_DealThird",
	6: "DaXuanOperate_SpeakThird",
}

var DaXuanOperateStep_value = map[string]int32{
	"DaXuanOperate_None":        0,
	"DaXuanOperate_DealFirst":   1,
	"DaXuanOperate_SpeakFirst":  2,
	"DaXuanOperate_DealSecond":  3,
	"DaXuanOperate_SpeakSecond": 4,
	"DaXuanOperate_DealThird":   5,
	"DaXuanOperate_SpeakThird":  6,
}

func (x DaXuanOperateStep) String() string {
	return proto.EnumName(DaXuanOperateStep_name, int32(x))
}

func (DaXuanOperateStep) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{47}
}

// 游戏类型打旋的操作类型
type DaXuanDoType int32

const (
	// 未知类型，用于容错
	DaXuanDoType_DaXuanDo_None DaXuanDoType = 0
	// 加入房间
	DaXuanDoType_DaXuanDo_JoinRoom DaXuanDoType = 1
	// 退出房间
	DaXuanDoType_DaXuanDo_ExitRoom DaXuanDoType = 2
	// 弃牌
	DaXuanDoType_DaXuanDo_OperateFold DaXuanDoType = 3
	// pass
	DaXuanDoType_DaXuanDo_OperatePass DaXuanDoType = 4
	// 押注
	DaXuanDoType_DaXuanDo_OperateCall DaXuanDoType = 5
	// 跟
	DaXuanDoType_DaXuanDo_OperateFollow DaXuanDoType = 6
	// 加注
	DaXuanDoType_DaXuanDo_OperatePlus DaXuanDoType = 7
	// all in
	DaXuanDoType_DaXuanDo_OperateAllIn DaXuanDoType = 8
	// 上座
	DaXuanDoType_DaXuanDo_UpSeat DaXuanDoType = 9
	// 下座
	DaXuanDoType_DaXuanDo_DownSeat DaXuanDoType = 10
	// 保座
	DaXuanDoType_DaXuanDo_KeepSeat DaXuanDoType = 11
	// 归座
	DaXuanDoType_DaXuanDo_BackSeat DaXuanDoType = 12
	// 分牌
	DaXuanDoType_DaXuanDo_Part DaXuanDoType = 13
	// 补充钵钵
	DaXuanDoType_DaXuan_TopUp DaXuanDoType = 14
)

var DaXuanDoType_name = map[int32]string{
	0:  "DaXuanDo_None",
	1:  "DaXuanDo_JoinRoom",
	2:  "DaXuanDo_ExitRoom",
	3:  "DaXuanDo_OperateFold",
	4:  "DaXuanDo_OperatePass",
	5:  "DaXuanDo_OperateCall",
	6:  "DaXuanDo_OperateFollow",
	7:  "DaXuanDo_OperatePlus",
	8:  "DaXuanDo_OperateAllIn",
	9:  "DaXuanDo_UpSeat",
	10: "DaXuanDo_DownSeat",
	11: "DaXuanDo_KeepSeat",
	12: "DaXuanDo_BackSeat",
	13: "DaXuanDo_Part",
	14: "DaXuan_TopUp",
}

var DaXuanDoType_value = map[string]int32{
	"DaXuanDo_None":          0,
	"DaXuanDo_JoinRoom":      1,
	"DaXuanDo_ExitRoom":      2,
	"DaXuanDo_OperateFold":   3,
	"DaXuanDo_OperatePass":   4,
	"DaXuanDo_OperateCall":   5,
	"DaXuanDo_OperateFollow": 6,
	"DaXuanDo_OperatePlus":   7,
	"DaXuanDo_OperateAllIn":  8,
	"DaXuanDo_UpSeat":        9,
	"DaXuanDo_DownSeat":      10,
	"DaXuanDo_KeepSeat":      11,
	"DaXuanDo_BackSeat":      12,
	"DaXuanDo_Part":          13,
	"DaXuan_TopUp":           14,
}

func (x DaXuanDoType) String() string {
	return proto.EnumName(DaXuanDoType_name, int32(x))
}

func (DaXuanDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{48}
}

//筛选房间条件类型
type DaXuanRoomsType int32

const (
	//小倍数
	DaXuanRoomsType_DaXuanRooms_Small DaXuanRoomsType = 0
	//中倍数
	DaXuanRoomsType_DaXuanRooms_Secondary DaXuanRoomsType = 1
	//大倍数
	DaXuanRoomsType_DaXuanRooms_Large DaXuanRoomsType = 2
	//全部
	DaXuanRoomsType_DaXuanRooms_All DaXuanRoomsType = 3
)

var DaXuanRoomsType_name = map[int32]string{
	0: "DaXuanRooms_Small",
	1: "DaXuanRooms_Secondary",
	2: "DaXuanRooms_Large",
	3: "DaXuanRooms_All",
}

var DaXuanRoomsType_value = map[string]int32{
	"DaXuanRooms_Small":     0,
	"DaXuanRooms_Secondary": 1,
	"DaXuanRooms_Large":     2,
	"DaXuanRooms_All":       3,
}

func (x DaXuanRoomsType) String() string {
	return proto.EnumName(DaXuanRoomsType_name, int32(x))
}

func (DaXuanRoomsType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{49}
}

//跑得快出牌牌型
type RunFastPokerType int32

const (
	// 未知类型，用于容错
	RunFastPokerType_RunFastPoker_None RunFastPokerType = 0
	// 单张
	RunFastPokerType_RunFastPoker_OneCard RunFastPokerType = 1
	// 对子
	RunFastPokerType_RunFastPoker_Pair RunFastPokerType = 2
	// 三带二
	RunFastPokerType_RunFastPoker_ThreeBandTwo RunFastPokerType = 3
	// 顺子
	RunFastPokerType_RunFastPoker_Sequence RunFastPokerType = 4
	//三顺
	RunFastPokerType_RunFastPoker_ThreeSequence RunFastPokerType = 5
	//连对
	RunFastPokerType_RunFastPoker_MulPair RunFastPokerType = 6
	//飞机带翅膀
	RunFastPokerType_RunFastPoker_Kite RunFastPokerType = 7
	//炸弹
	RunFastPokerType_RunFastPoker_Bomb RunFastPokerType = 8
	//四带二
	RunFastPokerType_RunFastPoker_FourBandTwo RunFastPokerType = 9
)

var RunFastPokerType_name = map[int32]string{
	0: "RunFastPoker_None",
	1: "RunFastPoker_OneCard",
	2: "RunFastPoker_Pair",
	3: "RunFastPoker_ThreeBandTwo",
	4: "RunFastPoker_Sequence",
	5: "RunFastPoker_ThreeSequence",
	6: "RunFastPoker_MulPair",
	7: "RunFastPoker_Kite",
	8: "RunFastPoker_Bomb",
	9: "RunFastPoker_FourBandTwo",
}

var RunFastPokerType_value = map[string]int32{
	"RunFastPoker_None":          0,
	"RunFastPoker_OneCard":       1,
	"RunFastPoker_Pair":          2,
	"RunFastPoker_ThreeBandTwo":  3,
	"RunFastPoker_Sequence":      4,
	"RunFastPoker_ThreeSequence": 5,
	"RunFastPoker_MulPair":       6,
	"RunFastPoker_Kite":          7,
	"RunFastPoker_Bomb":          8,
	"RunFastPoker_FourBandTwo":   9,
}

func (x RunFastPokerType) String() string {
	return proto.EnumName(RunFastPokerType_name, int32(x))
}

func (RunFastPokerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{50}
}

// 跑得快操作类型 出牌，托管
type RunFastOperateType int32

const (
	//容错
	RunFastOperateType_RunFastOperateType_None RunFastOperateType = 0
	//过
	RunFastOperateType_RunFastOperateType_DoNothing RunFastOperateType = 1
	//出牌
	RunFastOperateType_RunFastOperateType_Discard RunFastOperateType = 2
	//托管
	RunFastOperateType_RunFastOperateType_Trusteeship RunFastOperateType = 3
	//取消托管
	RunFastOperateType_RunFastOperateType_CancelTrusteeship RunFastOperateType = 4
)

var RunFastOperateType_name = map[int32]string{
	0: "RunFastOperateType_None",
	1: "RunFastOperateType_DoNothing",
	2: "RunFastOperateType_Discard",
	3: "RunFastOperateType_Trusteeship",
	4: "RunFastOperateType_CancelTrusteeship",
}

var RunFastOperateType_value = map[string]int32{
	"RunFastOperateType_None":              0,
	"RunFastOperateType_DoNothing":         1,
	"RunFastOperateType_Discard":           2,
	"RunFastOperateType_Trusteeship":       3,
	"RunFastOperateType_CancelTrusteeship": 4,
}

func (x RunFastOperateType) String() string {
	return proto.EnumName(RunFastOperateType_name, int32(x))
}

func (RunFastOperateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{51}
}

// 游戏类型十三水的操作类型
type ShiSanShuiDoType int32

const (
	// 未知类型，用于容错
	ShiSanShuiDoType_ShiSanShuiDo_None ShiSanShuiDoType = 0
	// 加入房间
	ShiSanShuiDoType_ShiSanShuiDo_JoinRoom ShiSanShuiDoType = 1
	// 退出房间
	ShiSanShuiDoType_ShiSanShuiDo_ExitRoom ShiSanShuiDoType = 2
	// 改变玩家状态
	ShiSanShuiDoType_ShiSanShuiDo_ChangeState ShiSanShuiDoType = 3
	// 一键获取摆牌方案
	ShiSanShuiDoType_ShiSanShuiDo_AutoPlacePoker ShiSanShuiDoType = 4
	//提交摆牌方案
	ShiSanShuiDoType_ShiSanShuiDo_PlacePoker ShiSanShuiDoType = 5
	//查询牌型
	ShiSanShuiDoType_ShiSanShuiDo_GetPokerType ShiSanShuiDoType = 6
	//申请摆牌
	ShiSanShuiDoType_ShiSanShuiDo_AskForPlace ShiSanShuiDoType = 7
)

var ShiSanShuiDoType_name = map[int32]string{
	0: "ShiSanShuiDo_None",
	1: "ShiSanShuiDo_JoinRoom",
	2: "ShiSanShuiDo_ExitRoom",
	3: "ShiSanShuiDo_ChangeState",
	4: "ShiSanShuiDo_AutoPlacePoker",
	5: "ShiSanShuiDo_PlacePoker",
	6: "ShiSanShuiDo_GetPokerType",
	7: "ShiSanShuiDo_AskForPlace",
}

var ShiSanShuiDoType_value = map[string]int32{
	"ShiSanShuiDo_None":           0,
	"ShiSanShuiDo_JoinRoom":       1,
	"ShiSanShuiDo_ExitRoom":       2,
	"ShiSanShuiDo_ChangeState":    3,
	"ShiSanShuiDo_AutoPlacePoker": 4,
	"ShiSanShuiDo_PlacePoker":     5,
	"ShiSanShuiDo_GetPokerType":   6,
	"ShiSanShuiDo_AskForPlace":    7,
}

func (x ShiSanShuiDoType) String() string {
	return proto.EnumName(ShiSanShuiDoType_name, int32(x))
}

func (ShiSanShuiDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{52}
}

// 游戏十三水的比牌步骤
type ShiSanShuiCompareStep int32

const (
	// 开始比牌
	ShiSanShuiCompareStep_ShiSanShuiCompare_Start ShiSanShuiCompareStep = 0
	// 第一墩比牌
	ShiSanShuiCompareStep_ShiSanShuiCompare_Heap1 ShiSanShuiCompareStep = 1
	// 第二墩比牌
	ShiSanShuiCompareStep_ShiSanShuiCompare_Heap2 ShiSanShuiCompareStep = 2
	// 第三墩比牌
	ShiSanShuiCompareStep_ShiSanShuiCompare_Heap3 ShiSanShuiCompareStep = 3
	// 打枪
	ShiSanShuiCompareStep_ShiSanShuiCompare_Shoot ShiSanShuiCompareStep = 4
	//全垒打
	ShiSanShuiCompareStep_ShiSanShuiCompare_HomeRun ShiSanShuiCompareStep = 5
	// 特殊牌型
	ShiSanShuiCompareStep_ShiSanShuiCompare_Special ShiSanShuiCompareStep = 6
)

var ShiSanShuiCompareStep_name = map[int32]string{
	0: "ShiSanShuiCompare_Start",
	1: "ShiSanShuiCompare_Heap1",
	2: "ShiSanShuiCompare_Heap2",
	3: "ShiSanShuiCompare_Heap3",
	4: "ShiSanShuiCompare_Shoot",
	5: "ShiSanShuiCompare_HomeRun",
	6: "ShiSanShuiCompare_Special",
}

var ShiSanShuiCompareStep_value = map[string]int32{
	"ShiSanShuiCompare_Start":   0,
	"ShiSanShuiCompare_Heap1":   1,
	"ShiSanShuiCompare_Heap2":   2,
	"ShiSanShuiCompare_Heap3":   3,
	"ShiSanShuiCompare_Shoot":   4,
	"ShiSanShuiCompare_HomeRun": 5,
	"ShiSanShuiCompare_Special": 6,
}

func (x ShiSanShuiCompareStep) String() string {
	return proto.EnumName(ShiSanShuiCompareStep_name, int32(x))
}

func (ShiSanShuiCompareStep) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{53}
}

// 游戏类型十三水的牌型
type ShiSanShuiPokerType int32

const (
	// 未知类型，用于容错,倒水属于此种牌型
	ShiSanShuiPokerType_ShiSanShuiPokerType_None ShiSanShuiPokerType = 0
	// 高牌，乌龙
	ShiSanShuiPokerType_ShiSanShuiPokerType_HighCard ShiSanShuiPokerType = 1
	// 一对
	ShiSanShuiPokerType_ShiSanShuiPokerType_Pair ShiSanShuiPokerType = 2
	// 两对
	ShiSanShuiPokerType_ShiSanShuiPokerType_DoublePair ShiSanShuiPokerType = 3
	// 冲三，三条
	ShiSanShuiPokerType_ShiSanShuiPokerType_Trio ShiSanShuiPokerType = 4
	// 顺子
	ShiSanShuiPokerType_ShiSanShuiPokerType_Straight ShiSanShuiPokerType = 5
	// 同花
	ShiSanShuiPokerType_ShiSanShuiPokerType_Flush ShiSanShuiPokerType = 6
	// 葫芦，三同加上一对
	ShiSanShuiPokerType_ShiSanShuiPokerType_FullHouse ShiSanShuiPokerType = 7
	// 四条
	ShiSanShuiPokerType_ShiSanShuiPokerType_FourOfAKind ShiSanShuiPokerType = 8
	// 同花顺
	ShiSanShuiPokerType_ShiSanShuiPokerType_StraightFlush ShiSanShuiPokerType = 9
	//三同花
	ShiSanShuiPokerType_ShiSanShuiPokerType_TrioFlush ShiSanShuiPokerType = 10
	//三顺子
	ShiSanShuiPokerType_ShiSanShuiPokerType_TrioStraight ShiSanShuiPokerType = 11
	//六对半
	ShiSanShuiPokerType_ShiSanShuiPokerType_SixPairBandOne ShiSanShuiPokerType = 12
	//五对三条
	ShiSanShuiPokerType_ShiSanShuiPokerType_FivePairBandTrio ShiSanShuiPokerType = 13
	//四套三条
	ShiSanShuiPokerType_ShiSanShuiPokerType_FourTrioBandOne ShiSanShuiPokerType = 14
	//凑一色，全部为红色牌或全部为黑色牌
	ShiSanShuiPokerType_ShiSanShuiPokerType_SameColor ShiSanShuiPokerType = 15
	//全小 全部为2-8的牌
	ShiSanShuiPokerType_ShiSanShuiPokerType_AllSmall ShiSanShuiPokerType = 16
	//全大 全部为8-K或A的牌
	ShiSanShuiPokerType_ShiSanShuiPokerType_AllBig ShiSanShuiPokerType = 17
	//三分天下，3组四条
	ShiSanShuiPokerType_ShiSanShuiPokerType_ThreeGroupFour ShiSanShuiPokerType = 18
	//三同花顺，二三堆为同花顺，第一堆同花且连续
	ShiSanShuiPokerType_ShiSanShuiPokerType_ThreeStraightFlush ShiSanShuiPokerType = 19
	//十二皇族
	ShiSanShuiPokerType_ShiSanShuiPokerType_TwelveRoyalty ShiSanShuiPokerType = 20
	//一条龙
	ShiSanShuiPokerType_ShiSanShuiPokerType_Dragon ShiSanShuiPokerType = 21
	//至尊青龙 同花色的一条龙
	ShiSanShuiPokerType_ShiSanShuiPokerType_SupremeDragon ShiSanShuiPokerType = 22
)

var ShiSanShuiPokerType_name = map[int32]string{
	0:  "ShiSanShuiPokerType_None",
	1:  "ShiSanShuiPokerType_HighCard",
	2:  "ShiSanShuiPokerType_Pair",
	3:  "ShiSanShuiPokerType_DoublePair",
	4:  "ShiSanShuiPokerType_Trio",
	5:  "ShiSanShuiPokerType_Straight",
	6:  "ShiSanShuiPokerType_Flush",
	7:  "ShiSanShuiPokerType_FullHouse",
	8:  "ShiSanShuiPokerType_FourOfAKind",
	9:  "ShiSanShuiPokerType_StraightFlush",
	10: "ShiSanShuiPokerType_TrioFlush",
	11: "ShiSanShuiPokerType_TrioStraight",
	12: "ShiSanShuiPokerType_SixPairBandOne",
	13: "ShiSanShuiPokerType_FivePairBandTrio",
	14: "ShiSanShuiPokerType_FourTrioBandOne",
	15: "ShiSanShuiPokerType_SameColor",
	16: "ShiSanShuiPokerType_AllSmall",
	17: "ShiSanShuiPokerType_AllBig",
	18: "ShiSanShuiPokerType_ThreeGroupFour",
	19: "ShiSanShuiPokerType_ThreeStraightFlush",
	20: "ShiSanShuiPokerType_TwelveRoyalty",
	21: "ShiSanShuiPokerType_Dragon",
	22: "ShiSanShuiPokerType_SupremeDragon",
}

var ShiSanShuiPokerType_value = map[string]int32{
	"ShiSanShuiPokerType_None":               0,
	"ShiSanShuiPokerType_HighCard":           1,
	"ShiSanShuiPokerType_Pair":               2,
	"ShiSanShuiPokerType_DoublePair":         3,
	"ShiSanShuiPokerType_Trio":               4,
	"ShiSanShuiPokerType_Straight":           5,
	"ShiSanShuiPokerType_Flush":              6,
	"ShiSanShuiPokerType_FullHouse":          7,
	"ShiSanShuiPokerType_FourOfAKind":        8,
	"ShiSanShuiPokerType_StraightFlush":      9,
	"ShiSanShuiPokerType_TrioFlush":          10,
	"ShiSanShuiPokerType_TrioStraight":       11,
	"ShiSanShuiPokerType_SixPairBandOne":     12,
	"ShiSanShuiPokerType_FivePairBandTrio":   13,
	"ShiSanShuiPokerType_FourTrioBandOne":    14,
	"ShiSanShuiPokerType_SameColor":          15,
	"ShiSanShuiPokerType_AllSmall":           16,
	"ShiSanShuiPokerType_AllBig":             17,
	"ShiSanShuiPokerType_ThreeGroupFour":     18,
	"ShiSanShuiPokerType_ThreeStraightFlush": 19,
	"ShiSanShuiPokerType_TwelveRoyalty":      20,
	"ShiSanShuiPokerType_Dragon":             21,
	"ShiSanShuiPokerType_SupremeDragon":      22,
}

func (x ShiSanShuiPokerType) String() string {
	return proto.EnumName(ShiSanShuiPokerType_name, int32(x))
}

func (ShiSanShuiPokerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{54}
}

// 连连看图标类别
type IconType int32

const (
	// 未知类型，用于容错
	IconType_IconTypeNone IconType = 0
	//动物
	IconType_IconTypeAnimal IconType = 1
	//水果
	IconType_IconTypeFruit IconType = 2
	//蔬菜
	IconType_IconTypeGreens IconType = 3
)

var IconType_name = map[int32]string{
	0: "IconTypeNone",
	1: "IconTypeAnimal",
	2: "IconTypeFruit",
	3: "IconTypeGreens",
}

var IconType_value = map[string]int32{
	"IconTypeNone":   0,
	"IconTypeAnimal": 1,
	"IconTypeFruit":  2,
	"IconTypeGreens": 3,
}

func (x IconType) String() string {
	return proto.EnumName(IconType_name, int32(x))
}

func (IconType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{55}
}

// 连连看图标编号
type IconNum int32

const (
	// 未知类型，用于容错
	IconNum_IconNumNone IconNum = 0
	IconNum_IconNum1    IconNum = 1
	IconNum_IconNum2    IconNum = 2
	IconNum_IconNum3    IconNum = 3
	IconNum_IconNum4    IconNum = 4
	IconNum_IconNum5    IconNum = 5
	IconNum_IconNum6    IconNum = 6
	IconNum_IconNum7    IconNum = 7
	IconNum_IconNum8    IconNum = 8
)

var IconNum_name = map[int32]string{
	0: "IconNumNone",
	1: "IconNum1",
	2: "IconNum2",
	3: "IconNum3",
	4: "IconNum4",
	5: "IconNum5",
	6: "IconNum6",
	7: "IconNum7",
	8: "IconNum8",
}

var IconNum_value = map[string]int32{
	"IconNumNone": 0,
	"IconNum1":    1,
	"IconNum2":    2,
	"IconNum3":    3,
	"IconNum4":    4,
	"IconNum5":    5,
	"IconNum6":    6,
	"IconNum7":    7,
	"IconNum8":    8,
}

func (x IconNum) String() string {
	return proto.EnumName(IconNum_name, int32(x))
}

func (IconNum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{56}
}

// 游戏类型龙虎斗的操作类型
type DragonTigerFightDoType int32

const (
	// 未知类型，用于容错
	DragonTigerFightDoType_DragonTigerFight_None DragonTigerFightDoType = 0
	// 加入房间
	DragonTigerFightDoType_DragonTigerFight_JoinRoom DragonTigerFightDoType = 1
	// 退出房间
	DragonTigerFightDoType_DragonTigerFight_ExitRoom DragonTigerFightDoType = 2
	// 玩家下注
	DragonTigerFightDoType_DragonTigerFight_PlayerBet DragonTigerFightDoType = 3
	// 玩家申请上庄
	DragonTigerFightDoType_DragonTigerFight_UpBanker DragonTigerFightDoType = 4
	// 玩家申请下庄/退出申请上庄
	DragonTigerFightDoType_DragonTigerFight_DownBanker DragonTigerFightDoType = 5
)

var DragonTigerFightDoType_name = map[int32]string{
	0: "DragonTigerFight_None",
	1: "DragonTigerFight_JoinRoom",
	2: "DragonTigerFight_ExitRoom",
	3: "DragonTigerFight_PlayerBet",
	4: "DragonTigerFight_UpBanker",
	5: "DragonTigerFight_DownBanker",
}

var DragonTigerFightDoType_value = map[string]int32{
	"DragonTigerFight_None":       0,
	"DragonTigerFight_JoinRoom":   1,
	"DragonTigerFight_ExitRoom":   2,
	"DragonTigerFight_PlayerBet":  3,
	"DragonTigerFight_UpBanker":   4,
	"DragonTigerFight_DownBanker": 5,
}

func (x DragonTigerFightDoType) String() string {
	return proto.EnumName(DragonTigerFightDoType_name, int32(x))
}

func (DragonTigerFightDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{57}
}

// 将庄家踢掉的原因
type KickBankerReason int32

const (
	// 容错
	KickBankerReason_KickBankerNone KickBankerReason = 0
	// 自己下庄的
	KickBankerReason_KickBankerBySelf KickBankerReason = 1
	// 钱不够踢掉的
	KickBankerReason_KickBankerByMoney KickBankerReason = 2
	// 不在房间踢掉的
	KickBankerReason_KickBankerByRoom KickBankerReason = 3
	// 超连庄回合数踢掉的
	KickBankerReason_KickBankerByRound KickBankerReason = 4
)

var KickBankerReason_name = map[int32]string{
	0: "KickBankerNone",
	1: "KickBankerBySelf",
	2: "KickBankerByMoney",
	3: "KickBankerByRoom",
	4: "KickBankerByRound",
}

var KickBankerReason_value = map[string]int32{
	"KickBankerNone":    0,
	"KickBankerBySelf":  1,
	"KickBankerByMoney": 2,
	"KickBankerByRoom":  3,
	"KickBankerByRound": 4,
}

func (x KickBankerReason) String() string {
	return proto.EnumName(KickBankerReason_name, int32(x))
}

func (KickBankerReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{58}
}

// 3门龙虎牌区
type DragonTigerCardArea int32

const (
	// 容错
	DragonTigerCardArea_CardAreaNone DragonTigerCardArea = 0
	// 龙
	DragonTigerCardArea_AreaDragon DragonTigerCardArea = 1
	// 虎
	DragonTigerCardArea_AreaTiger DragonTigerCardArea = 2
	// 和
	DragonTigerCardArea_AreaDraw DragonTigerCardArea = 3
)

var DragonTigerCardArea_name = map[int32]string{
	0: "CardAreaNone",
	1: "AreaDragon",
	2: "AreaTiger",
	3: "AreaDraw",
}

var DragonTigerCardArea_value = map[string]int32{
	"CardAreaNone": 0,
	"AreaDragon":   1,
	"AreaTiger":    2,
	"AreaDraw":     3,
}

func (x DragonTigerCardArea) String() string {
	return proto.EnumName(DragonTigerCardArea_name, int32(x))
}

func (DragonTigerCardArea) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{59}
}

// 龙虎类型
type DragonTigerType int32

const (
	//容错
	DragonTigerType_TypeNone DragonTigerType = 0
	// 龙
	DragonTigerType_TypeDragon DragonTigerType = 1
	// 虎
	DragonTigerType_TypeTiger DragonTigerType = 2
	// 和
	DragonTigerType_TypeDraw DragonTigerType = 3
)

var DragonTigerType_name = map[int32]string{
	0: "TypeNone",
	1: "TypeDragon",
	2: "TypeTiger",
	3: "TypeDraw",
}

var DragonTigerType_value = map[string]int32{
	"TypeNone":   0,
	"TypeDragon": 1,
	"TypeTiger":  2,
	"TypeDraw":   3,
}

func (x DragonTigerType) String() string {
	return proto.EnumName(DragonTigerType_name, int32(x))
}

func (DragonTigerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{60}
}

// 百家乐牌区
type BaccaratCardArea int32

const (
	// 容错
	BaccaratCardArea_BaccaratAreaNone BaccaratCardArea = 0
	// 庄
	BaccaratCardArea_AreaZhuang BaccaratCardArea = 1
	// 庄对
	BaccaratCardArea_AreaZhuangDui BaccaratCardArea = 2
	// 闲对
	BaccaratCardArea_AreaXianDui BaccaratCardArea = 3
	// 闲
	BaccaratCardArea_AreaXian BaccaratCardArea = 4
	// 和
	BaccaratCardArea_AreaHe BaccaratCardArea = 5
)

var BaccaratCardArea_name = map[int32]string{
	0: "BaccaratAreaNone",
	1: "AreaZhuang",
	2: "AreaZhuangDui",
	3: "AreaXianDui",
	4: "AreaXian",
	5: "AreaHe",
}

var BaccaratCardArea_value = map[string]int32{
	"BaccaratAreaNone": 0,
	"AreaZhuang":       1,
	"AreaZhuangDui":    2,
	"AreaXianDui":      3,
	"AreaXian":         4,
	"AreaHe":           5,
}

func (x BaccaratCardArea) String() string {
	return proto.EnumName(BaccaratCardArea_name, int32(x))
}

func (BaccaratCardArea) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{61}
}

// 百家乐类型
type BaccaratType int32

const (
	//容错
	BaccaratType_BaccaratTypeNone BaccaratType = 0
	// 庄
	BaccaratType_TypeZhuang BaccaratType = 1
	// 庄对
	BaccaratType_TypeZhuangDui BaccaratType = 2
	// 闲对
	BaccaratType_TypeXianDui BaccaratType = 3
	// 闲
	BaccaratType_TypeXian BaccaratType = 4
	// 和
	BaccaratType_TypeHe BaccaratType = 5
)

var BaccaratType_name = map[int32]string{
	0: "BaccaratTypeNone",
	1: "TypeZhuang",
	2: "TypeZhuangDui",
	3: "TypeXianDui",
	4: "TypeXian",
	5: "TypeHe",
}

var BaccaratType_value = map[string]int32{
	"BaccaratTypeNone": 0,
	"TypeZhuang":       1,
	"TypeZhuangDui":    2,
	"TypeXianDui":      3,
	"TypeXian":         4,
	"TypeHe":           5,
}

func (x BaccaratType) String() string {
	return proto.EnumName(BaccaratType_name, int32(x))
}

func (BaccaratType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{62}
}

// 游戏类型百人牛牛的操作类型
type HundredBullDoType int32

const (
	// 未知类型，用于容错
	HundredBullDoType_HundredBull_None HundredBullDoType = 0
	// 加入房间
	HundredBullDoType_HundredBull_JoinRoom HundredBullDoType = 1
	// 退出房间
	HundredBullDoType_HundredBull_ExitRoom HundredBullDoType = 2
	// 玩家下注
	HundredBullDoType_HundredBull_PlayerBet HundredBullDoType = 3
	// 玩家申请上庄
	HundredBullDoType_HundredBull_UpBanker HundredBullDoType = 4
	// 玩家申请下庄/退出申请上庄
	HundredBullDoType_HundredBull_DownBanker HundredBullDoType = 5
	// 获取房间历史输赢记录
	HundredBullDoType_HundredBull_GetRoomWinLog HundredBullDoType = 6
	// 获取房间最新玩家列表
	HundredBullDoType_HundredBull_GetRoomPlayerList HundredBullDoType = 7
)

var HundredBullDoType_name = map[int32]string{
	0: "HundredBull_None",
	1: "HundredBull_JoinRoom",
	2: "HundredBull_ExitRoom",
	3: "HundredBull_PlayerBet",
	4: "HundredBull_UpBanker",
	5: "HundredBull_DownBanker",
	6: "HundredBull_GetRoomWinLog",
	7: "HundredBull_GetRoomPlayerList",
}

var HundredBullDoType_value = map[string]int32{
	"HundredBull_None":              0,
	"HundredBull_JoinRoom":          1,
	"HundredBull_ExitRoom":          2,
	"HundredBull_PlayerBet":         3,
	"HundredBull_UpBanker":          4,
	"HundredBull_DownBanker":        5,
	"HundredBull_GetRoomWinLog":     6,
	"HundredBull_GetRoomPlayerList": 7,
}

func (x HundredBullDoType) String() string {
	return proto.EnumName(HundredBullDoType_name, int32(x))
}

func (HundredBullDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{63}
}

// --------------------------------------------------------------------------
// 百人牛牛下注请求
// --------------------------------------------------------------------------
// 百人牛牛牌区(庄天地玄黄)
type HundredBullCardArea int32

const (
	// 容错
	HundredBullCardArea_AreaNone HundredBullCardArea = 0
	// 庄
	HundredBullCardArea_AreaBanker HundredBullCardArea = 1
	// 天
	HundredBullCardArea_AreaSky HundredBullCardArea = 2
	// 地
	HundredBullCardArea_AreaLand HundredBullCardArea = 3
	// 玄
	HundredBullCardArea_AreaDark HundredBullCardArea = 4
	// 黄
	HundredBullCardArea_AreaYellow HundredBullCardArea = 5
)

var HundredBullCardArea_name = map[int32]string{
	0: "AreaNone",
	1: "AreaBanker",
	2: "AreaSky",
	3: "AreaLand",
	4: "AreaDark",
	5: "AreaYellow",
}

var HundredBullCardArea_value = map[string]int32{
	"AreaNone":   0,
	"AreaBanker": 1,
	"AreaSky":    2,
	"AreaLand":   3,
	"AreaDark":   4,
	"AreaYellow": 5,
}

func (x HundredBullCardArea) String() string {
	return proto.EnumName(HundredBullCardArea_name, int32(x))
}

func (HundredBullCardArea) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{64}
}

// 百人牛牛下注区域(天地玄黄)
type HundredBullBetArea int32

const (
	// 天
	HundredBullBetArea_Sky HundredBullBetArea = 0
	// 地
	HundredBullBetArea_Land HundredBullBetArea = 1
	// 玄
	HundredBullBetArea_Dark HundredBullBetArea = 2
	// 黄
	HundredBullBetArea_Yellow HundredBullBetArea = 3
	// 天（翻倍）
	HundredBullBetArea_SkyDouble HundredBullBetArea = 4
	// 地（翻倍）
	HundredBullBetArea_LandDouble HundredBullBetArea = 5
	// 玄（翻倍）
	HundredBullBetArea_DarkDouble HundredBullBetArea = 6
	// 黄（翻倍）
	HundredBullBetArea_YellowDouble HundredBullBetArea = 7
)

var HundredBullBetArea_name = map[int32]string{
	0: "Sky",
	1: "Land",
	2: "Dark",
	3: "Yellow",
	4: "SkyDouble",
	5: "LandDouble",
	6: "DarkDouble",
	7: "YellowDouble",
}

var HundredBullBetArea_value = map[string]int32{
	"Sky":          0,
	"Land":         1,
	"Dark":         2,
	"Yellow":       3,
	"SkyDouble":    4,
	"LandDouble":   5,
	"DarkDouble":   6,
	"YellowDouble": 7,
}

func (x HundredBullBetArea) String() string {
	return proto.EnumName(HundredBullBetArea_name, int32(x))
}

func (HundredBullBetArea) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{65}
}

// 游戏类型推筒子的操作类型
type PushBobbinDoType int32

const (
	// 未知类型，用于容错
	PushBobbinDoType_PushBobbin_None PushBobbinDoType = 0
	// 加入房间
	PushBobbinDoType_PushBobbin_JoinRoom PushBobbinDoType = 1
	// 退出房间
	PushBobbinDoType_PushBobbin_ExitRoom PushBobbinDoType = 2
	// 玩家下注
	PushBobbinDoType_PushBobbin_PlayerBet PushBobbinDoType = 3
	// 玩家申请上庄
	PushBobbinDoType_PushBobbin_UpBanker PushBobbinDoType = 4
	// 玩家申请下庄/退出申请上庄
	PushBobbinDoType_PushBobbin_DownBanker PushBobbinDoType = 5
	// 获取房间历史输赢记录
	PushBobbinDoType_PushBobbin_GetRoomWinLog PushBobbinDoType = 6
	// 获取房间最新玩家列表
	PushBobbinDoType_PushBobbin_GetRoomPlayerList PushBobbinDoType = 7
)

var PushBobbinDoType_name = map[int32]string{
	0: "PushBobbin_None",
	1: "PushBobbin_JoinRoom",
	2: "PushBobbin_ExitRoom",
	3: "PushBobbin_PlayerBet",
	4: "PushBobbin_UpBanker",
	5: "PushBobbin_DownBanker",
	6: "PushBobbin_GetRoomWinLog",
	7: "PushBobbin_GetRoomPlayerList",
}

var PushBobbinDoType_value = map[string]int32{
	"PushBobbin_None":              0,
	"PushBobbin_JoinRoom":          1,
	"PushBobbin_ExitRoom":          2,
	"PushBobbin_PlayerBet":         3,
	"PushBobbin_UpBanker":          4,
	"PushBobbin_DownBanker":        5,
	"PushBobbin_GetRoomWinLog":     6,
	"PushBobbin_GetRoomPlayerList": 7,
}

func (x PushBobbinDoType) String() string {
	return proto.EnumName(PushBobbinDoType_name, int32(x))
}

func (PushBobbinDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{66}
}

// 推筒子的牌型
type PushBobbinMahjongType int32

const (
	// 0点
	PushBobbinMahjongType_PushBobbinMahjongType_None PushBobbinMahjongType = 0
	// 1~9
	PushBobbinMahjongType_PushBobbinMahjongType_Number1 PushBobbinMahjongType = 1
	PushBobbinMahjongType_PushBobbinMahjongType_Number2 PushBobbinMahjongType = 2
	PushBobbinMahjongType_PushBobbinMahjongType_Number3 PushBobbinMahjongType = 3
	PushBobbinMahjongType_PushBobbinMahjongType_Number4 PushBobbinMahjongType = 4
	PushBobbinMahjongType_PushBobbinMahjongType_Number5 PushBobbinMahjongType = 5
	PushBobbinMahjongType_PushBobbinMahjongType_Number6 PushBobbinMahjongType = 6
	PushBobbinMahjongType_PushBobbinMahjongType_Number7 PushBobbinMahjongType = 7
	PushBobbinMahjongType_PushBobbinMahjongType_Number8 PushBobbinMahjongType = 8
	PushBobbinMahjongType_PushBobbinMahjongType_Number9 PushBobbinMahjongType = 9
	// 豹子
	PushBobbinMahjongType_PushBobbinMahjongType_Leopard PushBobbinMahjongType = 10
	// 天杠
	PushBobbinMahjongType_PushBobbinMahjongType_Sky PushBobbinMahjongType = 11
	// 天尊
	PushBobbinMahjongType_PushBobbinMahjongType_Buddha PushBobbinMahjongType = 12
)

var PushBobbinMahjongType_name = map[int32]string{
	0:  "PushBobbinMahjongType_None",
	1:  "PushBobbinMahjongType_Number1",
	2:  "PushBobbinMahjongType_Number2",
	3:  "PushBobbinMahjongType_Number3",
	4:  "PushBobbinMahjongType_Number4",
	5:  "PushBobbinMahjongType_Number5",
	6:  "PushBobbinMahjongType_Number6",
	7:  "PushBobbinMahjongType_Number7",
	8:  "PushBobbinMahjongType_Number8",
	9:  "PushBobbinMahjongType_Number9",
	10: "PushBobbinMahjongType_Leopard",
	11: "PushBobbinMahjongType_Sky",
	12: "PushBobbinMahjongType_Buddha",
}

var PushBobbinMahjongType_value = map[string]int32{
	"PushBobbinMahjongType_None":    0,
	"PushBobbinMahjongType_Number1": 1,
	"PushBobbinMahjongType_Number2": 2,
	"PushBobbinMahjongType_Number3": 3,
	"PushBobbinMahjongType_Number4": 4,
	"PushBobbinMahjongType_Number5": 5,
	"PushBobbinMahjongType_Number6": 6,
	"PushBobbinMahjongType_Number7": 7,
	"PushBobbinMahjongType_Number8": 8,
	"PushBobbinMahjongType_Number9": 9,
	"PushBobbinMahjongType_Leopard": 10,
	"PushBobbinMahjongType_Sky":     11,
	"PushBobbinMahjongType_Buddha":  12,
}

func (x PushBobbinMahjongType) String() string {
	return proto.EnumName(PushBobbinMahjongType_name, int32(x))
}

func (PushBobbinMahjongType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{67}
}

// 推筒子牌区(庄天顺地)
type PushBobbinCardArea int32

const (
	// 容错
	PushBobbinCardArea_PushBobbinAreaNone PushBobbinCardArea = 0
	// 庄
	PushBobbinCardArea_PushBobbinAreaBanker PushBobbinCardArea = 1
	// 天
	PushBobbinCardArea_PushBobbinAreaSky PushBobbinCardArea = 2
	// 顺
	PushBobbinCardArea_PushBobbinAreaObey PushBobbinCardArea = 3
	// 地
	PushBobbinCardArea_PushBobbinAreaLand PushBobbinCardArea = 4
)

var PushBobbinCardArea_name = map[int32]string{
	0: "PushBobbinAreaNone",
	1: "PushBobbinAreaBanker",
	2: "PushBobbinAreaSky",
	3: "PushBobbinAreaObey",
	4: "PushBobbinAreaLand",
}

var PushBobbinCardArea_value = map[string]int32{
	"PushBobbinAreaNone":   0,
	"PushBobbinAreaBanker": 1,
	"PushBobbinAreaSky":    2,
	"PushBobbinAreaObey":   3,
	"PushBobbinAreaLand":   4,
}

func (x PushBobbinCardArea) String() string {
	return proto.EnumName(PushBobbinCardArea_name, int32(x))
}

func (PushBobbinCardArea) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{68}
}

// 推筒子下注区域(天地玄黄)
type PushBobbinBetArea int32

const (
	// 天
	PushBobbinBetArea_PushBobbin_Sky PushBobbinBetArea = 0
	// 顺
	PushBobbinBetArea_PushBobbin_Obey PushBobbinBetArea = 1
	// 地
	PushBobbinBetArea_PushBobbin_Land PushBobbinBetArea = 2
)

var PushBobbinBetArea_name = map[int32]string{
	0: "PushBobbin_Sky",
	1: "PushBobbin_Obey",
	2: "PushBobbin_Land",
}

var PushBobbinBetArea_value = map[string]int32{
	"PushBobbin_Sky":  0,
	"PushBobbin_Obey": 1,
	"PushBobbin_Land": 2,
}

func (x PushBobbinBetArea) String() string {
	return proto.EnumName(PushBobbinBetArea_name, int32(x))
}

func (PushBobbinBetArea) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{69}
}

// 会员状态
type ClubMemberStatus int32

const (
	// 申请中
	ClubMemberStatus_ClubMemberApplyIng ClubMemberStatus = 0
	// 申请通过
	ClubMemberStatus_MasterAccept ClubMemberStatus = 1
	// 申请被拒绝
	ClubMemberStatus_MasterRefuse ClubMemberStatus = 2
	// 申请人主动放弃申请
	ClubMemberStatus_ApplicantCancel ClubMemberStatus = 3
	// 会员主动退出俱乐部
	ClubMemberStatus_MemberQuit ClubMemberStatus = 4
	// 部长驱除
	ClubMemberStatus_MasterDriveAway ClubMemberStatus = 5
	// 被动退出俱乐部确认(被动是指被拒绝，部长驱除这两个操作的确认)
	ClubMemberStatus_PassiveQuitConfirm ClubMemberStatus = 6
	// 会员被设置为冻结状态后就不能进入房间
	ClubMemberStatus_Freeze ClubMemberStatus = 7
)

var ClubMemberStatus_name = map[int32]string{
	0: "ClubMemberApplyIng",
	1: "MasterAccept",
	2: "MasterRefuse",
	3: "ApplicantCancel",
	4: "MemberQuit",
	5: "MasterDriveAway",
	6: "PassiveQuitConfirm",
	7: "Freeze",
}

var ClubMemberStatus_value = map[string]int32{
	"ClubMemberApplyIng": 0,
	"MasterAccept":       1,
	"MasterRefuse":       2,
	"ApplicantCancel":    3,
	"MemberQuit":         4,
	"MasterDriveAway":    5,
	"PassiveQuitConfirm": 6,
	"Freeze":             7,
}

func (x ClubMemberStatus) String() string {
	return proto.EnumName(ClubMemberStatus_name, int32(x))
}

func (ClubMemberStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{70}
}

// 俱乐部状态
type ClubStatus int32

const (
	ClubStatus_ClubNone ClubStatus = 0
	// 申请创建
	ClubStatus_ClubApplyIng ClubStatus = 1
	// 创建成功
	ClubStatus_CreateSuccess ClubStatus = 2
	// 创建被拒绝
	ClubStatus_CreateRefuse ClubStatus = 3
	// 主动放弃申请
	ClubStatus_CreateClubCancel ClubStatus = 4
	// 部长解散
	ClubStatus_MasterDismiss ClubStatus = 5
	// 系统管理员禁用
	ClubStatus_AdminDismiss ClubStatus = 6
	// 被动解散俱乐部确认
	ClubStatus_PassiveDismissConfirm ClubStatus = 7
)

var ClubStatus_name = map[int32]string{
	0: "ClubNone",
	1: "ClubApplyIng",
	2: "CreateSuccess",
	3: "CreateRefuse",
	4: "CreateClubCancel",
	5: "MasterDismiss",
	6: "AdminDismiss",
	7: "PassiveDismissConfirm",
}

var ClubStatus_value = map[string]int32{
	"ClubNone":              0,
	"ClubApplyIng":          1,
	"CreateSuccess":         2,
	"CreateRefuse":          3,
	"CreateClubCancel":      4,
	"MasterDismiss":         5,
	"AdminDismiss":          6,
	"PassiveDismissConfirm": 7,
}

func (x ClubStatus) String() string {
	return proto.EnumName(ClubStatus_name, int32(x))
}

func (ClubStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{71}
}

// 玩家在俱乐部中的身份
type ClubRole int32

const (
	// 会长
	ClubRole_ClubRoleMaster ClubRole = 0
	// 普通会员
	ClubRole_ClubRoleMember ClubRole = 1
	// 俱乐部管理员
	ClubRole_ClubRoleManager ClubRole = 3
)

var ClubRole_name = map[int32]string{
	0: "ClubRoleMaster",
	1: "ClubRoleMember",
	3: "ClubRoleManager",
}

var ClubRole_value = map[string]int32{
	"ClubRoleMaster":  0,
	"ClubRoleMember":  1,
	"ClubRoleManager": 3,
}

func (x ClubRole) String() string {
	return proto.EnumName(ClubRole_name, int32(x))
}

func (ClubRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{72}
}

// 联盟会员角色(没有普通会员定义，因为进入了联盟就默认是会员)
type LeagueMemberRole int32

const (
	LeagueMemberRole_LeagueNone LeagueMemberRole = 0
	// 普通会员
	LeagueMemberRole_LeagueMember LeagueMemberRole = 1
	// 盟主
	LeagueMemberRole_LeagueMaster LeagueMemberRole = 2
	// 管理员
	LeagueMemberRole_LeagueManager LeagueMemberRole = 4
	// 合伙人
	LeagueMemberRole_LeaguePartner LeagueMemberRole = 8
	// 代理
	LeagueMemberRole_LeagueAgent LeagueMemberRole = 16
)

var LeagueMemberRole_name = map[int32]string{
	0:  "LeagueNone",
	1:  "LeagueMember",
	2:  "LeagueMaster",
	4:  "LeagueManager",
	8:  "LeaguePartner",
	16: "LeagueAgent",
}

var LeagueMemberRole_value = map[string]int32{
	"LeagueNone":    0,
	"LeagueMember":  1,
	"LeagueMaster":  2,
	"LeagueManager": 4,
	"LeaguePartner": 8,
	"LeagueAgent":   16,
}

func (x LeagueMemberRole) String() string {
	return proto.EnumName(LeagueMemberRole_name, int32(x))
}

func (LeagueMemberRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{73}
}

// 联盟状态
type LeagueStatus int32

const (
	// 申请创建联盟
	LeagueStatus_LeagueApplyIng LeagueStatus = 0
	// 联盟创建成功
	LeagueStatus_LeagueCreateSuccess LeagueStatus = 1
	// 联盟创建被拒绝
	LeagueStatus_LeagueCreateRefuse LeagueStatus = 2
	// 主动放弃申请创建联盟
	LeagueStatus_LeagueCreateClubCancel LeagueStatus = 3
	// 盟主解散
	LeagueStatus_LeagueMasterDismiss LeagueStatus = 4
	// 系统管理员禁用
	LeagueStatus_AdminDismissLeague LeagueStatus = 5
)

var LeagueStatus_name = map[int32]string{
	0: "LeagueApplyIng",
	1: "LeagueCreateSuccess",
	2: "LeagueCreateRefuse",
	3: "LeagueCreateClubCancel",
	4: "LeagueMasterDismiss",
	5: "AdminDismissLeague",
}

var LeagueStatus_value = map[string]int32{
	"LeagueApplyIng":         0,
	"LeagueCreateSuccess":    1,
	"LeagueCreateRefuse":     2,
	"LeagueCreateClubCancel": 3,
	"LeagueMasterDismiss":    4,
	"AdminDismissLeague":     5,
}

func (x LeagueStatus) String() string {
	return proto.EnumName(LeagueStatus_name, int32(x))
}

func (LeagueStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{74}
}

// 联盟合作者状态
type LeaguePartnerStatus int32

const (
	// 申请成为联盟合作者
	LeaguePartnerStatus_LeaguePartnerApplicant LeaguePartnerStatus = 0
	// 成为联盟合作者成功
	LeaguePartnerStatus_LeaguePartnerSuccess LeaguePartnerStatus = 1
	// 被盟主驱除
	LeaguePartnerStatus_LeaguePartnerKickout LeaguePartnerStatus = 2
	// 自己退出联盟
	LeaguePartnerStatus_LeaguePartnerQuit LeaguePartnerStatus = 3
)

var LeaguePartnerStatus_name = map[int32]string{
	0: "LeaguePartnerApplicant",
	1: "LeaguePartnerSuccess",
	2: "LeaguePartnerKickout",
	3: "LeaguePartnerQuit",
}

var LeaguePartnerStatus_value = map[string]int32{
	"LeaguePartnerApplicant": 0,
	"LeaguePartnerSuccess":   1,
	"LeaguePartnerKickout":   2,
	"LeaguePartnerQuit":      3,
}

func (x LeaguePartnerStatus) String() string {
	return proto.EnumName(LeaguePartnerStatus_name, int32(x))
}

func (LeaguePartnerStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{75}
}

// 联盟成员状态
type LeagueMemberStatus int32

const (
	// 申请成为联盟成员(俱乐部需要申请，成员永远不会是这个状态)
	LeagueMemberStatus_LeagueMemberApplicant LeagueMemberStatus = 0
	// 成为联盟成员成功
	LeagueMemberStatus_LeagueMemberSuccess LeagueMemberStatus = 1
	// 被盟主驱除
	LeagueMemberStatus_LeagueMemberKickout LeagueMemberStatus = 2
	// 自己退出联盟
	LeagueMemberStatus_LeagueMemberQuit LeagueMemberStatus = 3
	//冻结玩家
	LeagueMemberStatus_LeagueMemberFrozen LeagueMemberStatus = 4
)

var LeagueMemberStatus_name = map[int32]string{
	0: "LeagueMemberApplicant",
	1: "LeagueMemberSuccess",
	2: "LeagueMemberKickout",
	3: "LeagueMemberQuit",
	4: "LeagueMemberFrozen",
}

var LeagueMemberStatus_value = map[string]int32{
	"LeagueMemberApplicant": 0,
	"LeagueMemberSuccess":   1,
	"LeagueMemberKickout":   2,
	"LeagueMemberQuit":      3,
	"LeagueMemberFrozen":    4,
}

func (x LeagueMemberStatus) String() string {
	return proto.EnumName(LeagueMemberStatus_name, int32(x))
}

func (LeagueMemberStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{76}
}

// 联盟俱乐部状态
type LeagueClubStatus int32

const (
	LeagueClubStatus_LeagueClubNone LeagueClubStatus = 0
	// 申请加入联盟
	LeagueClubStatus_LeagueClubApplying LeagueClubStatus = 1
	// 成为联盟俱乐部成功
	LeagueClubStatus_LeagueClubSuccess LeagueClubStatus = 2
	// 成为联盟俱乐部被拒绝
	LeagueClubStatus_LeagueClubRefuse LeagueClubStatus = 3
	// 被盟主驱除
	LeagueClubStatus_LeagueClubKickout LeagueClubStatus = 4
	// 自己退出联盟
	LeagueClubStatus_LeagueClubQuit LeagueClubStatus = 5
)

var LeagueClubStatus_name = map[int32]string{
	0: "LeagueClubNone",
	1: "LeagueClubApplying",
	2: "LeagueClubSuccess",
	3: "LeagueClubRefuse",
	4: "LeagueClubKickout",
	5: "LeagueClubQuit",
}

var LeagueClubStatus_value = map[string]int32{
	"LeagueClubNone":     0,
	"LeagueClubApplying": 1,
	"LeagueClubSuccess":  2,
	"LeagueClubRefuse":   3,
	"LeagueClubKickout":  4,
	"LeagueClubQuit":     5,
}

func (x LeagueClubStatus) String() string {
	return proto.EnumName(LeagueClubStatus_name, int32(x))
}

func (LeagueClubStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{77}
}

type LeagueDoType int32

const (
	//容错
	LeagueDoType_LeagueDo_None LeagueDoType = 0
	//创建联盟
	LeagueDoType_LeagueDo_CreateLeague LeagueDoType = 1
	//申请加入联盟
	LeagueDoType_LeagueDo_JoinLeague LeagueDoType = 2
	//退出联盟
	LeagueDoType_LeagueDo_QuitLeague LeagueDoType = 3
	//处理申请
	LeagueDoType_LeagueDo_HandleJoinRequest LeagueDoType = 4
	//设置管理员
	LeagueDoType_LeagueDo_SetManager LeagueDoType = 5
	//冻结玩家
	LeagueDoType_LeagueDo_FreezeMember LeagueDoType = 6
	//设置代理
	LeagueDoType_LeagueDo_SetAgent LeagueDoType = 7
	//设置代理分成
	LeagueDoType_LeagueDo_SetAgentProfitRate LeagueDoType = 8
	//赠送金豆
	LeagueDoType_LeagueDo_GiveBean LeagueDoType = 9
	//创建房间
	LeagueDoType_LeagueDo_CreateRoom LeagueDoType = 10
	//进入房间
	LeagueDoType_LeagueDo_JoinRoom LeagueDoType = 11
	//解散房间
	LeagueDoType_LeagueDo_DissolveRoom LeagueDoType = 12
	//获取房间列表
	LeagueDoType_LeagueDo_GetRoomList LeagueDoType = 13
	//获取我的联盟列表
	LeagueDoType_LeagueDo_GetMyLeagueList LeagueDoType = 14
	//获取申请列表
	LeagueDoType_LeagueDo_GetRequestList LeagueDoType = 15
	//获取联盟成员
	LeagueDoType_LeagueDo_GetMembers LeagueDoType = 16
	//获取联盟信息
	LeagueDoType_LeagueDo_GetLeagueInfo LeagueDoType = 17
	//根据邀请码获取联盟信息和能加入的俱乐部
	LeagueDoType_LeagueDo_GetLeagueInfoByInviteCode LeagueDoType = 18
	//获取我的下级俱乐部部长列表
	LeagueDoType_LeagueDo_GetMySubClubMasters LeagueDoType = 19
	//修改联盟设置
	LeagueDoType_LeagueDo_UpdateLeagueSetting LeagueDoType = 20
	//解散联盟
	LeagueDoType_LeagueDo_DissolveLeague LeagueDoType = 21
	//设置抽水比例
	LeagueDoType_LeagueDo_SetGameCommission LeagueDoType = 22
	//获取分成金额
	LeagueDoType_LeagueDo_GetAgentCommission LeagueDoType = 23
	//领取分成金额
	LeagueDoType_LeagueDo_ReceiveCommission LeagueDoType = 24
	//获取下级分成列表
	LeagueDoType_LeagueDo_GetLeagueSubAgentCommission LeagueDoType = 25
	//获取个人在联盟的基本信息
	LeagueDoType_LeagueDo_GetSelfInfoOfLeague LeagueDoType = 26
	LeagueDoType_LeagueDo_GetBeanChangeRecord LeagueDoType = 27
)

var LeagueDoType_name = map[int32]string{
	0:  "LeagueDo_None",
	1:  "LeagueDo_CreateLeague",
	2:  "LeagueDo_JoinLeague",
	3:  "LeagueDo_QuitLeague",
	4:  "LeagueDo_HandleJoinRequest",
	5:  "LeagueDo_SetManager",
	6:  "LeagueDo_FreezeMember",
	7:  "LeagueDo_SetAgent",
	8:  "LeagueDo_SetAgentProfitRate",
	9:  "LeagueDo_GiveBean",
	10: "LeagueDo_CreateRoom",
	11: "LeagueDo_JoinRoom",
	12: "LeagueDo_DissolveRoom",
	13: "LeagueDo_GetRoomList",
	14: "LeagueDo_GetMyLeagueList",
	15: "LeagueDo_GetRequestList",
	16: "LeagueDo_GetMembers",
	17: "LeagueDo_GetLeagueInfo",
	18: "LeagueDo_GetLeagueInfoByInviteCode",
	19: "LeagueDo_GetMySubClubMasters",
	20: "LeagueDo_UpdateLeagueSetting",
	21: "LeagueDo_DissolveLeague",
	22: "LeagueDo_SetGameCommission",
	23: "LeagueDo_GetAgentCommission",
	24: "LeagueDo_ReceiveCommission",
	25: "LeagueDo_GetLeagueSubAgentCommission",
	26: "LeagueDo_GetSelfInfoOfLeague",
	27: "LeagueDo_GetBeanChangeRecord",
}

var LeagueDoType_value = map[string]int32{
	"LeagueDo_None":                        0,
	"LeagueDo_CreateLeague":                1,
	"LeagueDo_JoinLeague":                  2,
	"LeagueDo_QuitLeague":                  3,
	"LeagueDo_HandleJoinRequest":           4,
	"LeagueDo_SetManager":                  5,
	"LeagueDo_FreezeMember":                6,
	"LeagueDo_SetAgent":                    7,
	"LeagueDo_SetAgentProfitRate":          8,
	"LeagueDo_GiveBean":                    9,
	"LeagueDo_CreateRoom":                  10,
	"LeagueDo_JoinRoom":                    11,
	"LeagueDo_DissolveRoom":                12,
	"LeagueDo_GetRoomList":                 13,
	"LeagueDo_GetMyLeagueList":             14,
	"LeagueDo_GetRequestList":              15,
	"LeagueDo_GetMembers":                  16,
	"LeagueDo_GetLeagueInfo":               17,
	"LeagueDo_GetLeagueInfoByInviteCode":   18,
	"LeagueDo_GetMySubClubMasters":         19,
	"LeagueDo_UpdateLeagueSetting":         20,
	"LeagueDo_DissolveLeague":              21,
	"LeagueDo_SetGameCommission":           22,
	"LeagueDo_GetAgentCommission":          23,
	"LeagueDo_ReceiveCommission":           24,
	"LeagueDo_GetLeagueSubAgentCommission": 25,
	"LeagueDo_GetSelfInfoOfLeague":         26,
	"LeagueDo_GetBeanChangeRecord":         27,
}

func (x LeagueDoType) String() string {
	return proto.EnumName(LeagueDoType_name, int32(x))
}

func (LeagueDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{78}
}

//加入联盟申请状态
type JoinLeagueRequestStatus int32

const (
	//申请中
	JoinLeagueRequestStatus_JoinLeagueRequestStatus_ApplyIng JoinLeagueRequestStatus = 0
	//通过
	JoinLeagueRequestStatus_JoinLeagueRequestStatus_Accept JoinLeagueRequestStatus = 1
	//拒绝
	JoinLeagueRequestStatus_JoinLeagueRequestStatus_Refuse JoinLeagueRequestStatus = 2
	//申请人取消
	JoinLeagueRequestStatus_JoinLeagueRequestStatus_Cancel JoinLeagueRequestStatus = 3
)

var JoinLeagueRequestStatus_name = map[int32]string{
	0: "JoinLeagueRequestStatus_ApplyIng",
	1: "JoinLeagueRequestStatus_Accept",
	2: "JoinLeagueRequestStatus_Refuse",
	3: "JoinLeagueRequestStatus_Cancel",
}

var JoinLeagueRequestStatus_value = map[string]int32{
	"JoinLeagueRequestStatus_ApplyIng": 0,
	"JoinLeagueRequestStatus_Accept":   1,
	"JoinLeagueRequestStatus_Refuse":   2,
	"JoinLeagueRequestStatus_Cancel":   3,
}

func (x JoinLeagueRequestStatus) String() string {
	return proto.EnumName(JoinLeagueRequestStatus_name, int32(x))
}

func (JoinLeagueRequestStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{79}
}

//俱乐部成员变动通知类型
type ClubMemberChangeNoticeType int32

const (
	ClubMemberChangeNoticeType_ClubMemberChangeNoticeType_None ClubMemberChangeNoticeType = 0
	//俱乐部加入成员
	ClubMemberChangeNoticeType_ClubMemberChangeNoticeType_JoinClub ClubMemberChangeNoticeType = 1
	//俱乐部成员退出
	ClubMemberChangeNoticeType_ClubMemberChangeNoticeType_QuitClub ClubMemberChangeNoticeType = 2
	//俱乐部解散
	ClubMemberChangeNoticeType_ClubMemberChangeNoticeType_DismissClub ClubMemberChangeNoticeType = 3
)

var ClubMemberChangeNoticeType_name = map[int32]string{
	0: "ClubMemberChangeNoticeType_None",
	1: "ClubMemberChangeNoticeType_JoinClub",
	2: "ClubMemberChangeNoticeType_QuitClub",
	3: "ClubMemberChangeNoticeType_DismissClub",
}

var ClubMemberChangeNoticeType_value = map[string]int32{
	"ClubMemberChangeNoticeType_None":        0,
	"ClubMemberChangeNoticeType_JoinClub":    1,
	"ClubMemberChangeNoticeType_QuitClub":    2,
	"ClubMemberChangeNoticeType_DismissClub": 3,
}

func (x ClubMemberChangeNoticeType) String() string {
	return proto.EnumName(ClubMemberChangeNoticeType_name, int32(x))
}

func (ClubMemberChangeNoticeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{80}
}

// 游戏类型炸金花的操作类型
type JinhuaDoType int32

const (
	// 未知类型，用于容错
	JinhuaDoType_JinhuaDo_None JinhuaDoType = 0
	// 炸金花加入房间
	JinhuaDoType_JinhuaDo_JoinRoom JinhuaDoType = 1
	//炸金花退出房间
	JinhuaDoType_JinhuaDo_ExitRoom JinhuaDoType = 2
	//炸金花改变玩家状态
	JinhuaDoType_JinhuaDo_ChangeState JinhuaDoType = 3
	// 炸金花玩家操作
	JinhuaDoType_JinhuaDo_Operate JinhuaDoType = 4
	//炸金花创建房间
	JinhuaDoType_JinhuaDo_CreateRoom JinhuaDoType = 5
	// 炸金花房卡场开始游戏
	JinhuaDoType_JinhuaDo_StartRoom JinhuaDoType = 6
)

var JinhuaDoType_name = map[int32]string{
	0: "JinhuaDo_None",
	1: "JinhuaDo_JoinRoom",
	2: "JinhuaDo_ExitRoom",
	3: "JinhuaDo_ChangeState",
	4: "JinhuaDo_Operate",
	5: "JinhuaDo_CreateRoom",
	6: "JinhuaDo_StartRoom",
}

var JinhuaDoType_value = map[string]int32{
	"JinhuaDo_None":        0,
	"JinhuaDo_JoinRoom":    1,
	"JinhuaDo_ExitRoom":    2,
	"JinhuaDo_ChangeState": 3,
	"JinhuaDo_Operate":     4,
	"JinhuaDo_CreateRoom":  5,
	"JinhuaDo_StartRoom":   6,
}

func (x JinhuaDoType) String() string {
	return proto.EnumName(JinhuaDoType_name, int32(x))
}

func (JinhuaDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{81}
}

// 诈金花的牌型
type JinhuaPokerType int32

const (
	// 未知类型，用于容错
	JinhuaPokerType_JinhuaCardType_None JinhuaPokerType = 0
	// 普通牛的类型
	//豹子
	JinhuaPokerType_JinhuaCardType_Trip JinhuaPokerType = 1
	//顺金（同花顺）
	JinhuaPokerType_JinhuaCardType_StraightFlush JinhuaPokerType = 2
	//金花（同花）
	JinhuaPokerType_JinhuaCardType_Flush JinhuaPokerType = 3
	//顺子
	JinhuaPokerType_JinhuaCardType_Straight JinhuaPokerType = 4
	//对子
	JinhuaPokerType_JinhuaCardType_Pair JinhuaPokerType = 5
	//单张
	JinhuaPokerType_JinhuaCardType_Single JinhuaPokerType = 6
)

var JinhuaPokerType_name = map[int32]string{
	0: "JinhuaCardType_None",
	1: "JinhuaCardType_Trip",
	2: "JinhuaCardType_StraightFlush",
	3: "JinhuaCardType_Flush",
	4: "JinhuaCardType_Straight",
	5: "JinhuaCardType_Pair",
	6: "JinhuaCardType_Single",
}

var JinhuaPokerType_value = map[string]int32{
	"JinhuaCardType_None":          0,
	"JinhuaCardType_Trip":          1,
	"JinhuaCardType_StraightFlush": 2,
	"JinhuaCardType_Flush":         3,
	"JinhuaCardType_Straight":      4,
	"JinhuaCardType_Pair":          5,
	"JinhuaCardType_Single":        6,
}

func (x JinhuaPokerType) String() string {
	return proto.EnumName(JinhuaPokerType_name, int32(x))
}

func (JinhuaPokerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{82}
}

// 诈金花加注、跟注、根到底、看牌、放弃、比牌、全压等操作
type JinhuaOperateType int32

const (
	//容错
	JinhuaOperateType_JinhuaOperateType_None JinhuaOperateType = 0
	//加注
	JinhuaOperateType_JinhuaOperateType_Raise JinhuaOperateType = 1
	// 跟注
	JinhuaOperateType_JinhuaOperateType_Call JinhuaOperateType = 2
	//跟到底
	JinhuaOperateType_JinhuaOperateType_CallingStation JinhuaOperateType = 3
	// 看牌
	JinhuaOperateType_JinhuaOperateType_Check JinhuaOperateType = 4
	// 放弃
	JinhuaOperateType_JinhuaOperateType_Fold JinhuaOperateType = 5
	// 比牌
	JinhuaOperateType_JinhuaOperateType_Compare JinhuaOperateType = 6
	// 全压
	JinhuaOperateType_JinhuaOperateType_AllIn JinhuaOperateType = 7
	//取消跟到底
	JinhuaOperateType_JinhuaOperateType_CancelCallingStation JinhuaOperateType = 8
	//孤注一掷
	JinhuaOperateType_JinhuaOperateType_LastThrow JinhuaOperateType = 9
)

var JinhuaOperateType_name = map[int32]string{
	0: "JinhuaOperateType_None",
	1: "JinhuaOperateType_Raise",
	2: "JinhuaOperateType_Call",
	3: "JinhuaOperateType_CallingStation",
	4: "JinhuaOperateType_Check",
	5: "JinhuaOperateType_Fold",
	6: "JinhuaOperateType_Compare",
	7: "JinhuaOperateType_AllIn",
	8: "JinhuaOperateType_CancelCallingStation",
	9: "JinhuaOperateType_LastThrow",
}

var JinhuaOperateType_value = map[string]int32{
	"JinhuaOperateType_None":                 0,
	"JinhuaOperateType_Raise":                1,
	"JinhuaOperateType_Call":                 2,
	"JinhuaOperateType_CallingStation":       3,
	"JinhuaOperateType_Check":                4,
	"JinhuaOperateType_Fold":                 5,
	"JinhuaOperateType_Compare":              6,
	"JinhuaOperateType_AllIn":                7,
	"JinhuaOperateType_CancelCallingStation": 8,
	"JinhuaOperateType_LastThrow":            9,
}

func (x JinhuaOperateType) String() string {
	return proto.EnumName(JinhuaOperateType_name, int32(x))
}

func (JinhuaOperateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{83}
}

//加注等级
type JinhuaRaiseType int32

const (
	JinhuaRaiseType_JinhuaRaiseType_None     JinhuaRaiseType = 0
	JinhuaRaiseType_JinhuaRaiseType_Level1   JinhuaRaiseType = 1
	JinhuaRaiseType_JinhuaRaiseType_Level2   JinhuaRaiseType = 2
	JinhuaRaiseType_JinhuaRaiseType_Level3   JinhuaRaiseType = 3
	JinhuaRaiseType_JinhuaRaiseType_Level4   JinhuaRaiseType = 4
	JinhuaRaiseType_JinhuaRaiseType_LevelMax JinhuaRaiseType = 5
)

var JinhuaRaiseType_name = map[int32]string{
	0: "JinhuaRaiseType_None",
	1: "JinhuaRaiseType_Level1",
	2: "JinhuaRaiseType_Level2",
	3: "JinhuaRaiseType_Level3",
	4: "JinhuaRaiseType_Level4",
	5: "JinhuaRaiseType_LevelMax",
}

var JinhuaRaiseType_value = map[string]int32{
	"JinhuaRaiseType_None":     0,
	"JinhuaRaiseType_Level1":   1,
	"JinhuaRaiseType_Level2":   2,
	"JinhuaRaiseType_Level3":   3,
	"JinhuaRaiseType_Level4":   4,
	"JinhuaRaiseType_LevelMax": 5,
}

func (x JinhuaRaiseType) String() string {
	return proto.EnumName(JinhuaRaiseType_name, int32(x))
}

func (JinhuaRaiseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{84}
}

type JinhuaWaitOperateType int32

const (
	JinhuaWaitOperateType_JinhuaWaitOperateType_None   JinhuaWaitOperateType = 0
	JinhuaWaitOperateType_JinhuaWaitOperateType_Server JinhuaWaitOperateType = 1
	JinhuaWaitOperateType_JinhuaWaitOperateType_Player JinhuaWaitOperateType = 2
)

var JinhuaWaitOperateType_name = map[int32]string{
	0: "JinhuaWaitOperateType_None",
	1: "JinhuaWaitOperateType_Server",
	2: "JinhuaWaitOperateType_Player",
}

var JinhuaWaitOperateType_value = map[string]int32{
	"JinhuaWaitOperateType_None":   0,
	"JinhuaWaitOperateType_Server": 1,
	"JinhuaWaitOperateType_Player": 2,
}

func (x JinhuaWaitOperateType) String() string {
	return proto.EnumName(JinhuaWaitOperateType_name, int32(x))
}

func (JinhuaWaitOperateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{85}
}

//炸金花模式
type JinhuaMode int32

const (
	JinhuaMode_JinhuaMode_None JinhuaMode = 0
	//普通模式
	JinhuaMode_JinhuaMode_CommonMode JinhuaMode = 1
	//激情模式
	JinhuaMode_JinhuaMode_PassionMode JinhuaMode = 2
)

var JinhuaMode_name = map[int32]string{
	0: "JinhuaMode_None",
	1: "JinhuaMode_CommonMode",
	2: "JinhuaMode_PassionMode",
}

var JinhuaMode_value = map[string]int32{
	"JinhuaMode_None":        0,
	"JinhuaMode_CommonMode":  1,
	"JinhuaMode_PassionMode": 2,
}

func (x JinhuaMode) String() string {
	return proto.EnumName(JinhuaMode_name, int32(x))
}

func (JinhuaMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{86}
}

type JinhuaBankerType int32

const (
	JinhuaBankerType_JinhuaBankerType_None JinhuaBankerType = 0
	//赢家当庄
	JinhuaBankerType_JinhuaBankerType_Winner JinhuaBankerType = 1
	//轮流坐庄
	JinhuaBankerType_JinhuaBankerType_ByTurn JinhuaBankerType = 2
	//系统随机
	JinhuaBankerType_JinhuaBankerType_Random JinhuaBankerType = 3
)

var JinhuaBankerType_name = map[int32]string{
	0: "JinhuaBankerType_None",
	1: "JinhuaBankerType_Winner",
	2: "JinhuaBankerType_ByTurn",
	3: "JinhuaBankerType_Random",
}

var JinhuaBankerType_value = map[string]int32{
	"JinhuaBankerType_None":   0,
	"JinhuaBankerType_Winner": 1,
	"JinhuaBankerType_ByTurn": 2,
	"JinhuaBankerType_Random": 3,
}

func (x JinhuaBankerType) String() string {
	return proto.EnumName(JinhuaBankerType_name, int32(x))
}

func (JinhuaBankerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{87}
}

//-------------------------------------------------------
// 机器人协议
//--------------------------------------------------------
// 机器人行为
type RobotAction int32

const (
	// 未知类型，用于容错
	RobotAction_RobotAction_None RobotAction = 0
	// 基础操作1-100预留
	// 上线
	RobotAction_RobotAction_Online RobotAction = 1
	// 离线
	RobotAction_RobotAction_Offline RobotAction = 2
	// 充值
	RobotAction_RobotAction_Recharge RobotAction = 3
	// 通比牛牛操作101-120 预留
	// 通比牛牛进入房间
	RobotAction_RobotAction_CompareBull_JoinRoom RobotAction = 101
	// 通比牛牛离开房间
	RobotAction_RobotAction_CompareBull_ExitRoom RobotAction = 102
	// 通比牛牛玩耍，一些游戏行相关的行为都归到这里，准备，下注，开牌等等
	RobotAction_RobotAction_CompareBull_Play RobotAction = 103
	// 龙虎斗操作121-130 预留
	// 龙虎斗进入房间
	RobotAction_RobotAction_DragonTiger_JoinRoom RobotAction = 121
	// 龙虎斗离开房间
	RobotAction_RobotAction_DragonTiger_ExitRoom RobotAction = 122
	// 龙虎斗玩耍，一些游戏行相关的行为都归到这里，准备，下注，开牌等等
	RobotAction_RobotAction_DragonTiger_Play RobotAction = 123
	// 龙虎斗庄家玩耍，庄家玩耍时候的配置
	RobotAction_RobotAction_DragonTigerBank_Play RobotAction = 124
	// 红黑操作131-140 预留
	// 红黑进入房间
	RobotAction_RobotAction_RedBlack_JoinRoom RobotAction = 131
	// 红黑离开房间
	RobotAction_RobotAction_RedBlack_ExitRoom RobotAction = 132
	// 红黑玩耍
	RobotAction_RobotAction_RedBlack_Play RobotAction = 133
	// 红黑庄家玩耍，庄家玩耍时候的配置
	RobotAction_RobotAction_RedBlackBank_Play RobotAction = 134
	// 百人牛牛操作
	// 百人牛牛进入房间
	RobotAction_RobotAction_HundredBull_JoinRoom RobotAction = 141
	// 百人牛牛离开房间
	RobotAction_RobotAction_HundredBull_ExitRoom RobotAction = 142
	// 百人牛牛玩耍，一些游戏行相关的行为都归到这里，准备，下注，开牌等等
	RobotAction_RobotAction_HundredBull_Play RobotAction = 143
	// 百人牛牛庄家玩耍，庄家玩耍时候的配置
	RobotAction_RobotAction_HundredBullBank_Play RobotAction = 157
	// 连连看进入房间
	RobotAction_RobotAction_LinkUp_JoinRoom RobotAction = 144
	// 连连看离开房间
	RobotAction_RobotAction_LinkUp_ExitRoom RobotAction = 145
	// 连连看玩耍
	RobotAction_RobotAction_LinkUp_Play RobotAction = 146
	// 疯狂牛牛进入房间
	RobotAction_RobotAction_CrazyBull_JoinRoom RobotAction = 147
	// 疯狂牛牛离开房间
	RobotAction_RobotAction_CrazyBull_ExitRoom RobotAction = 148
	// 疯狂牛牛玩耍，一些游戏行相关的行为都归到这里，准备，下注，开牌等等
	RobotAction_RobotAction_CrazyBull_Play RobotAction = 149
	// 炸金花进入房间
	RobotAction_RobotAction_Jinhua_JoinRoom RobotAction = 150
	// 炸金花离开房间
	RobotAction_RobotAction_Jinhua_ExitRoom RobotAction = 151
	// 炸金花玩耍，一些游戏行相关的行为都归到这里，准备，下注，开牌等等
	RobotAction_RobotAction_Jinhua_Play RobotAction = 152
	// 百家乐进入房间
	RobotAction_RobotAction_Baccarat_JoinRoom RobotAction = 153
	// 百家乐离开房间
	RobotAction_RobotAction_Baccarat_ExitRoom RobotAction = 154
	// 百家乐玩耍，一些游戏行相关的行为都归到这里，准备，下注，开牌等等
	RobotAction_RobotAction_Baccarat_Play RobotAction = 155
	// 百家乐庄家玩耍，庄家玩耍时候的配置
	RobotAction_RobotAction_BaccaratBank_Play RobotAction = 156
	// 推筒子进入房间
	RobotAction_RobotAction_PushBobbin_JoinRoom RobotAction = 158
	// 推筒子离开房间
	RobotAction_RobotAction_PushBobbin_ExitRoom RobotAction = 159
	// 推筒子玩耍
	RobotAction_RobotAction_PushBobbin_Play RobotAction = 160
	// 推筒子庄家玩耍，庄家玩耍时候的配置
	RobotAction_RobotAction_PushBobbinBank_Play RobotAction = 161
	// 临沧麻将进入房间
	RobotAction_RobotAction_LinCangMahjong_JoinRoom RobotAction = 170
	// 临沧麻将离开房间
	RobotAction_RobotAction_LinCangMahjong_ExitRoom RobotAction = 171
	// 临沧麻将玩耍，一些游戏行相关的行为都归到这里，准备，摸牌，出牌，碰牌，杠牌，胡牌
	RobotAction_RobotAction_LinCangMahjong_Play RobotAction = 172
)

var RobotAction_name = map[int32]string{
	0:   "RobotAction_None",
	1:   "RobotAction_Online",
	2:   "RobotAction_Offline",
	3:   "RobotAction_Recharge",
	101: "RobotAction_CompareBull_JoinRoom",
	102: "RobotAction_CompareBull_ExitRoom",
	103: "RobotAction_CompareBull_Play",
	121: "RobotAction_DragonTiger_JoinRoom",
	122: "RobotAction_DragonTiger_ExitRoom",
	123: "RobotAction_DragonTiger_Play",
	124: "RobotAction_DragonTigerBank_Play",
	131: "RobotAction_RedBlack_JoinRoom",
	132: "RobotAction_RedBlack_ExitRoom",
	133: "RobotAction_RedBlack_Play",
	134: "RobotAction_RedBlackBank_Play",
	141: "RobotAction_HundredBull_JoinRoom",
	142: "RobotAction_HundredBull_ExitRoom",
	143: "RobotAction_HundredBull_Play",
	157: "RobotAction_HundredBullBank_Play",
	144: "RobotAction_LinkUp_JoinRoom",
	145: "RobotAction_LinkUp_ExitRoom",
	146: "RobotAction_LinkUp_Play",
	147: "RobotAction_CrazyBull_JoinRoom",
	148: "RobotAction_CrazyBull_ExitRoom",
	149: "RobotAction_CrazyBull_Play",
	150: "RobotAction_Jinhua_JoinRoom",
	151: "RobotAction_Jinhua_ExitRoom",
	152: "RobotAction_Jinhua_Play",
	153: "RobotAction_Baccarat_JoinRoom",
	154: "RobotAction_Baccarat_ExitRoom",
	155: "RobotAction_Baccarat_Play",
	156: "RobotAction_BaccaratBank_Play",
	158: "RobotAction_PushBobbin_JoinRoom",
	159: "RobotAction_PushBobbin_ExitRoom",
	160: "RobotAction_PushBobbin_Play",
	161: "RobotAction_PushBobbinBank_Play",
	170: "RobotAction_LinCangMahjong_JoinRoom",
	171: "RobotAction_LinCangMahjong_ExitRoom",
	172: "RobotAction_LinCangMahjong_Play",
}

var RobotAction_value = map[string]int32{
	"RobotAction_None":                    0,
	"RobotAction_Online":                  1,
	"RobotAction_Offline":                 2,
	"RobotAction_Recharge":                3,
	"RobotAction_CompareBull_JoinRoom":    101,
	"RobotAction_CompareBull_ExitRoom":    102,
	"RobotAction_CompareBull_Play":        103,
	"RobotAction_DragonTiger_JoinRoom":    121,
	"RobotAction_DragonTiger_ExitRoom":    122,
	"RobotAction_DragonTiger_Play":        123,
	"RobotAction_DragonTigerBank_Play":    124,
	"RobotAction_RedBlack_JoinRoom":       131,
	"RobotAction_RedBlack_ExitRoom":       132,
	"RobotAction_RedBlack_Play":           133,
	"RobotAction_RedBlackBank_Play":       134,
	"RobotAction_HundredBull_JoinRoom":    141,
	"RobotAction_HundredBull_ExitRoom":    142,
	"RobotAction_HundredBull_Play":        143,
	"RobotAction_HundredBullBank_Play":    157,
	"RobotAction_LinkUp_JoinRoom":         144,
	"RobotAction_LinkUp_ExitRoom":         145,
	"RobotAction_LinkUp_Play":             146,
	"RobotAction_CrazyBull_JoinRoom":      147,
	"RobotAction_CrazyBull_ExitRoom":      148,
	"RobotAction_CrazyBull_Play":          149,
	"RobotAction_Jinhua_JoinRoom":         150,
	"RobotAction_Jinhua_ExitRoom":         151,
	"RobotAction_Jinhua_Play":             152,
	"RobotAction_Baccarat_JoinRoom":       153,
	"RobotAction_Baccarat_ExitRoom":       154,
	"RobotAction_Baccarat_Play":           155,
	"RobotAction_BaccaratBank_Play":       156,
	"RobotAction_PushBobbin_JoinRoom":     158,
	"RobotAction_PushBobbin_ExitRoom":     159,
	"RobotAction_PushBobbin_Play":         160,
	"RobotAction_PushBobbinBank_Play":     161,
	"RobotAction_LinCangMahjong_JoinRoom": 170,
	"RobotAction_LinCangMahjong_ExitRoom": 171,
	"RobotAction_LinCangMahjong_Play":     172,
}

func (x RobotAction) String() string {
	return proto.EnumName(RobotAction_name, int32(x))
}

func (RobotAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{88}
}

//报表类型
type ReportType int32

const (
	ReportType_ReportType_None ReportType = 0
	//游戏记录
	ReportType_ReportType_GameRecord ReportType = 1
	//金币变动日志
	ReportType_ReportType_BalanceChangeRecord ReportType = 2
	//金豆变动日志
	ReportType_ReportType_BeanChangeRecord ReportType = 3
	// 金币/房卡赠送日志
	ReportType_ReportType_GiveAwayRecord ReportType = 4
	// 房卡业绩变动日志
	ReportType_ReportType_AchievementRecord ReportType = 5
	// 房卡佣金获取日志
	ReportType_ReportType_GetCommissionRecord ReportType = 6
	//大联盟分成日志
	ReportType_ReportType_LeagueCommissionRecord ReportType = 7
	//房卡变动日志
	ReportType_ReportType_RoomCardChangeRecord ReportType = 8
	// 奖池变动日志
	ReportType_ReportType_BonusRecordReport ReportType = 9
)

var ReportType_name = map[int32]string{
	0: "ReportType_None",
	1: "ReportType_GameRecord",
	2: "ReportType_BalanceChangeRecord",
	3: "ReportType_BeanChangeRecord",
	4: "ReportType_GiveAwayRecord",
	5: "ReportType_AchievementRecord",
	6: "ReportType_GetCommissionRecord",
	7: "ReportType_LeagueCommissionRecord",
	8: "ReportType_RoomCardChangeRecord",
	9: "ReportType_BonusRecordReport",
}

var ReportType_value = map[string]int32{
	"ReportType_None":                   0,
	"ReportType_GameRecord":             1,
	"ReportType_BalanceChangeRecord":    2,
	"ReportType_BeanChangeRecord":       3,
	"ReportType_GiveAwayRecord":         4,
	"ReportType_AchievementRecord":      5,
	"ReportType_GetCommissionRecord":    6,
	"ReportType_LeagueCommissionRecord": 7,
	"ReportType_RoomCardChangeRecord":   8,
	"ReportType_BonusRecordReport":      9,
}

func (x ReportType) String() string {
	return proto.EnumName(ReportType_name, int32(x))
}

func (ReportType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{89}
}

//业绩类型
type AchievementType int32

const (
	AchievementType_AchievementType_None AchievementType = 0
	//直属业绩
	AchievementType_AchievementType_Directly AchievementType = 1
	//代理业绩
	AchievementType_AchievementType_Agent AchievementType = 2
	// 7级代理业绩 - 佣金
	AchievementType_AchievementType_SevenAgent AchievementType = 3
	//玩家收益
	AchievementType_AchievementType_PlayerCommission AchievementType = 4
	//推荐人收益
	AchievementType_AchievementType_RecommanderCommission AchievementType = 5
	//盟主收益
	AchievementType_AchievementType_AllianceLeaderCommission AchievementType = 6
)

var AchievementType_name = map[int32]string{
	0: "AchievementType_None",
	1: "AchievementType_Directly",
	2: "AchievementType_Agent",
	3: "AchievementType_SevenAgent",
	4: "AchievementType_PlayerCommission",
	5: "AchievementType_RecommanderCommission",
	6: "AchievementType_AllianceLeaderCommission",
}

var AchievementType_value = map[string]int32{
	"AchievementType_None":                     0,
	"AchievementType_Directly":                 1,
	"AchievementType_Agent":                    2,
	"AchievementType_SevenAgent":               3,
	"AchievementType_PlayerCommission":         4,
	"AchievementType_RecommanderCommission":    5,
	"AchievementType_AllianceLeaderCommission": 6,
}

func (x AchievementType) String() string {
	return proto.EnumName(AchievementType_name, int32(x))
}

func (AchievementType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{90}
}

//佣金提取类型
type GetCommissionType int32

const (
	GetCommissionType_GetCommissionType_None GetCommissionType = 0
	//日结佣金
	GetCommissionType_GetCommissionType_Day GetCommissionType = 1
	//周结佣金
	GetCommissionType_GetCommissionType_Week GetCommissionType = 2
	//七级代理随时可以领的佣金
	GetCommissionType_GetCommissionType_SevenCommission GetCommissionType = 3
	//代理佣金
	GetCommissionType_GetCommissionType_AgentCommission GetCommissionType = 4
	//推荐人佣金
	GetCommissionType_GetCommissionType_RecommenderCommission GetCommissionType = 5
	//副盟主佣金
	GetCommissionType_GetCommissionType_AllianceLeaderCommission GetCommissionType = 6
	//副盟主房卡返利
	GetCommissionType_GetCommissionType_AllianceLeaderRoomCardCommission GetCommissionType = 7
)

var GetCommissionType_name = map[int32]string{
	0: "GetCommissionType_None",
	1: "GetCommissionType_Day",
	2: "GetCommissionType_Week",
	3: "GetCommissionType_SevenCommission",
	4: "GetCommissionType_AgentCommission",
	5: "GetCommissionType_RecommenderCommission",
	6: "GetCommissionType_AllianceLeaderCommission",
	7: "GetCommissionType_AllianceLeaderRoomCardCommission",
}

var GetCommissionType_value = map[string]int32{
	"GetCommissionType_None":                             0,
	"GetCommissionType_Day":                              1,
	"GetCommissionType_Week":                             2,
	"GetCommissionType_SevenCommission":                  3,
	"GetCommissionType_AgentCommission":                  4,
	"GetCommissionType_RecommenderCommission":            5,
	"GetCommissionType_AllianceLeaderCommission":         6,
	"GetCommissionType_AllianceLeaderRoomCardCommission": 7,
}

func (x GetCommissionType) String() string {
	return proto.EnumName(GetCommissionType_name, int32(x))
}

func (GetCommissionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{91}
}

// 血池状态
type BloodSlotStatus int32

const (
	BloodSlotStatus_BloodSlotStatus_None BloodSlotStatus = 0
	//血池吃分
	BloodSlotStatus_BloodSlotStatus_Eat BloodSlotStatus = 1
	//血池吐分
	BloodSlotStatus_BloodSlotStatus_Out BloodSlotStatus = 2
	// 平台赢
	BloodSlotStatus_BloodSlotStatus_Win BloodSlotStatus = 3
	// 平台亏
	BloodSlotStatus_BloodSlotStatus_Lose BloodSlotStatus = 4
)

var BloodSlotStatus_name = map[int32]string{
	0: "BloodSlotStatus_None",
	1: "BloodSlotStatus_Eat",
	2: "BloodSlotStatus_Out",
	3: "BloodSlotStatus_Win",
	4: "BloodSlotStatus_Lose",
}

var BloodSlotStatus_value = map[string]int32{
	"BloodSlotStatus_None": 0,
	"BloodSlotStatus_Eat":  1,
	"BloodSlotStatus_Out":  2,
	"BloodSlotStatus_Win":  3,
	"BloodSlotStatus_Lose": 4,
}

func (x BloodSlotStatus) String() string {
	return proto.EnumName(BloodSlotStatus_name, int32(x))
}

func (BloodSlotStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{92}
}

// 游戏类型红黑的操作类型
type RedBlackDoType int32

const (
	// 未知类型，用于容错
	RedBlackDoType_RedBlack_None RedBlackDoType = 0
	// 加入房间
	RedBlackDoType_RedBlack_JoinRoom RedBlackDoType = 1
	// 退出房间
	RedBlackDoType_RedBlack_ExitRoom RedBlackDoType = 2
	// 玩家下注
	RedBlackDoType_RedBlack_PlayerBet RedBlackDoType = 3
	// 玩家申请上庄
	RedBlackDoType_RedBlack_UpBanker RedBlackDoType = 4
	// 玩家申请下庄/退出申请上庄
	RedBlackDoType_RedBlack_DownBanker RedBlackDoType = 5
)

var RedBlackDoType_name = map[int32]string{
	0: "RedBlack_None",
	1: "RedBlack_JoinRoom",
	2: "RedBlack_ExitRoom",
	3: "RedBlack_PlayerBet",
	4: "RedBlack_UpBanker",
	5: "RedBlack_DownBanker",
}

var RedBlackDoType_value = map[string]int32{
	"RedBlack_None":       0,
	"RedBlack_JoinRoom":   1,
	"RedBlack_ExitRoom":   2,
	"RedBlack_PlayerBet":  3,
	"RedBlack_UpBanker":   4,
	"RedBlack_DownBanker": 5,
}

func (x RedBlackDoType) String() string {
	return proto.EnumName(RedBlackDoType_name, int32(x))
}

func (RedBlackDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{93}
}

// 红黑的牌型
type RedBlackPokerType int32

const (
	// 未知类型，用于容错
	RedBlackPokerType_RedBlackCardType_None RedBlackPokerType = 0
	//单张
	RedBlackPokerType_RedBlackCardType_Single RedBlackPokerType = 1
	//对子
	RedBlackPokerType_RedBlackCardType_Pair RedBlackPokerType = 2
	//顺子
	RedBlackPokerType_RedBlackCardType_Straight RedBlackPokerType = 3
	//金花
	RedBlackPokerType_RedBlackCardType_Flush RedBlackPokerType = 4
	//顺金
	RedBlackPokerType_RedBlackCardType_StraightFlush RedBlackPokerType = 5
	//豹子
	RedBlackPokerType_RedBlackCardType_Trip RedBlackPokerType = 6
)

var RedBlackPokerType_name = map[int32]string{
	0: "RedBlackCardType_None",
	1: "RedBlackCardType_Single",
	2: "RedBlackCardType_Pair",
	3: "RedBlackCardType_Straight",
	4: "RedBlackCardType_Flush",
	5: "RedBlackCardType_StraightFlush",
	6: "RedBlackCardType_Trip",
}

var RedBlackPokerType_value = map[string]int32{
	"RedBlackCardType_None":          0,
	"RedBlackCardType_Single":        1,
	"RedBlackCardType_Pair":          2,
	"RedBlackCardType_Straight":      3,
	"RedBlackCardType_Flush":         4,
	"RedBlackCardType_StraightFlush": 5,
	"RedBlackCardType_Trip":          6,
}

func (x RedBlackPokerType) String() string {
	return proto.EnumName(RedBlackPokerType_name, int32(x))
}

func (RedBlackPokerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{94}
}

// 红黑区域
type RedBlackCardArea int32

const (
	// 未知类型，用于容错
	RedBlackCardArea_RedBlackCardArea_None RedBlackCardArea = 0
	// 红
	RedBlackCardArea_RedBlackCardArea_Red RedBlackCardArea = 1
	// 黑
	RedBlackCardArea_RedBlackCardArea_Black RedBlackCardArea = 2
	// 幸运区
	RedBlackCardArea_RedBlackCardArea_Luck RedBlackCardArea = 3
)

var RedBlackCardArea_name = map[int32]string{
	0: "RedBlackCardArea_None",
	1: "RedBlackCardArea_Red",
	2: "RedBlackCardArea_Black",
	3: "RedBlackCardArea_Luck",
}

var RedBlackCardArea_value = map[string]int32{
	"RedBlackCardArea_None":  0,
	"RedBlackCardArea_Red":   1,
	"RedBlackCardArea_Black": 2,
	"RedBlackCardArea_Luck":  3,
}

func (x RedBlackCardArea) String() string {
	return proto.EnumName(RedBlackCardArea_name, int32(x))
}

func (RedBlackCardArea) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{95}
}

//////////////////////////////////////////////////////////////////////////////////
// 									临沧麻将Begin									//
//////////////////////////////////////////////////////////////////////////////////
// 麻将杠牌枚举
type MahjongKongEnum int32

const (
	// 未定义杠牌枚举
	MahjongKongEnum_MahjongKongEnumUndefine MahjongKongEnum = 0
	// 巴杠
	MahjongKongEnum_KongBa MahjongKongEnum = 1
	// 直杠
	MahjongKongEnum_KongZhi MahjongKongEnum = 2
	// 暗杠
	MahjongKongEnum_KongAn MahjongKongEnum = 3
)

var MahjongKongEnum_name = map[int32]string{
	0: "MahjongKongEnumUndefine",
	1: "KongBa",
	2: "KongZhi",
	3: "KongAn",
}

var MahjongKongEnum_value = map[string]int32{
	"MahjongKongEnumUndefine": 0,
	"KongBa":                  1,
	"KongZhi":                 2,
	"KongAn":                  3,
}

func (x MahjongKongEnum) String() string {
	return proto.EnumName(MahjongKongEnum_name, int32(x))
}

func (MahjongKongEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{96}
}

// 麻将操作
type MahjongOperateEnum int32

const (
	// 未定义操作
	MahjongOperateEnum_MahjongOperateEnumUndefine MahjongOperateEnum = 0
	// 发牌
	MahjongOperateEnum_send MahjongOperateEnum = 1
	// 出牌
	MahjongOperateEnum_output MahjongOperateEnum = 2
	// 碰
	MahjongOperateEnum_Pong MahjongOperateEnum = 3
	// 杠
	MahjongOperateEnum_Kong MahjongOperateEnum = 4
	// 吃
	MahjongOperateEnum_Chow MahjongOperateEnum = 5
	// 摸明牌
	MahjongOperateEnum_DrawOpenCard MahjongOperateEnum = 6
	// 胡
	MahjongOperateEnum_Win MahjongOperateEnum = 7
	// 过
	MahjongOperateEnum_Pass MahjongOperateEnum = 8
	// 定缺
	MahjongOperateEnum_BlankSuit MahjongOperateEnum = 9
	// 换三张
	MahjongOperateEnum_ChangeThreeCards MahjongOperateEnum = 10
)

var MahjongOperateEnum_name = map[int32]string{
	0:  "MahjongOperateEnumUndefine",
	1:  "send",
	2:  "output",
	3:  "Pong",
	4:  "Kong",
	5:  "Chow",
	6:  "DrawOpenCard",
	7:  "Win",
	8:  "Pass",
	9:  "BlankSuit",
	10: "ChangeThreeCards",
}

var MahjongOperateEnum_value = map[string]int32{
	"MahjongOperateEnumUndefine": 0,
	"send":                       1,
	"output":                     2,
	"Pong":                       3,
	"Kong":                       4,
	"Chow":                       5,
	"DrawOpenCard":               6,
	"Win":                        7,
	"Pass":                       8,
	"BlankSuit":                  9,
	"ChangeThreeCards":           10,
}

func (x MahjongOperateEnum) String() string {
	return proto.EnumName(MahjongOperateEnum_name, int32(x))
}

func (MahjongOperateEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{97}
}

// 麻将胡牌来源
type MahjongWinSourceEnum int32

const (
	// 未定义的胡牌来源
	MahjongWinSourceEnum_MahjongWinSourceEnumUndefined MahjongWinSourceEnum = 0
	// 自摸胡
	MahjongWinSourceEnum_Draw MahjongWinSourceEnum = 1
	// 点炮胡
	MahjongWinSourceEnum_Discard MahjongWinSourceEnum = 2
	// 抢杠胡
	MahjongWinSourceEnum_GrabKong MahjongWinSourceEnum = 3
	// 杠上花
	MahjongWinSourceEnum_DrawAfterKong MahjongWinSourceEnum = 4
	// 杠上炮
	MahjongWinSourceEnum_DiscardAfterKong MahjongWinSourceEnum = 5
	// 七星
	MahjongWinSourceEnum_SevenStars MahjongWinSourceEnum = 8
	// 十老头
	MahjongWinSourceEnum_TenOldMen MahjongWinSourceEnum = 9
	// 双杠上花
	MahjongWinSourceEnum_DrawAfterKongDouble MahjongWinSourceEnum = 10
)

var MahjongWinSourceEnum_name = map[int32]string{
	0:  "MahjongWinSourceEnumUndefined",
	1:  "Draw",
	2:  "Discard",
	3:  "GrabKong",
	4:  "DrawAfterKong",
	5:  "DiscardAfterKong",
	8:  "SevenStars",
	9:  "TenOldMen",
	10: "DrawAfterKongDouble",
}

var MahjongWinSourceEnum_value = map[string]int32{
	"MahjongWinSourceEnumUndefined": 0,
	"Draw":                          1,
	"Discard":                       2,
	"GrabKong":                      3,
	"DrawAfterKong":                 4,
	"DiscardAfterKong":              5,
	"SevenStars":                    8,
	"TenOldMen":                     9,
	"DrawAfterKongDouble":           10,
}

func (x MahjongWinSourceEnum) String() string {
	return proto.EnumName(MahjongWinSourceEnum_name, int32(x))
}

func (MahjongWinSourceEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{98}
}

// 麻将胡牌类型
type MahjongWinEnum int32

const (
	// 未定义的胡牌类型
	MahjongWinEnum_MahjongWinEnumUndefined MahjongWinEnum = 0
	// 平胡
	MahjongWinEnum_Ping MahjongWinEnum = 1
	// 门清
	MahjongWinEnum_NoPongOrKong MahjongWinEnum = 2
	// 碰碰胡
	MahjongWinEnum_PongPong MahjongWinEnum = 3
	// 清一色
	MahjongWinEnum_FullFlush MahjongWinEnum = 4
	// 七对
	MahjongWinEnum_SevenPair MahjongWinEnum = 5
	// 龙对
	MahjongWinEnum_DragonPair MahjongWinEnum = 6
	// 双龙七对
	MahjongWinEnum_DoubleDragonPair MahjongWinEnum = 7
	// 海底
	MahjongWinEnum_Seabed MahjongWinEnum = 8
	// 金钩钓
	MahjongWinEnum_GoldHook MahjongWinEnum = 9
	// 幺九
	MahjongWinEnum_OneNine MahjongWinEnum = 10
	// 将对
	MahjongWinEnum_Pair258 MahjongWinEnum = 11
	// 十三幺
	MahjongWinEnum_ThirteenMao MahjongWinEnum = 12
	// 卡绝张
	MahjongWinEnum_MiddleLastCard MahjongWinEnum = 13
	// 边绝张
	MahjongWinEnum_SideLastCard MahjongWinEnum = 14
	// 烂牌
	MahjongWinEnum_BadCards MahjongWinEnum = 15
	// 五梅花
	MahjongWinEnum_FivePlumBlossom MahjongWinEnum = 16
	// 七星
	MahjongWinEnum_MahjongWinEnumSevenStars MahjongWinEnum = 17
	// 十老头
	MahjongWinEnum_MahjongWinEnumTenOldMen MahjongWinEnum = 18
	// 天胡
	MahjongWinEnum_DrawSky MahjongWinEnum = 19
	// 地胡
	MahjongWinEnum_DiscardLand MahjongWinEnum = 20
	// 十八罗汉
	MahjongWinEnum_EighteenArhats MahjongWinEnum = 21
)

var MahjongWinEnum_name = map[int32]string{
	0:  "MahjongWinEnumUndefined",
	1:  "Ping",
	2:  "NoPongOrKong",
	3:  "PongPong",
	4:  "FullFlush",
	5:  "SevenPair",
	6:  "DragonPair",
	7:  "DoubleDragonPair",
	8:  "Seabed",
	9:  "GoldHook",
	10: "OneNine",
	11: "Pair258",
	12: "ThirteenMao",
	13: "MiddleLastCard",
	14: "SideLastCard",
	15: "BadCards",
	16: "FivePlumBlossom",
	17: "MahjongWinEnumSevenStars",
	18: "MahjongWinEnumTenOldMen",
	19: "DrawSky",
	20: "DiscardLand",
	21: "EighteenArhats",
}

var MahjongWinEnum_value = map[string]int32{
	"MahjongWinEnumUndefined":  0,
	"Ping":                     1,
	"NoPongOrKong":             2,
	"PongPong":                 3,
	"FullFlush":                4,
	"SevenPair":                5,
	"DragonPair":               6,
	"DoubleDragonPair":         7,
	"Seabed":                   8,
	"GoldHook":                 9,
	"OneNine":                  10,
	"Pair258":                  11,
	"ThirteenMao":              12,
	"MiddleLastCard":           13,
	"SideLastCard":             14,
	"BadCards":                 15,
	"FivePlumBlossom":          16,
	"MahjongWinEnumSevenStars": 17,
	"MahjongWinEnumTenOldMen":  18,
	"DrawSky":                  19,
	"DiscardLand":              20,
	"EighteenArhats":           21,
}

func (x MahjongWinEnum) String() string {
	return proto.EnumName(MahjongWinEnum_name, int32(x))
}

func (MahjongWinEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{99}
}

// 游戏类型临沧麻将的操作类型
type LinCangMahjongDoType int32

const (
	// 未知类型，用于容错
	LinCangMahjongDoType_LinCangMahjong_None LinCangMahjongDoType = 0
	// 临沧麻将加入房间
	LinCangMahjongDoType_LinCangMahjong_JoinRoom LinCangMahjongDoType = 1
	// 临沧麻将退出房间
	LinCangMahjongDoType_LinCangMahjong_ExitRoom LinCangMahjongDoType = 2
	// 临沧麻将改变玩家状态
	LinCangMahjongDoType_LinCangMahjong_ChangeState LinCangMahjongDoType = 3
	// 临沧麻将玩家操作
	LinCangMahjongDoType_LinCangMahjong_Operate LinCangMahjongDoType = 4
	// 临沧麻将创建房间
	LinCangMahjongDoType_LinCangMahjong_CreateRoom LinCangMahjongDoType = 5
	// 临沧麻将开始游戏
	LinCangMahjongDoType_LinCangMahjong_StartRoom LinCangMahjongDoType = 6
)

var LinCangMahjongDoType_name = map[int32]string{
	0: "LinCangMahjong_None",
	1: "LinCangMahjong_JoinRoom",
	2: "LinCangMahjong_ExitRoom",
	3: "LinCangMahjong_ChangeState",
	4: "LinCangMahjong_Operate",
	5: "LinCangMahjong_CreateRoom",
	6: "LinCangMahjong_StartRoom",
}

var LinCangMahjongDoType_value = map[string]int32{
	"LinCangMahjong_None":        0,
	"LinCangMahjong_JoinRoom":    1,
	"LinCangMahjong_ExitRoom":    2,
	"LinCangMahjong_ChangeState": 3,
	"LinCangMahjong_Operate":     4,
	"LinCangMahjong_CreateRoom":  5,
	"LinCangMahjong_StartRoom":   6,
}

func (x LinCangMahjongDoType) String() string {
	return proto.EnumName(LinCangMahjongDoType_name, int32(x))
}

func (LinCangMahjongDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{100}
}

// 游戏类型血战麻将的操作类型
type XueZhanMahjongDoType int32

const (
	// 未知类型，用于容错
	XueZhanMahjongDoType_XueZhanMahjong_None XueZhanMahjongDoType = 0
	// 血战麻将加入房间
	XueZhanMahjongDoType_XueZhanMahjong_JoinRoom XueZhanMahjongDoType = 1
	// 血战麻将退出房间
	XueZhanMahjongDoType_XueZhanMahjong_ExitRoom XueZhanMahjongDoType = 2
	// 血战麻将改变玩家状态
	XueZhanMahjongDoType_XueZhanMahjong_ChangeState XueZhanMahjongDoType = 3
	// 血战麻将玩家操作
	XueZhanMahjongDoType_XueZhanMahjong_Operate XueZhanMahjongDoType = 4
	// 血战麻将创建房间
	XueZhanMahjongDoType_XueZhanMahjong_CreateRoom XueZhanMahjongDoType = 5
	// 血战麻将开始游戏
	XueZhanMahjongDoType_XueZhanMahjong_StartRoom XueZhanMahjongDoType = 6
	// 血战麻将定缺
	XueZhanMahjongDoType_XueZhanMahjong_BlankSuit XueZhanMahjongDoType = 7
)

var XueZhanMahjongDoType_name = map[int32]string{
	0: "XueZhanMahjong_None",
	1: "XueZhanMahjong_JoinRoom",
	2: "XueZhanMahjong_ExitRoom",
	3: "XueZhanMahjong_ChangeState",
	4: "XueZhanMahjong_Operate",
	5: "XueZhanMahjong_CreateRoom",
	6: "XueZhanMahjong_StartRoom",
	7: "XueZhanMahjong_BlankSuit",
}

var XueZhanMahjongDoType_value = map[string]int32{
	"XueZhanMahjong_None":        0,
	"XueZhanMahjong_JoinRoom":    1,
	"XueZhanMahjong_ExitRoom":    2,
	"XueZhanMahjong_ChangeState": 3,
	"XueZhanMahjong_Operate":     4,
	"XueZhanMahjong_CreateRoom":  5,
	"XueZhanMahjong_StartRoom":   6,
	"XueZhanMahjong_BlankSuit":   7,
}

func (x XueZhanMahjongDoType) String() string {
	return proto.EnumName(XueZhanMahjongDoType_name, int32(x))
}

func (XueZhanMahjongDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{101}
}

type MahjongBeforeSettleEnum int32

const (
	MahjongBeforeSettleEnum_MahjongBeforeSettleEnum_undefined MahjongBeforeSettleEnum = 0
	// 退税
	MahjongBeforeSettleEnum_DrawBack MahjongBeforeSettleEnum = 1
	// 查花猪
	MahjongBeforeSettleEnum_CheckFlowerPig MahjongBeforeSettleEnum = 2
	// 查叫
	MahjongBeforeSettleEnum_CheckReady MahjongBeforeSettleEnum = 3
)

var MahjongBeforeSettleEnum_name = map[int32]string{
	0: "MahjongBeforeSettleEnum_undefined",
	1: "DrawBack",
	2: "CheckFlowerPig",
	3: "CheckReady",
}

var MahjongBeforeSettleEnum_value = map[string]int32{
	"MahjongBeforeSettleEnum_undefined": 0,
	"DrawBack":                          1,
	"CheckFlowerPig":                    2,
	"CheckReady":                        3,
}

func (x MahjongBeforeSettleEnum) String() string {
	return proto.EnumName(MahjongBeforeSettleEnum_name, int32(x))
}

func (MahjongBeforeSettleEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{102}
}

////////////////////////////////////奔驰宝马通信协议/////////////////////////////////
// 游戏类型奔驰宝马的操作类型
type BenzBMWDoType int32

const (
	// 未知类型，用于容错
	BenzBMWDoType_BenzBMW_None BenzBMWDoType = 0
	// 加入房间
	BenzBMWDoType_BenzBMW_JoinRoom BenzBMWDoType = 1
	// 退出房间
	BenzBMWDoType_BenzBMW_ExitRoom BenzBMWDoType = 2
	// 玩家下注
	BenzBMWDoType_BenzBMW_PlayerBet BenzBMWDoType = 3
	// 玩家申请上庄
	BenzBMWDoType_BenzBMW_UpBanker BenzBMWDoType = 4
	// 玩家申请下庄/退出申请上庄
	BenzBMWDoType_BenzBMW_DownBanker BenzBMWDoType = 5
)

var BenzBMWDoType_name = map[int32]string{
	0: "BenzBMW_None",
	1: "BenzBMW_JoinRoom",
	2: "BenzBMW_ExitRoom",
	3: "BenzBMW_PlayerBet",
	4: "BenzBMW_UpBanker",
	5: "BenzBMW_DownBanker",
}

var BenzBMWDoType_value = map[string]int32{
	"BenzBMW_None":       0,
	"BenzBMW_JoinRoom":   1,
	"BenzBMW_ExitRoom":   2,
	"BenzBMW_PlayerBet":  3,
	"BenzBMW_UpBanker":   4,
	"BenzBMW_DownBanker": 5,
}

func (x BenzBMWDoType) String() string {
	return proto.EnumName(BenzBMWDoType_name, int32(x))
}

func (BenzBMWDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{103}
}

// =============================================================================
// 代理协议start
// =============================================================================
// 代理子身份
type AgentSubIdentity int32

const (
	// 默认是代理
	AgentSubIdentity_AgentSubIdentity_Agent AgentSubIdentity = 0
	// 玩家身份，还不是代理
	AgentSubIdentity_AgentSubIdentity_Player AgentSubIdentity = 1
	// 盟主[1级顶代]，逻辑上还是要被处理成代理
	AgentSubIdentity_AgentSubIdentity_Leader AgentSubIdentity = 2
	// 副盟主，逻辑上还是要被处理成代理
	AgentSubIdentity_AgentSubIdentity_DeputyLeader AgentSubIdentity = 3
	// 非玩家身份，不存在逻辑中，接口中辅助使用
	AgentSubIdentity_AgentSubIdentity_UnPlayer AgentSubIdentity = 4
	// 2级顶代，逻辑上还是要被处理成代理
	AgentSubIdentity_AgentSubIdentity_SecondLeader AgentSubIdentity = 5
	// 3级顶代，逻辑上还是要被处理成代理
	AgentSubIdentity_AgentSubIdentity_ThirdLeader AgentSubIdentity = 6
	// 4级顶代，逻辑上还是要被处理成代理
	AgentSubIdentity_AgentSubIdentity_ForthLeader AgentSubIdentity = 7
)

var AgentSubIdentity_name = map[int32]string{
	0: "AgentSubIdentity_Agent",
	1: "AgentSubIdentity_Player",
	2: "AgentSubIdentity_Leader",
	3: "AgentSubIdentity_DeputyLeader",
	4: "AgentSubIdentity_UnPlayer",
	5: "AgentSubIdentity_SecondLeader",
	6: "AgentSubIdentity_ThirdLeader",
	7: "AgentSubIdentity_ForthLeader",
}

var AgentSubIdentity_value = map[string]int32{
	"AgentSubIdentity_Agent":        0,
	"AgentSubIdentity_Player":       1,
	"AgentSubIdentity_Leader":       2,
	"AgentSubIdentity_DeputyLeader": 3,
	"AgentSubIdentity_UnPlayer":     4,
	"AgentSubIdentity_SecondLeader": 5,
	"AgentSubIdentity_ThirdLeader":  6,
	"AgentSubIdentity_ForthLeader":  7,
}

func (x AgentSubIdentity) String() string {
	return proto.EnumName(AgentSubIdentity_name, int32(x))
}

func (AgentSubIdentity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{104}
}

// 代理关系
type AgentRelation int32

const (
	// 容错，也可以作为不要求关系
	AgentRelation_AgentRelation_None AgentRelation = 0
	// 下级直属关系
	AgentRelation_AgentRelation_UnderDirectly AgentRelation = 1
	// 下级非直属关系
	AgentRelation_AgentRelation_UnderUnDirectly AgentRelation = 2
	// 顶代的下级关系,不区分直属或非直属
	AgentRelation_AgentRelation_TopUnder AgentRelation = 3
)

var AgentRelation_name = map[int32]string{
	0: "AgentRelation_None",
	1: "AgentRelation_UnderDirectly",
	2: "AgentRelation_UnderUnDirectly",
	3: "AgentRelation_TopUnder",
}

var AgentRelation_value = map[string]int32{
	"AgentRelation_None":            0,
	"AgentRelation_UnderDirectly":   1,
	"AgentRelation_UnderUnDirectly": 2,
	"AgentRelation_TopUnder":        3,
}

func (x AgentRelation) String() string {
	return proto.EnumName(AgentRelation_name, int32(x))
}

func (AgentRelation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{105}
}

//支付通道定义
type PayMentChannel int32

const (
	// 未知类型，用于容错
	PayMentChannel_PayMentChannel_None PayMentChannel = 0
	//codapayments
	PayMentChannel_PayMentChannel_Coda PayMentChannel = 1
)

var PayMentChannel_name = map[int32]string{
	0: "PayMentChannel_None",
	1: "PayMentChannel_Coda",
}

var PayMentChannel_value = map[string]int32{
	"PayMentChannel_None": 0,
	"PayMentChannel_Coda": 1,
}

func (x PayMentChannel) String() string {
	return proto.EnumName(PayMentChannel_name, int32(x))
}

func (PayMentChannel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{106}
}

//订单状态
type OrderStatus int32

const (
	//订单初始化中
	OrderStatus_OrderStatus_None OrderStatus = 0
	//订单支付中
	OrderStatus_OrderStatus_PAY OrderStatus = 1
	//支付成功
	OrderStatus_OrderStatus_Success OrderStatus = 2
	//支付失败
	OrderStatus_OrderStatus_FAIL OrderStatus = 3
)

var OrderStatus_name = map[int32]string{
	0: "OrderStatus_None",
	1: "OrderStatus_PAY",
	2: "OrderStatus_Success",
	3: "OrderStatus_FAIL",
}

var OrderStatus_value = map[string]int32{
	"OrderStatus_None":    0,
	"OrderStatus_PAY":     1,
	"OrderStatus_Success": 2,
	"OrderStatus_FAIL":    3,
}

func (x OrderStatus) String() string {
	return proto.EnumName(OrderStatus_name, int32(x))
}

func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{107}
}

//跑马灯消息推送类型
type HorseRaceLampType int32

const (
	//系统推送
	HorseRaceLampType_system_push HorseRaceLampType = 0
	//普通推送
	HorseRaceLampType_ordinary_push HorseRaceLampType = 1
	//删除推送
	HorseRaceLampType_delete_push HorseRaceLampType = 2
	//修改推送
	HorseRaceLampType_update_push HorseRaceLampType = 3
	//打旋游戏房间创建推送
	HorseRaceLampType_daxuanroom_push HorseRaceLampType = 4
	//打旋游戏中奖推送
	HorseRaceLampType_daxuanprize_push HorseRaceLampType = 5
)

var HorseRaceLampType_name = map[int32]string{
	0: "system_push",
	1: "ordinary_push",
	2: "delete_push",
	3: "update_push",
	4: "daxuanroom_push",
	5: "daxuanprize_push",
}

var HorseRaceLampType_value = map[string]int32{
	"system_push":      0,
	"ordinary_push":    1,
	"delete_push":      2,
	"update_push":      3,
	"daxuanroom_push":  4,
	"daxuanprize_push": 5,
}

func (x HorseRaceLampType) String() string {
	return proto.EnumName(HorseRaceLampType_name, int32(x))
}

func (HorseRaceLampType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{108}
}

//打旋三花特牌牌型
type DaXuanPokerSanHuaType int32

const (
	//无三花特牌
	DaXuanPokerSanHuaType_DaXuanPokerSanHuaType_None DaXuanPokerSanHuaType = 0
	//三花十
	DaXuanPokerSanHuaType_DaXuanPokerSanHuaType_Ten DaXuanPokerSanHuaType = 1
	//三花六
	DaXuanPokerSanHuaType_DaXuanPokerSanHuaType_Six DaXuanPokerSanHuaType = 2
)

var DaXuanPokerSanHuaType_name = map[int32]string{
	0: "DaXuanPokerSanHuaType_None",
	1: "DaXuanPokerSanHuaType_Ten",
	2: "DaXuanPokerSanHuaType_Six",
}

var DaXuanPokerSanHuaType_value = map[string]int32{
	"DaXuanPokerSanHuaType_None": 0,
	"DaXuanPokerSanHuaType_Ten":  1,
	"DaXuanPokerSanHuaType_Six":  2,
}

func (x DaXuanPokerSanHuaType) String() string {
	return proto.EnumName(DaXuanPokerSanHuaType_name, int32(x))
}

func (DaXuanPokerSanHuaType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{109}
}

//打旋中奖牌型类型
type DaXuanPokerTypePrizeType int32

const (
	//无中奖
	DaXuanPokerTypePrizeType_DaXuanPokerTypePrizeType_None DaXuanPokerTypePrizeType = 0
	//天皇牌型
	DaXuanPokerTypePrizeType_DaXuanPokerTypePrizeType_TianHuang DaXuanPokerTypePrizeType = 1
	//朵皇牌型
	DaXuanPokerTypePrizeType_DaXuanPokerTypePrizeType_DuoHuang DaXuanPokerTypePrizeType = 2
	//朵朵牌型
	DaXuanPokerTypePrizeType_DaXuanPokerTypePrizeType_DuoDuo DaXuanPokerTypePrizeType = 3
	//炸弹牌型
	DaXuanPokerTypePrizeType_DaXuanPokerTypePrizeType_ZhaDan DaXuanPokerTypePrizeType = 4
)

var DaXuanPokerTypePrizeType_name = map[int32]string{
	0: "DaXuanPokerTypePrizeType_None",
	1: "DaXuanPokerTypePrizeType_TianHuang",
	2: "DaXuanPokerTypePrizeType_DuoHuang",
	3: "DaXuanPokerTypePrizeType_DuoDuo",
	4: "DaXuanPokerTypePrizeType_ZhaDan",
}

var DaXuanPokerTypePrizeType_value = map[string]int32{
	"DaXuanPokerTypePrizeType_None":      0,
	"DaXuanPokerTypePrizeType_TianHuang": 1,
	"DaXuanPokerTypePrizeType_DuoHuang":  2,
	"DaXuanPokerTypePrizeType_DuoDuo":    3,
	"DaXuanPokerTypePrizeType_ZhaDan":    4,
}

func (x DaXuanPokerTypePrizeType) String() string {
	return proto.EnumName(DaXuanPokerTypePrizeType_name, int32(x))
}

func (DaXuanPokerTypePrizeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{110}
}

// DaXuan的牌型
type DaXuanPokerType int32

const (
	// 0点
	DaXuanPokerType_DaXuanPokerType_Zero DaXuanPokerType = 0
	// 1点
	DaXuanPokerType_DaXuanPokerType_One DaXuanPokerType = 1
	// 2点
	DaXuanPokerType_DaXuanPokerType_Two DaXuanPokerType = 2
	// 3点
	DaXuanPokerType_DaXuanPokerType_Three DaXuanPokerType = 3
	// 4点
	DaXuanPokerType_DaXuanPokerType_Four DaXuanPokerType = 4
	// 5点
	DaXuanPokerType_DaXuanPokerType_Five DaXuanPokerType = 5
	// 6点
	DaXuanPokerType_DaXuanPokerType_Six DaXuanPokerType = 6
	// 7点
	DaXuanPokerType_DaXuanPokerType_Seven DaXuanPokerType = 7
	// 8点
	DaXuanPokerType_DaXuanPokerType_Eight DaXuanPokerType = 8
	// 9点
	DaXuanPokerType_DaXuanPokerType_Nine DaXuanPokerType = 9
	//丁猫九
	DaXuanPokerType_DaXuanPokerType_DingMaoJiu DaXuanPokerType = 10
	//乌龙九
	DaXuanPokerType_DaXuanPokerType_WuLongJiu DaXuanPokerType = 1010
	//苕十九
	DaXuanPokerType_DaXuanPokerType_ShaoShiJiu DaXuanPokerType = 2010
	//板五九
	DaXuanPokerType_DaXuanPokerType_BanWuJiu DaXuanPokerType = 20
	//丁长九
	DaXuanPokerType_DaXuanPokerType_DingChangJiu DaXuanPokerType = 1020
	//梅十九
	DaXuanPokerType_DaXuanPokerType_MeiShiJiu DaXuanPokerType = 2020
	//和五九
	DaXuanPokerType_DaXuanPokerType_HeWuJiu DaXuanPokerType = 30
	//灯笼九
	DaXuanPokerType_DaXuanPokerType_DengLongJiu DaXuanPokerType = 40
	//地关九
	DaXuanPokerType_DaXuanPokerType_DiGuanJiu DaXuanPokerType = 50
	//天关九
	DaXuanPokerType_DaXuanPokerType_TianGuanJiu DaXuanPokerType = 60
	//地杠
	DaXuanPokerType_DaXuanPokerType_DiGang DaXuanPokerType = 70
	//天杠
	DaXuanPokerType_DaXuanPokerType_TianGang DaXuanPokerType = 80
	//地九王，开启地九王则有效，否则无效
	DaXuanPokerType_DaXuanPokerType_DiJiuWang DaXuanPokerType = 90
	//天王
	DaXuanPokerType_DaXuanPokerType_TianWang DaXuanPokerType = 100
	//对子
	DaXuanPokerType_DaXuanPokerType_DuiZi DaXuanPokerType = 110
	//虎头
	DaXuanPokerType_DaXuanPokerType_HuTou DaXuanPokerType = 120
	//苕十
	DaXuanPokerType_DaXuanPokerType_ShaoShi DaXuanPokerType = 1120
	//猫猫
	DaXuanPokerType_DaXuanPokerType_MaoMao DaXuanPokerType = 2120
	//膏药
	DaXuanPokerType_DaXuanPokerType_GaoYao DaXuanPokerType = 3120
	//梅十
	DaXuanPokerType_DaXuanPokerType_MeiShi DaXuanPokerType = 130
	//板凳
	DaXuanPokerType_DaXuanPokerType_BanDeng DaXuanPokerType = 1130
	//长三
	DaXuanPokerType_DaXuanPokerType_ChangSan DaXuanPokerType = 2130
	//和牌
	DaXuanPokerType_DaXuanPokerType_HePai DaXuanPokerType = 140
	//人牌
	DaXuanPokerType_DaXuanPokerType_RenPai DaXuanPokerType = 150
	//地牌
	DaXuanPokerType_DaXuanPokerType_DiPai DaXuanPokerType = 160
	//天牌
	DaXuanPokerType_DaXuanPokerType_TianPai DaXuanPokerType = 170
	//丁皇
	DaXuanPokerType_DaXuanPokerType_DingHuang DaXuanPokerType = 180
)

var DaXuanPokerType_name = map[int32]string{
	0:    "DaXuanPokerType_Zero",
	1:    "DaXuanPokerType_One",
	2:    "DaXuanPokerType_Two",
	3:    "DaXuanPokerType_Three",
	4:    "DaXuanPokerType_Four",
	5:    "DaXuanPokerType_Five",
	6:    "DaXuanPokerType_Six",
	7:    "DaXuanPokerType_Seven",
	8:    "DaXuanPokerType_Eight",
	9:    "DaXuanPokerType_Nine",
	10:   "DaXuanPokerType_DingMaoJiu",
	1010: "DaXuanPokerType_WuLongJiu",
	2010: "DaXuanPokerType_ShaoShiJiu",
	20:   "DaXuanPokerType_BanWuJiu",
	1020: "DaXuanPokerType_DingChangJiu",
	2020: "DaXuanPokerType_MeiShiJiu",
	30:   "DaXuanPokerType_HeWuJiu",
	40:   "DaXuanPokerType_DengLongJiu",
	50:   "DaXuanPokerType_DiGuanJiu",
	60:   "DaXuanPokerType_TianGuanJiu",
	70:   "DaXuanPokerType_DiGang",
	80:   "DaXuanPokerType_TianGang",
	90:   "DaXuanPokerType_DiJiuWang",
	100:  "DaXuanPokerType_TianWang",
	110:  "DaXuanPokerType_DuiZi",
	120:  "DaXuanPokerType_HuTou",
	1120: "DaXuanPokerType_ShaoShi",
	2120: "DaXuanPokerType_MaoMao",
	3120: "DaXuanPokerType_GaoYao",
	130:  "DaXuanPokerType_MeiShi",
	1130: "DaXuanPokerType_BanDeng",
	2130: "DaXuanPokerType_ChangSan",
	140:  "DaXuanPokerType_HePai",
	150:  "DaXuanPokerType_RenPai",
	160:  "DaXuanPokerType_DiPai",
	170:  "DaXuanPokerType_TianPai",
	180:  "DaXuanPokerType_DingHuang",
}

var DaXuanPokerType_value = map[string]int32{
	"DaXuanPokerType_Zero":         0,
	"DaXuanPokerType_One":          1,
	"DaXuanPokerType_Two":          2,
	"DaXuanPokerType_Three":        3,
	"DaXuanPokerType_Four":         4,
	"DaXuanPokerType_Five":         5,
	"DaXuanPokerType_Six":          6,
	"DaXuanPokerType_Seven":        7,
	"DaXuanPokerType_Eight":        8,
	"DaXuanPokerType_Nine":         9,
	"DaXuanPokerType_DingMaoJiu":   10,
	"DaXuanPokerType_WuLongJiu":    1010,
	"DaXuanPokerType_ShaoShiJiu":   2010,
	"DaXuanPokerType_BanWuJiu":     20,
	"DaXuanPokerType_DingChangJiu": 1020,
	"DaXuanPokerType_MeiShiJiu":    2020,
	"DaXuanPokerType_HeWuJiu":      30,
	"DaXuanPokerType_DengLongJiu":  40,
	"DaXuanPokerType_DiGuanJiu":    50,
	"DaXuanPokerType_TianGuanJiu":  60,
	"DaXuanPokerType_DiGang":       70,
	"DaXuanPokerType_TianGang":     80,
	"DaXuanPokerType_DiJiuWang":    90,
	"DaXuanPokerType_TianWang":     100,
	"DaXuanPokerType_DuiZi":        110,
	"DaXuanPokerType_HuTou":        120,
	"DaXuanPokerType_ShaoShi":      1120,
	"DaXuanPokerType_MaoMao":       2120,
	"DaXuanPokerType_GaoYao":       3120,
	"DaXuanPokerType_MeiShi":       130,
	"DaXuanPokerType_BanDeng":      1130,
	"DaXuanPokerType_ChangSan":     2130,
	"DaXuanPokerType_HePai":        140,
	"DaXuanPokerType_RenPai":       150,
	"DaXuanPokerType_DiPai":        160,
	"DaXuanPokerType_TianPai":      170,
	"DaXuanPokerType_DingHuang":    180,
}

func (x DaXuanPokerType) String() string {
	return proto.EnumName(DaXuanPokerType_name, int32(x))
}

func (DaXuanPokerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{111}
}

// 消消乐的操作类型
type ClearJoyDoType int32

const (
	// 未知类型
	ClearJoyDoType_ClearJoyDo_None ClearJoyDoType = 0
	// 消消乐-加入房间
	ClearJoyDoType_ClearJoyDo_JoinRoom ClearJoyDoType = 1
	// 消消乐-退出房间
	ClearJoyDoType_ClearJoyDo_ExitRoom ClearJoyDoType = 2
	// 消消乐-改变玩家状态
	ClearJoyDoType_ClearJoyDo_ChangeState ClearJoyDoType = 3
	// 消消乐-玩家消图
	ClearJoyDoType_ClearJoyDo_ClearPic ClearJoyDoType = 4
)

var ClearJoyDoType_name = map[int32]string{
	0: "ClearJoyDo_None",
	1: "ClearJoyDo_JoinRoom",
	2: "ClearJoyDo_ExitRoom",
	3: "ClearJoyDo_ChangeState",
	4: "ClearJoyDo_ClearPic",
}

var ClearJoyDoType_value = map[string]int32{
	"ClearJoyDo_None":        0,
	"ClearJoyDo_JoinRoom":    1,
	"ClearJoyDo_ExitRoom":    2,
	"ClearJoyDo_ChangeState": 3,
	"ClearJoyDo_ClearPic":    4,
}

func (x ClearJoyDoType) String() string {
	return proto.EnumName(ClearJoyDoType_name, int32(x))
}

func (ClearJoyDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{112}
}

// 连线游戏的子游戏类型
type LineGameSubType int32

const (
	// 未知类型
	LineGameSubType_LineGameSubType_None LineGameSubType = 0
	// 罗马竞技场
	LineGameSubType_LineGameSubType_RomanArena LineGameSubType = 1
)

var LineGameSubType_name = map[int32]string{
	0: "LineGameSubType_None",
	1: "LineGameSubType_RomanArena",
}

var LineGameSubType_value = map[string]int32{
	"LineGameSubType_None":       0,
	"LineGameSubType_RomanArena": 1,
}

func (x LineGameSubType) String() string {
	return proto.EnumName(LineGameSubType_name, int32(x))
}

func (LineGameSubType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{113}
}

// 连线游戏的扩展玩法
type LineGameMode int32

const (
	// 未知类型,没有扩展玩法
	LineGameMode_LineGameMode_None LineGameMode = 0
	// 消除，剩余元素向下掉落，然后填充空白区域的扩展玩法
	LineGameMode_LineGameMode_Remove_Drop_Fill LineGameMode = 1
)

var LineGameMode_name = map[int32]string{
	0: "LineGameMode_None",
	1: "LineGameMode_Remove_Drop_Fill",
}

var LineGameMode_value = map[string]int32{
	"LineGameMode_None":             0,
	"LineGameMode_Remove_Drop_Fill": 1,
}

func (x LineGameMode) String() string {
	return proto.EnumName(LineGameMode_name, int32(x))
}

func (LineGameMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{114}
}

// 连线游戏的操作类型
type LineGameDoType int32

const (
	// 未知类型
	LineGameDoType_LineGameDo_None LineGameDoType = 0
	// 连线游戏-进入房间
	// 请求协议 GameJoinRoomRequest
	// 返回协议 GameJoinRoomReply
	LineGameDoType_LineGameDo_JoinRoom LineGameDoType = 1
	// 连线游戏-退出房间
	// 请求协议 GameExitRoomRequest
	// 返回协议 GameExitRoomReply
	LineGameDoType_LineGameDo_ExitRoom LineGameDoType = 2
	// 连线游戏-点击开始
	// 请求协议 LineGamePlayRequest
	// 返回协议 LineGamePlayReply
	LineGameDoType_LineGameDo_Play LineGameDoType = 3
)

var LineGameDoType_name = map[int32]string{
	0: "LineGameDo_None",
	1: "LineGameDo_JoinRoom",
	2: "LineGameDo_ExitRoom",
	3: "LineGameDo_Play",
}

var LineGameDoType_value = map[string]int32{
	"LineGameDo_None":     0,
	"LineGameDo_JoinRoom": 1,
	"LineGameDo_ExitRoom": 2,
	"LineGameDo_Play":     3,
}

func (x LineGameDoType) String() string {
	return proto.EnumName(LineGameDoType_name, int32(x))
}

func (LineGameDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{115}
}

// 连线游戏的元素类型
type LineGameElementType int32

const (
	// 未知类型
	LineGameElementType_LineGameElementType_None LineGameElementType = 0
	// 普通元素，由于普通元素可能是任意图案，所以这里只定义普通元素的数量
	LineGameElementType_LineGameElementType_Normal1 LineGameElementType = 1
	LineGameElementType_LineGameElementType_Normal2 LineGameElementType = 2
	LineGameElementType_LineGameElementType_Normal3 LineGameElementType = 3
	LineGameElementType_LineGameElementType_Normal4 LineGameElementType = 4
	LineGameElementType_LineGameElementType_Normal5 LineGameElementType = 5
	LineGameElementType_LineGameElementType_Normal6 LineGameElementType = 6
	LineGameElementType_LineGameElementType_Normal7 LineGameElementType = 7
	// wild元素
	LineGameElementType_LineGameElementType_Wild LineGameElementType = 1000
	// bounds元素
	LineGameElementType_LineGameElementType_Bouns LineGameElementType = 1100
)

var LineGameElementType_name = map[int32]string{
	0:    "LineGameElementType_None",
	1:    "LineGameElementType_Normal1",
	2:    "LineGameElementType_Normal2",
	3:    "LineGameElementType_Normal3",
	4:    "LineGameElementType_Normal4",
	5:    "LineGameElementType_Normal5",
	6:    "LineGameElementType_Normal6",
	7:    "LineGameElementType_Normal7",
	1000: "LineGameElementType_Wild",
	1100: "LineGameElementType_Bouns",
}

var LineGameElementType_value = map[string]int32{
	"LineGameElementType_None":    0,
	"LineGameElementType_Normal1": 1,
	"LineGameElementType_Normal2": 2,
	"LineGameElementType_Normal3": 3,
	"LineGameElementType_Normal4": 4,
	"LineGameElementType_Normal5": 5,
	"LineGameElementType_Normal6": 6,
	"LineGameElementType_Normal7": 7,
	"LineGameElementType_Wild":    1000,
	"LineGameElementType_Bouns":   1100,
}

func (x LineGameElementType) String() string {
	return proto.EnumName(LineGameElementType_name, int32(x))
}

func (LineGameElementType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{116}
}

// 邮件的状态
type EmailState int32

const (
	// 容错
	EmailState_EmailState_None EmailState = 0
	// 未读的邮件
	EmailState_EmailState_UnRead EmailState = 1
	// 已读,未领取 邮件
	EmailState_EmailState_UnreadyReceive EmailState = 2
	// 已读,已领取 邮件
	EmailState_EmailState_AlreadyReceive EmailState = 3
	// 已删除的邮件
	EmailState_EmailState_Delete EmailState = 4
)

var EmailState_name = map[int32]string{
	0: "EmailState_None",
	1: "EmailState_UnRead",
	2: "EmailState_UnreadyReceive",
	3: "EmailState_AlreadyReceive",
	4: "EmailState_Delete",
}

var EmailState_value = map[string]int32{
	"EmailState_None":           0,
	"EmailState_UnRead":         1,
	"EmailState_UnreadyReceive": 2,
	"EmailState_AlreadyReceive": 3,
	"EmailState_Delete":         4,
}

func (x EmailState) String() string {
	return proto.EnumName(EmailState_name, int32(x))
}

func (EmailState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{117}
}

type GemWarsDoType int32

const (
	GemWarsDoType_GemWars_None     GemWarsDoType = 0
	GemWarsDoType_GemWars_JoinRoom GemWarsDoType = 1
	// 退出房间
	GemWarsDoType_GemWars_ExitRoom GemWarsDoType = 2
	// 玩家下注
	GemWarsDoType_GemWars_PlayerBet GemWarsDoType = 3
)

var GemWarsDoType_name = map[int32]string{
	0: "GemWars_None",
	1: "GemWars_JoinRoom",
	2: "GemWars_ExitRoom",
	3: "GemWars_PlayerBet",
}

var GemWarsDoType_value = map[string]int32{
	"GemWars_None":      0,
	"GemWars_JoinRoom":  1,
	"GemWars_ExitRoom":  2,
	"GemWars_PlayerBet": 3,
}

func (x GemWarsDoType) String() string {
	return proto.EnumName(GemWarsDoType_name, int32(x))
}

func (GemWarsDoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{118}
}

// 百人牛牛下注区域(天地玄黄)
type GemWarsBetArea int32

const (
	GemWarsBetArea_GemWarsBetArea_None GemWarsBetArea = 0
	// 红
	GemWarsBetArea_GemWars_Red GemWarsBetArea = 1
	// 绿
	GemWarsBetArea_GemWars_Green GemWarsBetArea = 2
	// 黄
	GemWarsBetArea_GemWars_Yellow GemWarsBetArea = 3
	// 蓝
	GemWarsBetArea_GemWars_Blue GemWarsBetArea = 4
	// 金
	GemWarsBetArea_GemWars_Gold GemWarsBetArea = 5
	// 1颗
	GemWarsBetArea_GemWars_Num1 GemWarsBetArea = 6
	// 2颗
	GemWarsBetArea_GemWars_Num2 GemWarsBetArea = 7
	// 3颗
	GemWarsBetArea_GemWars_Num3 GemWarsBetArea = 8
	// 4颗
	GemWarsBetArea_GemWars_Num4 GemWarsBetArea = 9
	// 5颗
	GemWarsBetArea_GemWars_Num5 GemWarsBetArea = 10
	// 6颗
	GemWarsBetArea_GemWars_Num6 GemWarsBetArea = 11
	// 7颗
	GemWarsBetArea_GemWars_Num7 GemWarsBetArea = 12
	// 8颗
	GemWarsBetArea_GemWars_Num8 GemWarsBetArea = 13
)

var GemWarsBetArea_name = map[int32]string{
	0:  "GemWarsBetArea_None",
	1:  "GemWars_Red",
	2:  "GemWars_Green",
	3:  "GemWars_Yellow",
	4:  "GemWars_Blue",
	5:  "GemWars_Gold",
	6:  "GemWars_Num1",
	7:  "GemWars_Num2",
	8:  "GemWars_Num3",
	9:  "GemWars_Num4",
	10: "GemWars_Num5",
	11: "GemWars_Num6",
	12: "GemWars_Num7",
	13: "GemWars_Num8",
}

var GemWarsBetArea_value = map[string]int32{
	"GemWarsBetArea_None": 0,
	"GemWars_Red":         1,
	"GemWars_Green":       2,
	"GemWars_Yellow":      3,
	"GemWars_Blue":        4,
	"GemWars_Gold":        5,
	"GemWars_Num1":        6,
	"GemWars_Num2":        7,
	"GemWars_Num3":        8,
	"GemWars_Num4":        9,
	"GemWars_Num5":        10,
	"GemWars_Num6":        11,
	"GemWars_Num7":        12,
	"GemWars_Num8":        13,
}

func (x GemWarsBetArea) String() string {
	return proto.EnumName(GemWarsBetArea_name, int32(x))
}

func (GemWarsBetArea) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{119}
}

type MessageLock struct {
	ComponentName        string   `protobuf:"bytes,1,opt,name=componentName,proto3" json:"componentName,omitempty"`
	LockName             string   `protobuf:"bytes,2,opt,name=lockName,proto3" json:"lockName,omitempty"`
	IsRealLock           bool     `protobuf:"varint,3,opt,name=isRealLock,proto3" json:"isRealLock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageLock) Reset()         { *m = MessageLock{} }
func (m *MessageLock) String() string { return proto.CompactTextString(m) }
func (*MessageLock) ProtoMessage()    {}
func (*MessageLock) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *MessageLock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageLock.Unmarshal(m, b)
}
func (m *MessageLock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageLock.Marshal(b, m, deterministic)
}
func (m *MessageLock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageLock.Merge(m, src)
}
func (m *MessageLock) XXX_Size() int {
	return xxx_messageInfo_MessageLock.Size(m)
}
func (m *MessageLock) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageLock.DiscardUnknown(m)
}

var xxx_messageInfo_MessageLock proto.InternalMessageInfo

func (m *MessageLock) GetComponentName() string {
	if m != nil {
		return m.ComponentName
	}
	return ""
}

func (m *MessageLock) GetLockName() string {
	if m != nil {
		return m.LockName
	}
	return ""
}

func (m *MessageLock) GetIsRealLock() bool {
	if m != nil {
		return m.IsRealLock
	}
	return false
}

type MessageExtroInfo struct {
	ClientConnId         string             `protobuf:"bytes,1,opt,name=clientConnId,proto3" json:"clientConnId,omitempty"`
	ClientConnIp         string             `protobuf:"bytes,2,opt,name=clientConnIp,proto3" json:"clientConnIp,omitempty"`
	UserId               string             `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	Locks                []*MessageLock     `protobuf:"bytes,4,rep,name=locks,proto3" json:"locks,omitempty"`
	Role                 Roles              `protobuf:"varint,5,opt,name=role,proto3,enum=Roles" json:"role,omitempty"`
	Auths                []AuthorizationDef `protobuf:"varint,6,rep,packed,name=Auths,proto3,enum=AuthorizationDef" json:"Auths,omitempty"`
	ServerIndex          string             `protobuf:"bytes,7,opt,name=serverIndex,proto3" json:"serverIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MessageExtroInfo) Reset()         { *m = MessageExtroInfo{} }
func (m *MessageExtroInfo) String() string { return proto.CompactTextString(m) }
func (*MessageExtroInfo) ProtoMessage()    {}
func (*MessageExtroInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *MessageExtroInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageExtroInfo.Unmarshal(m, b)
}
func (m *MessageExtroInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageExtroInfo.Marshal(b, m, deterministic)
}
func (m *MessageExtroInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageExtroInfo.Merge(m, src)
}
func (m *MessageExtroInfo) XXX_Size() int {
	return xxx_messageInfo_MessageExtroInfo.Size(m)
}
func (m *MessageExtroInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageExtroInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MessageExtroInfo proto.InternalMessageInfo

func (m *MessageExtroInfo) GetClientConnId() string {
	if m != nil {
		return m.ClientConnId
	}
	return ""
}

func (m *MessageExtroInfo) GetClientConnIp() string {
	if m != nil {
		return m.ClientConnIp
	}
	return ""
}

func (m *MessageExtroInfo) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *MessageExtroInfo) GetLocks() []*MessageLock {
	if m != nil {
		return m.Locks
	}
	return nil
}

func (m *MessageExtroInfo) GetRole() Roles {
	if m != nil {
		return m.Role
	}
	return Roles_Error
}

func (m *MessageExtroInfo) GetAuths() []AuthorizationDef {
	if m != nil {
		return m.Auths
	}
	return nil
}

func (m *MessageExtroInfo) GetServerIndex() string {
	if m != nil {
		return m.ServerIndex
	}
	return ""
}

//定义请求结构
type HandleMessageRequest struct {
	ComponentName        string            `protobuf:"bytes,1,opt,name=componentName,proto3" json:"componentName,omitempty"`
	MethodName           string            `protobuf:"bytes,2,opt,name=methodName,proto3" json:"methodName,omitempty"`
	MessageContent       *any.Any          `protobuf:"bytes,3,opt,name=messageContent,proto3" json:"messageContent,omitempty"`
	ExtroInfo            *MessageExtroInfo `protobuf:"bytes,4,opt,name=extroInfo,proto3" json:"extroInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HandleMessageRequest) Reset()         { *m = HandleMessageRequest{} }
func (m *HandleMessageRequest) String() string { return proto.CompactTextString(m) }
func (*HandleMessageRequest) ProtoMessage()    {}
func (*HandleMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}

func (m *HandleMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleMessageRequest.Unmarshal(m, b)
}
func (m *HandleMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleMessageRequest.Marshal(b, m, deterministic)
}
func (m *HandleMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleMessageRequest.Merge(m, src)
}
func (m *HandleMessageRequest) XXX_Size() int {
	return xxx_messageInfo_HandleMessageRequest.Size(m)
}
func (m *HandleMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandleMessageRequest proto.InternalMessageInfo

func (m *HandleMessageRequest) GetComponentName() string {
	if m != nil {
		return m.ComponentName
	}
	return ""
}

func (m *HandleMessageRequest) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

func (m *HandleMessageRequest) GetMessageContent() *any.Any {
	if m != nil {
		return m.MessageContent
	}
	return nil
}

func (m *HandleMessageRequest) GetExtroInfo() *MessageExtroInfo {
	if m != nil {
		return m.ExtroInfo
	}
	return nil
}

//定义响应结构
type HandleMessageReply struct {
	ErrMessage           *ErrorMessage `protobuf:"bytes,1,opt,name=errMessage,proto3" json:"errMessage,omitempty"`
	MessageContent       *any.Any      `protobuf:"bytes,2,opt,name=messageContent,proto3" json:"messageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *HandleMessageReply) Reset()         { *m = HandleMessageReply{} }
func (m *HandleMessageReply) String() string { return proto.CompactTextString(m) }
func (*HandleMessageReply) ProtoMessage()    {}
func (*HandleMessageReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{3}
}

func (m *HandleMessageReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleMessageReply.Unmarshal(m, b)
}
func (m *HandleMessageReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleMessageReply.Marshal(b, m, deterministic)
}
func (m *HandleMessageReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleMessageReply.Merge(m, src)
}
func (m *HandleMessageReply) XXX_Size() int {
	return xxx_messageInfo_HandleMessageReply.Size(m)
}
func (m *HandleMessageReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleMessageReply.DiscardUnknown(m)
}

var xxx_messageInfo_HandleMessageReply proto.InternalMessageInfo

func (m *HandleMessageReply) GetErrMessage() *ErrorMessage {
	if m != nil {
		return m.ErrMessage
	}
	return nil
}

func (m *HandleMessageReply) GetMessageContent() *any.Any {
	if m != nil {
		return m.MessageContent
	}
	return nil
}

type ErrorMessage struct {
	Code                 ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=ErrorCode" json:"code,omitempty"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ErrorMessage) Reset()         { *m = ErrorMessage{} }
func (m *ErrorMessage) String() string { return proto.CompactTextString(m) }
func (*ErrorMessage) ProtoMessage()    {}
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{4}
}

func (m *ErrorMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorMessage.Unmarshal(m, b)
}
func (m *ErrorMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorMessage.Marshal(b, m, deterministic)
}
func (m *ErrorMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorMessage.Merge(m, src)
}
func (m *ErrorMessage) XXX_Size() int {
	return xxx_messageInfo_ErrorMessage.Size(m)
}
func (m *ErrorMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorMessage proto.InternalMessageInfo

func (m *ErrorMessage) GetCode() ErrorCode {
	if m != nil {
		return m.Code
	}
	return ErrorCode_InterfaceNotFound
}

func (m *ErrorMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type EmptyMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyMessage) Reset()         { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()    {}
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{5}
}

func (m *EmptyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyMessage.Unmarshal(m, b)
}
func (m *EmptyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyMessage.Marshal(b, m, deterministic)
}
func (m *EmptyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyMessage.Merge(m, src)
}
func (m *EmptyMessage) XXX_Size() int {
	return xxx_messageInfo_EmptyMessage.Size(m)
}
func (m *EmptyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyMessage proto.InternalMessageInfo

// 玩家在线信息
type PlayerOnlineInfo struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SocketServerIndex    string   `protobuf:"bytes,2,opt,name=socketServerIndex,proto3" json:"socketServerIndex,omitempty"`
	LoginTime            int64    `protobuf:"varint,3,opt,name=loginTime,proto3" json:"loginTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerOnlineInfo) Reset()         { *m = PlayerOnlineInfo{} }
func (m *PlayerOnlineInfo) String() string { return proto.CompactTextString(m) }
func (*PlayerOnlineInfo) ProtoMessage()    {}
func (*PlayerOnlineInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{6}
}

func (m *PlayerOnlineInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerOnlineInfo.Unmarshal(m, b)
}
func (m *PlayerOnlineInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerOnlineInfo.Marshal(b, m, deterministic)
}
func (m *PlayerOnlineInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerOnlineInfo.Merge(m, src)
}
func (m *PlayerOnlineInfo) XXX_Size() int {
	return xxx_messageInfo_PlayerOnlineInfo.Size(m)
}
func (m *PlayerOnlineInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerOnlineInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerOnlineInfo proto.InternalMessageInfo

func (m *PlayerOnlineInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PlayerOnlineInfo) GetSocketServerIndex() string {
	if m != nil {
		return m.SocketServerIndex
	}
	return ""
}

func (m *PlayerOnlineInfo) GetLoginTime() int64 {
	if m != nil {
		return m.LoginTime
	}
	return 0
}

// 玩家信息
type PlayerInfo struct {
	// 玩家uuid，永远不会改变
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 玩家短位id，用于玩家之间的搜索，可改变
	ShortId string `protobuf:"bytes,2,opt,name=shortId,proto3" json:"shortId,omitempty"`
	// 玩家昵称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 玩家账户名
	Account string `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	// 玩家余额
	Balance int64 `protobuf:"varint,5,opt,name=balance,proto3" json:"balance,omitempty"`
	// 是否是机器人
	// 弃用，使用角色来判断
	IsRobot bool `protobuf:"varint,6,opt,name=isRobot,proto3" json:"isRobot,omitempty"`
	// 玩家正在游玩的游戏类型
	GameType GameType `protobuf:"varint,7,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 玩家正在游玩的游戏场次
	GameScene int32 `protobuf:"varint,8,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	// 玩家正在游玩的游戏的线路，即服务器索引
	GameServerIndex string `protobuf:"bytes,9,opt,name=gameServerIndex,proto3" json:"gameServerIndex,omitempty"`
	// 玩家所在的socket线路，即socket服务器索引
	SocketServerIndex string `protobuf:"bytes,10,opt,name=socketServerIndex,proto3" json:"socketServerIndex,omitempty"`
	//权限
	Auths []AuthorizationDef `protobuf:"varint,11,rep,packed,name=auths,proto3,enum=AuthorizationDef" json:"auths,omitempty"`
	// 玩家正在游玩的游戏房间id
	RoomId string `protobuf:"bytes,12,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 玩家角色
	Role Roles `protobuf:"varint,13,opt,name=role,proto3,enum=Roles" json:"role,omitempty"`
	//用户状态
	Status UserStatus `protobuf:"varint,14,opt,name=status,proto3,enum=UserStatus" json:"status,omitempty"`
	// 上次加入的房间id
	LastRoomId string `protobuf:"bytes,15,opt,name=lastRoomId,proto3" json:"lastRoomId,omitempty"`
	// 签到礼包及其状态
	SignGifts []GiftStatus `protobuf:"varint,16,rep,packed,name=SignGifts,proto3,enum=GiftStatus" json:"SignGifts,omitempty"`
	// 三日礼包及其状态
	ThreeDayGifts []GiftStatus `protobuf:"varint,17,rep,packed,name=ThreeDayGifts,proto3,enum=GiftStatus" json:"ThreeDayGifts,omitempty"`
	// 首充礼包领取状态
	FirstChargeGifts []GiftStatus `protobuf:"varint,37,rep,packed,name=FirstChargeGifts,proto3,enum=GiftStatus" json:"FirstChargeGifts,omitempty"`
	// 上次领取礼包的时间
	GetGiftTime string `protobuf:"bytes,18,opt,name=getGiftTime,proto3" json:"getGiftTime,omitempty"`
	// 玩家银行金额
	SafeMoney int64 `protobuf:"varint,19,opt,name=SafeMoney,proto3" json:"SafeMoney,omitempty"`
	// 玩家赢的钱的总和
	WinMoneySum int64 `protobuf:"varint,20,opt,name=WinMoneySum,proto3" json:"WinMoneySum,omitempty"`
	// 玩家vip等级
	VipLevel int32 `protobuf:"varint,21,opt,name=VipLevel,proto3" json:"VipLevel,omitempty"`
	// 玩家任务信息
	TaskInfo []*TaskInfo `protobuf:"bytes,22,rep,name=taskInfo,proto3" json:"taskInfo,omitempty"`
	// 玩家上次触发任务操作的时间
	LastTaskTime int64 `protobuf:"varint,23,opt,name=lastTaskTime,proto3" json:"lastTaskTime,omitempty"`
	// 玩家剩余转盘次数
	SpinNum int32 `protobuf:"varint,24,opt,name=spinNum,proto3" json:"spinNum,omitempty"`
	// 玩家上次触发转盘操作的时间
	LastSpinTime int64 `protobuf:"varint,25,opt,name=lastSpinTime,proto3" json:"lastSpinTime,omitempty"`
	// 机器人的扩展信息,只有机器人才用到
	RobotExtroInfo *RobotPlayerExtroInfo `protobuf:"bytes,26,opt,name=robotExtroInfo,proto3" json:"robotExtroInfo,omitempty"`
	//性别
	Sex int32 `protobuf:"varint,27,opt,name=sex,proto3" json:"sex,omitempty"`
	//头像地址
	HeadImgUrl string `protobuf:"bytes,28,opt,name=headImgUrl,proto3" json:"headImgUrl,omitempty"`
	//国家
	Country string `protobuf:"bytes,29,opt,name=country,proto3" json:"country,omitempty"`
	//省
	Province string `protobuf:"bytes,30,opt,name=province,proto3" json:"province,omitempty"`
	//市/地区
	City string `protobuf:"bytes,31,opt,name=city,proto3" json:"city,omitempty"`
	//用户来源
	PlayerSourceType PlayerSourceType `protobuf:"varint,32,opt,name=playerSourceType,proto3,enum=PlayerSourceType" json:"playerSourceType,omitempty"`
	//第三方登录信息
	ThirdPartyAccessInfo *ThirdPartyAccessInfo `protobuf:"bytes,33,opt,name=thirdPartyAccessInfo,proto3" json:"thirdPartyAccessInfo,omitempty"`
	//最后登陆时间
	LastLoginTime int64 `protobuf:"varint,34,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	// 银行密码
	SafePassword string `protobuf:"bytes,35,opt,name=SafePassword,proto3" json:"SafePassword,omitempty"`
	// 玩家正在连线游戏哪个子游戏中
	LineGameSubType LineGameSubType `protobuf:"varint,36,opt,name=lineGameSubType,proto3,enum=LineGameSubType" json:"lineGameSubType,omitempty"`
	// 交易密码
	TransactionPassword string `protobuf:"bytes,38,opt,name=transactionPassword,proto3" json:"transactionPassword,omitempty"`
	// 玩家绑定的手机
	Mobile               string   `protobuf:"bytes,39,opt,name=mobile,proto3" json:"mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerInfo) Reset()         { *m = PlayerInfo{} }
func (m *PlayerInfo) String() string { return proto.CompactTextString(m) }
func (*PlayerInfo) ProtoMessage()    {}
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{7}
}

func (m *PlayerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerInfo.Unmarshal(m, b)
}
func (m *PlayerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerInfo.Marshal(b, m, deterministic)
}
func (m *PlayerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerInfo.Merge(m, src)
}
func (m *PlayerInfo) XXX_Size() int {
	return xxx_messageInfo_PlayerInfo.Size(m)
}
func (m *PlayerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerInfo proto.InternalMessageInfo

func (m *PlayerInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PlayerInfo) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *PlayerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlayerInfo) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *PlayerInfo) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *PlayerInfo) GetIsRobot() bool {
	if m != nil {
		return m.IsRobot
	}
	return false
}

func (m *PlayerInfo) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *PlayerInfo) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *PlayerInfo) GetGameServerIndex() string {
	if m != nil {
		return m.GameServerIndex
	}
	return ""
}

func (m *PlayerInfo) GetSocketServerIndex() string {
	if m != nil {
		return m.SocketServerIndex
	}
	return ""
}

func (m *PlayerInfo) GetAuths() []AuthorizationDef {
	if m != nil {
		return m.Auths
	}
	return nil
}

func (m *PlayerInfo) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PlayerInfo) GetRole() Roles {
	if m != nil {
		return m.Role
	}
	return Roles_Error
}

func (m *PlayerInfo) GetStatus() UserStatus {
	if m != nil {
		return m.Status
	}
	return UserStatus_invalid
}

func (m *PlayerInfo) GetLastRoomId() string {
	if m != nil {
		return m.LastRoomId
	}
	return ""
}

func (m *PlayerInfo) GetSignGifts() []GiftStatus {
	if m != nil {
		return m.SignGifts
	}
	return nil
}

func (m *PlayerInfo) GetThreeDayGifts() []GiftStatus {
	if m != nil {
		return m.ThreeDayGifts
	}
	return nil
}

func (m *PlayerInfo) GetFirstChargeGifts() []GiftStatus {
	if m != nil {
		return m.FirstChargeGifts
	}
	return nil
}

func (m *PlayerInfo) GetGetGiftTime() string {
	if m != nil {
		return m.GetGiftTime
	}
	return ""
}

func (m *PlayerInfo) GetSafeMoney() int64 {
	if m != nil {
		return m.SafeMoney
	}
	return 0
}

func (m *PlayerInfo) GetWinMoneySum() int64 {
	if m != nil {
		return m.WinMoneySum
	}
	return 0
}

func (m *PlayerInfo) GetVipLevel() int32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

func (m *PlayerInfo) GetTaskInfo() []*TaskInfo {
	if m != nil {
		return m.TaskInfo
	}
	return nil
}

func (m *PlayerInfo) GetLastTaskTime() int64 {
	if m != nil {
		return m.LastTaskTime
	}
	return 0
}

func (m *PlayerInfo) GetSpinNum() int32 {
	if m != nil {
		return m.SpinNum
	}
	return 0
}

func (m *PlayerInfo) GetLastSpinTime() int64 {
	if m != nil {
		return m.LastSpinTime
	}
	return 0
}

func (m *PlayerInfo) GetRobotExtroInfo() *RobotPlayerExtroInfo {
	if m != nil {
		return m.RobotExtroInfo
	}
	return nil
}

func (m *PlayerInfo) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *PlayerInfo) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *PlayerInfo) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *PlayerInfo) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *PlayerInfo) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *PlayerInfo) GetPlayerSourceType() PlayerSourceType {
	if m != nil {
		return m.PlayerSourceType
	}
	return PlayerSourceType_PlayerSourceType_None
}

func (m *PlayerInfo) GetThirdPartyAccessInfo() *ThirdPartyAccessInfo {
	if m != nil {
		return m.ThirdPartyAccessInfo
	}
	return nil
}

func (m *PlayerInfo) GetLastLoginTime() int64 {
	if m != nil {
		return m.LastLoginTime
	}
	return 0
}

func (m *PlayerInfo) GetSafePassword() string {
	if m != nil {
		return m.SafePassword
	}
	return ""
}

func (m *PlayerInfo) GetLineGameSubType() LineGameSubType {
	if m != nil {
		return m.LineGameSubType
	}
	return LineGameSubType_LineGameSubType_None
}

func (m *PlayerInfo) GetTransactionPassword() string {
	if m != nil {
		return m.TransactionPassword
	}
	return ""
}

func (m *PlayerInfo) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

//第三方注册用户登录信息
type ThirdPartyAccessInfo struct {
	WeChatAccessInfo     *WeChatAccessInfo   `protobuf:"bytes,1,opt,name=weChatAccessInfo,proto3" json:"weChatAccessInfo,omitempty"`
	FacebookAccessInfo   *FacebookAccessInfo `protobuf:"bytes,2,opt,name=facebookAccessInfo,proto3" json:"facebookAccessInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ThirdPartyAccessInfo) Reset()         { *m = ThirdPartyAccessInfo{} }
func (m *ThirdPartyAccessInfo) String() string { return proto.CompactTextString(m) }
func (*ThirdPartyAccessInfo) ProtoMessage()    {}
func (*ThirdPartyAccessInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{8}
}

func (m *ThirdPartyAccessInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThirdPartyAccessInfo.Unmarshal(m, b)
}
func (m *ThirdPartyAccessInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThirdPartyAccessInfo.Marshal(b, m, deterministic)
}
func (m *ThirdPartyAccessInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThirdPartyAccessInfo.Merge(m, src)
}
func (m *ThirdPartyAccessInfo) XXX_Size() int {
	return xxx_messageInfo_ThirdPartyAccessInfo.Size(m)
}
func (m *ThirdPartyAccessInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ThirdPartyAccessInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ThirdPartyAccessInfo proto.InternalMessageInfo

func (m *ThirdPartyAccessInfo) GetWeChatAccessInfo() *WeChatAccessInfo {
	if m != nil {
		return m.WeChatAccessInfo
	}
	return nil
}

func (m *ThirdPartyAccessInfo) GetFacebookAccessInfo() *FacebookAccessInfo {
	if m != nil {
		return m.FacebookAccessInfo
	}
	return nil
}

//第三方注册用户信息
type ThirdPartyUerInfo struct {
	WeChatUserInfo       *WeChatUserInfo   `protobuf:"bytes,1,opt,name=weChatUserInfo,proto3" json:"weChatUserInfo,omitempty"`
	FacebookUserInfo     *FacebookUserInfo `protobuf:"bytes,2,opt,name=facebookUserInfo,proto3" json:"facebookUserInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ThirdPartyUerInfo) Reset()         { *m = ThirdPartyUerInfo{} }
func (m *ThirdPartyUerInfo) String() string { return proto.CompactTextString(m) }
func (*ThirdPartyUerInfo) ProtoMessage()    {}
func (*ThirdPartyUerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{9}
}

func (m *ThirdPartyUerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThirdPartyUerInfo.Unmarshal(m, b)
}
func (m *ThirdPartyUerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThirdPartyUerInfo.Marshal(b, m, deterministic)
}
func (m *ThirdPartyUerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThirdPartyUerInfo.Merge(m, src)
}
func (m *ThirdPartyUerInfo) XXX_Size() int {
	return xxx_messageInfo_ThirdPartyUerInfo.Size(m)
}
func (m *ThirdPartyUerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ThirdPartyUerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ThirdPartyUerInfo proto.InternalMessageInfo

func (m *ThirdPartyUerInfo) GetWeChatUserInfo() *WeChatUserInfo {
	if m != nil {
		return m.WeChatUserInfo
	}
	return nil
}

func (m *ThirdPartyUerInfo) GetFacebookUserInfo() *FacebookUserInfo {
	if m != nil {
		return m.FacebookUserInfo
	}
	return nil
}

//微信登录信息
type WeChatAccessInfo struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ExpiresIn            int64    `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	RefreshToken         string   `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	OpenId               string   `protobuf:"bytes,4,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	Scope                string   `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	UnionId              string   `protobuf:"bytes,6,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
	UpdateTime           int64    `protobuf:"varint,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeChatAccessInfo) Reset()         { *m = WeChatAccessInfo{} }
func (m *WeChatAccessInfo) String() string { return proto.CompactTextString(m) }
func (*WeChatAccessInfo) ProtoMessage()    {}
func (*WeChatAccessInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{10}
}

func (m *WeChatAccessInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeChatAccessInfo.Unmarshal(m, b)
}
func (m *WeChatAccessInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeChatAccessInfo.Marshal(b, m, deterministic)
}
func (m *WeChatAccessInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeChatAccessInfo.Merge(m, src)
}
func (m *WeChatAccessInfo) XXX_Size() int {
	return xxx_messageInfo_WeChatAccessInfo.Size(m)
}
func (m *WeChatAccessInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WeChatAccessInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WeChatAccessInfo proto.InternalMessageInfo

func (m *WeChatAccessInfo) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *WeChatAccessInfo) GetExpiresIn() int64 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

func (m *WeChatAccessInfo) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *WeChatAccessInfo) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *WeChatAccessInfo) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *WeChatAccessInfo) GetUnionId() string {
	if m != nil {
		return m.UnionId
	}
	return ""
}

func (m *WeChatAccessInfo) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

//微信获取用户信息
type WeChatUserInfo struct {
	OpenId               string   `protobuf:"bytes,1,opt,name=openId,proto3" json:"openId,omitempty"`
	NickName             string   `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Sex                  int32    `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Province             string   `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City                 string   `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country              string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	HeadImgUrl           string   `protobuf:"bytes,7,opt,name=headImgUrl,proto3" json:"headImgUrl,omitempty"`
	UnionId              string   `protobuf:"bytes,8,opt,name=unionId,proto3" json:"unionId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeChatUserInfo) Reset()         { *m = WeChatUserInfo{} }
func (m *WeChatUserInfo) String() string { return proto.CompactTextString(m) }
func (*WeChatUserInfo) ProtoMessage()    {}
func (*WeChatUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{11}
}

func (m *WeChatUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeChatUserInfo.Unmarshal(m, b)
}
func (m *WeChatUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeChatUserInfo.Marshal(b, m, deterministic)
}
func (m *WeChatUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeChatUserInfo.Merge(m, src)
}
func (m *WeChatUserInfo) XXX_Size() int {
	return xxx_messageInfo_WeChatUserInfo.Size(m)
}
func (m *WeChatUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WeChatUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WeChatUserInfo proto.InternalMessageInfo

func (m *WeChatUserInfo) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *WeChatUserInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *WeChatUserInfo) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *WeChatUserInfo) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *WeChatUserInfo) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *WeChatUserInfo) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *WeChatUserInfo) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *WeChatUserInfo) GetUnionId() string {
	if m != nil {
		return m.UnionId
	}
	return ""
}

//Facebook登录信息
type FacebookAccessInfo struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenType            string   `protobuf:"bytes,2,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	ExpiresIn            int64    `protobuf:"varint,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	UpdateTime           int64    `protobuf:"varint,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FacebookAccessInfo) Reset()         { *m = FacebookAccessInfo{} }
func (m *FacebookAccessInfo) String() string { return proto.CompactTextString(m) }
func (*FacebookAccessInfo) ProtoMessage()    {}
func (*FacebookAccessInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{12}
}

func (m *FacebookAccessInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FacebookAccessInfo.Unmarshal(m, b)
}
func (m *FacebookAccessInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FacebookAccessInfo.Marshal(b, m, deterministic)
}
func (m *FacebookAccessInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FacebookAccessInfo.Merge(m, src)
}
func (m *FacebookAccessInfo) XXX_Size() int {
	return xxx_messageInfo_FacebookAccessInfo.Size(m)
}
func (m *FacebookAccessInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FacebookAccessInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FacebookAccessInfo proto.InternalMessageInfo

func (m *FacebookAccessInfo) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *FacebookAccessInfo) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *FacebookAccessInfo) GetExpiresIn() int64 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

func (m *FacebookAccessInfo) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

//Facebook用户信息
type FacebookUserInfo struct {
	OpenId               string   `protobuf:"bytes,1,opt,name=openId,proto3" json:"openId,omitempty"`
	NickName             string   `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	HeadImgUrl           string   `protobuf:"bytes,3,opt,name=headImgUrl,proto3" json:"headImgUrl,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Gender               string   `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FacebookUserInfo) Reset()         { *m = FacebookUserInfo{} }
func (m *FacebookUserInfo) String() string { return proto.CompactTextString(m) }
func (*FacebookUserInfo) ProtoMessage()    {}
func (*FacebookUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{13}
}

func (m *FacebookUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FacebookUserInfo.Unmarshal(m, b)
}
func (m *FacebookUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FacebookUserInfo.Marshal(b, m, deterministic)
}
func (m *FacebookUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FacebookUserInfo.Merge(m, src)
}
func (m *FacebookUserInfo) XXX_Size() int {
	return xxx_messageInfo_FacebookUserInfo.Size(m)
}
func (m *FacebookUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FacebookUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FacebookUserInfo proto.InternalMessageInfo

func (m *FacebookUserInfo) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *FacebookUserInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *FacebookUserInfo) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *FacebookUserInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *FacebookUserInfo) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

type ClientRequest struct {
	ComponentName        string   `protobuf:"bytes,1,opt,name=componentName,proto3" json:"componentName,omitempty"`
	MethodName           string   `protobuf:"bytes,2,opt,name=methodName,proto3" json:"methodName,omitempty"`
	MessageContent       *any.Any `protobuf:"bytes,3,opt,name=messageContent,proto3" json:"messageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientRequest) Reset()         { *m = ClientRequest{} }
func (m *ClientRequest) String() string { return proto.CompactTextString(m) }
func (*ClientRequest) ProtoMessage()    {}
func (*ClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{14}
}

func (m *ClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientRequest.Unmarshal(m, b)
}
func (m *ClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientRequest.Marshal(b, m, deterministic)
}
func (m *ClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientRequest.Merge(m, src)
}
func (m *ClientRequest) XXX_Size() int {
	return xxx_messageInfo_ClientRequest.Size(m)
}
func (m *ClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientRequest proto.InternalMessageInfo

func (m *ClientRequest) GetComponentName() string {
	if m != nil {
		return m.ComponentName
	}
	return ""
}

func (m *ClientRequest) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

func (m *ClientRequest) GetMessageContent() *any.Any {
	if m != nil {
		return m.MessageContent
	}
	return nil
}

type ClientReply struct {
	MessageName          string   `protobuf:"bytes,1,opt,name=messageName,proto3" json:"messageName,omitempty"`
	MessageContent       *any.Any `protobuf:"bytes,2,opt,name=messageContent,proto3" json:"messageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientReply) Reset()         { *m = ClientReply{} }
func (m *ClientReply) String() string { return proto.CompactTextString(m) }
func (*ClientReply) ProtoMessage()    {}
func (*ClientReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{15}
}

func (m *ClientReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientReply.Unmarshal(m, b)
}
func (m *ClientReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientReply.Marshal(b, m, deterministic)
}
func (m *ClientReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientReply.Merge(m, src)
}
func (m *ClientReply) XXX_Size() int {
	return xxx_messageInfo_ClientReply.Size(m)
}
func (m *ClientReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientReply.DiscardUnknown(m)
}

var xxx_messageInfo_ClientReply proto.InternalMessageInfo

func (m *ClientReply) GetMessageName() string {
	if m != nil {
		return m.MessageName
	}
	return ""
}

func (m *ClientReply) GetMessageContent() *any.Any {
	if m != nil {
		return m.MessageContent
	}
	return nil
}

type LoginRequest struct {
	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// 传这个就表示手机号登陆
	Mobile               string   `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{16}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LoginRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

//微信登录
type WeChatLoginRequest struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	AccessToken          string   `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeChatLoginRequest) Reset()         { *m = WeChatLoginRequest{} }
func (m *WeChatLoginRequest) String() string { return proto.CompactTextString(m) }
func (*WeChatLoginRequest) ProtoMessage()    {}
func (*WeChatLoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{17}
}

func (m *WeChatLoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeChatLoginRequest.Unmarshal(m, b)
}
func (m *WeChatLoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeChatLoginRequest.Marshal(b, m, deterministic)
}
func (m *WeChatLoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeChatLoginRequest.Merge(m, src)
}
func (m *WeChatLoginRequest) XXX_Size() int {
	return xxx_messageInfo_WeChatLoginRequest.Size(m)
}
func (m *WeChatLoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WeChatLoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WeChatLoginRequest proto.InternalMessageInfo

func (m *WeChatLoginRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *WeChatLoginRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

//Facebook登录
type FacebookLoginRequest struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FacebookLoginRequest) Reset()         { *m = FacebookLoginRequest{} }
func (m *FacebookLoginRequest) String() string { return proto.CompactTextString(m) }
func (*FacebookLoginRequest) ProtoMessage()    {}
func (*FacebookLoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{18}
}

func (m *FacebookLoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FacebookLoginRequest.Unmarshal(m, b)
}
func (m *FacebookLoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FacebookLoginRequest.Marshal(b, m, deterministic)
}
func (m *FacebookLoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FacebookLoginRequest.Merge(m, src)
}
func (m *FacebookLoginRequest) XXX_Size() int {
	return xxx_messageInfo_FacebookLoginRequest.Size(m)
}
func (m *FacebookLoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FacebookLoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FacebookLoginRequest proto.InternalMessageInfo

func (m *FacebookLoginRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type LoginReply struct {
	PlayerInfo           *PlayerInfo     `protobuf:"bytes,1,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	ServerTime           int64           `protobuf:"varint,2,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
	AllConfig            []*GlobalConfig `protobuf:"bytes,3,rep,name=AllConfig,proto3" json:"AllConfig,omitempty"`
	AccessToken          string          `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LoginReply) Reset()         { *m = LoginReply{} }
func (m *LoginReply) String() string { return proto.CompactTextString(m) }
func (*LoginReply) ProtoMessage()    {}
func (*LoginReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{19}
}

func (m *LoginReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReply.Unmarshal(m, b)
}
func (m *LoginReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReply.Marshal(b, m, deterministic)
}
func (m *LoginReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReply.Merge(m, src)
}
func (m *LoginReply) XXX_Size() int {
	return xxx_messageInfo_LoginReply.Size(m)
}
func (m *LoginReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReply.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReply proto.InternalMessageInfo

func (m *LoginReply) GetPlayerInfo() *PlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *LoginReply) GetServerTime() int64 {
	if m != nil {
		return m.ServerTime
	}
	return 0
}

func (m *LoginReply) GetAllConfig() []*GlobalConfig {
	if m != nil {
		return m.AllConfig
	}
	return nil
}

func (m *LoginReply) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

//获取默认权限请求
type DefaultAuthRequest struct {
	Role                 Roles    `protobuf:"varint,1,opt,name=role,proto3,enum=Roles" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DefaultAuthRequest) Reset()         { *m = DefaultAuthRequest{} }
func (m *DefaultAuthRequest) String() string { return proto.CompactTextString(m) }
func (*DefaultAuthRequest) ProtoMessage()    {}
func (*DefaultAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{20}
}

func (m *DefaultAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultAuthRequest.Unmarshal(m, b)
}
func (m *DefaultAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultAuthRequest.Marshal(b, m, deterministic)
}
func (m *DefaultAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultAuthRequest.Merge(m, src)
}
func (m *DefaultAuthRequest) XXX_Size() int {
	return xxx_messageInfo_DefaultAuthRequest.Size(m)
}
func (m *DefaultAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultAuthRequest proto.InternalMessageInfo

func (m *DefaultAuthRequest) GetRole() Roles {
	if m != nil {
		return m.Role
	}
	return Roles_Error
}

//默认权限回复消息
type DefaultAuthReply struct {
	Auths                []AuthorizationDef `protobuf:"varint,1,rep,packed,name=auths,proto3,enum=AuthorizationDef" json:"auths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DefaultAuthReply) Reset()         { *m = DefaultAuthReply{} }
func (m *DefaultAuthReply) String() string { return proto.CompactTextString(m) }
func (*DefaultAuthReply) ProtoMessage()    {}
func (*DefaultAuthReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{21}
}

func (m *DefaultAuthReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultAuthReply.Unmarshal(m, b)
}
func (m *DefaultAuthReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultAuthReply.Marshal(b, m, deterministic)
}
func (m *DefaultAuthReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultAuthReply.Merge(m, src)
}
func (m *DefaultAuthReply) XXX_Size() int {
	return xxx_messageInfo_DefaultAuthReply.Size(m)
}
func (m *DefaultAuthReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultAuthReply.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultAuthReply proto.InternalMessageInfo

func (m *DefaultAuthReply) GetAuths() []AuthorizationDef {
	if m != nil {
		return m.Auths
	}
	return nil
}

//设置全局游戏配置请求
type SetGlobalConfigRequest struct {
	Configs              []*GlobalConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SetGlobalConfigRequest) Reset()         { *m = SetGlobalConfigRequest{} }
func (m *SetGlobalConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetGlobalConfigRequest) ProtoMessage()    {}
func (*SetGlobalConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{22}
}

func (m *SetGlobalConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGlobalConfigRequest.Unmarshal(m, b)
}
func (m *SetGlobalConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGlobalConfigRequest.Marshal(b, m, deterministic)
}
func (m *SetGlobalConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGlobalConfigRequest.Merge(m, src)
}
func (m *SetGlobalConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetGlobalConfigRequest.Size(m)
}
func (m *SetGlobalConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGlobalConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetGlobalConfigRequest proto.InternalMessageInfo

func (m *SetGlobalConfigRequest) GetConfigs() []*GlobalConfig {
	if m != nil {
		return m.Configs
	}
	return nil
}

//设置全局游戏配置回复
type SetGlobalConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetGlobalConfigReply) Reset()         { *m = SetGlobalConfigReply{} }
func (m *SetGlobalConfigReply) String() string { return proto.CompactTextString(m) }
func (*SetGlobalConfigReply) ProtoMessage()    {}
func (*SetGlobalConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{23}
}

func (m *SetGlobalConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGlobalConfigReply.Unmarshal(m, b)
}
func (m *SetGlobalConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGlobalConfigReply.Marshal(b, m, deterministic)
}
func (m *SetGlobalConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGlobalConfigReply.Merge(m, src)
}
func (m *SetGlobalConfigReply) XXX_Size() int {
	return xxx_messageInfo_SetGlobalConfigReply.Size(m)
}
func (m *SetGlobalConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGlobalConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetGlobalConfigReply proto.InternalMessageInfo

//获取全局配置列表
type GetGlobalConfigAllRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGlobalConfigAllRequest) Reset()         { *m = GetGlobalConfigAllRequest{} }
func (m *GetGlobalConfigAllRequest) String() string { return proto.CompactTextString(m) }
func (*GetGlobalConfigAllRequest) ProtoMessage()    {}
func (*GetGlobalConfigAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{24}
}

func (m *GetGlobalConfigAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGlobalConfigAllRequest.Unmarshal(m, b)
}
func (m *GetGlobalConfigAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGlobalConfigAllRequest.Marshal(b, m, deterministic)
}
func (m *GetGlobalConfigAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGlobalConfigAllRequest.Merge(m, src)
}
func (m *GetGlobalConfigAllRequest) XXX_Size() int {
	return xxx_messageInfo_GetGlobalConfigAllRequest.Size(m)
}
func (m *GetGlobalConfigAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGlobalConfigAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGlobalConfigAllRequest proto.InternalMessageInfo

//获取全局配置列表
type GetGlobalConfigAllReply struct {
	Configs              []*GlobalConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetGlobalConfigAllReply) Reset()         { *m = GetGlobalConfigAllReply{} }
func (m *GetGlobalConfigAllReply) String() string { return proto.CompactTextString(m) }
func (*GetGlobalConfigAllReply) ProtoMessage()    {}
func (*GetGlobalConfigAllReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{25}
}

func (m *GetGlobalConfigAllReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGlobalConfigAllReply.Unmarshal(m, b)
}
func (m *GetGlobalConfigAllReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGlobalConfigAllReply.Marshal(b, m, deterministic)
}
func (m *GetGlobalConfigAllReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGlobalConfigAllReply.Merge(m, src)
}
func (m *GetGlobalConfigAllReply) XXX_Size() int {
	return xxx_messageInfo_GetGlobalConfigAllReply.Size(m)
}
func (m *GetGlobalConfigAllReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGlobalConfigAllReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetGlobalConfigAllReply proto.InternalMessageInfo

func (m *GetGlobalConfigAllReply) GetConfigs() []*GlobalConfig {
	if m != nil {
		return m.Configs
	}
	return nil
}

//获取游戏配置列表请求
type GetGameConfigAllRequest struct {
	GameType             GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	GameScene            int32    `protobuf:"varint,2,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGameConfigAllRequest) Reset()         { *m = GetGameConfigAllRequest{} }
func (m *GetGameConfigAllRequest) String() string { return proto.CompactTextString(m) }
func (*GetGameConfigAllRequest) ProtoMessage()    {}
func (*GetGameConfigAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{26}
}

func (m *GetGameConfigAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGameConfigAllRequest.Unmarshal(m, b)
}
func (m *GetGameConfigAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGameConfigAllRequest.Marshal(b, m, deterministic)
}
func (m *GetGameConfigAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGameConfigAllRequest.Merge(m, src)
}
func (m *GetGameConfigAllRequest) XXX_Size() int {
	return xxx_messageInfo_GetGameConfigAllRequest.Size(m)
}
func (m *GetGameConfigAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGameConfigAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGameConfigAllRequest proto.InternalMessageInfo

func (m *GetGameConfigAllRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GetGameConfigAllRequest) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

//获取游戏配置列表
type GetGameConfigAllReply struct {
	Configs              []*GameConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetGameConfigAllReply) Reset()         { *m = GetGameConfigAllReply{} }
func (m *GetGameConfigAllReply) String() string { return proto.CompactTextString(m) }
func (*GetGameConfigAllReply) ProtoMessage()    {}
func (*GetGameConfigAllReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{27}
}

func (m *GetGameConfigAllReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGameConfigAllReply.Unmarshal(m, b)
}
func (m *GetGameConfigAllReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGameConfigAllReply.Marshal(b, m, deterministic)
}
func (m *GetGameConfigAllReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGameConfigAllReply.Merge(m, src)
}
func (m *GetGameConfigAllReply) XXX_Size() int {
	return xxx_messageInfo_GetGameConfigAllReply.Size(m)
}
func (m *GetGameConfigAllReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGameConfigAllReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetGameConfigAllReply proto.InternalMessageInfo

func (m *GetGameConfigAllReply) GetConfigs() []*GameConfig {
	if m != nil {
		return m.Configs
	}
	return nil
}

//设置游戏配置请求
type SetGameConfigRequest struct {
	Configs              []*GameConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetGameConfigRequest) Reset()         { *m = SetGameConfigRequest{} }
func (m *SetGameConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetGameConfigRequest) ProtoMessage()    {}
func (*SetGameConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{28}
}

func (m *SetGameConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGameConfigRequest.Unmarshal(m, b)
}
func (m *SetGameConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGameConfigRequest.Marshal(b, m, deterministic)
}
func (m *SetGameConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGameConfigRequest.Merge(m, src)
}
func (m *SetGameConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetGameConfigRequest.Size(m)
}
func (m *SetGameConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGameConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetGameConfigRequest proto.InternalMessageInfo

func (m *SetGameConfigRequest) GetConfigs() []*GameConfig {
	if m != nil {
		return m.Configs
	}
	return nil
}

//设置游戏配置请求
type SetGameConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetGameConfigReply) Reset()         { *m = SetGameConfigReply{} }
func (m *SetGameConfigReply) String() string { return proto.CompactTextString(m) }
func (*SetGameConfigReply) ProtoMessage()    {}
func (*SetGameConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{29}
}

func (m *SetGameConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGameConfigReply.Unmarshal(m, b)
}
func (m *SetGameConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGameConfigReply.Marshal(b, m, deterministic)
}
func (m *SetGameConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGameConfigReply.Merge(m, src)
}
func (m *SetGameConfigReply) XXX_Size() int {
	return xxx_messageInfo_SetGameConfigReply.Size(m)
}
func (m *SetGameConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGameConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetGameConfigReply proto.InternalMessageInfo

//获取游戏场次列表
type GetGameScenesRequest struct {
	GameType             GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGameScenesRequest) Reset()         { *m = GetGameScenesRequest{} }
func (m *GetGameScenesRequest) String() string { return proto.CompactTextString(m) }
func (*GetGameScenesRequest) ProtoMessage()    {}
func (*GetGameScenesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{30}
}

func (m *GetGameScenesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGameScenesRequest.Unmarshal(m, b)
}
func (m *GetGameScenesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGameScenesRequest.Marshal(b, m, deterministic)
}
func (m *GetGameScenesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGameScenesRequest.Merge(m, src)
}
func (m *GetGameScenesRequest) XXX_Size() int {
	return xxx_messageInfo_GetGameScenesRequest.Size(m)
}
func (m *GetGameScenesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGameScenesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGameScenesRequest proto.InternalMessageInfo

func (m *GetGameScenesRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

//获取游戏场次列表
type GetGameScenesReply struct {
	GameType             GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	Scenes               []int32  `protobuf:"varint,2,rep,packed,name=scenes,proto3" json:"scenes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGameScenesReply) Reset()         { *m = GetGameScenesReply{} }
func (m *GetGameScenesReply) String() string { return proto.CompactTextString(m) }
func (*GetGameScenesReply) ProtoMessage()    {}
func (*GetGameScenesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{31}
}

func (m *GetGameScenesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGameScenesReply.Unmarshal(m, b)
}
func (m *GetGameScenesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGameScenesReply.Marshal(b, m, deterministic)
}
func (m *GetGameScenesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGameScenesReply.Merge(m, src)
}
func (m *GetGameScenesReply) XXX_Size() int {
	return xxx_messageInfo_GetGameScenesReply.Size(m)
}
func (m *GetGameScenesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGameScenesReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetGameScenesReply proto.InternalMessageInfo

func (m *GetGameScenesReply) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GetGameScenesReply) GetScenes() []int32 {
	if m != nil {
		return m.Scenes
	}
	return nil
}

//删除游戏场次
type DeleteGameSceneRequest struct {
	GameType             GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	Scene                int32    `protobuf:"varint,2,opt,name=scene,proto3" json:"scene,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGameSceneRequest) Reset()         { *m = DeleteGameSceneRequest{} }
func (m *DeleteGameSceneRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteGameSceneRequest) ProtoMessage()    {}
func (*DeleteGameSceneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{32}
}

func (m *DeleteGameSceneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGameSceneRequest.Unmarshal(m, b)
}
func (m *DeleteGameSceneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGameSceneRequest.Marshal(b, m, deterministic)
}
func (m *DeleteGameSceneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGameSceneRequest.Merge(m, src)
}
func (m *DeleteGameSceneRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteGameSceneRequest.Size(m)
}
func (m *DeleteGameSceneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGameSceneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGameSceneRequest proto.InternalMessageInfo

func (m *DeleteGameSceneRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *DeleteGameSceneRequest) GetScene() int32 {
	if m != nil {
		return m.Scene
	}
	return 0
}

//删除场次回复
type DeleteGameSceneReply struct {
	GameType             GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	Scene                int32    `protobuf:"varint,2,opt,name=scene,proto3" json:"scene,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGameSceneReply) Reset()         { *m = DeleteGameSceneReply{} }
func (m *DeleteGameSceneReply) String() string { return proto.CompactTextString(m) }
func (*DeleteGameSceneReply) ProtoMessage()    {}
func (*DeleteGameSceneReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{33}
}

func (m *DeleteGameSceneReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGameSceneReply.Unmarshal(m, b)
}
func (m *DeleteGameSceneReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGameSceneReply.Marshal(b, m, deterministic)
}
func (m *DeleteGameSceneReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGameSceneReply.Merge(m, src)
}
func (m *DeleteGameSceneReply) XXX_Size() int {
	return xxx_messageInfo_DeleteGameSceneReply.Size(m)
}
func (m *DeleteGameSceneReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGameSceneReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGameSceneReply proto.InternalMessageInfo

func (m *DeleteGameSceneReply) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *DeleteGameSceneReply) GetScene() int32 {
	if m != nil {
		return m.Scene
	}
	return 0
}

//发送表情请求
type SendSimpleChatRequest struct {
	//接收方uuid
	AcceptUuid string `protobuf:"bytes,3,opt,name=acceptUuid,proto3" json:"acceptUuid,omitempty"`
	//表情(语言)代号
	Code                 string   `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendSimpleChatRequest) Reset()         { *m = SendSimpleChatRequest{} }
func (m *SendSimpleChatRequest) String() string { return proto.CompactTextString(m) }
func (*SendSimpleChatRequest) ProtoMessage()    {}
func (*SendSimpleChatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{34}
}

func (m *SendSimpleChatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendSimpleChatRequest.Unmarshal(m, b)
}
func (m *SendSimpleChatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendSimpleChatRequest.Marshal(b, m, deterministic)
}
func (m *SendSimpleChatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendSimpleChatRequest.Merge(m, src)
}
func (m *SendSimpleChatRequest) XXX_Size() int {
	return xxx_messageInfo_SendSimpleChatRequest.Size(m)
}
func (m *SendSimpleChatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendSimpleChatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendSimpleChatRequest proto.InternalMessageInfo

func (m *SendSimpleChatRequest) GetAcceptUuid() string {
	if m != nil {
		return m.AcceptUuid
	}
	return ""
}

func (m *SendSimpleChatRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

//发送表情回复
type SendSimpleChatReply struct {
	//是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendSimpleChatReply) Reset()         { *m = SendSimpleChatReply{} }
func (m *SendSimpleChatReply) String() string { return proto.CompactTextString(m) }
func (*SendSimpleChatReply) ProtoMessage()    {}
func (*SendSimpleChatReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{35}
}

func (m *SendSimpleChatReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendSimpleChatReply.Unmarshal(m, b)
}
func (m *SendSimpleChatReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendSimpleChatReply.Marshal(b, m, deterministic)
}
func (m *SendSimpleChatReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendSimpleChatReply.Merge(m, src)
}
func (m *SendSimpleChatReply) XXX_Size() int {
	return xxx_messageInfo_SendSimpleChatReply.Size(m)
}
func (m *SendSimpleChatReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendSimpleChatReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendSimpleChatReply proto.InternalMessageInfo

func (m *SendSimpleChatReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

//玩家发送表情(语言)推送
type PushSimpleChat struct {
	//房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	//发送方uuid
	SendUuid string `protobuf:"bytes,2,opt,name=sendUuid,proto3" json:"sendUuid,omitempty"`
	//接收方uuid
	AcceptUuid string `protobuf:"bytes,3,opt,name=acceptUuid,proto3" json:"acceptUuid,omitempty"`
	//表情(语言)代号
	Code                 string   `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushSimpleChat) Reset()         { *m = PushSimpleChat{} }
func (m *PushSimpleChat) String() string { return proto.CompactTextString(m) }
func (*PushSimpleChat) ProtoMessage()    {}
func (*PushSimpleChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{36}
}

func (m *PushSimpleChat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushSimpleChat.Unmarshal(m, b)
}
func (m *PushSimpleChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushSimpleChat.Marshal(b, m, deterministic)
}
func (m *PushSimpleChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushSimpleChat.Merge(m, src)
}
func (m *PushSimpleChat) XXX_Size() int {
	return xxx_messageInfo_PushSimpleChat.Size(m)
}
func (m *PushSimpleChat) XXX_DiscardUnknown() {
	xxx_messageInfo_PushSimpleChat.DiscardUnknown(m)
}

var xxx_messageInfo_PushSimpleChat proto.InternalMessageInfo

func (m *PushSimpleChat) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushSimpleChat) GetSendUuid() string {
	if m != nil {
		return m.SendUuid
	}
	return ""
}

func (m *PushSimpleChat) GetAcceptUuid() string {
	if m != nil {
		return m.AcceptUuid
	}
	return ""
}

func (m *PushSimpleChat) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type RedisMessage struct {
	Table          string   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Key            string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	ValueString    string   `protobuf:"bytes,3,opt,name=valueString,proto3" json:"valueString,omitempty"`
	ValueByte      []byte   `protobuf:"bytes,4,opt,name=valueByte,proto3" json:"valueByte,omitempty"`
	ValueBool      bool     `protobuf:"varint,5,opt,name=valueBool,proto3" json:"valueBool,omitempty"`
	ValueStringArr []string `protobuf:"bytes,6,rep,name=valueStringArr,proto3" json:"valueStringArr,omitempty"`
	ValueByteArr   [][]byte `protobuf:"bytes,7,rep,name=valueByteArr,proto3" json:"valueByteArr,omitempty"`
	Count          int64    `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`
	ValueInt64     int64    `protobuf:"varint,9,opt,name=valueInt64,proto3" json:"valueInt64,omitempty"`
	Start          int32    `protobuf:"varint,10,opt,name=start,proto3" json:"start,omitempty"`
	Stop           int32    `protobuf:"varint,11,opt,name=stop,proto3" json:"stop,omitempty"`
	// 过期时间
	ExTime               int32    `protobuf:"varint,12,opt,name=exTime,proto3" json:"exTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedisMessage) Reset()         { *m = RedisMessage{} }
func (m *RedisMessage) String() string { return proto.CompactTextString(m) }
func (*RedisMessage) ProtoMessage()    {}
func (*RedisMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{37}
}

func (m *RedisMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedisMessage.Unmarshal(m, b)
}
func (m *RedisMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedisMessage.Marshal(b, m, deterministic)
}
func (m *RedisMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedisMessage.Merge(m, src)
}
func (m *RedisMessage) XXX_Size() int {
	return xxx_messageInfo_RedisMessage.Size(m)
}
func (m *RedisMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RedisMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RedisMessage proto.InternalMessageInfo

func (m *RedisMessage) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *RedisMessage) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RedisMessage) GetValueString() string {
	if m != nil {
		return m.ValueString
	}
	return ""
}

func (m *RedisMessage) GetValueByte() []byte {
	if m != nil {
		return m.ValueByte
	}
	return nil
}

func (m *RedisMessage) GetValueBool() bool {
	if m != nil {
		return m.ValueBool
	}
	return false
}

func (m *RedisMessage) GetValueStringArr() []string {
	if m != nil {
		return m.ValueStringArr
	}
	return nil
}

func (m *RedisMessage) GetValueByteArr() [][]byte {
	if m != nil {
		return m.ValueByteArr
	}
	return nil
}

func (m *RedisMessage) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *RedisMessage) GetValueInt64() int64 {
	if m != nil {
		return m.ValueInt64
	}
	return 0
}

func (m *RedisMessage) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *RedisMessage) GetStop() int32 {
	if m != nil {
		return m.Stop
	}
	return 0
}

func (m *RedisMessage) GetExTime() int32 {
	if m != nil {
		return m.ExTime
	}
	return 0
}

type MysqlAccountInfo struct {
	AutoId     uint64 `protobuf:"varint,1,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`
	Uuid       string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ShortId    string `protobuf:"bytes,3,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	Account    string `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	Password   string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	RoleType   Roles  `protobuf:"varint,6,opt,name=role_type,json=roleType,proto3,enum=Roles" json:"role_type,omitempty"`
	UpdateTime int64  `protobuf:"varint,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	//用户来源
	PlayerSourceType     PlayerSourceType `protobuf:"varint,8,opt,name=playerSourceType,proto3,enum=PlayerSourceType" json:"playerSourceType,omitempty"`
	OpenId               string           `protobuf:"bytes,9,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	UnionId              string           `protobuf:"bytes,10,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
	CreateTime           int64            `protobuf:"varint,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Mobile               string           `protobuf:"bytes,12,opt,name=mobile,proto3" json:"mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MysqlAccountInfo) Reset()         { *m = MysqlAccountInfo{} }
func (m *MysqlAccountInfo) String() string { return proto.CompactTextString(m) }
func (*MysqlAccountInfo) ProtoMessage()    {}
func (*MysqlAccountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{38}
}

func (m *MysqlAccountInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlAccountInfo.Unmarshal(m, b)
}
func (m *MysqlAccountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlAccountInfo.Marshal(b, m, deterministic)
}
func (m *MysqlAccountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlAccountInfo.Merge(m, src)
}
func (m *MysqlAccountInfo) XXX_Size() int {
	return xxx_messageInfo_MysqlAccountInfo.Size(m)
}
func (m *MysqlAccountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlAccountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlAccountInfo proto.InternalMessageInfo

func (m *MysqlAccountInfo) GetAutoId() uint64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *MysqlAccountInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *MysqlAccountInfo) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *MysqlAccountInfo) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *MysqlAccountInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *MysqlAccountInfo) GetRoleType() Roles {
	if m != nil {
		return m.RoleType
	}
	return Roles_Error
}

func (m *MysqlAccountInfo) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *MysqlAccountInfo) GetPlayerSourceType() PlayerSourceType {
	if m != nil {
		return m.PlayerSourceType
	}
	return PlayerSourceType_PlayerSourceType_None
}

func (m *MysqlAccountInfo) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *MysqlAccountInfo) GetUnionId() string {
	if m != nil {
		return m.UnionId
	}
	return ""
}

func (m *MysqlAccountInfo) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *MysqlAccountInfo) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

// 存储在MySQL中的联盟合作者信息
type MysqlLeaguePartner struct {
	AutoId               uint64   `protobuf:"varint,1,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`
	LeagueUUID           string   `protobuf:"bytes,2,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	InvitorUUID          string   `protobuf:"bytes,3,opt,name=invitorUUID,proto3" json:"invitorUUID,omitempty"`
	PartnerUUID          string   `protobuf:"bytes,4,opt,name=partnerUUID,proto3" json:"partnerUUID,omitempty"`
	IsAgent              bool     `protobuf:"varint,5,opt,name=isAgent,proto3" json:"isAgent,omitempty"`
	AgentProfit          int32    `protobuf:"varint,6,opt,name=agentProfit,proto3" json:"agentProfit,omitempty"`
	Status               int32    `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	ApplyTime            int64    `protobuf:"varint,8,opt,name=applyTime,proto3" json:"applyTime,omitempty"`
	JoinTime             int64    `protobuf:"varint,9,opt,name=joinTime,proto3" json:"joinTime,omitempty"`
	QuitTime             int64    `protobuf:"varint,10,opt,name=quitTime,proto3" json:"quitTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MysqlLeaguePartner) Reset()         { *m = MysqlLeaguePartner{} }
func (m *MysqlLeaguePartner) String() string { return proto.CompactTextString(m) }
func (*MysqlLeaguePartner) ProtoMessage()    {}
func (*MysqlLeaguePartner) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{39}
}

func (m *MysqlLeaguePartner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlLeaguePartner.Unmarshal(m, b)
}
func (m *MysqlLeaguePartner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlLeaguePartner.Marshal(b, m, deterministic)
}
func (m *MysqlLeaguePartner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlLeaguePartner.Merge(m, src)
}
func (m *MysqlLeaguePartner) XXX_Size() int {
	return xxx_messageInfo_MysqlLeaguePartner.Size(m)
}
func (m *MysqlLeaguePartner) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlLeaguePartner.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlLeaguePartner proto.InternalMessageInfo

func (m *MysqlLeaguePartner) GetAutoId() uint64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *MysqlLeaguePartner) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *MysqlLeaguePartner) GetInvitorUUID() string {
	if m != nil {
		return m.InvitorUUID
	}
	return ""
}

func (m *MysqlLeaguePartner) GetPartnerUUID() string {
	if m != nil {
		return m.PartnerUUID
	}
	return ""
}

func (m *MysqlLeaguePartner) GetIsAgent() bool {
	if m != nil {
		return m.IsAgent
	}
	return false
}

func (m *MysqlLeaguePartner) GetAgentProfit() int32 {
	if m != nil {
		return m.AgentProfit
	}
	return 0
}

func (m *MysqlLeaguePartner) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MysqlLeaguePartner) GetApplyTime() int64 {
	if m != nil {
		return m.ApplyTime
	}
	return 0
}

func (m *MysqlLeaguePartner) GetJoinTime() int64 {
	if m != nil {
		return m.JoinTime
	}
	return 0
}

func (m *MysqlLeaguePartner) GetQuitTime() int64 {
	if m != nil {
		return m.QuitTime
	}
	return 0
}

// 存储在MySQL中的联盟俱乐部信息
type MysqlLeagueClub struct {
	AutoId               uint64   `protobuf:"varint,1,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`
	ApplyID              int32    `protobuf:"varint,2,opt,name=applyID,proto3" json:"applyID,omitempty"`
	LeagueUUID           string   `protobuf:"bytes,3,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	PartnerUUID          string   `protobuf:"bytes,4,opt,name=partnerUUID,proto3" json:"partnerUUID,omitempty"`
	ClubUUID             string   `protobuf:"bytes,5,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	Status               int32    `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	ApplyTime            int64    `protobuf:"varint,7,opt,name=apply_time,json=applyTime,proto3" json:"apply_time,omitempty"`
	JoinTime             int64    `protobuf:"varint,8,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"`
	QuitTime             int64    `protobuf:"varint,9,opt,name=quit_time,json=quitTime,proto3" json:"quit_time,omitempty"`
	ApplyingApplyID      []int32  `protobuf:"varint,10,rep,packed,name=applyingApplyID,proto3" json:"applyingApplyID,omitempty"`
	PartnerUUIDList      []string `protobuf:"bytes,11,rep,name=partnerUUIDList,proto3" json:"partnerUUIDList,omitempty"`
	ClubUUIDList         []string `protobuf:"bytes,12,rep,name=clubUUIDList,proto3" json:"clubUUIDList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MysqlLeagueClub) Reset()         { *m = MysqlLeagueClub{} }
func (m *MysqlLeagueClub) String() string { return proto.CompactTextString(m) }
func (*MysqlLeagueClub) ProtoMessage()    {}
func (*MysqlLeagueClub) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{40}
}

func (m *MysqlLeagueClub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlLeagueClub.Unmarshal(m, b)
}
func (m *MysqlLeagueClub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlLeagueClub.Marshal(b, m, deterministic)
}
func (m *MysqlLeagueClub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlLeagueClub.Merge(m, src)
}
func (m *MysqlLeagueClub) XXX_Size() int {
	return xxx_messageInfo_MysqlLeagueClub.Size(m)
}
func (m *MysqlLeagueClub) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlLeagueClub.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlLeagueClub proto.InternalMessageInfo

func (m *MysqlLeagueClub) GetAutoId() uint64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *MysqlLeagueClub) GetApplyID() int32 {
	if m != nil {
		return m.ApplyID
	}
	return 0
}

func (m *MysqlLeagueClub) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *MysqlLeagueClub) GetPartnerUUID() string {
	if m != nil {
		return m.PartnerUUID
	}
	return ""
}

func (m *MysqlLeagueClub) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *MysqlLeagueClub) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MysqlLeagueClub) GetApplyTime() int64 {
	if m != nil {
		return m.ApplyTime
	}
	return 0
}

func (m *MysqlLeagueClub) GetJoinTime() int64 {
	if m != nil {
		return m.JoinTime
	}
	return 0
}

func (m *MysqlLeagueClub) GetQuitTime() int64 {
	if m != nil {
		return m.QuitTime
	}
	return 0
}

func (m *MysqlLeagueClub) GetApplyingApplyID() []int32 {
	if m != nil {
		return m.ApplyingApplyID
	}
	return nil
}

func (m *MysqlLeagueClub) GetPartnerUUIDList() []string {
	if m != nil {
		return m.PartnerUUIDList
	}
	return nil
}

func (m *MysqlLeagueClub) GetClubUUIDList() []string {
	if m != nil {
		return m.ClubUUIDList
	}
	return nil
}

// 存储在MySQL中的联盟成员信息
type LeagueMemberDetail struct {
	LeagueUUID       string             `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	MemberUUID       string             `protobuf:"bytes,2,opt,name=memberUUID,proto3" json:"memberUUID,omitempty"`
	Role             int32              `protobuf:"varint,3,opt,name=role,proto3" json:"role,omitempty"`
	Status           LeagueMemberStatus `protobuf:"varint,4,opt,name=status,proto3,enum=LeagueMemberStatus" json:"status,omitempty"`
	JoinTime         int64              `protobuf:"varint,5,opt,name=joinTime,proto3" json:"joinTime,omitempty"`
	StatusChangeTime int64              `protobuf:"varint,6,opt,name=statusChangeTime,proto3" json:"statusChangeTime,omitempty"`
	//作废
	Bean         int64 `protobuf:"varint,7,opt,name=bean,proto3" json:"bean,omitempty"`
	LastPlayTime int64 `protobuf:"varint,8,opt,name=lastPlayTime,proto3" json:"lastPlayTime,omitempty"`
	//所属俱乐部ID，如果在联盟下具有多个俱乐部，则此id为最早加入联盟的id
	ClubUUID string `protobuf:"bytes,9,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	//上级成员ID
	ParentMemberId string `protobuf:"bytes,10,opt,name=parentMemberId,proto3" json:"parentMemberId,omitempty"`
	//代理分成
	ProfitRate           int64    `protobuf:"varint,11,opt,name=profitRate,proto3" json:"profitRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeagueMemberDetail) Reset()         { *m = LeagueMemberDetail{} }
func (m *LeagueMemberDetail) String() string { return proto.CompactTextString(m) }
func (*LeagueMemberDetail) ProtoMessage()    {}
func (*LeagueMemberDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{41}
}

func (m *LeagueMemberDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueMemberDetail.Unmarshal(m, b)
}
func (m *LeagueMemberDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueMemberDetail.Marshal(b, m, deterministic)
}
func (m *LeagueMemberDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueMemberDetail.Merge(m, src)
}
func (m *LeagueMemberDetail) XXX_Size() int {
	return xxx_messageInfo_LeagueMemberDetail.Size(m)
}
func (m *LeagueMemberDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueMemberDetail.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueMemberDetail proto.InternalMessageInfo

func (m *LeagueMemberDetail) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *LeagueMemberDetail) GetMemberUUID() string {
	if m != nil {
		return m.MemberUUID
	}
	return ""
}

func (m *LeagueMemberDetail) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *LeagueMemberDetail) GetStatus() LeagueMemberStatus {
	if m != nil {
		return m.Status
	}
	return LeagueMemberStatus_LeagueMemberApplicant
}

func (m *LeagueMemberDetail) GetJoinTime() int64 {
	if m != nil {
		return m.JoinTime
	}
	return 0
}

func (m *LeagueMemberDetail) GetStatusChangeTime() int64 {
	if m != nil {
		return m.StatusChangeTime
	}
	return 0
}

func (m *LeagueMemberDetail) GetBean() int64 {
	if m != nil {
		return m.Bean
	}
	return 0
}

func (m *LeagueMemberDetail) GetLastPlayTime() int64 {
	if m != nil {
		return m.LastPlayTime
	}
	return 0
}

func (m *LeagueMemberDetail) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *LeagueMemberDetail) GetParentMemberId() string {
	if m != nil {
		return m.ParentMemberId
	}
	return ""
}

func (m *LeagueMemberDetail) GetProfitRate() int64 {
	if m != nil {
		return m.ProfitRate
	}
	return 0
}

// 俱乐部信息请求协议
type GetClubInfoRequest struct {
	// 俱乐部UUID
	ClubUUID             string   `protobuf:"bytes,1,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClubInfoRequest) Reset()         { *m = GetClubInfoRequest{} }
func (m *GetClubInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetClubInfoRequest) ProtoMessage()    {}
func (*GetClubInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{42}
}

func (m *GetClubInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClubInfoRequest.Unmarshal(m, b)
}
func (m *GetClubInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClubInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetClubInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClubInfoRequest.Merge(m, src)
}
func (m *GetClubInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetClubInfoRequest.Size(m)
}
func (m *GetClubInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClubInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetClubInfoRequest proto.InternalMessageInfo

func (m *GetClubInfoRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

// 俱乐部信息响应协议
type GetClubInfoReply struct {
	// 俱乐部成员UUID列表
	MemberUUID []string `protobuf:"bytes,1,rep,name=memberUUID,proto3" json:"memberUUID,omitempty"`
	// 俱乐部成员列表
	Members              []*ClubMember `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetClubInfoReply) Reset()         { *m = GetClubInfoReply{} }
func (m *GetClubInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetClubInfoReply) ProtoMessage()    {}
func (*GetClubInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{43}
}

func (m *GetClubInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClubInfoReply.Unmarshal(m, b)
}
func (m *GetClubInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClubInfoReply.Marshal(b, m, deterministic)
}
func (m *GetClubInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClubInfoReply.Merge(m, src)
}
func (m *GetClubInfoReply) XXX_Size() int {
	return xxx_messageInfo_GetClubInfoReply.Size(m)
}
func (m *GetClubInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClubInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetClubInfoReply proto.InternalMessageInfo

func (m *GetClubInfoReply) GetMemberUUID() []string {
	if m != nil {
		return m.MemberUUID
	}
	return nil
}

func (m *GetClubInfoReply) GetMembers() []*ClubMember {
	if m != nil {
		return m.Members
	}
	return nil
}

// 连连看玩家ICON改变时的推送
type PushPlayerIconsChange struct {
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 玩家当前剩余的图标
	RestIcons []*IconPoint `protobuf:"bytes,2,rep,name=restIcons,proto3" json:"restIcons,omitempty"`
	// 消除路径
	LineIcons            []*IconPoint `protobuf:"bytes,3,rep,name=lineIcons,proto3" json:"lineIcons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PushPlayerIconsChange) Reset()         { *m = PushPlayerIconsChange{} }
func (m *PushPlayerIconsChange) String() string { return proto.CompactTextString(m) }
func (*PushPlayerIconsChange) ProtoMessage()    {}
func (*PushPlayerIconsChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{44}
}

func (m *PushPlayerIconsChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPlayerIconsChange.Unmarshal(m, b)
}
func (m *PushPlayerIconsChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPlayerIconsChange.Marshal(b, m, deterministic)
}
func (m *PushPlayerIconsChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPlayerIconsChange.Merge(m, src)
}
func (m *PushPlayerIconsChange) XXX_Size() int {
	return xxx_messageInfo_PushPlayerIconsChange.Size(m)
}
func (m *PushPlayerIconsChange) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPlayerIconsChange.DiscardUnknown(m)
}

var xxx_messageInfo_PushPlayerIconsChange proto.InternalMessageInfo

func (m *PushPlayerIconsChange) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushPlayerIconsChange) GetRestIcons() []*IconPoint {
	if m != nil {
		return m.RestIcons
	}
	return nil
}

func (m *PushPlayerIconsChange) GetLineIcons() []*IconPoint {
	if m != nil {
		return m.LineIcons
	}
	return nil
}

// 连连看所有玩家游戏进度改变时推送
type LinkUpPlayerInfoChange struct {
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	//所有玩家信息，里面包含了游戏完成率
	PlayerInfo           []*RoomPlayerInfo `protobuf:"bytes,2,rep,name=PlayerInfo,proto3" json:"PlayerInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LinkUpPlayerInfoChange) Reset()         { *m = LinkUpPlayerInfoChange{} }
func (m *LinkUpPlayerInfoChange) String() string { return proto.CompactTextString(m) }
func (*LinkUpPlayerInfoChange) ProtoMessage()    {}
func (*LinkUpPlayerInfoChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{45}
}

func (m *LinkUpPlayerInfoChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkUpPlayerInfoChange.Unmarshal(m, b)
}
func (m *LinkUpPlayerInfoChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkUpPlayerInfoChange.Marshal(b, m, deterministic)
}
func (m *LinkUpPlayerInfoChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkUpPlayerInfoChange.Merge(m, src)
}
func (m *LinkUpPlayerInfoChange) XXX_Size() int {
	return xxx_messageInfo_LinkUpPlayerInfoChange.Size(m)
}
func (m *LinkUpPlayerInfoChange) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkUpPlayerInfoChange.DiscardUnknown(m)
}

var xxx_messageInfo_LinkUpPlayerInfoChange proto.InternalMessageInfo

func (m *LinkUpPlayerInfoChange) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *LinkUpPlayerInfoChange) GetPlayerInfo() []*RoomPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

// 房间中准备中玩家数量改变时推送
type RoomPlayerReadyNumMessege struct {
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	//有多少玩家准备了
	ReadyNum             int64    `protobuf:"varint,2,opt,name=readyNum,proto3" json:"readyNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomPlayerReadyNumMessege) Reset()         { *m = RoomPlayerReadyNumMessege{} }
func (m *RoomPlayerReadyNumMessege) String() string { return proto.CompactTextString(m) }
func (*RoomPlayerReadyNumMessege) ProtoMessage()    {}
func (*RoomPlayerReadyNumMessege) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{46}
}

func (m *RoomPlayerReadyNumMessege) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomPlayerReadyNumMessege.Unmarshal(m, b)
}
func (m *RoomPlayerReadyNumMessege) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomPlayerReadyNumMessege.Marshal(b, m, deterministic)
}
func (m *RoomPlayerReadyNumMessege) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomPlayerReadyNumMessege.Merge(m, src)
}
func (m *RoomPlayerReadyNumMessege) XXX_Size() int {
	return xxx_messageInfo_RoomPlayerReadyNumMessege.Size(m)
}
func (m *RoomPlayerReadyNumMessege) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomPlayerReadyNumMessege.DiscardUnknown(m)
}

var xxx_messageInfo_RoomPlayerReadyNumMessege proto.InternalMessageInfo

func (m *RoomPlayerReadyNumMessege) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *RoomPlayerReadyNumMessege) GetReadyNum() int64 {
	if m != nil {
		return m.ReadyNum
	}
	return 0
}

// 连连看指定观战玩家请求
type LinkUpWatchPlayerRequest struct {
	//被观战玩家的UUID
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkUpWatchPlayerRequest) Reset()         { *m = LinkUpWatchPlayerRequest{} }
func (m *LinkUpWatchPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*LinkUpWatchPlayerRequest) ProtoMessage()    {}
func (*LinkUpWatchPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{47}
}

func (m *LinkUpWatchPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkUpWatchPlayerRequest.Unmarshal(m, b)
}
func (m *LinkUpWatchPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkUpWatchPlayerRequest.Marshal(b, m, deterministic)
}
func (m *LinkUpWatchPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkUpWatchPlayerRequest.Merge(m, src)
}
func (m *LinkUpWatchPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_LinkUpWatchPlayerRequest.Size(m)
}
func (m *LinkUpWatchPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkUpWatchPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LinkUpWatchPlayerRequest proto.InternalMessageInfo

func (m *LinkUpWatchPlayerRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

// 连连看指定观战玩家回复
type LinkUpWatchPlayerReply struct {
	//观战是否成功
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	//被观战玩家信息
	WatchPlayerInfo      *RoomPlayerInfo `protobuf:"bytes,2,opt,name=watchPlayerInfo,proto3" json:"watchPlayerInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LinkUpWatchPlayerReply) Reset()         { *m = LinkUpWatchPlayerReply{} }
func (m *LinkUpWatchPlayerReply) String() string { return proto.CompactTextString(m) }
func (*LinkUpWatchPlayerReply) ProtoMessage()    {}
func (*LinkUpWatchPlayerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{48}
}

func (m *LinkUpWatchPlayerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkUpWatchPlayerReply.Unmarshal(m, b)
}
func (m *LinkUpWatchPlayerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkUpWatchPlayerReply.Marshal(b, m, deterministic)
}
func (m *LinkUpWatchPlayerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkUpWatchPlayerReply.Merge(m, src)
}
func (m *LinkUpWatchPlayerReply) XXX_Size() int {
	return xxx_messageInfo_LinkUpWatchPlayerReply.Size(m)
}
func (m *LinkUpWatchPlayerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkUpWatchPlayerReply.DiscardUnknown(m)
}

var xxx_messageInfo_LinkUpWatchPlayerReply proto.InternalMessageInfo

func (m *LinkUpWatchPlayerReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *LinkUpWatchPlayerReply) GetWatchPlayerInfo() *RoomPlayerInfo {
	if m != nil {
		return m.WatchPlayerInfo
	}
	return nil
}

// 根据角色类型查找账号的请求
type QueryAccountByRoleRequest struct {
	RoleType             Roles    `protobuf:"varint,6,opt,name=role_type,json=roleType,proto3,enum=Roles" json:"role_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryAccountByRoleRequest) Reset()         { *m = QueryAccountByRoleRequest{} }
func (m *QueryAccountByRoleRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAccountByRoleRequest) ProtoMessage()    {}
func (*QueryAccountByRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{49}
}

func (m *QueryAccountByRoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryAccountByRoleRequest.Unmarshal(m, b)
}
func (m *QueryAccountByRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryAccountByRoleRequest.Marshal(b, m, deterministic)
}
func (m *QueryAccountByRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAccountByRoleRequest.Merge(m, src)
}
func (m *QueryAccountByRoleRequest) XXX_Size() int {
	return xxx_messageInfo_QueryAccountByRoleRequest.Size(m)
}
func (m *QueryAccountByRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAccountByRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAccountByRoleRequest proto.InternalMessageInfo

func (m *QueryAccountByRoleRequest) GetRoleType() Roles {
	if m != nil {
		return m.RoleType
	}
	return Roles_Error
}

// 根据角色类型查找账号的返回
type QueryAccountByRoleReply struct {
	AccountInfos         []*MysqlAccountInfo `protobuf:"bytes,1,rep,name=accountInfos,proto3" json:"accountInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *QueryAccountByRoleReply) Reset()         { *m = QueryAccountByRoleReply{} }
func (m *QueryAccountByRoleReply) String() string { return proto.CompactTextString(m) }
func (*QueryAccountByRoleReply) ProtoMessage()    {}
func (*QueryAccountByRoleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{50}
}

func (m *QueryAccountByRoleReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryAccountByRoleReply.Unmarshal(m, b)
}
func (m *QueryAccountByRoleReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryAccountByRoleReply.Marshal(b, m, deterministic)
}
func (m *QueryAccountByRoleReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAccountByRoleReply.Merge(m, src)
}
func (m *QueryAccountByRoleReply) XXX_Size() int {
	return xxx_messageInfo_QueryAccountByRoleReply.Size(m)
}
func (m *QueryAccountByRoleReply) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAccountByRoleReply.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAccountByRoleReply proto.InternalMessageInfo

func (m *QueryAccountByRoleReply) GetAccountInfos() []*MysqlAccountInfo {
	if m != nil {
		return m.AccountInfos
	}
	return nil
}

//查询第三方登录账号
type QueryThirdPartyAccountRequest struct {
	//用户来源
	PlayerSourceType     PlayerSourceType `protobuf:"varint,1,opt,name=playerSourceType,proto3,enum=PlayerSourceType" json:"playerSourceType,omitempty"`
	OpenId               string           `protobuf:"bytes,2,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	UnionId              string           `protobuf:"bytes,3,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *QueryThirdPartyAccountRequest) Reset()         { *m = QueryThirdPartyAccountRequest{} }
func (m *QueryThirdPartyAccountRequest) String() string { return proto.CompactTextString(m) }
func (*QueryThirdPartyAccountRequest) ProtoMessage()    {}
func (*QueryThirdPartyAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{51}
}

func (m *QueryThirdPartyAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryThirdPartyAccountRequest.Unmarshal(m, b)
}
func (m *QueryThirdPartyAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryThirdPartyAccountRequest.Marshal(b, m, deterministic)
}
func (m *QueryThirdPartyAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryThirdPartyAccountRequest.Merge(m, src)
}
func (m *QueryThirdPartyAccountRequest) XXX_Size() int {
	return xxx_messageInfo_QueryThirdPartyAccountRequest.Size(m)
}
func (m *QueryThirdPartyAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryThirdPartyAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryThirdPartyAccountRequest proto.InternalMessageInfo

func (m *QueryThirdPartyAccountRequest) GetPlayerSourceType() PlayerSourceType {
	if m != nil {
		return m.PlayerSourceType
	}
	return PlayerSourceType_PlayerSourceType_None
}

func (m *QueryThirdPartyAccountRequest) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *QueryThirdPartyAccountRequest) GetUnionId() string {
	if m != nil {
		return m.UnionId
	}
	return ""
}

type QueryThirdPartyAccountReply struct {
	AccountInfos         []*MysqlAccountInfo `protobuf:"bytes,1,rep,name=accountInfos,proto3" json:"accountInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *QueryThirdPartyAccountReply) Reset()         { *m = QueryThirdPartyAccountReply{} }
func (m *QueryThirdPartyAccountReply) String() string { return proto.CompactTextString(m) }
func (*QueryThirdPartyAccountReply) ProtoMessage()    {}
func (*QueryThirdPartyAccountReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{52}
}

func (m *QueryThirdPartyAccountReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryThirdPartyAccountReply.Unmarshal(m, b)
}
func (m *QueryThirdPartyAccountReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryThirdPartyAccountReply.Marshal(b, m, deterministic)
}
func (m *QueryThirdPartyAccountReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryThirdPartyAccountReply.Merge(m, src)
}
func (m *QueryThirdPartyAccountReply) XXX_Size() int {
	return xxx_messageInfo_QueryThirdPartyAccountReply.Size(m)
}
func (m *QueryThirdPartyAccountReply) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryThirdPartyAccountReply.DiscardUnknown(m)
}

var xxx_messageInfo_QueryThirdPartyAccountReply proto.InternalMessageInfo

func (m *QueryThirdPartyAccountReply) GetAccountInfos() []*MysqlAccountInfo {
	if m != nil {
		return m.AccountInfos
	}
	return nil
}

type MysqlKVMessage struct {
	TableName            string   `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	AutoId               uint64   `protobuf:"varint,2,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`
	Uuid                 string   `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ShortId              string   `protobuf:"bytes,4,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	Info                 []byte   `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	UpdateTime           int64    `protobuf:"varint,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MysqlKVMessage) Reset()         { *m = MysqlKVMessage{} }
func (m *MysqlKVMessage) String() string { return proto.CompactTextString(m) }
func (*MysqlKVMessage) ProtoMessage()    {}
func (*MysqlKVMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{53}
}

func (m *MysqlKVMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlKVMessage.Unmarshal(m, b)
}
func (m *MysqlKVMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlKVMessage.Marshal(b, m, deterministic)
}
func (m *MysqlKVMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlKVMessage.Merge(m, src)
}
func (m *MysqlKVMessage) XXX_Size() int {
	return xxx_messageInfo_MysqlKVMessage.Size(m)
}
func (m *MysqlKVMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlKVMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlKVMessage proto.InternalMessageInfo

func (m *MysqlKVMessage) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *MysqlKVMessage) GetAutoId() uint64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *MysqlKVMessage) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *MysqlKVMessage) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *MysqlKVMessage) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *MysqlKVMessage) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

type RegisterRequest struct {
	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// 父亲的排线码的uuid
	LineCodeUUID string `protobuf:"bytes,3,opt,name=lineCodeUUID,proto3" json:"lineCodeUUID,omitempty"`
	// 父亲的uuid
	ParentUUID string `protobuf:"bytes,4,opt,name=parentUUID,proto3" json:"parentUUID,omitempty"`
	// 验证码id
	CaptchaId string `protobuf:"bytes,5,opt,name=captchaId,proto3" json:"captchaId,omitempty"`
	// 验证码的值
	VerifyValue string `protobuf:"bytes,6,opt,name=VerifyValue,proto3" json:"VerifyValue,omitempty"`
	// 短信验证码
	SmsCaptcha string `protobuf:"bytes,7,opt,name=smsCaptcha,proto3" json:"smsCaptcha,omitempty"`
	// 手机号
	Mobile               string   `protobuf:"bytes,8,opt,name=mobile,proto3" json:"mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{54}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *RegisterRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RegisterRequest) GetLineCodeUUID() string {
	if m != nil {
		return m.LineCodeUUID
	}
	return ""
}

func (m *RegisterRequest) GetParentUUID() string {
	if m != nil {
		return m.ParentUUID
	}
	return ""
}

func (m *RegisterRequest) GetCaptchaId() string {
	if m != nil {
		return m.CaptchaId
	}
	return ""
}

func (m *RegisterRequest) GetVerifyValue() string {
	if m != nil {
		return m.VerifyValue
	}
	return ""
}

func (m *RegisterRequest) GetSmsCaptcha() string {
	if m != nil {
		return m.SmsCaptcha
	}
	return ""
}

func (m *RegisterRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

type RegisterReply struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ShortId              string   `protobuf:"bytes,2,opt,name=shortId,proto3" json:"shortId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterReply) Reset()         { *m = RegisterReply{} }
func (m *RegisterReply) String() string { return proto.CompactTextString(m) }
func (*RegisterReply) ProtoMessage()    {}
func (*RegisterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{55}
}

func (m *RegisterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterReply.Unmarshal(m, b)
}
func (m *RegisterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterReply.Marshal(b, m, deterministic)
}
func (m *RegisterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterReply.Merge(m, src)
}
func (m *RegisterReply) XXX_Size() int {
	return xxx_messageInfo_RegisterReply.Size(m)
}
func (m *RegisterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterReply proto.InternalMessageInfo

func (m *RegisterReply) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *RegisterReply) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

// 获取验证码图片
type GetCaptchaRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCaptchaRequest) Reset()         { *m = GetCaptchaRequest{} }
func (m *GetCaptchaRequest) String() string { return proto.CompactTextString(m) }
func (*GetCaptchaRequest) ProtoMessage()    {}
func (*GetCaptchaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{56}
}

func (m *GetCaptchaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCaptchaRequest.Unmarshal(m, b)
}
func (m *GetCaptchaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCaptchaRequest.Marshal(b, m, deterministic)
}
func (m *GetCaptchaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCaptchaRequest.Merge(m, src)
}
func (m *GetCaptchaRequest) XXX_Size() int {
	return xxx_messageInfo_GetCaptchaRequest.Size(m)
}
func (m *GetCaptchaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCaptchaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCaptchaRequest proto.InternalMessageInfo

// 返回验证码图片
type GetCaptchaReply struct {
	// 验证码id
	CaptchaId string `protobuf:"bytes,1,opt,name=captchaId,proto3" json:"captchaId,omitempty"`
	// 图片
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCaptchaReply) Reset()         { *m = GetCaptchaReply{} }
func (m *GetCaptchaReply) String() string { return proto.CompactTextString(m) }
func (*GetCaptchaReply) ProtoMessage()    {}
func (*GetCaptchaReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{57}
}

func (m *GetCaptchaReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCaptchaReply.Unmarshal(m, b)
}
func (m *GetCaptchaReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCaptchaReply.Marshal(b, m, deterministic)
}
func (m *GetCaptchaReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCaptchaReply.Merge(m, src)
}
func (m *GetCaptchaReply) XXX_Size() int {
	return xxx_messageInfo_GetCaptchaReply.Size(m)
}
func (m *GetCaptchaReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCaptchaReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetCaptchaReply proto.InternalMessageInfo

func (m *GetCaptchaReply) GetCaptchaId() string {
	if m != nil {
		return m.CaptchaId
	}
	return ""
}

func (m *GetCaptchaReply) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type LoadPlayerRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadPlayerRequest) Reset()         { *m = LoadPlayerRequest{} }
func (m *LoadPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*LoadPlayerRequest) ProtoMessage()    {}
func (*LoadPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{58}
}

func (m *LoadPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadPlayerRequest.Unmarshal(m, b)
}
func (m *LoadPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadPlayerRequest.Marshal(b, m, deterministic)
}
func (m *LoadPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadPlayerRequest.Merge(m, src)
}
func (m *LoadPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_LoadPlayerRequest.Size(m)
}
func (m *LoadPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadPlayerRequest proto.InternalMessageInfo

func (m *LoadPlayerRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type LoadPlayerReply struct {
	PlayerInfo           *PlayerInfo `protobuf:"bytes,2,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LoadPlayerReply) Reset()         { *m = LoadPlayerReply{} }
func (m *LoadPlayerReply) String() string { return proto.CompactTextString(m) }
func (*LoadPlayerReply) ProtoMessage()    {}
func (*LoadPlayerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{59}
}

func (m *LoadPlayerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadPlayerReply.Unmarshal(m, b)
}
func (m *LoadPlayerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadPlayerReply.Marshal(b, m, deterministic)
}
func (m *LoadPlayerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadPlayerReply.Merge(m, src)
}
func (m *LoadPlayerReply) XXX_Size() int {
	return xxx_messageInfo_LoadPlayerReply.Size(m)
}
func (m *LoadPlayerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadPlayerReply.DiscardUnknown(m)
}

var xxx_messageInfo_LoadPlayerReply proto.InternalMessageInfo

func (m *LoadPlayerReply) GetPlayerInfo() *PlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

type NewPlayerRequest struct {
	Uuid    string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ShortId string `protobuf:"bytes,2,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	//用户权限
	Auths    []AuthorizationDef `protobuf:"varint,4,rep,packed,name=auths,proto3,enum=AuthorizationDef" json:"auths,omitempty"`
	RoleType Roles              `protobuf:"varint,5,opt,name=roleType,proto3,enum=Roles" json:"roleType,omitempty"`
	Account  string             `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`
	//性别
	Sex int32 `protobuf:"varint,7,opt,name=sex,proto3" json:"sex,omitempty"`
	//头像地址
	HeadImgUrl string `protobuf:"bytes,8,opt,name=headImgUrl,proto3" json:"headImgUrl,omitempty"`
	//国家
	Country string `protobuf:"bytes,9,opt,name=country,proto3" json:"country,omitempty"`
	//省
	Province string `protobuf:"bytes,10,opt,name=province,proto3" json:"province,omitempty"`
	//市/地区
	City string `protobuf:"bytes,11,opt,name=city,proto3" json:"city,omitempty"`
	//用户来源
	PlayerSourceType PlayerSourceType `protobuf:"varint,12,opt,name=playerSourceType,proto3,enum=PlayerSourceType" json:"playerSourceType,omitempty"`
	//第三方登录信息
	ThirdPartyAccessInfo *ThirdPartyAccessInfo `protobuf:"bytes,13,opt,name=thirdPartyAccessInfo,proto3" json:"thirdPartyAccessInfo,omitempty"`
	Mobile               string                `protobuf:"bytes,14,opt,name=mobile,proto3" json:"mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *NewPlayerRequest) Reset()         { *m = NewPlayerRequest{} }
func (m *NewPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*NewPlayerRequest) ProtoMessage()    {}
func (*NewPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{60}
}

func (m *NewPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewPlayerRequest.Unmarshal(m, b)
}
func (m *NewPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewPlayerRequest.Marshal(b, m, deterministic)
}
func (m *NewPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewPlayerRequest.Merge(m, src)
}
func (m *NewPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_NewPlayerRequest.Size(m)
}
func (m *NewPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewPlayerRequest proto.InternalMessageInfo

func (m *NewPlayerRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *NewPlayerRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *NewPlayerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NewPlayerRequest) GetAuths() []AuthorizationDef {
	if m != nil {
		return m.Auths
	}
	return nil
}

func (m *NewPlayerRequest) GetRoleType() Roles {
	if m != nil {
		return m.RoleType
	}
	return Roles_Error
}

func (m *NewPlayerRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *NewPlayerRequest) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *NewPlayerRequest) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *NewPlayerRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *NewPlayerRequest) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *NewPlayerRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *NewPlayerRequest) GetPlayerSourceType() PlayerSourceType {
	if m != nil {
		return m.PlayerSourceType
	}
	return PlayerSourceType_PlayerSourceType_None
}

func (m *NewPlayerRequest) GetThirdPartyAccessInfo() *ThirdPartyAccessInfo {
	if m != nil {
		return m.ThirdPartyAccessInfo
	}
	return nil
}

func (m *NewPlayerRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

type NewPlayerReply struct {
	PlayerInfo           *PlayerInfo `protobuf:"bytes,2,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NewPlayerReply) Reset()         { *m = NewPlayerReply{} }
func (m *NewPlayerReply) String() string { return proto.CompactTextString(m) }
func (*NewPlayerReply) ProtoMessage()    {}
func (*NewPlayerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{61}
}

func (m *NewPlayerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewPlayerReply.Unmarshal(m, b)
}
func (m *NewPlayerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewPlayerReply.Marshal(b, m, deterministic)
}
func (m *NewPlayerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewPlayerReply.Merge(m, src)
}
func (m *NewPlayerReply) XXX_Size() int {
	return xxx_messageInfo_NewPlayerReply.Size(m)
}
func (m *NewPlayerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewPlayerReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewPlayerReply proto.InternalMessageInfo

func (m *NewPlayerReply) GetPlayerInfo() *PlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

type SavePlayerRequest struct {
	PlayerInfo *PlayerInfo `protobuf:"bytes,1,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	// 是否要存入数据库，一般都是只存redis，只有涉及金钱变动时才会从数据库，或者由同步timer去从redis中同步到数据库中
	ForceSave            bool     `protobuf:"varint,2,opt,name=forceSave,proto3" json:"forceSave,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SavePlayerRequest) Reset()         { *m = SavePlayerRequest{} }
func (m *SavePlayerRequest) String() string { return proto.CompactTextString(m) }
func (*SavePlayerRequest) ProtoMessage()    {}
func (*SavePlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{62}
}

func (m *SavePlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavePlayerRequest.Unmarshal(m, b)
}
func (m *SavePlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavePlayerRequest.Marshal(b, m, deterministic)
}
func (m *SavePlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavePlayerRequest.Merge(m, src)
}
func (m *SavePlayerRequest) XXX_Size() int {
	return xxx_messageInfo_SavePlayerRequest.Size(m)
}
func (m *SavePlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SavePlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SavePlayerRequest proto.InternalMessageInfo

func (m *SavePlayerRequest) GetPlayerInfo() *PlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *SavePlayerRequest) GetForceSave() bool {
	if m != nil {
		return m.ForceSave
	}
	return false
}

// 扑克牌定义
type Poker struct {
	PokerNum             PokerNum   `protobuf:"varint,1,opt,name=pokerNum,proto3,enum=PokerNum" json:"pokerNum,omitempty"`
	PokerColor           PokerColor `protobuf:"varint,2,opt,name=pokerColor,proto3,enum=PokerColor" json:"pokerColor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Poker) Reset()         { *m = Poker{} }
func (m *Poker) String() string { return proto.CompactTextString(m) }
func (*Poker) ProtoMessage()    {}
func (*Poker) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{63}
}

func (m *Poker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Poker.Unmarshal(m, b)
}
func (m *Poker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Poker.Marshal(b, m, deterministic)
}
func (m *Poker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Poker.Merge(m, src)
}
func (m *Poker) XXX_Size() int {
	return xxx_messageInfo_Poker.Size(m)
}
func (m *Poker) XXX_DiscardUnknown() {
	xxx_messageInfo_Poker.DiscardUnknown(m)
}

var xxx_messageInfo_Poker proto.InternalMessageInfo

func (m *Poker) GetPokerNum() PokerNum {
	if m != nil {
		return m.PokerNum
	}
	return PokerNum_PokerNumNone
}

func (m *Poker) GetPokerColor() PokerColor {
	if m != nil {
		return m.PokerColor
	}
	return PokerColor_PokerColorNone
}

// 麻将牌定义
type Mahjong struct {
	MahjongNum           MahjongNum   `protobuf:"varint,1,opt,name=mahjongNum,proto3,enum=MahjongNum" json:"mahjongNum,omitempty"`
	MahjongColor         MahjongColor `protobuf:"varint,2,opt,name=MahjongColor,proto3,enum=MahjongColor" json:"MahjongColor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Mahjong) Reset()         { *m = Mahjong{} }
func (m *Mahjong) String() string { return proto.CompactTextString(m) }
func (*Mahjong) ProtoMessage()    {}
func (*Mahjong) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{64}
}

func (m *Mahjong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mahjong.Unmarshal(m, b)
}
func (m *Mahjong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mahjong.Marshal(b, m, deterministic)
}
func (m *Mahjong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mahjong.Merge(m, src)
}
func (m *Mahjong) XXX_Size() int {
	return xxx_messageInfo_Mahjong.Size(m)
}
func (m *Mahjong) XXX_DiscardUnknown() {
	xxx_messageInfo_Mahjong.DiscardUnknown(m)
}

var xxx_messageInfo_Mahjong proto.InternalMessageInfo

func (m *Mahjong) GetMahjongNum() MahjongNum {
	if m != nil {
		return m.MahjongNum
	}
	return MahjongNum_MahjongNumNone
}

func (m *Mahjong) GetMahjongColor() MahjongColor {
	if m != nil {
		return m.MahjongColor
	}
	return MahjongColor_MahjongColorNone
}

// 麻将牌数组
type MahjongArray struct {
	Mahjong              []*Mahjong `protobuf:"bytes,1,rep,name=mahjong,proto3" json:"mahjong,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MahjongArray) Reset()         { *m = MahjongArray{} }
func (m *MahjongArray) String() string { return proto.CompactTextString(m) }
func (*MahjongArray) ProtoMessage()    {}
func (*MahjongArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{65}
}

func (m *MahjongArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongArray.Unmarshal(m, b)
}
func (m *MahjongArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongArray.Marshal(b, m, deterministic)
}
func (m *MahjongArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongArray.Merge(m, src)
}
func (m *MahjongArray) XXX_Size() int {
	return xxx_messageInfo_MahjongArray.Size(m)
}
func (m *MahjongArray) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongArray.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongArray proto.InternalMessageInfo

func (m *MahjongArray) GetMahjong() []*Mahjong {
	if m != nil {
		return m.Mahjong
	}
	return nil
}

// 个人拥有的麻将牌
type MahjongPersonCards struct {
	//摸牌前或者出牌后手牌数量: 3N + 1 => 1,4,7,10,13
	HandMahjongs []*Mahjong `protobuf:"bytes,1,rep,name=handMahjongs,proto3" json:"handMahjongs,omitempty"`
	// 杠牌类型: 直杠, 补扛, 暗杠
	QuadrupletesAn  []*Mahjong `protobuf:"bytes,2,rep,name=quadrupletesAn,proto3" json:"quadrupletesAn,omitempty"`
	QuadrupletesZhi []*Mahjong `protobuf:"bytes,3,rep,name=quadrupletesZhi,proto3" json:"quadrupletesZhi,omitempty"`
	QuadrupletesBu  []*Mahjong `protobuf:"bytes,4,rep,name=quadrupletesBu,proto3" json:"quadrupletesBu,omitempty"`
	// 碰牌区(已经碰的牌)
	Tripletes []*Mahjong `protobuf:"bytes,5,rep,name=tripletes,proto3" json:"tripletes,omitempty"`
	// 我摸到的牌, 用来判断自摸胡
	NewMahjong           *Mahjong `protobuf:"bytes,6,opt,name=newMahjong,proto3" json:"newMahjong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongPersonCards) Reset()         { *m = MahjongPersonCards{} }
func (m *MahjongPersonCards) String() string { return proto.CompactTextString(m) }
func (*MahjongPersonCards) ProtoMessage()    {}
func (*MahjongPersonCards) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{66}
}

func (m *MahjongPersonCards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongPersonCards.Unmarshal(m, b)
}
func (m *MahjongPersonCards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongPersonCards.Marshal(b, m, deterministic)
}
func (m *MahjongPersonCards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongPersonCards.Merge(m, src)
}
func (m *MahjongPersonCards) XXX_Size() int {
	return xxx_messageInfo_MahjongPersonCards.Size(m)
}
func (m *MahjongPersonCards) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongPersonCards.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongPersonCards proto.InternalMessageInfo

func (m *MahjongPersonCards) GetHandMahjongs() []*Mahjong {
	if m != nil {
		return m.HandMahjongs
	}
	return nil
}

func (m *MahjongPersonCards) GetQuadrupletesAn() []*Mahjong {
	if m != nil {
		return m.QuadrupletesAn
	}
	return nil
}

func (m *MahjongPersonCards) GetQuadrupletesZhi() []*Mahjong {
	if m != nil {
		return m.QuadrupletesZhi
	}
	return nil
}

func (m *MahjongPersonCards) GetQuadrupletesBu() []*Mahjong {
	if m != nil {
		return m.QuadrupletesBu
	}
	return nil
}

func (m *MahjongPersonCards) GetTripletes() []*Mahjong {
	if m != nil {
		return m.Tripletes
	}
	return nil
}

func (m *MahjongPersonCards) GetNewMahjong() *Mahjong {
	if m != nil {
		return m.NewMahjong
	}
	return nil
}

// 玩家摸牌后出牌前判断能否杠,胡; 流程是摸牌后出牌
type MahjongBeforeOperateRequest struct {
	Cards                *MahjongPersonCards `protobuf:"bytes,1,opt,name=cards,proto3" json:"cards,omitempty"`
	SelOpenCardTimes     int32               `protobuf:"varint,2,opt,name=selOpenCardTimes,proto3" json:"selOpenCardTimes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MahjongBeforeOperateRequest) Reset()         { *m = MahjongBeforeOperateRequest{} }
func (m *MahjongBeforeOperateRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongBeforeOperateRequest) ProtoMessage()    {}
func (*MahjongBeforeOperateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{67}
}

func (m *MahjongBeforeOperateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongBeforeOperateRequest.Unmarshal(m, b)
}
func (m *MahjongBeforeOperateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongBeforeOperateRequest.Marshal(b, m, deterministic)
}
func (m *MahjongBeforeOperateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongBeforeOperateRequest.Merge(m, src)
}
func (m *MahjongBeforeOperateRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongBeforeOperateRequest.Size(m)
}
func (m *MahjongBeforeOperateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongBeforeOperateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongBeforeOperateRequest proto.InternalMessageInfo

func (m *MahjongBeforeOperateRequest) GetCards() *MahjongPersonCards {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *MahjongBeforeOperateRequest) GetSelOpenCardTimes() int32 {
	if m != nil {
		return m.SelOpenCardTimes
	}
	return 0
}

type MahjongBeforeOperateReply struct {
	// 可以暗杠的手牌值, 比如有 1,2,3 万各 4 张, mahjongs 的值就是 1,2,3 万
	MahjongsKongAn []*Mahjong `protobuf:"bytes,1,rep,name=mahjongsKongAn,proto3" json:"mahjongsKongAn,omitempty"`
	// 能否胡牌
	CanWin bool `protobuf:"varint,2,opt,name=CanWin,proto3" json:"CanWin,omitempty"`
	// 可以补杠的牌, 比如碰牌区有3张 1 万, 摸到一张 1 万,那么 mahjongsKongBu 就是 1 万
	MahjongKongBu        *Mahjong `protobuf:"bytes,3,opt,name=mahjongKongBu,proto3" json:"mahjongKongBu,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongBeforeOperateReply) Reset()         { *m = MahjongBeforeOperateReply{} }
func (m *MahjongBeforeOperateReply) String() string { return proto.CompactTextString(m) }
func (*MahjongBeforeOperateReply) ProtoMessage()    {}
func (*MahjongBeforeOperateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{68}
}

func (m *MahjongBeforeOperateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongBeforeOperateReply.Unmarshal(m, b)
}
func (m *MahjongBeforeOperateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongBeforeOperateReply.Marshal(b, m, deterministic)
}
func (m *MahjongBeforeOperateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongBeforeOperateReply.Merge(m, src)
}
func (m *MahjongBeforeOperateReply) XXX_Size() int {
	return xxx_messageInfo_MahjongBeforeOperateReply.Size(m)
}
func (m *MahjongBeforeOperateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongBeforeOperateReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongBeforeOperateReply proto.InternalMessageInfo

func (m *MahjongBeforeOperateReply) GetMahjongsKongAn() []*Mahjong {
	if m != nil {
		return m.MahjongsKongAn
	}
	return nil
}

func (m *MahjongBeforeOperateReply) GetCanWin() bool {
	if m != nil {
		return m.CanWin
	}
	return false
}

func (m *MahjongBeforeOperateReply) GetMahjongKongBu() *Mahjong {
	if m != nil {
		return m.MahjongKongBu
	}
	return nil
}

// 能否直扛, 玩家手中有三张一样的牌,其他玩家打出另外一张相同的牌
type MahjongQuadrupletZhiRequest struct {
	//所以玩家摸牌前手牌 mahjongs 的数量只能是 1,4,7,10,13
	Mahjongs []*Mahjong `protobuf:"bytes,1,rep,name=mahjongs,proto3" json:"mahjongs,omitempty"`
	// 别人打出的牌
	AnotherMahjong       *Mahjong `protobuf:"bytes,2,opt,name=anotherMahjong,proto3" json:"anotherMahjong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongQuadrupletZhiRequest) Reset()         { *m = MahjongQuadrupletZhiRequest{} }
func (m *MahjongQuadrupletZhiRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongQuadrupletZhiRequest) ProtoMessage()    {}
func (*MahjongQuadrupletZhiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{69}
}

func (m *MahjongQuadrupletZhiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongQuadrupletZhiRequest.Unmarshal(m, b)
}
func (m *MahjongQuadrupletZhiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongQuadrupletZhiRequest.Marshal(b, m, deterministic)
}
func (m *MahjongQuadrupletZhiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongQuadrupletZhiRequest.Merge(m, src)
}
func (m *MahjongQuadrupletZhiRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongQuadrupletZhiRequest.Size(m)
}
func (m *MahjongQuadrupletZhiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongQuadrupletZhiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongQuadrupletZhiRequest proto.InternalMessageInfo

func (m *MahjongQuadrupletZhiRequest) GetMahjongs() []*Mahjong {
	if m != nil {
		return m.Mahjongs
	}
	return nil
}

func (m *MahjongQuadrupletZhiRequest) GetAnotherMahjong() *Mahjong {
	if m != nil {
		return m.AnotherMahjong
	}
	return nil
}

type MahjongQuadrupletZhiReply struct {
	// true 表示能扛
	Can bool `protobuf:"varint,1,opt,name=can,proto3" json:"can,omitempty"`
	// can 为 true 的时候, mahjong 字段才有意义, 表示扛牌的麻将牌
	Mahjongs             []*Mahjong `protobuf:"bytes,2,rep,name=mahjongs,proto3" json:"mahjongs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MahjongQuadrupletZhiReply) Reset()         { *m = MahjongQuadrupletZhiReply{} }
func (m *MahjongQuadrupletZhiReply) String() string { return proto.CompactTextString(m) }
func (*MahjongQuadrupletZhiReply) ProtoMessage()    {}
func (*MahjongQuadrupletZhiReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{70}
}

func (m *MahjongQuadrupletZhiReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongQuadrupletZhiReply.Unmarshal(m, b)
}
func (m *MahjongQuadrupletZhiReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongQuadrupletZhiReply.Marshal(b, m, deterministic)
}
func (m *MahjongQuadrupletZhiReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongQuadrupletZhiReply.Merge(m, src)
}
func (m *MahjongQuadrupletZhiReply) XXX_Size() int {
	return xxx_messageInfo_MahjongQuadrupletZhiReply.Size(m)
}
func (m *MahjongQuadrupletZhiReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongQuadrupletZhiReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongQuadrupletZhiReply proto.InternalMessageInfo

func (m *MahjongQuadrupletZhiReply) GetCan() bool {
	if m != nil {
		return m.Can
	}
	return false
}

func (m *MahjongQuadrupletZhiReply) GetMahjongs() []*Mahjong {
	if m != nil {
		return m.Mahjongs
	}
	return nil
}

// 能否补扛, 玩家碰牌后,又摸到一张相同的牌
type MahjongQuadrupletBuRequest struct {
	// 摸到的牌
	NewMahjong *Mahjong `protobuf:"bytes,1,opt,name=newMahjong,proto3" json:"newMahjong,omitempty"`
	// 已经碰的牌,碰牌区
	Tripletes            []*Mahjong `protobuf:"bytes,2,rep,name=Tripletes,proto3" json:"Tripletes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MahjongQuadrupletBuRequest) Reset()         { *m = MahjongQuadrupletBuRequest{} }
func (m *MahjongQuadrupletBuRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongQuadrupletBuRequest) ProtoMessage()    {}
func (*MahjongQuadrupletBuRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{71}
}

func (m *MahjongQuadrupletBuRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongQuadrupletBuRequest.Unmarshal(m, b)
}
func (m *MahjongQuadrupletBuRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongQuadrupletBuRequest.Marshal(b, m, deterministic)
}
func (m *MahjongQuadrupletBuRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongQuadrupletBuRequest.Merge(m, src)
}
func (m *MahjongQuadrupletBuRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongQuadrupletBuRequest.Size(m)
}
func (m *MahjongQuadrupletBuRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongQuadrupletBuRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongQuadrupletBuRequest proto.InternalMessageInfo

func (m *MahjongQuadrupletBuRequest) GetNewMahjong() *Mahjong {
	if m != nil {
		return m.NewMahjong
	}
	return nil
}

func (m *MahjongQuadrupletBuRequest) GetTripletes() []*Mahjong {
	if m != nil {
		return m.Tripletes
	}
	return nil
}

type MahjongQuadrupletBuReply struct {
	// true 表示能扛
	Can bool `protobuf:"varint,1,opt,name=can,proto3" json:"can,omitempty"`
	// can 为 true 的时候, mahjong 字段才有意义, 表示补扛的麻将牌
	Mahjong              *Mahjong `protobuf:"bytes,2,opt,name=mahjong,proto3" json:"mahjong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongQuadrupletBuReply) Reset()         { *m = MahjongQuadrupletBuReply{} }
func (m *MahjongQuadrupletBuReply) String() string { return proto.CompactTextString(m) }
func (*MahjongQuadrupletBuReply) ProtoMessage()    {}
func (*MahjongQuadrupletBuReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{72}
}

func (m *MahjongQuadrupletBuReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongQuadrupletBuReply.Unmarshal(m, b)
}
func (m *MahjongQuadrupletBuReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongQuadrupletBuReply.Marshal(b, m, deterministic)
}
func (m *MahjongQuadrupletBuReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongQuadrupletBuReply.Merge(m, src)
}
func (m *MahjongQuadrupletBuReply) XXX_Size() int {
	return xxx_messageInfo_MahjongQuadrupletBuReply.Size(m)
}
func (m *MahjongQuadrupletBuReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongQuadrupletBuReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongQuadrupletBuReply proto.InternalMessageInfo

func (m *MahjongQuadrupletBuReply) GetCan() bool {
	if m != nil {
		return m.Can
	}
	return false
}

func (m *MahjongQuadrupletBuReply) GetMahjong() *Mahjong {
	if m != nil {
		return m.Mahjong
	}
	return nil
}

// 能否暗扛, 玩家手中有4张一样的牌
type MahjongQuadrupletAnRequest struct {
	//所以玩家摸牌前手牌 mahjongs 的数量只能是 1,4,7,10,13
	HandMahjongs []*Mahjong `protobuf:"bytes,1,rep,name=handMahjongs,proto3" json:"handMahjongs,omitempty"`
	// 已经碰的牌,碰牌区
	Tripletes            []*Mahjong `protobuf:"bytes,2,rep,name=Tripletes,proto3" json:"Tripletes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MahjongQuadrupletAnRequest) Reset()         { *m = MahjongQuadrupletAnRequest{} }
func (m *MahjongQuadrupletAnRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongQuadrupletAnRequest) ProtoMessage()    {}
func (*MahjongQuadrupletAnRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{73}
}

func (m *MahjongQuadrupletAnRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongQuadrupletAnRequest.Unmarshal(m, b)
}
func (m *MahjongQuadrupletAnRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongQuadrupletAnRequest.Marshal(b, m, deterministic)
}
func (m *MahjongQuadrupletAnRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongQuadrupletAnRequest.Merge(m, src)
}
func (m *MahjongQuadrupletAnRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongQuadrupletAnRequest.Size(m)
}
func (m *MahjongQuadrupletAnRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongQuadrupletAnRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongQuadrupletAnRequest proto.InternalMessageInfo

func (m *MahjongQuadrupletAnRequest) GetHandMahjongs() []*Mahjong {
	if m != nil {
		return m.HandMahjongs
	}
	return nil
}

func (m *MahjongQuadrupletAnRequest) GetTripletes() []*Mahjong {
	if m != nil {
		return m.Tripletes
	}
	return nil
}

// 扛牌回复
type MahjongQuadrupletAnReply struct {
	// true 表示能扛
	Can bool `protobuf:"varint,1,opt,name=can,proto3" json:"can,omitempty"`
	// can 为 true 的时候, mahjong 字段才有意义, 表示扛牌的麻将牌
	Mahjongs             []*Mahjong `protobuf:"bytes,2,rep,name=mahjongs,proto3" json:"mahjongs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MahjongQuadrupletAnReply) Reset()         { *m = MahjongQuadrupletAnReply{} }
func (m *MahjongQuadrupletAnReply) String() string { return proto.CompactTextString(m) }
func (*MahjongQuadrupletAnReply) ProtoMessage()    {}
func (*MahjongQuadrupletAnReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{74}
}

func (m *MahjongQuadrupletAnReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongQuadrupletAnReply.Unmarshal(m, b)
}
func (m *MahjongQuadrupletAnReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongQuadrupletAnReply.Marshal(b, m, deterministic)
}
func (m *MahjongQuadrupletAnReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongQuadrupletAnReply.Merge(m, src)
}
func (m *MahjongQuadrupletAnReply) XXX_Size() int {
	return xxx_messageInfo_MahjongQuadrupletAnReply.Size(m)
}
func (m *MahjongQuadrupletAnReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongQuadrupletAnReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongQuadrupletAnReply proto.InternalMessageInfo

func (m *MahjongQuadrupletAnReply) GetCan() bool {
	if m != nil {
		return m.Can
	}
	return false
}

func (m *MahjongQuadrupletAnReply) GetMahjongs() []*Mahjong {
	if m != nil {
		return m.Mahjongs
	}
	return nil
}

// 能否碰牌
type MahjongCanTripletRequest struct {
	//所以 mahjongs 的数量只能是 1,4,7,10,13
	Mahjongs []*Mahjong `protobuf:"bytes,1,rep,name=mahjongs,proto3" json:"mahjongs,omitempty"`
	// "我"摸到的牌,或者别人打出的牌;为了跟手牌中的刻子做区分,所以专门设置这个变量
	AnotherMahjong       *Mahjong `protobuf:"bytes,2,opt,name=anotherMahjong,proto3" json:"anotherMahjong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongCanTripletRequest) Reset()         { *m = MahjongCanTripletRequest{} }
func (m *MahjongCanTripletRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongCanTripletRequest) ProtoMessage()    {}
func (*MahjongCanTripletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{75}
}

func (m *MahjongCanTripletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongCanTripletRequest.Unmarshal(m, b)
}
func (m *MahjongCanTripletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongCanTripletRequest.Marshal(b, m, deterministic)
}
func (m *MahjongCanTripletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongCanTripletRequest.Merge(m, src)
}
func (m *MahjongCanTripletRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongCanTripletRequest.Size(m)
}
func (m *MahjongCanTripletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongCanTripletRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongCanTripletRequest proto.InternalMessageInfo

func (m *MahjongCanTripletRequest) GetMahjongs() []*Mahjong {
	if m != nil {
		return m.Mahjongs
	}
	return nil
}

func (m *MahjongCanTripletRequest) GetAnotherMahjong() *Mahjong {
	if m != nil {
		return m.AnotherMahjong
	}
	return nil
}

// 碰牌回复
type MahjongCanTripletReply struct {
	// true 表示能碰
	Can bool `protobuf:"varint,1,opt,name=can,proto3" json:"can,omitempty"`
	// can 为 true 的时候, mahjong 字段才有意义,表示碰牌的麻将牌
	Mahjong              *Mahjong `protobuf:"bytes,2,opt,name=mahjong,proto3" json:"mahjong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongCanTripletReply) Reset()         { *m = MahjongCanTripletReply{} }
func (m *MahjongCanTripletReply) String() string { return proto.CompactTextString(m) }
func (*MahjongCanTripletReply) ProtoMessage()    {}
func (*MahjongCanTripletReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{76}
}

func (m *MahjongCanTripletReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongCanTripletReply.Unmarshal(m, b)
}
func (m *MahjongCanTripletReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongCanTripletReply.Marshal(b, m, deterministic)
}
func (m *MahjongCanTripletReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongCanTripletReply.Merge(m, src)
}
func (m *MahjongCanTripletReply) XXX_Size() int {
	return xxx_messageInfo_MahjongCanTripletReply.Size(m)
}
func (m *MahjongCanTripletReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongCanTripletReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongCanTripletReply proto.InternalMessageInfo

func (m *MahjongCanTripletReply) GetCan() bool {
	if m != nil {
		return m.Can
	}
	return false
}

func (m *MahjongCanTripletReply) GetMahjong() *Mahjong {
	if m != nil {
		return m.Mahjong
	}
	return nil
}

// 能否胡牌
type MahjongWinRequest struct {
	Cards *MahjongPersonCards `protobuf:"bytes,1,opt,name=cards,proto3" json:"cards,omitempty"`
	// 别人打出的牌, 用来判断截胡
	AnotherMahjong *Mahjong `protobuf:"bytes,2,opt,name=anotherMahjong,proto3" json:"anotherMahjong,omitempty"`
	// 牌堆剩余长度
	RemainCardNum int32 `protobuf:"varint,3,opt,name=RemainCardNum,proto3" json:"RemainCardNum,omitempty"`
	// 最后一次出牌的玩家的 uuid
	LastPlayerUuid string `protobuf:"bytes,4,opt,name=lastPlayerUuid,proto3" json:"lastPlayerUuid,omitempty"`
	// 4个玩家出牌区中的牌 + 我的手牌,用来判断绝卡张
	AllOutMahjongs []*Mahjong `protobuf:"bytes,5,rep,name=allOutMahjongs,proto3" json:"allOutMahjongs,omitempty"`
	// 庄家 Uuid
	BankerUuid string `protobuf:"bytes,6,opt,name=bankerUuid,proto3" json:"bankerUuid,omitempty"`
	// 连续选择明牌的次数
	SelOpenCardTimes     int32    `protobuf:"varint,7,opt,name=selOpenCardTimes,proto3" json:"selOpenCardTimes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongWinRequest) Reset()         { *m = MahjongWinRequest{} }
func (m *MahjongWinRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongWinRequest) ProtoMessage()    {}
func (*MahjongWinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{77}
}

func (m *MahjongWinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongWinRequest.Unmarshal(m, b)
}
func (m *MahjongWinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongWinRequest.Marshal(b, m, deterministic)
}
func (m *MahjongWinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongWinRequest.Merge(m, src)
}
func (m *MahjongWinRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongWinRequest.Size(m)
}
func (m *MahjongWinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongWinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongWinRequest proto.InternalMessageInfo

func (m *MahjongWinRequest) GetCards() *MahjongPersonCards {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *MahjongWinRequest) GetAnotherMahjong() *Mahjong {
	if m != nil {
		return m.AnotherMahjong
	}
	return nil
}

func (m *MahjongWinRequest) GetRemainCardNum() int32 {
	if m != nil {
		return m.RemainCardNum
	}
	return 0
}

func (m *MahjongWinRequest) GetLastPlayerUuid() string {
	if m != nil {
		return m.LastPlayerUuid
	}
	return ""
}

func (m *MahjongWinRequest) GetAllOutMahjongs() []*Mahjong {
	if m != nil {
		return m.AllOutMahjongs
	}
	return nil
}

func (m *MahjongWinRequest) GetBankerUuid() string {
	if m != nil {
		return m.BankerUuid
	}
	return ""
}

func (m *MahjongWinRequest) GetSelOpenCardTimes() int32 {
	if m != nil {
		return m.SelOpenCardTimes
	}
	return 0
}

type MahjongWinReply struct {
	// true 表示能胡
	Can bool `protobuf:"varint,1,opt,name=can,proto3" json:"can,omitempty"`
	// 胡牌类型, 普通胡牌, 对对胡, 7对, 7对龙爪背
	WinType GangHuaMahjongWinType `protobuf:"varint,2,opt,name=winType,proto3,enum=GangHuaMahjongWinType" json:"winType,omitempty"`
	// 番种
	WinKinds []GangHuaMahjongWinKind `protobuf:"varint,3,rep,packed,name=winKinds,proto3,enum=GangHuaMahjongWinKind" json:"winKinds,omitempty"`
	// true 自摸胡, false 截胡
	OwnDraw bool `protobuf:"varint,4,opt,name=ownDraw,proto3" json:"ownDraw,omitempty"`
	// 杠上炮标志
	JustKong             bool     `protobuf:"varint,5,opt,name=justKong,proto3" json:"justKong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongWinReply) Reset()         { *m = MahjongWinReply{} }
func (m *MahjongWinReply) String() string { return proto.CompactTextString(m) }
func (*MahjongWinReply) ProtoMessage()    {}
func (*MahjongWinReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{78}
}

func (m *MahjongWinReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongWinReply.Unmarshal(m, b)
}
func (m *MahjongWinReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongWinReply.Marshal(b, m, deterministic)
}
func (m *MahjongWinReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongWinReply.Merge(m, src)
}
func (m *MahjongWinReply) XXX_Size() int {
	return xxx_messageInfo_MahjongWinReply.Size(m)
}
func (m *MahjongWinReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongWinReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongWinReply proto.InternalMessageInfo

func (m *MahjongWinReply) GetCan() bool {
	if m != nil {
		return m.Can
	}
	return false
}

func (m *MahjongWinReply) GetWinType() GangHuaMahjongWinType {
	if m != nil {
		return m.WinType
	}
	return GangHuaMahjongWinType_GangHuaMahjongWinType_invalid
}

func (m *MahjongWinReply) GetWinKinds() []GangHuaMahjongWinKind {
	if m != nil {
		return m.WinKinds
	}
	return nil
}

func (m *MahjongWinReply) GetOwnDraw() bool {
	if m != nil {
		return m.OwnDraw
	}
	return false
}

func (m *MahjongWinReply) GetJustKong() bool {
	if m != nil {
		return m.JustKong
	}
	return false
}

//改变玩家状态的请求-游戏同一协议
type GameChangeStateRequest struct {
	// 玩家想要改变成的状态
	WantState            PlayerRoomState `protobuf:"varint,1,opt,name=wantState,proto3,enum=PlayerRoomState" json:"wantState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GameChangeStateRequest) Reset()         { *m = GameChangeStateRequest{} }
func (m *GameChangeStateRequest) String() string { return proto.CompactTextString(m) }
func (*GameChangeStateRequest) ProtoMessage()    {}
func (*GameChangeStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{79}
}

func (m *GameChangeStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameChangeStateRequest.Unmarshal(m, b)
}
func (m *GameChangeStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameChangeStateRequest.Marshal(b, m, deterministic)
}
func (m *GameChangeStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameChangeStateRequest.Merge(m, src)
}
func (m *GameChangeStateRequest) XXX_Size() int {
	return xxx_messageInfo_GameChangeStateRequest.Size(m)
}
func (m *GameChangeStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameChangeStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameChangeStateRequest proto.InternalMessageInfo

func (m *GameChangeStateRequest) GetWantState() PlayerRoomState {
	if m != nil {
		return m.WantState
	}
	return PlayerRoomState_PlayerRoomStateNone
}

// 改变玩家状态的回执-游戏同一协议
type GameChangeStateReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameChangeStateReply) Reset()         { *m = GameChangeStateReply{} }
func (m *GameChangeStateReply) String() string { return proto.CompactTextString(m) }
func (*GameChangeStateReply) ProtoMessage()    {}
func (*GameChangeStateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{80}
}

func (m *GameChangeStateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameChangeStateReply.Unmarshal(m, b)
}
func (m *GameChangeStateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameChangeStateReply.Marshal(b, m, deterministic)
}
func (m *GameChangeStateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameChangeStateReply.Merge(m, src)
}
func (m *GameChangeStateReply) XXX_Size() int {
	return xxx_messageInfo_GameChangeStateReply.Size(m)
}
func (m *GameChangeStateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GameChangeStateReply.DiscardUnknown(m)
}

var xxx_messageInfo_GameChangeStateReply proto.InternalMessageInfo

// 同步玩家房间玩家信息的信息
type SyncRoomPlayerInfo struct {
	// 玩家所在的房间id
	RoomUUID string `protobuf:"bytes,1,opt,name=roomUUID,proto3" json:"roomUUID,omitempty"`
	// 房间所在的服务器索引
	ServerIndex string `protobuf:"bytes,2,opt,name=serverIndex,proto3" json:"serverIndex,omitempty"`
	// 需要同步信息的玩家的uuid
	PlayerUUID string `protobuf:"bytes,3,opt,name=playerUUID,proto3" json:"playerUUID,omitempty"`
	// 需要改变的金钱数
	ChangeBalance        int64    `protobuf:"varint,4,opt,name=changeBalance,proto3" json:"changeBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncRoomPlayerInfo) Reset()         { *m = SyncRoomPlayerInfo{} }
func (m *SyncRoomPlayerInfo) String() string { return proto.CompactTextString(m) }
func (*SyncRoomPlayerInfo) ProtoMessage()    {}
func (*SyncRoomPlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{81}
}

func (m *SyncRoomPlayerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncRoomPlayerInfo.Unmarshal(m, b)
}
func (m *SyncRoomPlayerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncRoomPlayerInfo.Marshal(b, m, deterministic)
}
func (m *SyncRoomPlayerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncRoomPlayerInfo.Merge(m, src)
}
func (m *SyncRoomPlayerInfo) XXX_Size() int {
	return xxx_messageInfo_SyncRoomPlayerInfo.Size(m)
}
func (m *SyncRoomPlayerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncRoomPlayerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SyncRoomPlayerInfo proto.InternalMessageInfo

func (m *SyncRoomPlayerInfo) GetRoomUUID() string {
	if m != nil {
		return m.RoomUUID
	}
	return ""
}

func (m *SyncRoomPlayerInfo) GetServerIndex() string {
	if m != nil {
		return m.ServerIndex
	}
	return ""
}

func (m *SyncRoomPlayerInfo) GetPlayerUUID() string {
	if m != nil {
		return m.PlayerUUID
	}
	return ""
}

func (m *SyncRoomPlayerInfo) GetChangeBalance() int64 {
	if m != nil {
		return m.ChangeBalance
	}
	return 0
}

// 房间玩家信息
type RoomPlayerInfo struct {
	Uuid    string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ShortId string `protobuf:"bytes,2,opt,name=shortId,proto3" json:"shortId,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Role    Roles  `protobuf:"varint,4,opt,name=role,proto3,enum=Roles" json:"role,omitempty"`
	Balance int64  `protobuf:"varint,5,opt,name=balance,proto3" json:"balance,omitempty"`
	IsRobot bool   `protobuf:"varint,6,opt,name=isRobot,proto3" json:"isRobot,omitempty"`
	// 玩家手上的扑克牌
	Pokers []*Poker `protobuf:"bytes,7,rep,name=pokers,proto3" json:"pokers,omitempty"`
	// 玩家手上的麻将牌,已经摸到的牌
	HandMahjongs []*Mahjong `protobuf:"bytes,8,rep,name=handMahjongs,proto3" json:"handMahjongs,omitempty"`
	// (已经)碰牌区的牌
	Tripletes []*Mahjong `protobuf:"bytes,16,rep,name=tripletes,proto3" json:"tripletes,omitempty"`
	// (已经)杠牌区的牌
	// 杠牌类型: 直杠, 补扛, 暗杠
	QuadrupletesAn  []*Mahjong `protobuf:"bytes,17,rep,name=quadrupletesAn,proto3" json:"quadrupletesAn,omitempty"`
	QuadrupletesZhi []*Mahjong `protobuf:"bytes,19,rep,name=quadrupletesZhi,proto3" json:"quadrupletesZhi,omitempty"`
	QuadrupletesBu  []*Mahjong `protobuf:"bytes,20,rep,name=quadrupletesBu,proto3" json:"quadrupletesBu,omitempty"`
	// 杠花麻将玩家是否刚摸了张明牌, 用来判断流局; 选择了明牌后 selOpenCard 变为true, 紧接着出牌后, selOpenCard 变为 false
	GhSelOpenCard bool `protobuf:"varint,23,opt,name=ghSelOpenCard,proto3" json:"ghSelOpenCard,omitempty"`
	// 杠花麻将玩家连续摸明牌的次数; 摸到明牌后,如果不能杠牌,那么就打一张牌出去,然后把 ghSelOpenCardTimes 设置为 0
	GhSelOpenCardTimes int32 `protobuf:"varint,28,opt,name=ghSelOpenCardTimes,proto3" json:"ghSelOpenCardTimes,omitempty"`
	// 玩家房间中的状态
	PlayerRoomState PlayerRoomState `protobuf:"varint,9,opt,name=playerRoomState,proto3,enum=PlayerRoomState" json:"playerRoomState,omitempty"`
	// 玩家出的扑克牌
	OutPokers []*Poker `protobuf:"bytes,10,rep,name=outPokers,proto3" json:"outPokers,omitempty"`
	// 玩家出的麻将牌
	OutMahjongs []*Mahjong `protobuf:"bytes,11,rep,name=outMahjongs,proto3" json:"outMahjongs,omitempty"`
	// 玩家的输赢信息
	WinOrLose int64 `protobuf:"varint,12,opt,name=winOrLose,proto3" json:"winOrLose,omitempty"`
	// 玩家等待踢出，这个字段有值且状态为空时会被踢出
	WaitKick RoomSeatsChangeReason `protobuf:"varint,13,opt,name=waitKick,proto3,enum=RoomSeatsChangeReason" json:"waitKick,omitempty"`
	// 牛牛手牌的类型
	CompareBullPokerType CompareBullPokerType `protobuf:"varint,14,opt,name=compareBullPokerType,proto3,enum=CompareBullPokerType" json:"compareBullPokerType,omitempty"`
	// 牛牛手牌的倍数
	CompareBullPokerOdds uint32 `protobuf:"varint,15,opt,name=compareBullPokerOdds,proto3" json:"compareBullPokerOdds,omitempty"`
	// 杠花麻将用户的最后状态
	GhPlayerLastStatus GangHuaMahjongUserLastStatus `protobuf:"varint,21,opt,name=ghPlayerLastStatus,proto3,enum=GangHuaMahjongUserLastStatus" json:"ghPlayerLastStatus,omitempty"`
	// 杠花麻将非庄家玩家买点数; 初始值 0, 买 1 点为 1, 买 2 点为 2, 不买点为 -1; 为客户端提供状态机
	GhMahjongPoints int32 `protobuf:"varint,41,opt,name=ghMahjongPoints,proto3" json:"ghMahjongPoints,omitempty"`
	// 杠花麻将连庄次数
	GhMahjongBrankerTimes int32 `protobuf:"varint,24,opt,name=ghMahjongBrankerTimes,proto3" json:"ghMahjongBrankerTimes,omitempty"`
	//连连看图上剩余的Icon
	IconPoints []*IconPoint `protobuf:"bytes,22,rep,name=iconPoints,proto3" json:"iconPoints,omitempty"`
	//连连看完成率
	LinkUpCompletionRates int32 `protobuf:"varint,39,opt,name=LinkUpCompletionRates,proto3" json:"LinkUpCompletionRates,omitempty"`
	// 百人场玩家下注信息
	PlayerBets []int64 `protobuf:"varint,25,rep,packed,name=PlayerBets,proto3" json:"PlayerBets,omitempty"`
	//疯狂牛牛手牌类型
	CrazyBullPokerType CrazyBullPokerType `protobuf:"varint,26,opt,name=crazyBullPokerType,proto3,enum=CrazyBullPokerType" json:"crazyBullPokerType,omitempty"`
	// 疯狂牛牛手牌的倍数
	CrazyBullPokerOdds uint32 `protobuf:"varint,27,opt,name=crazyBullPokerOdds,proto3" json:"crazyBullPokerOdds,omitempty"`
	//炸金花牌型
	CompareJinhuaPokerType *CompareJinhuaPokerType `protobuf:"bytes,29,opt,name=compareJinhuaPokerType,proto3" json:"compareJinhuaPokerType,omitempty"`
	//金花跟注圈数
	JinhuaCallRound uint32 `protobuf:"varint,30,opt,name=jinhuaCallRound,proto3" json:"jinhuaCallRound,omitempty"`
	//金花下注总额
	JinhuaBets int64 `protobuf:"varint,31,opt,name=jinhuaBets,proto3" json:"jinhuaBets,omitempty"`
	//金花圈数
	JinhuaRound uint32 `protobuf:"varint,32,opt,name=jinhuaRound,proto3" json:"jinhuaRound,omitempty"`
	//疯狂牛牛庄家抢庄倍数
	CrazyBullOdds int64 `protobuf:"varint,33,opt,name=CrazyBullOdds,proto3" json:"CrazyBullOdds,omitempty"`
	//炸金花是否已经开牌
	JinhuaIsChecked bool `protobuf:"varint,34,opt,name=jinhuaIsChecked,proto3" json:"jinhuaIsChecked,omitempty"`
	//炸金花是否开启跟到底
	JinhuaIsCallingStation bool `protobuf:"varint,35,opt,name=jinhuaIsCallingStation,proto3" json:"jinhuaIsCallingStation,omitempty"`
	//疯狂牛牛玩家下注倍数
	CrazyBullPlayOdds int64 `protobuf:"varint,36,opt,name=CrazyBullPlayOdds,proto3" json:"CrazyBullPlayOdds,omitempty"`
	//炸金花奖池（当玩家allIn的时候，该奖池不继续增加）
	JinhuaJackpot int64 `protobuf:"varint,37,opt,name=jinhuaJackpot,proto3" json:"jinhuaJackpot,omitempty"`
	//是否all in
	IsAllIn bool `protobuf:"varint,38,opt,name=isAllIn,proto3" json:"isAllIn,omitempty"`
	//疯狂牛牛玩家下注是否成功
	IsCrazyBullPlayOdds bool `protobuf:"varint,40,opt,name=IsCrazyBullPlayOdds,proto3" json:"IsCrazyBullPlayOdds,omitempty"`
	//玩家奖池获得
	GetBonus int64 `protobuf:"varint,42,opt,name=GetBonus,proto3" json:"GetBonus,omitempty"`
	// 杠花麻将,庄家连庄时其他玩家也可以选择是否要下庄; 初始值 0, 不下庄为 -1, 下庄为 1,  为客户端提供状态机
	GhMahjongDownBankerRequest int32 `protobuf:"varint,43,opt,name=ghMahjongDownBankerRequest,proto3" json:"ghMahjongDownBankerRequest,omitempty"`
	//金花总消耗（总下注+抽水（目前暂时无抽水））
	JinhuaTotalConsumption int64 `protobuf:"varint,44,opt,name=jinhuaTotalConsumption,proto3" json:"jinhuaTotalConsumption,omitempty"`
	//玩家进入房间的时间
	JoinRoomTime int64 `protobuf:"varint,45,opt,name=joinRoomTime,proto3" json:"joinRoomTime,omitempty"`
	//玩家累记玩的局数
	PlayNum int32 `protobuf:"varint,46,opt,name=playNum,proto3" json:"playNum,omitempty"`
	// 杠花麻将胡牌信息; 赢家才有这个值, 输家这个值为 nil
	GhMahjongWinReply *MahjongWinReply `protobuf:"bytes,47,opt,name=ghMahjongWinReply,proto3" json:"ghMahjongWinReply,omitempty"`
	//账号
	Account string `protobuf:"bytes,48,opt,name=account,proto3" json:"account,omitempty"`
	// 玩家是否刚杠了牌
	GhMahjongJustKong bool `protobuf:"varint,49,opt,name=ghMahjongJustKong,proto3" json:"ghMahjongJustKong,omitempty"`
	// 房卡场玩家积分
	Point int64 `protobuf:"varint,50,opt,name=point,proto3" json:"point,omitempty"`
	// 龙虎玩家此局赢到的钱（不计输单计赢）
	DragonTigerWinMoney int64 `protobuf:"varint,51,opt,name=DragonTigerWinMoney,proto3" json:"DragonTigerWinMoney,omitempty"`
	//疯狂牛牛玩家观战回合数
	CrazyBullStateWatch int64 `protobuf:"varint,52,opt,name=crazyBullStateWatch,proto3" json:"crazyBullStateWatch,omitempty"`
	//炸金花是否停止增长奖池（当玩家梭哈后，只能累积增加一轮奖池，当下一次轮到自己的时候，此字段设置为true）
	IsJinhuaStopAddJackpot bool `protobuf:"varint,53,opt,name=isJinhuaStopAddJackpot,proto3" json:"isJinhuaStopAddJackpot,omitempty"`
	//记录炸金花玩家设置跟到底时的加注等级
	JinhuaCallingStationRaiseType JinhuaRaiseType `protobuf:"varint,54,opt,name=jinhuaCallingStationRaiseType,proto3,enum=JinhuaRaiseType" json:"jinhuaCallingStationRaiseType,omitempty"`
	//金花出局类型
	JinhuaOutType JinhuaOutType `protobuf:"varint,55,opt,name=jinhuaOutType,proto3,enum=JinhuaOutType" json:"jinhuaOutType,omitempty"`
	//十三水摆牌
	ShiSanShuiPlacePoker *ShiSanShuiPlacePoker `protobuf:"bytes,56,opt,name=shiSanShuiPlacePoker,proto3" json:"shiSanShuiPlacePoker,omitempty"`
	// 十三水当前比牌的输赢
	WinOrLoseCurStep int64 `protobuf:"varint,65,opt,name=winOrLoseCurStep,proto3" json:"winOrLoseCurStep,omitempty"`
	//疯狂牛牛抢庄是否成功
	CrazyBullIsSuccess bool `protobuf:"varint,57,opt,name=CrazyBullIsSuccess,proto3" json:"CrazyBullIsSuccess,omitempty"`
	// 红黑此局单赢到的钱
	RedBlackOnlyWinMoney int64 `protobuf:"varint,58,opt,name=RedBlackOnlyWinMoney,proto3" json:"RedBlackOnlyWinMoney,omitempty"`
	//性别
	Sex int32 `protobuf:"varint,59,opt,name=sex,proto3" json:"sex,omitempty"`
	//头像地址
	HeadImgUrl string `protobuf:"bytes,60,opt,name=headImgUrl,proto3" json:"headImgUrl,omitempty"`
	//国家
	Country string `protobuf:"bytes,61,opt,name=country,proto3" json:"country,omitempty"`
	//省
	Province string `protobuf:"bytes,62,opt,name=province,proto3" json:"province,omitempty"`
	//市/地区
	City string `protobuf:"bytes,63,opt,name=city,proto3" json:"city,omitempty"`
	// 百家乐玩家此局赢到的钱（不计输单计赢）
	BaccaratWinMoney int64 `protobuf:"varint,64,opt,name=BaccaratWinMoney,proto3" json:"BaccaratWinMoney,omitempty"`
	//双连手牌类型
	DoubleLinkedPokerType DoubleLinkedPokerType `protobuf:"varint,71,opt,name=doubleLinkedPokerType,proto3,enum=DoubleLinkedPokerType" json:"doubleLinkedPokerType,omitempty"`
	// 双连手牌的倍数
	DoubleLinkedPokerOdds uint32 `protobuf:"varint,66,opt,name=doubleLinkedPokerOdds,proto3" json:"doubleLinkedPokerOdds,omitempty"`
	//双连抢庄是否成功
	DoubleLinkedIsSuccess bool `protobuf:"varint,67,opt,name=DoubleLinkedIsSuccess,proto3" json:"DoubleLinkedIsSuccess,omitempty"`
	//双连玩家下注是否成功
	IsDoubleLinkedPlayOdds bool `protobuf:"varint,68,opt,name=IsDoubleLinkedPlayOdds,proto3" json:"IsDoubleLinkedPlayOdds,omitempty"`
	//双连庄家抢庄倍数
	DoubleLinkedOdds int64 `protobuf:"varint,69,opt,name=DoubleLinkedOdds,proto3" json:"DoubleLinkedOdds,omitempty"`
	//双连玩家下注倍数
	DoubleLinkedPlayOdds int64 `protobuf:"varint,70,opt,name=DoubleLinkedPlayOdds,proto3" json:"DoubleLinkedPlayOdds,omitempty"`
	//双连玩家观战回合数
	DoubleLinkedStateWatch int64 `protobuf:"varint,72,opt,name=doubleLinkedStateWatch,proto3" json:"doubleLinkedStateWatch,omitempty"`
	//双连玩家捞操作类型
	DoubleLinkedLao int64 `protobuf:"varint,73,opt,name=doubleLinkedLao,proto3" json:"doubleLinkedLao,omitempty"`
	//双连玩家是否比牌过
	DoubleLinkedIsPoker bool `protobuf:"varint,74,opt,name=doubleLinkedIsPoker,proto3" json:"doubleLinkedIsPoker,omitempty"`
	// 双连手牌的点数
	DoubleLinkedPokerNum uint32 `protobuf:"varint,75,opt,name=doubleLinkedPokerNum,proto3" json:"doubleLinkedPokerNum,omitempty"`
	// 百人场流水字段（单局）
	HundredWaterBill int64 `protobuf:"varint,76,opt,name=HundredWaterBill,proto3" json:"HundredWaterBill,omitempty"`
	// 百人场玩家普通抽水（单局）
	HundredCommission int64 `protobuf:"varint,77,opt,name=HundredCommission,proto3" json:"HundredCommission,omitempty"`
	// 百人场玩家奖池抽水（单局）
	HundredBonusTax int64 `protobuf:"varint,78,opt,name=HundredBonusTax,proto3" json:"HundredBonusTax,omitempty"`
	// 双连玩家是否已经比牌
	DoubleLinkedIsPokerPlayer uint32 `protobuf:"varint,79,opt,name=doubleLinkedIsPokerPlayer,proto3" json:"doubleLinkedIsPokerPlayer,omitempty"`
	// 双连是否展示双连或者三连的牌型
	IsSlOrSl bool `protobuf:"varint,80,opt,name=IsSlOrSl,proto3" json:"IsSlOrSl,omitempty"`
	// 麻将玩家所有牌
	MahjongPlayerInfo *MahjongPlayerInfo `protobuf:"bytes,81,opt,name=mahjongPlayerInfo,proto3" json:"mahjongPlayerInfo,omitempty"`
	// 金豆数量
	GoldBean int64 `protobuf:"varint,82,opt,name=goldBean,proto3" json:"goldBean,omitempty"`
	//连连看观战玩家的UUid
	LinkUpWatchPlayerUuid string `protobuf:"bytes,83,opt,name=LinkUpWatchPlayerUuid,proto3" json:"LinkUpWatchPlayerUuid,omitempty"`
	//十三水已经摆牌
	ShiSanShuiPlaced bool `protobuf:"varint,84,opt,name=ShiSanShuiPlaced,proto3" json:"ShiSanShuiPlaced,omitempty"`
	// 疯狂牛牛搓牌操作记录
	CrazyBullRubbingCards int64 `protobuf:"varint,85,opt,name=CrazyBullRubbingCards,proto3" json:"CrazyBullRubbingCards,omitempty"`
	// 双连搓牌操作记录
	DoubleLinkedRubbingCards int64 `protobuf:"varint,86,opt,name=DoubleLinkedRubbingCards,proto3" json:"DoubleLinkedRubbingCards,omitempty"`
	// 打旋暗牌
	DaXuanPrivatePoker []*Poker `protobuf:"bytes,87,rep,name=DaXuanPrivatePoker,proto3" json:"DaXuanPrivatePoker,omitempty"`
	// 打旋明牌
	DaXuanPublicPoker []*Poker `protobuf:"bytes,88,rep,name=DaXuanPublicPoker,proto3" json:"DaXuanPublicPoker,omitempty"`
	// 打旋玩家是否上座
	IsSeat bool `protobuf:"varint,89,opt,name=IsSeat,proto3" json:"IsSeat,omitempty"`
	// 打旋玩家申请了下座
	DownSeatRequest bool `protobuf:"varint,90,opt,name=DownSeatRequest,proto3" json:"DownSeatRequest,omitempty"`
	// 玩家是否弃牌
	IsFold bool `protobuf:"varint,91,opt,name=IsFold,proto3" json:"IsFold,omitempty"`
	// 玩家是否留座
	KeepSeat bool `protobuf:"varint,92,opt,name=KeepSeat,proto3" json:"KeepSeat,omitempty"`
	// 玩家留座时的时间
	KeepSeatTime int64 `protobuf:"varint,93,opt,name=KeepSeatTime,proto3" json:"KeepSeatTime,omitempty"`
	// 玩家保险箱 - 房间内
	SafeMoney int64 `protobuf:"varint,94,opt,name=SafeMoney,proto3" json:"SafeMoney,omitempty"`
	//下注总额
	BetsCount int64 `protobuf:"varint,95,opt,name=BetsCount,proto3" json:"BetsCount,omitempty"`
	// 玩家是否归座
	BackSeat bool `protobuf:"varint,96,opt,name=BackSeat,proto3" json:"BackSeat,omitempty"`
	// 玩家的总输赢 抢座模式
	AllWinOrLose int64 `protobuf:"varint,97,opt,name=AllWinOrLose,proto3" json:"AllWinOrLose,omitempty"`
	//打旋玩家中奖牌型
	DaXuanPokerTypePrizeType DaXuanPokerTypePrizeType `protobuf:"varint,98,opt,name=daXuanPokerTypePrizeType,proto3,enum=DaXuanPokerTypePrizeType" json:"daXuanPokerTypePrizeType,omitempty"`
	//打旋玩家中奖金额
	DaXuanPokerTypePrizeAccount int64 `protobuf:"varint,99,opt,name=daXuanPokerTypePrizeAccount,proto3" json:"daXuanPokerTypePrizeAccount,omitempty"`
	//打旋手牌记录
	DaXuanPokerLog *DaXuanPokerLog `protobuf:"bytes,100,opt,name=daXuanPokerLog,proto3" json:"daXuanPokerLog,omitempty"`
	//玩家下注总手数
	BetsNums int64 `protobuf:"varint,101,opt,name=BetsNums,proto3" json:"BetsNums,omitempty"`
	// 玩家带入桌子的总金额
	AllSafeMoney int64 `protobuf:"varint,102,opt,name=AllSafeMoney,proto3" json:"AllSafeMoney,omitempty"`
	// 玩家惩罚时间
	PunishTime int64 `protobuf:"varint,103,opt,name=PunishTime,proto3" json:"PunishTime,omitempty"`
	//下注结算剩余金额，打旋结算过程临时使用
	BetsLeftTemp int64 `protobuf:"varint,104,opt,name=BetsLeftTemp,proto3" json:"BetsLeftTemp,omitempty"`
	//打旋玩家吃芒果金额
	EatMongo int64 `protobuf:"varint,105,opt,name=EatMongo,proto3" json:"EatMongo,omitempty"`
	//最后一次下注金额
	LastBet int64 `protobuf:"varint,106,opt,name=lastBet,proto3" json:"lastBet,omitempty"`
	//退钱
	Refund int64 `protobuf:"varint,107,opt,name=refund,proto3" json:"refund,omitempty"`
	//打旋 每个人芒果贡献
	PlayerMango int64 `protobuf:"varint,108,opt,name=playerMango,proto3" json:"playerMango,omitempty"`
	//三花特牌
	DaXuanPokerSanHuaType DaXuanPokerSanHuaType `protobuf:"varint,109,opt,name=DaXuanPokerSanHuaType,proto3,enum=DaXuanPokerSanHuaType" json:"DaXuanPokerSanHuaType,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}              `json:"-"`
	XXX_unrecognized      []byte                `json:"-"`
	XXX_sizecache         int32                 `json:"-"`
}

func (m *RoomPlayerInfo) Reset()         { *m = RoomPlayerInfo{} }
func (m *RoomPlayerInfo) String() string { return proto.CompactTextString(m) }
func (*RoomPlayerInfo) ProtoMessage()    {}
func (*RoomPlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{82}
}

func (m *RoomPlayerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomPlayerInfo.Unmarshal(m, b)
}
func (m *RoomPlayerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomPlayerInfo.Marshal(b, m, deterministic)
}
func (m *RoomPlayerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomPlayerInfo.Merge(m, src)
}
func (m *RoomPlayerInfo) XXX_Size() int {
	return xxx_messageInfo_RoomPlayerInfo.Size(m)
}
func (m *RoomPlayerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomPlayerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoomPlayerInfo proto.InternalMessageInfo

func (m *RoomPlayerInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *RoomPlayerInfo) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *RoomPlayerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RoomPlayerInfo) GetRole() Roles {
	if m != nil {
		return m.Role
	}
	return Roles_Error
}

func (m *RoomPlayerInfo) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *RoomPlayerInfo) GetIsRobot() bool {
	if m != nil {
		return m.IsRobot
	}
	return false
}

func (m *RoomPlayerInfo) GetPokers() []*Poker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

func (m *RoomPlayerInfo) GetHandMahjongs() []*Mahjong {
	if m != nil {
		return m.HandMahjongs
	}
	return nil
}

func (m *RoomPlayerInfo) GetTripletes() []*Mahjong {
	if m != nil {
		return m.Tripletes
	}
	return nil
}

func (m *RoomPlayerInfo) GetQuadrupletesAn() []*Mahjong {
	if m != nil {
		return m.QuadrupletesAn
	}
	return nil
}

func (m *RoomPlayerInfo) GetQuadrupletesZhi() []*Mahjong {
	if m != nil {
		return m.QuadrupletesZhi
	}
	return nil
}

func (m *RoomPlayerInfo) GetQuadrupletesBu() []*Mahjong {
	if m != nil {
		return m.QuadrupletesBu
	}
	return nil
}

func (m *RoomPlayerInfo) GetGhSelOpenCard() bool {
	if m != nil {
		return m.GhSelOpenCard
	}
	return false
}

func (m *RoomPlayerInfo) GetGhSelOpenCardTimes() int32 {
	if m != nil {
		return m.GhSelOpenCardTimes
	}
	return 0
}

func (m *RoomPlayerInfo) GetPlayerRoomState() PlayerRoomState {
	if m != nil {
		return m.PlayerRoomState
	}
	return PlayerRoomState_PlayerRoomStateNone
}

func (m *RoomPlayerInfo) GetOutPokers() []*Poker {
	if m != nil {
		return m.OutPokers
	}
	return nil
}

func (m *RoomPlayerInfo) GetOutMahjongs() []*Mahjong {
	if m != nil {
		return m.OutMahjongs
	}
	return nil
}

func (m *RoomPlayerInfo) GetWinOrLose() int64 {
	if m != nil {
		return m.WinOrLose
	}
	return 0
}

func (m *RoomPlayerInfo) GetWaitKick() RoomSeatsChangeReason {
	if m != nil {
		return m.WaitKick
	}
	return RoomSeatsChangeReason_RoomSeatsChangeReason_None
}

func (m *RoomPlayerInfo) GetCompareBullPokerType() CompareBullPokerType {
	if m != nil {
		return m.CompareBullPokerType
	}
	return CompareBullPokerType_CompareBullCardType_None
}

func (m *RoomPlayerInfo) GetCompareBullPokerOdds() uint32 {
	if m != nil {
		return m.CompareBullPokerOdds
	}
	return 0
}

func (m *RoomPlayerInfo) GetGhPlayerLastStatus() GangHuaMahjongUserLastStatus {
	if m != nil {
		return m.GhPlayerLastStatus
	}
	return GangHuaMahjongUserLastStatus_GangHuaMahjongUserLastStatus_invalid
}

func (m *RoomPlayerInfo) GetGhMahjongPoints() int32 {
	if m != nil {
		return m.GhMahjongPoints
	}
	return 0
}

func (m *RoomPlayerInfo) GetGhMahjongBrankerTimes() int32 {
	if m != nil {
		return m.GhMahjongBrankerTimes
	}
	return 0
}

func (m *RoomPlayerInfo) GetIconPoints() []*IconPoint {
	if m != nil {
		return m.IconPoints
	}
	return nil
}

func (m *RoomPlayerInfo) GetLinkUpCompletionRates() int32 {
	if m != nil {
		return m.LinkUpCompletionRates
	}
	return 0
}

func (m *RoomPlayerInfo) GetPlayerBets() []int64 {
	if m != nil {
		return m.PlayerBets
	}
	return nil
}

func (m *RoomPlayerInfo) GetCrazyBullPokerType() CrazyBullPokerType {
	if m != nil {
		return m.CrazyBullPokerType
	}
	return CrazyBullPokerType_CrazyBullCardType_None
}

func (m *RoomPlayerInfo) GetCrazyBullPokerOdds() uint32 {
	if m != nil {
		return m.CrazyBullPokerOdds
	}
	return 0
}

func (m *RoomPlayerInfo) GetCompareJinhuaPokerType() *CompareJinhuaPokerType {
	if m != nil {
		return m.CompareJinhuaPokerType
	}
	return nil
}

func (m *RoomPlayerInfo) GetJinhuaCallRound() uint32 {
	if m != nil {
		return m.JinhuaCallRound
	}
	return 0
}

func (m *RoomPlayerInfo) GetJinhuaBets() int64 {
	if m != nil {
		return m.JinhuaBets
	}
	return 0
}

func (m *RoomPlayerInfo) GetJinhuaRound() uint32 {
	if m != nil {
		return m.JinhuaRound
	}
	return 0
}

func (m *RoomPlayerInfo) GetCrazyBullOdds() int64 {
	if m != nil {
		return m.CrazyBullOdds
	}
	return 0
}

func (m *RoomPlayerInfo) GetJinhuaIsChecked() bool {
	if m != nil {
		return m.JinhuaIsChecked
	}
	return false
}

func (m *RoomPlayerInfo) GetJinhuaIsCallingStation() bool {
	if m != nil {
		return m.JinhuaIsCallingStation
	}
	return false
}

func (m *RoomPlayerInfo) GetCrazyBullPlayOdds() int64 {
	if m != nil {
		return m.CrazyBullPlayOdds
	}
	return 0
}

func (m *RoomPlayerInfo) GetJinhuaJackpot() int64 {
	if m != nil {
		return m.JinhuaJackpot
	}
	return 0
}

func (m *RoomPlayerInfo) GetIsAllIn() bool {
	if m != nil {
		return m.IsAllIn
	}
	return false
}

func (m *RoomPlayerInfo) GetIsCrazyBullPlayOdds() bool {
	if m != nil {
		return m.IsCrazyBullPlayOdds
	}
	return false
}

func (m *RoomPlayerInfo) GetGetBonus() int64 {
	if m != nil {
		return m.GetBonus
	}
	return 0
}

func (m *RoomPlayerInfo) GetGhMahjongDownBankerRequest() int32 {
	if m != nil {
		return m.GhMahjongDownBankerRequest
	}
	return 0
}

func (m *RoomPlayerInfo) GetJinhuaTotalConsumption() int64 {
	if m != nil {
		return m.JinhuaTotalConsumption
	}
	return 0
}

func (m *RoomPlayerInfo) GetJoinRoomTime() int64 {
	if m != nil {
		return m.JoinRoomTime
	}
	return 0
}

func (m *RoomPlayerInfo) GetPlayNum() int32 {
	if m != nil {
		return m.PlayNum
	}
	return 0
}

func (m *RoomPlayerInfo) GetGhMahjongWinReply() *MahjongWinReply {
	if m != nil {
		return m.GhMahjongWinReply
	}
	return nil
}

func (m *RoomPlayerInfo) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *RoomPlayerInfo) GetGhMahjongJustKong() bool {
	if m != nil {
		return m.GhMahjongJustKong
	}
	return false
}

func (m *RoomPlayerInfo) GetPoint() int64 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *RoomPlayerInfo) GetDragonTigerWinMoney() int64 {
	if m != nil {
		return m.DragonTigerWinMoney
	}
	return 0
}

func (m *RoomPlayerInfo) GetCrazyBullStateWatch() int64 {
	if m != nil {
		return m.CrazyBullStateWatch
	}
	return 0
}

func (m *RoomPlayerInfo) GetIsJinhuaStopAddJackpot() bool {
	if m != nil {
		return m.IsJinhuaStopAddJackpot
	}
	return false
}

func (m *RoomPlayerInfo) GetJinhuaCallingStationRaiseType() JinhuaRaiseType {
	if m != nil {
		return m.JinhuaCallingStationRaiseType
	}
	return JinhuaRaiseType_JinhuaRaiseType_None
}

func (m *RoomPlayerInfo) GetJinhuaOutType() JinhuaOutType {
	if m != nil {
		return m.JinhuaOutType
	}
	return JinhuaOutType_JinhuaOutType_None
}

func (m *RoomPlayerInfo) GetShiSanShuiPlacePoker() *ShiSanShuiPlacePoker {
	if m != nil {
		return m.ShiSanShuiPlacePoker
	}
	return nil
}

func (m *RoomPlayerInfo) GetWinOrLoseCurStep() int64 {
	if m != nil {
		return m.WinOrLoseCurStep
	}
	return 0
}

func (m *RoomPlayerInfo) GetCrazyBullIsSuccess() bool {
	if m != nil {
		return m.CrazyBullIsSuccess
	}
	return false
}

func (m *RoomPlayerInfo) GetRedBlackOnlyWinMoney() int64 {
	if m != nil {
		return m.RedBlackOnlyWinMoney
	}
	return 0
}

func (m *RoomPlayerInfo) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *RoomPlayerInfo) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *RoomPlayerInfo) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *RoomPlayerInfo) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *RoomPlayerInfo) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *RoomPlayerInfo) GetBaccaratWinMoney() int64 {
	if m != nil {
		return m.BaccaratWinMoney
	}
	return 0
}

func (m *RoomPlayerInfo) GetDoubleLinkedPokerType() DoubleLinkedPokerType {
	if m != nil {
		return m.DoubleLinkedPokerType
	}
	return DoubleLinkedPokerType_DoubleLinkedCardType_None
}

func (m *RoomPlayerInfo) GetDoubleLinkedPokerOdds() uint32 {
	if m != nil {
		return m.DoubleLinkedPokerOdds
	}
	return 0
}

func (m *RoomPlayerInfo) GetDoubleLinkedIsSuccess() bool {
	if m != nil {
		return m.DoubleLinkedIsSuccess
	}
	return false
}

func (m *RoomPlayerInfo) GetIsDoubleLinkedPlayOdds() bool {
	if m != nil {
		return m.IsDoubleLinkedPlayOdds
	}
	return false
}

func (m *RoomPlayerInfo) GetDoubleLinkedOdds() int64 {
	if m != nil {
		return m.DoubleLinkedOdds
	}
	return 0
}

func (m *RoomPlayerInfo) GetDoubleLinkedPlayOdds() int64 {
	if m != nil {
		return m.DoubleLinkedPlayOdds
	}
	return 0
}

func (m *RoomPlayerInfo) GetDoubleLinkedStateWatch() int64 {
	if m != nil {
		return m.DoubleLinkedStateWatch
	}
	return 0
}

func (m *RoomPlayerInfo) GetDoubleLinkedLao() int64 {
	if m != nil {
		return m.DoubleLinkedLao
	}
	return 0
}

func (m *RoomPlayerInfo) GetDoubleLinkedIsPoker() bool {
	if m != nil {
		return m.DoubleLinkedIsPoker
	}
	return false
}

func (m *RoomPlayerInfo) GetDoubleLinkedPokerNum() uint32 {
	if m != nil {
		return m.DoubleLinkedPokerNum
	}
	return 0
}

func (m *RoomPlayerInfo) GetHundredWaterBill() int64 {
	if m != nil {
		return m.HundredWaterBill
	}
	return 0
}

func (m *RoomPlayerInfo) GetHundredCommission() int64 {
	if m != nil {
		return m.HundredCommission
	}
	return 0
}

func (m *RoomPlayerInfo) GetHundredBonusTax() int64 {
	if m != nil {
		return m.HundredBonusTax
	}
	return 0
}

func (m *RoomPlayerInfo) GetDoubleLinkedIsPokerPlayer() uint32 {
	if m != nil {
		return m.DoubleLinkedIsPokerPlayer
	}
	return 0
}

func (m *RoomPlayerInfo) GetIsSlOrSl() bool {
	if m != nil {
		return m.IsSlOrSl
	}
	return false
}

func (m *RoomPlayerInfo) GetMahjongPlayerInfo() *MahjongPlayerInfo {
	if m != nil {
		return m.MahjongPlayerInfo
	}
	return nil
}

func (m *RoomPlayerInfo) GetGoldBean() int64 {
	if m != nil {
		return m.GoldBean
	}
	return 0
}

func (m *RoomPlayerInfo) GetLinkUpWatchPlayerUuid() string {
	if m != nil {
		return m.LinkUpWatchPlayerUuid
	}
	return ""
}

func (m *RoomPlayerInfo) GetShiSanShuiPlaced() bool {
	if m != nil {
		return m.ShiSanShuiPlaced
	}
	return false
}

func (m *RoomPlayerInfo) GetCrazyBullRubbingCards() int64 {
	if m != nil {
		return m.CrazyBullRubbingCards
	}
	return 0
}

func (m *RoomPlayerInfo) GetDoubleLinkedRubbingCards() int64 {
	if m != nil {
		return m.DoubleLinkedRubbingCards
	}
	return 0
}

func (m *RoomPlayerInfo) GetDaXuanPrivatePoker() []*Poker {
	if m != nil {
		return m.DaXuanPrivatePoker
	}
	return nil
}

func (m *RoomPlayerInfo) GetDaXuanPublicPoker() []*Poker {
	if m != nil {
		return m.DaXuanPublicPoker
	}
	return nil
}

func (m *RoomPlayerInfo) GetIsSeat() bool {
	if m != nil {
		return m.IsSeat
	}
	return false
}

func (m *RoomPlayerInfo) GetDownSeatRequest() bool {
	if m != nil {
		return m.DownSeatRequest
	}
	return false
}

func (m *RoomPlayerInfo) GetIsFold() bool {
	if m != nil {
		return m.IsFold
	}
	return false
}

func (m *RoomPlayerInfo) GetKeepSeat() bool {
	if m != nil {
		return m.KeepSeat
	}
	return false
}

func (m *RoomPlayerInfo) GetKeepSeatTime() int64 {
	if m != nil {
		return m.KeepSeatTime
	}
	return 0
}

func (m *RoomPlayerInfo) GetSafeMoney() int64 {
	if m != nil {
		return m.SafeMoney
	}
	return 0
}

func (m *RoomPlayerInfo) GetBetsCount() int64 {
	if m != nil {
		return m.BetsCount
	}
	return 0
}

func (m *RoomPlayerInfo) GetBackSeat() bool {
	if m != nil {
		return m.BackSeat
	}
	return false
}

func (m *RoomPlayerInfo) GetAllWinOrLose() int64 {
	if m != nil {
		return m.AllWinOrLose
	}
	return 0
}

func (m *RoomPlayerInfo) GetDaXuanPokerTypePrizeType() DaXuanPokerTypePrizeType {
	if m != nil {
		return m.DaXuanPokerTypePrizeType
	}
	return DaXuanPokerTypePrizeType_DaXuanPokerTypePrizeType_None
}

func (m *RoomPlayerInfo) GetDaXuanPokerTypePrizeAccount() int64 {
	if m != nil {
		return m.DaXuanPokerTypePrizeAccount
	}
	return 0
}

func (m *RoomPlayerInfo) GetDaXuanPokerLog() *DaXuanPokerLog {
	if m != nil {
		return m.DaXuanPokerLog
	}
	return nil
}

func (m *RoomPlayerInfo) GetBetsNums() int64 {
	if m != nil {
		return m.BetsNums
	}
	return 0
}

func (m *RoomPlayerInfo) GetAllSafeMoney() int64 {
	if m != nil {
		return m.AllSafeMoney
	}
	return 0
}

func (m *RoomPlayerInfo) GetPunishTime() int64 {
	if m != nil {
		return m.PunishTime
	}
	return 0
}

func (m *RoomPlayerInfo) GetBetsLeftTemp() int64 {
	if m != nil {
		return m.BetsLeftTemp
	}
	return 0
}

func (m *RoomPlayerInfo) GetEatMongo() int64 {
	if m != nil {
		return m.EatMongo
	}
	return 0
}

func (m *RoomPlayerInfo) GetLastBet() int64 {
	if m != nil {
		return m.LastBet
	}
	return 0
}

func (m *RoomPlayerInfo) GetRefund() int64 {
	if m != nil {
		return m.Refund
	}
	return 0
}

func (m *RoomPlayerInfo) GetPlayerMango() int64 {
	if m != nil {
		return m.PlayerMango
	}
	return 0
}

func (m *RoomPlayerInfo) GetDaXuanPokerSanHuaType() DaXuanPokerSanHuaType {
	if m != nil {
		return m.DaXuanPokerSanHuaType
	}
	return DaXuanPokerSanHuaType_DaXuanPokerSanHuaType_None
}

// 杠花麻将在房间中的信息
type GangHuaMahjongInRoom struct {
	// 最后一次出牌的玩家的 uuid
	LastPlayerUuid string `protobuf:"bytes,1,opt,name=lastPlayerUuid,proto3" json:"lastPlayerUuid,omitempty"`
	// 当前应该出牌的玩家 uuid
	CurPlayerUuid string `protobuf:"bytes,2,opt,name=curPlayerUuid,proto3" json:"curPlayerUuid,omitempty"`
	// 将房间标记为运行状态; 第一次进入玩耍组件时标记;这样第 n 次进入玩家组件时,可以根据此值做一些逻辑操作
	Running bool `protobuf:"varint,3,opt,name=running,proto3" json:"running,omitempty"`
	// 用户选择 过牌/碰/杠 后, afterOutCardOptes 中相关状态 和 beforeOutCardOpt 要清空
	AfterOutCardOptes *PushGangHuaMahjongOperates `protobuf:"bytes,4,opt,name=afterOutCardOptes,proto3" json:"afterOutCardOptes,omitempty"`
	// 每次出牌前, 判断某玩家可 胡/暗/补杠,就保存一下
	BeforeOutCardOpt *PushPlayerGangHuaMahjongReqOutCard `protobuf:"bytes,5,opt,name=beforeOutCardOpt,proto3" json:"beforeOutCardOpt,omitempty"`
	// 最后 4 张麻将牌, 从 0 开始计数的话,就是第 104,105,106,107 这4张, 其中 104, 106 是明牌
	GangHuaMahjongLast4Card []*Mahjong `protobuf:"bytes,7,rep,name=GangHuaMahjongLast4Card,proto3" json:"GangHuaMahjongLast4Card,omitempty"`
	// 每次杠牌后,请求玩家摸明牌时赋值;玩家摸了明牌后,清空
	LastPushReqSelOpenCard *PushGangHuaMahjongReqSelectOpenCard `protobuf:"bytes,8,opt,name=lastPushReqSelOpenCard,proto3" json:"lastPushReqSelOpenCard,omitempty"`
	// 杠花麻将流局
	GhDeuce bool `protobuf:"varint,9,opt,name=ghDeuce,proto3" json:"ghDeuce,omitempty"`
	// 杠花麻将, 当前能够胡牌的玩家索引, 默认为 -1; 当其他玩家选择 杠/碰 时,需要判断 GhCanWinIndex, 若 GhCanWinIndex != -1, 就要等待
	GhCanWinIndex int64 `protobuf:"varint,10,opt,name=GhCanWinIndex,proto3" json:"GhCanWinIndex,omitempty"`
	// 杠花麻将,胡牌类型名字,比如 天胡,自摸小7对,绝卡张自摸 等等
	GhWinName string `protobuf:"bytes,11,opt,name=ghWinName,proto3" json:"ghWinName,omitempty"`
	// true 杠花麻将自摸胡标志; false 表示截胡
	GhWinByOwnDraw bool `protobuf:"varint,12,opt,name=ghWinByOwnDraw,proto3" json:"ghWinByOwnDraw,omitempty"`
	//牌堆剩余长度
	RemainCardNum int32 `protobuf:"varint,13,opt,name=RemainCardNum,proto3" json:"RemainCardNum,omitempty"`
	//杠花麻将明牌信息
	OpenCardS []*OpenCard `protobuf:"bytes,14,rep,name=OpenCardS,proto3" json:"OpenCardS,omitempty"`
	// 杠花麻将是否结束, 如果结束,就是 true
	GhMahjongGameOver bool `protobuf:"varint,15,opt,name=ghMahjongGameOver,proto3" json:"ghMahjongGameOver,omitempty"`
	// 杠花麻将明牌剩余数量
	GhMahjongOpenCards int32 `protobuf:"varint,16,opt,name=ghMahjongOpenCards,proto3" json:"ghMahjongOpenCards,omitempty"`
	// 胡牌信息
	MahjongWinReply *MahjongWinReply `protobuf:"bytes,17,opt,name=mahjongWinReply,proto3" json:"mahjongWinReply,omitempty"`
	// 上次的庄家 uuid
	LastBanker           string   `protobuf:"bytes,18,opt,name=lastBanker,proto3" json:"lastBanker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GangHuaMahjongInRoom) Reset()         { *m = GangHuaMahjongInRoom{} }
func (m *GangHuaMahjongInRoom) String() string { return proto.CompactTextString(m) }
func (*GangHuaMahjongInRoom) ProtoMessage()    {}
func (*GangHuaMahjongInRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{83}
}

func (m *GangHuaMahjongInRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GangHuaMahjongInRoom.Unmarshal(m, b)
}
func (m *GangHuaMahjongInRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GangHuaMahjongInRoom.Marshal(b, m, deterministic)
}
func (m *GangHuaMahjongInRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GangHuaMahjongInRoom.Merge(m, src)
}
func (m *GangHuaMahjongInRoom) XXX_Size() int {
	return xxx_messageInfo_GangHuaMahjongInRoom.Size(m)
}
func (m *GangHuaMahjongInRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_GangHuaMahjongInRoom.DiscardUnknown(m)
}

var xxx_messageInfo_GangHuaMahjongInRoom proto.InternalMessageInfo

func (m *GangHuaMahjongInRoom) GetLastPlayerUuid() string {
	if m != nil {
		return m.LastPlayerUuid
	}
	return ""
}

func (m *GangHuaMahjongInRoom) GetCurPlayerUuid() string {
	if m != nil {
		return m.CurPlayerUuid
	}
	return ""
}

func (m *GangHuaMahjongInRoom) GetRunning() bool {
	if m != nil {
		return m.Running
	}
	return false
}

func (m *GangHuaMahjongInRoom) GetAfterOutCardOptes() *PushGangHuaMahjongOperates {
	if m != nil {
		return m.AfterOutCardOptes
	}
	return nil
}

func (m *GangHuaMahjongInRoom) GetBeforeOutCardOpt() *PushPlayerGangHuaMahjongReqOutCard {
	if m != nil {
		return m.BeforeOutCardOpt
	}
	return nil
}

func (m *GangHuaMahjongInRoom) GetGangHuaMahjongLast4Card() []*Mahjong {
	if m != nil {
		return m.GangHuaMahjongLast4Card
	}
	return nil
}

func (m *GangHuaMahjongInRoom) GetLastPushReqSelOpenCard() *PushGangHuaMahjongReqSelectOpenCard {
	if m != nil {
		return m.LastPushReqSelOpenCard
	}
	return nil
}

func (m *GangHuaMahjongInRoom) GetGhDeuce() bool {
	if m != nil {
		return m.GhDeuce
	}
	return false
}

func (m *GangHuaMahjongInRoom) GetGhCanWinIndex() int64 {
	if m != nil {
		return m.GhCanWinIndex
	}
	return 0
}

func (m *GangHuaMahjongInRoom) GetGhWinName() string {
	if m != nil {
		return m.GhWinName
	}
	return ""
}

func (m *GangHuaMahjongInRoom) GetGhWinByOwnDraw() bool {
	if m != nil {
		return m.GhWinByOwnDraw
	}
	return false
}

func (m *GangHuaMahjongInRoom) GetRemainCardNum() int32 {
	if m != nil {
		return m.RemainCardNum
	}
	return 0
}

func (m *GangHuaMahjongInRoom) GetOpenCardS() []*OpenCard {
	if m != nil {
		return m.OpenCardS
	}
	return nil
}

func (m *GangHuaMahjongInRoom) GetGhMahjongGameOver() bool {
	if m != nil {
		return m.GhMahjongGameOver
	}
	return false
}

func (m *GangHuaMahjongInRoom) GetGhMahjongOpenCards() int32 {
	if m != nil {
		return m.GhMahjongOpenCards
	}
	return 0
}

func (m *GangHuaMahjongInRoom) GetMahjongWinReply() *MahjongWinReply {
	if m != nil {
		return m.MahjongWinReply
	}
	return nil
}

func (m *GangHuaMahjongInRoom) GetLastBanker() string {
	if m != nil {
		return m.LastBanker
	}
	return ""
}

// 房间代付信息
type RoomPayByOtherInfo struct {
	// 需要支付的玩家id
	OtherUUID string `protobuf:"bytes,1,opt,name=otherUUID,proto3" json:"otherUUID,omitempty"`
	// 发起代付的房间id
	RoomUUID string `protobuf:"bytes,2,opt,name=roomUUID,proto3" json:"roomUUID,omitempty"`
	// 发起代付的游戏类型
	GameType GameType `protobuf:"varint,3,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 发起代付的服务器索引
	ServerIndex string `protobuf:"bytes,4,opt,name=serverIndex,proto3" json:"serverIndex,omitempty"`
	// 代付的支付状态
	PayStatus PayStatus `protobuf:"varint,5,opt,name=payStatus,proto3,enum=PayStatus" json:"payStatus,omitempty"`
	// 需要代付的金额,正数s
	PayNum               int64    `protobuf:"varint,6,opt,name=payNum,proto3" json:"payNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomPayByOtherInfo) Reset()         { *m = RoomPayByOtherInfo{} }
func (m *RoomPayByOtherInfo) String() string { return proto.CompactTextString(m) }
func (*RoomPayByOtherInfo) ProtoMessage()    {}
func (*RoomPayByOtherInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{84}
}

func (m *RoomPayByOtherInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomPayByOtherInfo.Unmarshal(m, b)
}
func (m *RoomPayByOtherInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomPayByOtherInfo.Marshal(b, m, deterministic)
}
func (m *RoomPayByOtherInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomPayByOtherInfo.Merge(m, src)
}
func (m *RoomPayByOtherInfo) XXX_Size() int {
	return xxx_messageInfo_RoomPayByOtherInfo.Size(m)
}
func (m *RoomPayByOtherInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomPayByOtherInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoomPayByOtherInfo proto.InternalMessageInfo

func (m *RoomPayByOtherInfo) GetOtherUUID() string {
	if m != nil {
		return m.OtherUUID
	}
	return ""
}

func (m *RoomPayByOtherInfo) GetRoomUUID() string {
	if m != nil {
		return m.RoomUUID
	}
	return ""
}

func (m *RoomPayByOtherInfo) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *RoomPayByOtherInfo) GetServerIndex() string {
	if m != nil {
		return m.ServerIndex
	}
	return ""
}

func (m *RoomPayByOtherInfo) GetPayStatus() PayStatus {
	if m != nil {
		return m.PayStatus
	}
	return PayStatus_PayStatus_None
}

func (m *RoomPayByOtherInfo) GetPayNum() int64 {
	if m != nil {
		return m.PayNum
	}
	return 0
}

// 每一局的结算信息
type SettleInfo struct {
	// 参与结算的人员id
	SettleUUID []string `protobuf:"bytes,1,rep,name=settleUUID,proto3" json:"settleUUID,omitempty"`
	// 参与结算的人员输赢
	SettleWinOrLose []int64 `protobuf:"varint,2,rep,packed,name=settleWinOrLose,proto3" json:"settleWinOrLose,omitempty"`
	// 参与结算的人员的昵称
	SettleName []string `protobuf:"bytes,3,rep,name=settleName,proto3" json:"settleName,omitempty"`
	// 参与结算的人员的头像
	ImgUrl []string `protobuf:"bytes,4,rep,name=imgUrl,proto3" json:"imgUrl,omitempty"`
	// 参与结算的人员结算后余额
	AfterBalance []int64 `protobuf:"varint,5,rep,packed,name=afterBalance,proto3" json:"afterBalance,omitempty"`
	// 参与结算的人员shortid
	ShortId []string `protobuf:"bytes,6,rep,name=shortId,proto3" json:"shortId,omitempty"`
	// 通比牛牛每局的牌
	AllPokers []*AllPoker `protobuf:"bytes,7,rep,name=allPokers,proto3" json:"allPokers,omitempty"`
	// 每个人的牛牛手牌的类型
	CompareBullPokerType []CompareBullPokerType `protobuf:"varint,8,rep,packed,name=compareBullPokerType,proto3,enum=CompareBullPokerType" json:"compareBullPokerType,omitempty"`
	// 每个人的牛牛手牌的倍数
	CompareBullPokerOdds []uint32 `protobuf:"varint,9,rep,packed,name=compareBullPokerOdds,proto3" json:"compareBullPokerOdds,omitempty"`
	// 双连每局的牌
	DoubleAllPokers []*AllPoker `protobuf:"bytes,10,rep,name=doubleAllPokers,proto3" json:"doubleAllPokers,omitempty"`
	// 每个人的双连手牌类型
	DoubleLinkedPokerType []DoubleLinkedPokerType `protobuf:"varint,11,rep,packed,name=doubleLinkedPokerType,proto3,enum=DoubleLinkedPokerType" json:"doubleLinkedPokerType,omitempty"`
	// 每个人的双连手牌倍数
	DoubleLinkedPokerOdds []uint32 `protobuf:"varint,12,rep,packed,name=doubleLinkedPokerOdds,proto3" json:"doubleLinkedPokerOdds,omitempty"`
	//诈金花牌型信息
	CompareJinhuaPokerType []*CompareJinhuaPokerType `protobuf:"bytes,13,rep,name=compareJinhuaPokerType,proto3" json:"compareJinhuaPokerType,omitempty"`
	// 每个人的双连手牌点数
	DoubleLinkedPokerNum []uint32 `protobuf:"varint,14,rep,packed,name=doubleLinkedPokerNum,proto3" json:"doubleLinkedPokerNum,omitempty"`
	// 每个人的疯狂牛牛手牌类型
	CrazyBullPokerType []CrazyBullPokerType `protobuf:"varint,15,rep,packed,name=crazyBullPokerType,proto3,enum=CrazyBullPokerType" json:"crazyBullPokerType,omitempty"`
	// 每个人的疯狂牛牛手牌倍数
	CrazyBullPokerOdds []uint32 `protobuf:"varint,16,rep,packed,name=crazyBullPokerOdds,proto3" json:"crazyBullPokerOdds,omitempty"`
	// 疯狂牛牛每局的牌
	CrazyBullAllPokers []*AllPoker `protobuf:"bytes,17,rep,name=crazyBullAllPokers,proto3" json:"crazyBullAllPokers,omitempty"`
	// 双连每局的庄家
	DoubleLinkedAllZuuid []string `protobuf:"bytes,18,rep,name=doubleLinkedAllZuuid,proto3" json:"doubleLinkedAllZuuid,omitempty"`
	// 疯狂牛牛每局的庄家
	CrazyBullAllZuuid []string `protobuf:"bytes,19,rep,name=crazyBullAllZuuid,proto3" json:"crazyBullAllZuuid,omitempty"`
	// 临沧麻将结算信息
	LinCangMahjongSettle []*LinCangMahjongSettle `protobuf:"bytes,20,rep,name=linCangMahjongSettle,proto3" json:"linCangMahjongSettle,omitempty"`
	// 双连是否展示双连或者三连的牌型
	IsSlOrSl []bool `protobuf:"varint,21,rep,packed,name=IsSlOrSl,proto3" json:"IsSlOrSl,omitempty"`
	// 打旋每个人的手牌
	DaXuanAllPokers []*AllPoker `protobuf:"bytes,22,rep,name=daXuanAllPokers,proto3" json:"daXuanAllPokers,omitempty"`
	// 打旋每个人的手牌点数
	DaXuanPokerNum []uint32 `protobuf:"varint,23,rep,packed,name=daXuanPokerNum,proto3" json:"daXuanPokerNum,omitempty"`
	// 打旋每个人的手牌类型
	DaXuanPokerType []*AllPoker `protobuf:"bytes,24,rep,name=daXuanPokerType,proto3" json:"daXuanPokerType,omitempty"`
	// 打旋每局的庄家
	DaXuanAllZuuid []string `protobuf:"bytes,25,rep,name=daXuanAllZuuid,proto3" json:"daXuanAllZuuid,omitempty"`
	// 打旋每局玩家的下注
	DaXuanBetsCount []int64 `protobuf:"varint,26,rep,packed,name=daXuanBetsCount,proto3" json:"daXuanBetsCount,omitempty"`
	// 打旋每局玩家的尾牌底牌
	DaXuanPokerFlag []*AllPoker `protobuf:"bytes,27,rep,name=daXuanPokerFlag,proto3" json:"daXuanPokerFlag,omitempty"`
	// 房间id
	RoomId []string `protobuf:"bytes,28,rep,name=roomId,proto3" json:"roomId,omitempty"`
	// 打旋底皮
	Ante []int64 `protobuf:"varint,29,rep,packed,name=ante,proto3" json:"ante,omitempty"`
	// 麻将玩家信息
	MahjongPlayerInfo    []*MahjongPlayerInfo `protobuf:"bytes,30,rep,name=mahjongPlayerInfo,proto3" json:"mahjongPlayerInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SettleInfo) Reset()         { *m = SettleInfo{} }
func (m *SettleInfo) String() string { return proto.CompactTextString(m) }
func (*SettleInfo) ProtoMessage()    {}
func (*SettleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{85}
}

func (m *SettleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleInfo.Unmarshal(m, b)
}
func (m *SettleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleInfo.Marshal(b, m, deterministic)
}
func (m *SettleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleInfo.Merge(m, src)
}
func (m *SettleInfo) XXX_Size() int {
	return xxx_messageInfo_SettleInfo.Size(m)
}
func (m *SettleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SettleInfo proto.InternalMessageInfo

func (m *SettleInfo) GetSettleUUID() []string {
	if m != nil {
		return m.SettleUUID
	}
	return nil
}

func (m *SettleInfo) GetSettleWinOrLose() []int64 {
	if m != nil {
		return m.SettleWinOrLose
	}
	return nil
}

func (m *SettleInfo) GetSettleName() []string {
	if m != nil {
		return m.SettleName
	}
	return nil
}

func (m *SettleInfo) GetImgUrl() []string {
	if m != nil {
		return m.ImgUrl
	}
	return nil
}

func (m *SettleInfo) GetAfterBalance() []int64 {
	if m != nil {
		return m.AfterBalance
	}
	return nil
}

func (m *SettleInfo) GetShortId() []string {
	if m != nil {
		return m.ShortId
	}
	return nil
}

func (m *SettleInfo) GetAllPokers() []*AllPoker {
	if m != nil {
		return m.AllPokers
	}
	return nil
}

func (m *SettleInfo) GetCompareBullPokerType() []CompareBullPokerType {
	if m != nil {
		return m.CompareBullPokerType
	}
	return nil
}

func (m *SettleInfo) GetCompareBullPokerOdds() []uint32 {
	if m != nil {
		return m.CompareBullPokerOdds
	}
	return nil
}

func (m *SettleInfo) GetDoubleAllPokers() []*AllPoker {
	if m != nil {
		return m.DoubleAllPokers
	}
	return nil
}

func (m *SettleInfo) GetDoubleLinkedPokerType() []DoubleLinkedPokerType {
	if m != nil {
		return m.DoubleLinkedPokerType
	}
	return nil
}

func (m *SettleInfo) GetDoubleLinkedPokerOdds() []uint32 {
	if m != nil {
		return m.DoubleLinkedPokerOdds
	}
	return nil
}

func (m *SettleInfo) GetCompareJinhuaPokerType() []*CompareJinhuaPokerType {
	if m != nil {
		return m.CompareJinhuaPokerType
	}
	return nil
}

func (m *SettleInfo) GetDoubleLinkedPokerNum() []uint32 {
	if m != nil {
		return m.DoubleLinkedPokerNum
	}
	return nil
}

func (m *SettleInfo) GetCrazyBullPokerType() []CrazyBullPokerType {
	if m != nil {
		return m.CrazyBullPokerType
	}
	return nil
}

func (m *SettleInfo) GetCrazyBullPokerOdds() []uint32 {
	if m != nil {
		return m.CrazyBullPokerOdds
	}
	return nil
}

func (m *SettleInfo) GetCrazyBullAllPokers() []*AllPoker {
	if m != nil {
		return m.CrazyBullAllPokers
	}
	return nil
}

func (m *SettleInfo) GetDoubleLinkedAllZuuid() []string {
	if m != nil {
		return m.DoubleLinkedAllZuuid
	}
	return nil
}

func (m *SettleInfo) GetCrazyBullAllZuuid() []string {
	if m != nil {
		return m.CrazyBullAllZuuid
	}
	return nil
}

func (m *SettleInfo) GetLinCangMahjongSettle() []*LinCangMahjongSettle {
	if m != nil {
		return m.LinCangMahjongSettle
	}
	return nil
}

func (m *SettleInfo) GetIsSlOrSl() []bool {
	if m != nil {
		return m.IsSlOrSl
	}
	return nil
}

func (m *SettleInfo) GetDaXuanAllPokers() []*AllPoker {
	if m != nil {
		return m.DaXuanAllPokers
	}
	return nil
}

func (m *SettleInfo) GetDaXuanPokerNum() []uint32 {
	if m != nil {
		return m.DaXuanPokerNum
	}
	return nil
}

func (m *SettleInfo) GetDaXuanPokerType() []*AllPoker {
	if m != nil {
		return m.DaXuanPokerType
	}
	return nil
}

func (m *SettleInfo) GetDaXuanAllZuuid() []string {
	if m != nil {
		return m.DaXuanAllZuuid
	}
	return nil
}

func (m *SettleInfo) GetDaXuanBetsCount() []int64 {
	if m != nil {
		return m.DaXuanBetsCount
	}
	return nil
}

func (m *SettleInfo) GetDaXuanPokerFlag() []*AllPoker {
	if m != nil {
		return m.DaXuanPokerFlag
	}
	return nil
}

func (m *SettleInfo) GetRoomId() []string {
	if m != nil {
		return m.RoomId
	}
	return nil
}

func (m *SettleInfo) GetAnte() []int64 {
	if m != nil {
		return m.Ante
	}
	return nil
}

func (m *SettleInfo) GetMahjongPlayerInfo() []*MahjongPlayerInfo {
	if m != nil {
		return m.MahjongPlayerInfo
	}
	return nil
}

// 房间信息
type RoomInfo struct {
	// 房间id
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 房间成员
	PlayerInfo []*RoomPlayerInfo `protobuf:"bytes,2,rep,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	// 房间当前状态
	CurRoomState RoomState `protobuf:"varint,3,opt,name=curRoomState,proto3,enum=RoomState" json:"curRoomState,omitempty"`
	// 房间下一个状态
	NextRoomState RoomState `protobuf:"varint,4,opt,name=nextRoomState,proto3,enum=RoomState" json:"nextRoomState,omitempty"`
	// 房间下次被驱动的时间，理论上房间应该只有一个时间流
	DoTime int64 `protobuf:"varint,5,opt,name=doTime,proto3" json:"doTime,omitempty"`
	// 当前操作的玩家的索引
	DoIndex int32 `protobuf:"varint,6,opt,name=doIndex,proto3" json:"doIndex,omitempty"`
	// 所在redis表的名称
	RedisTable string `protobuf:"bytes,7,opt,name=redisTable,proto3" json:"redisTable,omitempty"`
	// 房间配置信息
	Config []*GameConfig `protobuf:"bytes,8,rep,name=config,proto3" json:"config,omitempty"`
	// 房间的游戏类型
	GameType GameType `protobuf:"varint,9,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 房间的游戏场次
	GameScene int32 `protobuf:"varint,10,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	// 房间的创建时间
	CreateTime int64 `protobuf:"varint,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 将房间标记为死亡，死亡的房间会在稍后被删除掉
	Dead bool `protobuf:"varint,12,opt,name=dead,proto3" json:"dead,omitempty"`
	// 房间所在的服务器索引
	GameServerIndex string `protobuf:"bytes,13,opt,name=gameServerIndex,proto3" json:"gameServerIndex,omitempty"`
	// 房间闲置计数
	IdelCount int32 `protobuf:"varint,14,opt,name=idelCount,proto3" json:"idelCount,omitempty"`
	// 房间扑克牌堆
	PokerCardHeap []*Poker `protobuf:"bytes,15,rep,name=pokerCardHeap,proto3" json:"pokerCardHeap,omitempty"`
	//房间杠花麻将牌堆
	GangHuaMahjongCardHeap []*Mahjong `protobuf:"bytes,16,rep,name=GangHuaMahjongCardHeap,proto3" json:"GangHuaMahjongCardHeap,omitempty"`
	//房间庄家索引
	BankerIndex int64 `protobuf:"varint,17,opt,name=BankerIndex,proto3" json:"BankerIndex,omitempty"`
	//骰子
	Dice []int32 `protobuf:"varint,18,rep,packed,name=Dice,proto3" json:"Dice,omitempty"`
	// 杠花麻将在房间中的信息
	GhMahjongInRoom *GangHuaMahjongInRoom `protobuf:"bytes,19,opt,name=ghMahjongInRoom,proto3" json:"ghMahjongInRoom,omitempty"`
	// 上次切换状态的时间
	LastChangeStateTime int64 `protobuf:"varint,20,opt,name=lastChangeStateTime,proto3" json:"lastChangeStateTime,omitempty"`
	// 上次的房间状态
	LastRoomState RoomState `protobuf:"varint,21,opt,name=lastRoomState,proto3,enum=RoomState" json:"lastRoomState,omitempty"`
	//当前对局Id
	CurrentRoundId string `protobuf:"bytes,22,opt,name=currentRoundId,proto3" json:"currentRoundId,omitempty"`
	//连连看的开局初始图
	IconPoints []*IconPoint `protobuf:"bytes,34,rep,name=IconPoints,proto3" json:"IconPoints,omitempty"`
	//连连看机器人保存血池状态，控制加速和降速
	LinkUpBloodSlotStatus BloodSlotStatus `protobuf:"varint,94,opt,name=LinkUpBloodSlotStatus,proto3,enum=BloodSlotStatus" json:"LinkUpBloodSlotStatus,omitempty"`
	// 百人场庄家uuid
	BankerUuid string `protobuf:"bytes,35,opt,name=BankerUuid,proto3" json:"BankerUuid,omitempty"`
	// 百人场庄家等待队列
	Bankers []string `protobuf:"bytes,36,rep,name=Bankers,proto3" json:"Bankers,omitempty"`
	// 百人场庄家当前回合数
	BankerNowRound int64 `protobuf:"varint,37,opt,name=BankerNowRound,proto3" json:"BankerNowRound,omitempty"`
	// 限红 龙虎和 - 红黑幸运 - 百人牛牛 - 推筒子 -百家乐
	MaxBetRatio []int64 `protobuf:"varint,40,rep,packed,name=MaxBetRatio,proto3" json:"MaxBetRatio,omitempty"`
	// 龙牌与虎牌
	DragonTigerPoker []*Poker `protobuf:"bytes,41,rep,name=DragonTigerPoker,proto3" json:"DragonTigerPoker,omitempty"`
	// 龙虎输赢情况 近60局(可配置)
	DragonTigerWinInfos []*DragonTigerWinInfo `protobuf:"bytes,42,rep,name=DragonTigerWinInfos,proto3" json:"DragonTigerWinInfos,omitempty"`
	// 龙虎总注（玩家下注的总和） - 龙虎和
	DragonTigerAllBet []int64 `protobuf:"varint,43,rep,packed,name=DragonTigerAllBet,proto3" json:"DragonTigerAllBet,omitempty"`
	// 庄家是否申请下庄
	DownBankerQuest bool `protobuf:"varint,44,opt,name=DownBankerQuest,proto3" json:"DownBankerQuest,omitempty"`
	//赢家位置
	LastWinnerIndex int32 `protobuf:"varint,50,opt,name=LastWinnerIndex,proto3" json:"LastWinnerIndex,omitempty"`
	//诈金花房间中的信息
	JinhuaInRoom *JinhuaInRoom `protobuf:"bytes,51,opt,name=jinhuaInRoom,proto3" json:"jinhuaInRoom,omitempty"`
	//跑得快房间中的信息
	RunFastInRoom *RunFastInRoom `protobuf:"bytes,52,opt,name=runFastInRoom,proto3" json:"runFastInRoom,omitempty"`
	//疯狂牛牛抢庄玩家uuid
	CrazyBullMultiples []string `protobuf:"bytes,53,rep,name=CrazyBullMultiples,proto3" json:"CrazyBullMultiples,omitempty"`
	//疯狂牛牛庄家uuid
	CrazyBullMultipleuuid string `protobuf:"bytes,54,opt,name=CrazyBullMultipleuuid,proto3" json:"CrazyBullMultipleuuid,omitempty"`
	//百人牛牛各区明牌信息
	HundredBullPokerList []*HundredBullPokerCard `protobuf:"bytes,55,rep,name=HundredBullPokerList,proto3" json:"HundredBullPokerList,omitempty"`
	//百人牛牛输赢历史记录
	HundredBullWinInfos []*HundredBullWinInfo `protobuf:"bytes,56,rep,name=HundredBullWinInfos,proto3" json:"HundredBullWinInfos,omitempty"`
	//百人牛牛各区总注
	HundredBullAllBet []int64 `protobuf:"varint,57,rep,packed,name=HundredBullAllBet,proto3" json:"HundredBullAllBet,omitempty"`
	//房间回合数
	RoomRound int64 `protobuf:"varint,58,opt,name=RoomRound,proto3" json:"RoomRound,omitempty"`
	// 房间的类型
	RoomType RoomType `protobuf:"varint,59,opt,name=roomType,proto3,enum=RoomType" json:"roomType,omitempty"`
	// 俱乐部的uuid
	ClubUUID string `protobuf:"bytes,60,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	// 房间的邀请码
	RoomCode string `protobuf:"bytes,61,opt,name=roomCode,proto3" json:"roomCode,omitempty"`
	// 疯狂牛牛庄家等待队列
	CrazyBankers []string `protobuf:"bytes,62,rep,name=CrazyBankers,proto3" json:"CrazyBankers,omitempty"`
	// 自建房房主的uuid
	RoomMasterUUID string `protobuf:"bytes,63,opt,name=roomMasterUUID,proto3" json:"roomMasterUUID,omitempty"`
	// 新局开始时间
	RoundStartTime int64 `protobuf:"varint,64,opt,name=roundStartTime,proto3" json:"roundStartTime,omitempty"`
	// 房间支付状态
	PayStatus PayStatus `protobuf:"varint,65,opt,name=payStatus,proto3,enum=PayStatus" json:"payStatus,omitempty"`
	// 房间发起代付的时间
	StartPayTime int64 `protobuf:"varint,66,opt,name=startPayTime,proto3" json:"startPayTime,omitempty"`
	// 房间经过的局数
	RoomPlayNum int32 `protobuf:"varint,67,opt,name=roomPlayNum,proto3" json:"roomPlayNum,omitempty"`
	// 房间的支付类型
	PayType PayType `protobuf:"varint,68,opt,name=payType,proto3,enum=PayType" json:"payType,omitempty"`
	// 房间总可玩局数
	RoomAllPlayNum int32 `protobuf:"varint,69,opt,name=roomAllPlayNum,proto3" json:"roomAllPlayNum,omitempty"`
	// 房主支付花费
	MasterPayNum int64 `protobuf:"varint,70,opt,name=masterPayNum,proto3" json:"masterPayNum,omitempty"`
	// aa支付花费
	AaPayNum int64 `protobuf:"varint,71,opt,name=aaPayNum,proto3" json:"aaPayNum,omitempty"`
	//疯狂牛牛庄家倍数
	CrazyBullMultipleuuidOdds int64 `protobuf:"varint,72,opt,name=CrazyBullMultipleuuidOdds,proto3" json:"CrazyBullMultipleuuidOdds,omitempty"`
	// 房间所有局数的结算信息
	AllSettleInfo []*SettleInfo `protobuf:"bytes,73,rep,name=allSettleInfo,proto3" json:"allSettleInfo,omitempty"`
	// 麻将房间中信息
	MahjongGameInfo *MahjongGameInfo `protobuf:"bytes,74,opt,name=mahjongGameInfo,proto3" json:"mahjongGameInfo,omitempty"`
	//推筒子各区明牌信息
	PushBobbinMahjongList []*PushBobbinMahjong `protobuf:"bytes,75,rep,name=PushBobbinMahjongList,proto3" json:"PushBobbinMahjongList,omitempty"`
	//推筒子输赢历史记录
	PushBobbinWinInfos []*PushBobbinWinInfo `protobuf:"bytes,76,rep,name=PushBobbinWinInfos,proto3" json:"PushBobbinWinInfos,omitempty"`
	//百人场各区总注
	AllBet []int64 `protobuf:"varint,77,rep,packed,name=AllBet,proto3" json:"AllBet,omitempty"`
	// 红黑游戏相关81 - 90
	// 红黑总注 - 红黑幸运
	RedBlackAllBet []int64 `protobuf:"varint,80,rep,packed,name=RedBlackAllBet,proto3" json:"RedBlackAllBet,omitempty"`
	// 红牌与黑牌 012红牌 345黑牌
	RedBlackPoker []*Poker `protobuf:"bytes,81,rep,name=RedBlackPoker,proto3" json:"RedBlackPoker,omitempty"`
	// 红牌与黑牌比较牌型
	RedBlackPokerType []*CompareRedBlackPoker `protobuf:"bytes,82,rep,name=RedBlackPokerType,proto3" json:"RedBlackPokerType,omitempty"`
	// 红黑输赢情况 近60局(可配置)
	RedBlackWinInfos []*RedBlackWinInfo `protobuf:"bytes,83,rep,name=RedBlackWinInfos,proto3" json:"RedBlackWinInfos,omitempty"`
	//十三水比牌记录
	ShiSanShuiCompareLogs []*ShiSanShuiCompareLog `protobuf:"bytes,84,rep,name=ShiSanShuiCompareLogs,proto3" json:"ShiSanShuiCompareLogs,omitempty"`
	//十三水当前比牌步骤
	ShiSanShuiCompareCurStep ShiSanShuiCompareStep `protobuf:"varint,85,opt,name=ShiSanShuiCompareCurStep,proto3,enum=ShiSanShuiCompareStep" json:"ShiSanShuiCompareCurStep,omitempty"`
	// 百家乐庄牌区
	ZhuangPoker []*Poker `protobuf:"bytes,86,rep,name=ZhuangPoker,proto3" json:"ZhuangPoker,omitempty"`
	// 百家乐输赢情况 近60局(可配置)
	BaccaratWinInfos []*BaccaratWinInfo `protobuf:"bytes,87,rep,name=BaccaratWinInfos,proto3" json:"BaccaratWinInfos,omitempty"`
	// 百家乐总注（玩家下注的总和） - 庄闲和
	BaccaratAllBet []int64 `protobuf:"varint,88,rep,packed,name=BaccaratAllBet,proto3" json:"BaccaratAllBet,omitempty"`
	// 百家乐闲牌区
	XianPoker []*Poker `protobuf:"bytes,89,rep,name=XianPoker,proto3" json:"XianPoker,omitempty"`
	//双连庄家倍数
	DoubleLinkedMultipleuuidOdds int64 `protobuf:"varint,90,opt,name=DoubleLinkedMultipleuuidOdds,proto3" json:"DoubleLinkedMultipleuuidOdds,omitempty"`
	//双连抢庄玩家uuid
	DoubleLinkedMultiples []string `protobuf:"bytes,91,rep,name=DoubleLinkedMultiples,proto3" json:"DoubleLinkedMultiples,omitempty"`
	//双连庄家uuid
	DoubleLinkedMultipleuuid string `protobuf:"bytes,92,opt,name=DoubleLinkedMultipleuuid,proto3" json:"DoubleLinkedMultipleuuid,omitempty"`
	// 双连庄家等待队列
	DoubleLinkedBankers []string `protobuf:"bytes,93,rep,name=DoubleLinkedBankers,proto3" json:"DoubleLinkedBankers,omitempty"`
	// 百人场玩家庄家此局当庄金额
	HundredBankBalance int64 `protobuf:"varint,95,opt,name=HundredBankBalance,proto3" json:"HundredBankBalance,omitempty"`
	// 拥有开始权的玩家的uuid
	StartPlayerUUID string `protobuf:"bytes,96,opt,name=startPlayerUUID,proto3" json:"startPlayerUUID,omitempty"`
	// 骰子个数
	DiceNum int32 `protobuf:"varint,97,opt,name=diceNum,proto3" json:"diceNum,omitempty"`
	// 上次推送下注消息时间ms
	LastPushBetTime int64 `protobuf:"varint,98,opt,name=LastPushBetTime,proto3" json:"LastPushBetTime,omitempty"`
	// 龙虎房间下注消息推送数组
	DragonTigerBetPushes []*PushDragonTigerPlayerBet `protobuf:"bytes,99,rep,name=DragonTigerBetPushes,proto3" json:"DragonTigerBetPushes,omitempty"`
	// 红黑房间下注消息推送数组
	RedBlackBetPushes []*PushRedBlackPlayerBet `protobuf:"bytes,100,rep,name=RedBlackBetPushes,proto3" json:"RedBlackBetPushes,omitempty"`
	// 百人牛牛房间下注消息推送数组
	HundredBullBetPushes []*PushHundredBullPlayerBet `protobuf:"bytes,101,rep,name=HundredBullBetPushes,proto3" json:"HundredBullBetPushes,omitempty"`
	// 推筒子房间下注消息推送数组
	PushPushBobbinBetPushes []*PushPushBobbinPlayerBet `protobuf:"bytes,102,rep,name=PushPushBobbinBetPushes,proto3" json:"PushPushBobbinBetPushes,omitempty"`
	// 麻将上局赢家索引
	MahjongLastWinnerIndex int64 `protobuf:"varint,103,opt,name=mahjongLastWinnerIndex,proto3" json:"mahjongLastWinnerIndex,omitempty"`
	// 麻将上局赢家uuid
	MahjongLastWinnerUuid string `protobuf:"bytes,104,opt,name=mahjongLastWinnerUuid,proto3" json:"mahjongLastWinnerUuid,omitempty"`
	// 大联盟的uuid
	LeagueUUID string `protobuf:"bytes,105,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 打璇庄家下标
	DaXuanMultipleIndex int64 `protobuf:"varint,106,opt,name=DaXuanMultipleIndex,proto3" json:"DaXuanMultipleIndex,omitempty"`
	// 打璇上把赢家uuid
	DaXuanUpperUuid string `protobuf:"bytes,107,opt,name=DaXuanUpperUuid,proto3" json:"DaXuanUpperUuid,omitempty"`
	//连连看前三名记录
	LinkUpTopThree []*RoomPlayerInfo `protobuf:"bytes,108,rep,name=LinkUpTopThree,proto3" json:"LinkUpTopThree,omitempty"`
	//已准备的玩家数量
	ReadyPlayerNum int32 `protobuf:"varint,109,opt,name=ReadyPlayerNum,proto3" json:"ReadyPlayerNum,omitempty"`
	// 毫秒级DoTime
	MilliDoTime int64 `protobuf:"varint,110,opt,name=MilliDoTime,proto3" json:"MilliDoTime,omitempty"`
	//打璇房间中的信息
	DaXuanInRoom *DaXuanInRoom `protobuf:"bytes,111,opt,name=daXuanInRoom,proto3" json:"daXuanInRoom,omitempty"`
	// 桌子 - 玩家uuid 抢座模式用 [打旋8人]
	Table []string `protobuf:"bytes,112,rep,name=Table,proto3" json:"Table,omitempty"`
	// 是否地久王 -打旋
	DaXuanIsDiJiuWang bool `protobuf:"varint,113,opt,name=DaXuanIsDiJiuWang,proto3" json:"DaXuanIsDiJiuWang,omitempty"`
	// 逃跑者信息
	QPlayer []*Escapee `protobuf:"bytes,114,rep,name=qPlayer,proto3" json:"qPlayer,omitempty"`
	// 连线游戏的子游戏类型
	LineGameSubType LineGameSubType `protobuf:"varint,115,opt,name=lineGameSubType,proto3,enum=LineGameSubType" json:"lineGameSubType,omitempty"`
	// 牌局回顾
	GameReview []*GameReview `protobuf:"bytes,116,rep,name=gameReview,proto3" json:"gameReview,omitempty"`
	// 奔驰宝马游戏记录
	BenzBMWGameInfo      *BenzBMWGameInfo `protobuf:"bytes,117,opt,name=benzBMWGameInfo,proto3" json:"benzBMWGameInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RoomInfo) Reset()         { *m = RoomInfo{} }
func (m *RoomInfo) String() string { return proto.CompactTextString(m) }
func (*RoomInfo) ProtoMessage()    {}
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{86}
}

func (m *RoomInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomInfo.Unmarshal(m, b)
}
func (m *RoomInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomInfo.Marshal(b, m, deterministic)
}
func (m *RoomInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomInfo.Merge(m, src)
}
func (m *RoomInfo) XXX_Size() int {
	return xxx_messageInfo_RoomInfo.Size(m)
}
func (m *RoomInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoomInfo proto.InternalMessageInfo

func (m *RoomInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *RoomInfo) GetPlayerInfo() []*RoomPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *RoomInfo) GetCurRoomState() RoomState {
	if m != nil {
		return m.CurRoomState
	}
	return RoomState_RoomStateNone
}

func (m *RoomInfo) GetNextRoomState() RoomState {
	if m != nil {
		return m.NextRoomState
	}
	return RoomState_RoomStateNone
}

func (m *RoomInfo) GetDoTime() int64 {
	if m != nil {
		return m.DoTime
	}
	return 0
}

func (m *RoomInfo) GetDoIndex() int32 {
	if m != nil {
		return m.DoIndex
	}
	return 0
}

func (m *RoomInfo) GetRedisTable() string {
	if m != nil {
		return m.RedisTable
	}
	return ""
}

func (m *RoomInfo) GetConfig() []*GameConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *RoomInfo) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *RoomInfo) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *RoomInfo) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *RoomInfo) GetDead() bool {
	if m != nil {
		return m.Dead
	}
	return false
}

func (m *RoomInfo) GetGameServerIndex() string {
	if m != nil {
		return m.GameServerIndex
	}
	return ""
}

func (m *RoomInfo) GetIdelCount() int32 {
	if m != nil {
		return m.IdelCount
	}
	return 0
}

func (m *RoomInfo) GetPokerCardHeap() []*Poker {
	if m != nil {
		return m.PokerCardHeap
	}
	return nil
}

func (m *RoomInfo) GetGangHuaMahjongCardHeap() []*Mahjong {
	if m != nil {
		return m.GangHuaMahjongCardHeap
	}
	return nil
}

func (m *RoomInfo) GetBankerIndex() int64 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

func (m *RoomInfo) GetDice() []int32 {
	if m != nil {
		return m.Dice
	}
	return nil
}

func (m *RoomInfo) GetGhMahjongInRoom() *GangHuaMahjongInRoom {
	if m != nil {
		return m.GhMahjongInRoom
	}
	return nil
}

func (m *RoomInfo) GetLastChangeStateTime() int64 {
	if m != nil {
		return m.LastChangeStateTime
	}
	return 0
}

func (m *RoomInfo) GetLastRoomState() RoomState {
	if m != nil {
		return m.LastRoomState
	}
	return RoomState_RoomStateNone
}

func (m *RoomInfo) GetCurrentRoundId() string {
	if m != nil {
		return m.CurrentRoundId
	}
	return ""
}

func (m *RoomInfo) GetIconPoints() []*IconPoint {
	if m != nil {
		return m.IconPoints
	}
	return nil
}

func (m *RoomInfo) GetLinkUpBloodSlotStatus() BloodSlotStatus {
	if m != nil {
		return m.LinkUpBloodSlotStatus
	}
	return BloodSlotStatus_BloodSlotStatus_None
}

func (m *RoomInfo) GetBankerUuid() string {
	if m != nil {
		return m.BankerUuid
	}
	return ""
}

func (m *RoomInfo) GetBankers() []string {
	if m != nil {
		return m.Bankers
	}
	return nil
}

func (m *RoomInfo) GetBankerNowRound() int64 {
	if m != nil {
		return m.BankerNowRound
	}
	return 0
}

func (m *RoomInfo) GetMaxBetRatio() []int64 {
	if m != nil {
		return m.MaxBetRatio
	}
	return nil
}

func (m *RoomInfo) GetDragonTigerPoker() []*Poker {
	if m != nil {
		return m.DragonTigerPoker
	}
	return nil
}

func (m *RoomInfo) GetDragonTigerWinInfos() []*DragonTigerWinInfo {
	if m != nil {
		return m.DragonTigerWinInfos
	}
	return nil
}

func (m *RoomInfo) GetDragonTigerAllBet() []int64 {
	if m != nil {
		return m.DragonTigerAllBet
	}
	return nil
}

func (m *RoomInfo) GetDownBankerQuest() bool {
	if m != nil {
		return m.DownBankerQuest
	}
	return false
}

func (m *RoomInfo) GetLastWinnerIndex() int32 {
	if m != nil {
		return m.LastWinnerIndex
	}
	return 0
}

func (m *RoomInfo) GetJinhuaInRoom() *JinhuaInRoom {
	if m != nil {
		return m.JinhuaInRoom
	}
	return nil
}

func (m *RoomInfo) GetRunFastInRoom() *RunFastInRoom {
	if m != nil {
		return m.RunFastInRoom
	}
	return nil
}

func (m *RoomInfo) GetCrazyBullMultiples() []string {
	if m != nil {
		return m.CrazyBullMultiples
	}
	return nil
}

func (m *RoomInfo) GetCrazyBullMultipleuuid() string {
	if m != nil {
		return m.CrazyBullMultipleuuid
	}
	return ""
}

func (m *RoomInfo) GetHundredBullPokerList() []*HundredBullPokerCard {
	if m != nil {
		return m.HundredBullPokerList
	}
	return nil
}

func (m *RoomInfo) GetHundredBullWinInfos() []*HundredBullWinInfo {
	if m != nil {
		return m.HundredBullWinInfos
	}
	return nil
}

func (m *RoomInfo) GetHundredBullAllBet() []int64 {
	if m != nil {
		return m.HundredBullAllBet
	}
	return nil
}

func (m *RoomInfo) GetRoomRound() int64 {
	if m != nil {
		return m.RoomRound
	}
	return 0
}

func (m *RoomInfo) GetRoomType() RoomType {
	if m != nil {
		return m.RoomType
	}
	return RoomType_RoomType_None
}

func (m *RoomInfo) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *RoomInfo) GetRoomCode() string {
	if m != nil {
		return m.RoomCode
	}
	return ""
}

func (m *RoomInfo) GetCrazyBankers() []string {
	if m != nil {
		return m.CrazyBankers
	}
	return nil
}

func (m *RoomInfo) GetRoomMasterUUID() string {
	if m != nil {
		return m.RoomMasterUUID
	}
	return ""
}

func (m *RoomInfo) GetRoundStartTime() int64 {
	if m != nil {
		return m.RoundStartTime
	}
	return 0
}

func (m *RoomInfo) GetPayStatus() PayStatus {
	if m != nil {
		return m.PayStatus
	}
	return PayStatus_PayStatus_None
}

func (m *RoomInfo) GetStartPayTime() int64 {
	if m != nil {
		return m.StartPayTime
	}
	return 0
}

func (m *RoomInfo) GetRoomPlayNum() int32 {
	if m != nil {
		return m.RoomPlayNum
	}
	return 0
}

func (m *RoomInfo) GetPayType() PayType {
	if m != nil {
		return m.PayType
	}
	return PayType_PayType_None
}

func (m *RoomInfo) GetRoomAllPlayNum() int32 {
	if m != nil {
		return m.RoomAllPlayNum
	}
	return 0
}

func (m *RoomInfo) GetMasterPayNum() int64 {
	if m != nil {
		return m.MasterPayNum
	}
	return 0
}

func (m *RoomInfo) GetAaPayNum() int64 {
	if m != nil {
		return m.AaPayNum
	}
	return 0
}

func (m *RoomInfo) GetCrazyBullMultipleuuidOdds() int64 {
	if m != nil {
		return m.CrazyBullMultipleuuidOdds
	}
	return 0
}

func (m *RoomInfo) GetAllSettleInfo() []*SettleInfo {
	if m != nil {
		return m.AllSettleInfo
	}
	return nil
}

func (m *RoomInfo) GetMahjongGameInfo() *MahjongGameInfo {
	if m != nil {
		return m.MahjongGameInfo
	}
	return nil
}

func (m *RoomInfo) GetPushBobbinMahjongList() []*PushBobbinMahjong {
	if m != nil {
		return m.PushBobbinMahjongList
	}
	return nil
}

func (m *RoomInfo) GetPushBobbinWinInfos() []*PushBobbinWinInfo {
	if m != nil {
		return m.PushBobbinWinInfos
	}
	return nil
}

func (m *RoomInfo) GetAllBet() []int64 {
	if m != nil {
		return m.AllBet
	}
	return nil
}

func (m *RoomInfo) GetRedBlackAllBet() []int64 {
	if m != nil {
		return m.RedBlackAllBet
	}
	return nil
}

func (m *RoomInfo) GetRedBlackPoker() []*Poker {
	if m != nil {
		return m.RedBlackPoker
	}
	return nil
}

func (m *RoomInfo) GetRedBlackPokerType() []*CompareRedBlackPoker {
	if m != nil {
		return m.RedBlackPokerType
	}
	return nil
}

func (m *RoomInfo) GetRedBlackWinInfos() []*RedBlackWinInfo {
	if m != nil {
		return m.RedBlackWinInfos
	}
	return nil
}

func (m *RoomInfo) GetShiSanShuiCompareLogs() []*ShiSanShuiCompareLog {
	if m != nil {
		return m.ShiSanShuiCompareLogs
	}
	return nil
}

func (m *RoomInfo) GetShiSanShuiCompareCurStep() ShiSanShuiCompareStep {
	if m != nil {
		return m.ShiSanShuiCompareCurStep
	}
	return ShiSanShuiCompareStep_ShiSanShuiCompare_Start
}

func (m *RoomInfo) GetZhuangPoker() []*Poker {
	if m != nil {
		return m.ZhuangPoker
	}
	return nil
}

func (m *RoomInfo) GetBaccaratWinInfos() []*BaccaratWinInfo {
	if m != nil {
		return m.BaccaratWinInfos
	}
	return nil
}

func (m *RoomInfo) GetBaccaratAllBet() []int64 {
	if m != nil {
		return m.BaccaratAllBet
	}
	return nil
}

func (m *RoomInfo) GetXianPoker() []*Poker {
	if m != nil {
		return m.XianPoker
	}
	return nil
}

func (m *RoomInfo) GetDoubleLinkedMultipleuuidOdds() int64 {
	if m != nil {
		return m.DoubleLinkedMultipleuuidOdds
	}
	return 0
}

func (m *RoomInfo) GetDoubleLinkedMultiples() []string {
	if m != nil {
		return m.DoubleLinkedMultiples
	}
	return nil
}

func (m *RoomInfo) GetDoubleLinkedMultipleuuid() string {
	if m != nil {
		return m.DoubleLinkedMultipleuuid
	}
	return ""
}

func (m *RoomInfo) GetDoubleLinkedBankers() []string {
	if m != nil {
		return m.DoubleLinkedBankers
	}
	return nil
}

func (m *RoomInfo) GetHundredBankBalance() int64 {
	if m != nil {
		return m.HundredBankBalance
	}
	return 0
}

func (m *RoomInfo) GetStartPlayerUUID() string {
	if m != nil {
		return m.StartPlayerUUID
	}
	return ""
}

func (m *RoomInfo) GetDiceNum() int32 {
	if m != nil {
		return m.DiceNum
	}
	return 0
}

func (m *RoomInfo) GetLastPushBetTime() int64 {
	if m != nil {
		return m.LastPushBetTime
	}
	return 0
}

func (m *RoomInfo) GetDragonTigerBetPushes() []*PushDragonTigerPlayerBet {
	if m != nil {
		return m.DragonTigerBetPushes
	}
	return nil
}

func (m *RoomInfo) GetRedBlackBetPushes() []*PushRedBlackPlayerBet {
	if m != nil {
		return m.RedBlackBetPushes
	}
	return nil
}

func (m *RoomInfo) GetHundredBullBetPushes() []*PushHundredBullPlayerBet {
	if m != nil {
		return m.HundredBullBetPushes
	}
	return nil
}

func (m *RoomInfo) GetPushPushBobbinBetPushes() []*PushPushBobbinPlayerBet {
	if m != nil {
		return m.PushPushBobbinBetPushes
	}
	return nil
}

func (m *RoomInfo) GetMahjongLastWinnerIndex() int64 {
	if m != nil {
		return m.MahjongLastWinnerIndex
	}
	return 0
}

func (m *RoomInfo) GetMahjongLastWinnerUuid() string {
	if m != nil {
		return m.MahjongLastWinnerUuid
	}
	return ""
}

func (m *RoomInfo) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *RoomInfo) GetDaXuanMultipleIndex() int64 {
	if m != nil {
		return m.DaXuanMultipleIndex
	}
	return 0
}

func (m *RoomInfo) GetDaXuanUpperUuid() string {
	if m != nil {
		return m.DaXuanUpperUuid
	}
	return ""
}

func (m *RoomInfo) GetLinkUpTopThree() []*RoomPlayerInfo {
	if m != nil {
		return m.LinkUpTopThree
	}
	return nil
}

func (m *RoomInfo) GetReadyPlayerNum() int32 {
	if m != nil {
		return m.ReadyPlayerNum
	}
	return 0
}

func (m *RoomInfo) GetMilliDoTime() int64 {
	if m != nil {
		return m.MilliDoTime
	}
	return 0
}

func (m *RoomInfo) GetDaXuanInRoom() *DaXuanInRoom {
	if m != nil {
		return m.DaXuanInRoom
	}
	return nil
}

func (m *RoomInfo) GetTable() []string {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *RoomInfo) GetDaXuanIsDiJiuWang() bool {
	if m != nil {
		return m.DaXuanIsDiJiuWang
	}
	return false
}

func (m *RoomInfo) GetQPlayer() []*Escapee {
	if m != nil {
		return m.QPlayer
	}
	return nil
}

func (m *RoomInfo) GetLineGameSubType() LineGameSubType {
	if m != nil {
		return m.LineGameSubType
	}
	return LineGameSubType_LineGameSubType_None
}

func (m *RoomInfo) GetGameReview() []*GameReview {
	if m != nil {
		return m.GameReview
	}
	return nil
}

func (m *RoomInfo) GetBenzBMWGameInfo() *BenzBMWGameInfo {
	if m != nil {
		return m.BenzBMWGameInfo
	}
	return nil
}

// 牌局回顾详细信息
type GameReview struct {
	// 用户uuid
	PlayerUuid string `protobuf:"bytes,1,opt,name=PlayerUuid,proto3" json:"PlayerUuid,omitempty"`
	// 用户输赢
	WinOrLose int64 `protobuf:"varint,2,opt,name=WinOrLose,proto3" json:"WinOrLose,omitempty"`
	// 奖池信息
	Jackpot int64 `protobuf:"varint,3,opt,name=Jackpot,proto3" json:"Jackpot,omitempty"`
	// 分好的牌，前两张一组是头牌，后两张一组是尾牌
	PartPokers []*Poker `protobuf:"bytes,4,rep,name=PartPokers,proto3" json:"PartPokers,omitempty"`
	// 对应分组的牌型
	PokerTypes []DaXuanPokerType `protobuf:"varint,5,rep,packed,name=PokerTypes,proto3,enum=DaXuanPokerType" json:"PokerTypes,omitempty"`
	// 对应牌的标签
	PokerFlag []DaXuanPartPokerFlag `protobuf:"varint,6,rep,packed,name=PokerFlag,proto3,enum=DaXuanPartPokerFlag" json:"PokerFlag,omitempty"`
	// 操作类型
	Operation bool `protobuf:"varint,7,opt,name=Operation,proto3" json:"Operation,omitempty"`
	// 下注信息
	Bet int64 `protobuf:"varint,8,opt,name=bet,proto3" json:"bet,omitempty"`
	// 芒果信息
	Mango                []int64  `protobuf:"varint,9,rep,packed,name=Mango,proto3" json:"Mango,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameReview) Reset()         { *m = GameReview{} }
func (m *GameReview) String() string { return proto.CompactTextString(m) }
func (*GameReview) ProtoMessage()    {}
func (*GameReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{87}
}

func (m *GameReview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameReview.Unmarshal(m, b)
}
func (m *GameReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameReview.Marshal(b, m, deterministic)
}
func (m *GameReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameReview.Merge(m, src)
}
func (m *GameReview) XXX_Size() int {
	return xxx_messageInfo_GameReview.Size(m)
}
func (m *GameReview) XXX_DiscardUnknown() {
	xxx_messageInfo_GameReview.DiscardUnknown(m)
}

var xxx_messageInfo_GameReview proto.InternalMessageInfo

func (m *GameReview) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *GameReview) GetWinOrLose() int64 {
	if m != nil {
		return m.WinOrLose
	}
	return 0
}

func (m *GameReview) GetJackpot() int64 {
	if m != nil {
		return m.Jackpot
	}
	return 0
}

func (m *GameReview) GetPartPokers() []*Poker {
	if m != nil {
		return m.PartPokers
	}
	return nil
}

func (m *GameReview) GetPokerTypes() []DaXuanPokerType {
	if m != nil {
		return m.PokerTypes
	}
	return nil
}

func (m *GameReview) GetPokerFlag() []DaXuanPartPokerFlag {
	if m != nil {
		return m.PokerFlag
	}
	return nil
}

func (m *GameReview) GetOperation() bool {
	if m != nil {
		return m.Operation
	}
	return false
}

func (m *GameReview) GetBet() int64 {
	if m != nil {
		return m.Bet
	}
	return 0
}

func (m *GameReview) GetMango() []int64 {
	if m != nil {
		return m.Mango
	}
	return nil
}

// 逃跑者信息
type Escapee struct {
	// 用户uuid
	PlayerUuid string `protobuf:"bytes,1,opt,name=PlayerUuid,proto3" json:"PlayerUuid,omitempty"`
	// 用户总输赢
	AllWinOrLose int64 `protobuf:"varint,2,opt,name=AllWinOrLose,proto3" json:"AllWinOrLose,omitempty"`
	// 用户惩罚计时 - 超过 300s赢者会被惩罚
	PunishTime int64 `protobuf:"varint,3,opt,name=PunishTime,proto3" json:"PunishTime,omitempty"`
	// 用户桌子上目前的金额
	SafeMoney int64 `protobuf:"varint,4,opt,name=SafeMoney,proto3" json:"SafeMoney,omitempty"`
	// 手数
	BetNum int64 `protobuf:"varint,5,opt,name=BetNum,proto3" json:"BetNum,omitempty"`
	// 用户带入桌子的总金额、
	AllSafeMoney         int64    `protobuf:"varint,6,opt,name=AllSafeMoney,proto3" json:"AllSafeMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Escapee) Reset()         { *m = Escapee{} }
func (m *Escapee) String() string { return proto.CompactTextString(m) }
func (*Escapee) ProtoMessage()    {}
func (*Escapee) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{88}
}

func (m *Escapee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Escapee.Unmarshal(m, b)
}
func (m *Escapee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Escapee.Marshal(b, m, deterministic)
}
func (m *Escapee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Escapee.Merge(m, src)
}
func (m *Escapee) XXX_Size() int {
	return xxx_messageInfo_Escapee.Size(m)
}
func (m *Escapee) XXX_DiscardUnknown() {
	xxx_messageInfo_Escapee.DiscardUnknown(m)
}

var xxx_messageInfo_Escapee proto.InternalMessageInfo

func (m *Escapee) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *Escapee) GetAllWinOrLose() int64 {
	if m != nil {
		return m.AllWinOrLose
	}
	return 0
}

func (m *Escapee) GetPunishTime() int64 {
	if m != nil {
		return m.PunishTime
	}
	return 0
}

func (m *Escapee) GetSafeMoney() int64 {
	if m != nil {
		return m.SafeMoney
	}
	return 0
}

func (m *Escapee) GetBetNum() int64 {
	if m != nil {
		return m.BetNum
	}
	return 0
}

func (m *Escapee) GetAllSafeMoney() int64 {
	if m != nil {
		return m.AllSafeMoney
	}
	return 0
}

// 服务器游戏驱动组件与逻辑组件通信协议
type Driver2GameLogicInfo struct {
	// 房间信息
	RoomInfo *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	// 附加协议
	Message              *any.Any `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Driver2GameLogicInfo) Reset()         { *m = Driver2GameLogicInfo{} }
func (m *Driver2GameLogicInfo) String() string { return proto.CompactTextString(m) }
func (*Driver2GameLogicInfo) ProtoMessage()    {}
func (*Driver2GameLogicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{89}
}

func (m *Driver2GameLogicInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Driver2GameLogicInfo.Unmarshal(m, b)
}
func (m *Driver2GameLogicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Driver2GameLogicInfo.Marshal(b, m, deterministic)
}
func (m *Driver2GameLogicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Driver2GameLogicInfo.Merge(m, src)
}
func (m *Driver2GameLogicInfo) XXX_Size() int {
	return xxx_messageInfo_Driver2GameLogicInfo.Size(m)
}
func (m *Driver2GameLogicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Driver2GameLogicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_Driver2GameLogicInfo proto.InternalMessageInfo

func (m *Driver2GameLogicInfo) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *Driver2GameLogicInfo) GetMessage() *any.Any {
	if m != nil {
		return m.Message
	}
	return nil
}

// 一组牌
type AllPoker struct {
	Pokers []*Poker `protobuf:"bytes,1,rep,name=pokers,proto3" json:"pokers,omitempty"`
	// 加入是牛牛的牌，附加这组牌的类型信息
	CompareBullPokerType CompareBullPokerType `protobuf:"varint,2,opt,name=compareBullPokerType,proto3,enum=CompareBullPokerType" json:"compareBullPokerType,omitempty"`
	//诈金花牌型信息
	CompareJinhuaPokerType *CompareJinhuaPokerType `protobuf:"bytes,3,opt,name=compareJinhuaPokerType,proto3" json:"compareJinhuaPokerType,omitempty"`
	// 加入是疯狂牛牛的牌，附加这组牌的类型信息
	CrazyeBullPokerType CrazyBullPokerType `protobuf:"varint,4,opt,name=crazyeBullPokerType,proto3,enum=CrazyBullPokerType" json:"crazyeBullPokerType,omitempty"`
	// 加入是双连的牌，附加这组牌的类型信息
	DoubleLinkedPokerType DoubleLinkedPokerType `protobuf:"varint,5,opt,name=doubleLinkedPokerType,proto3,enum=DoubleLinkedPokerType" json:"doubleLinkedPokerType,omitempty"`
	// 打旋牌的类型
	DaXuanPokerType []DaXuanPokerType `protobuf:"varint,6,rep,packed,name=daXuanPokerType,proto3,enum=DaXuanPokerType" json:"daXuanPokerType,omitempty"`
	// 打旋尾牌底牌
	DaXuanPokerFlag      []DaXuanPartPokerFlag `protobuf:"varint,7,rep,packed,name=daXuanPokerFlag,proto3,enum=DaXuanPartPokerFlag" json:"daXuanPokerFlag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *AllPoker) Reset()         { *m = AllPoker{} }
func (m *AllPoker) String() string { return proto.CompactTextString(m) }
func (*AllPoker) ProtoMessage()    {}
func (*AllPoker) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{90}
}

func (m *AllPoker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllPoker.Unmarshal(m, b)
}
func (m *AllPoker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllPoker.Marshal(b, m, deterministic)
}
func (m *AllPoker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllPoker.Merge(m, src)
}
func (m *AllPoker) XXX_Size() int {
	return xxx_messageInfo_AllPoker.Size(m)
}
func (m *AllPoker) XXX_DiscardUnknown() {
	xxx_messageInfo_AllPoker.DiscardUnknown(m)
}

var xxx_messageInfo_AllPoker proto.InternalMessageInfo

func (m *AllPoker) GetPokers() []*Poker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

func (m *AllPoker) GetCompareBullPokerType() CompareBullPokerType {
	if m != nil {
		return m.CompareBullPokerType
	}
	return CompareBullPokerType_CompareBullCardType_None
}

func (m *AllPoker) GetCompareJinhuaPokerType() *CompareJinhuaPokerType {
	if m != nil {
		return m.CompareJinhuaPokerType
	}
	return nil
}

func (m *AllPoker) GetCrazyeBullPokerType() CrazyBullPokerType {
	if m != nil {
		return m.CrazyeBullPokerType
	}
	return CrazyBullPokerType_CrazyBullCardType_None
}

func (m *AllPoker) GetDoubleLinkedPokerType() DoubleLinkedPokerType {
	if m != nil {
		return m.DoubleLinkedPokerType
	}
	return DoubleLinkedPokerType_DoubleLinkedCardType_None
}

func (m *AllPoker) GetDaXuanPokerType() []DaXuanPokerType {
	if m != nil {
		return m.DaXuanPokerType
	}
	return nil
}

func (m *AllPoker) GetDaXuanPokerFlag() []DaXuanPartPokerFlag {
	if m != nil {
		return m.DaXuanPokerFlag
	}
	return nil
}

// 计算一副牌的牌型的请求
type GetPokerTypeRequest struct {
	// 需要计算的牌
	Pokers               []*Poker `protobuf:"bytes,1,rep,name=pokers,proto3" json:"pokers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPokerTypeRequest) Reset()         { *m = GetPokerTypeRequest{} }
func (m *GetPokerTypeRequest) String() string { return proto.CompactTextString(m) }
func (*GetPokerTypeRequest) ProtoMessage()    {}
func (*GetPokerTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{91}
}

func (m *GetPokerTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPokerTypeRequest.Unmarshal(m, b)
}
func (m *GetPokerTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPokerTypeRequest.Marshal(b, m, deterministic)
}
func (m *GetPokerTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPokerTypeRequest.Merge(m, src)
}
func (m *GetPokerTypeRequest) XXX_Size() int {
	return xxx_messageInfo_GetPokerTypeRequest.Size(m)
}
func (m *GetPokerTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPokerTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPokerTypeRequest proto.InternalMessageInfo

func (m *GetPokerTypeRequest) GetPokers() []*Poker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

// 计算一副牌的牌型的返回
type GetPokerTypeReply struct {
	CompareBullPokerType CompareBullPokerType `protobuf:"varint,1,opt,name=compareBullPokerType,proto3,enum=CompareBullPokerType" json:"compareBullPokerType,omitempty"`
	//诈金花牌型信息
	CompareJinhuaPokerType *CompareJinhuaPokerType `protobuf:"bytes,2,opt,name=compareJinhuaPokerType,proto3" json:"compareJinhuaPokerType,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *GetPokerTypeReply) Reset()         { *m = GetPokerTypeReply{} }
func (m *GetPokerTypeReply) String() string { return proto.CompactTextString(m) }
func (*GetPokerTypeReply) ProtoMessage()    {}
func (*GetPokerTypeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{92}
}

func (m *GetPokerTypeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPokerTypeReply.Unmarshal(m, b)
}
func (m *GetPokerTypeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPokerTypeReply.Marshal(b, m, deterministic)
}
func (m *GetPokerTypeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPokerTypeReply.Merge(m, src)
}
func (m *GetPokerTypeReply) XXX_Size() int {
	return xxx_messageInfo_GetPokerTypeReply.Size(m)
}
func (m *GetPokerTypeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPokerTypeReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetPokerTypeReply proto.InternalMessageInfo

func (m *GetPokerTypeReply) GetCompareBullPokerType() CompareBullPokerType {
	if m != nil {
		return m.CompareBullPokerType
	}
	return CompareBullPokerType_CompareBullCardType_None
}

func (m *GetPokerTypeReply) GetCompareJinhuaPokerType() *CompareJinhuaPokerType {
	if m != nil {
		return m.CompareJinhuaPokerType
	}
	return nil
}

// 计算一副牌的牌型的返回疯狂牛牛
type GetCrazyBullPokerTypeReply struct {
	CrazyBullPokerType   CrazyBullPokerType `protobuf:"varint,1,opt,name=crazyBullPokerType,proto3,enum=CrazyBullPokerType" json:"crazyBullPokerType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetCrazyBullPokerTypeReply) Reset()         { *m = GetCrazyBullPokerTypeReply{} }
func (m *GetCrazyBullPokerTypeReply) String() string { return proto.CompactTextString(m) }
func (*GetCrazyBullPokerTypeReply) ProtoMessage()    {}
func (*GetCrazyBullPokerTypeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{93}
}

func (m *GetCrazyBullPokerTypeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCrazyBullPokerTypeReply.Unmarshal(m, b)
}
func (m *GetCrazyBullPokerTypeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCrazyBullPokerTypeReply.Marshal(b, m, deterministic)
}
func (m *GetCrazyBullPokerTypeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCrazyBullPokerTypeReply.Merge(m, src)
}
func (m *GetCrazyBullPokerTypeReply) XXX_Size() int {
	return xxx_messageInfo_GetCrazyBullPokerTypeReply.Size(m)
}
func (m *GetCrazyBullPokerTypeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCrazyBullPokerTypeReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetCrazyBullPokerTypeReply proto.InternalMessageInfo

func (m *GetCrazyBullPokerTypeReply) GetCrazyBullPokerType() CrazyBullPokerType {
	if m != nil {
		return m.CrazyBullPokerType
	}
	return CrazyBullPokerType_CrazyBullCardType_None
}

// 计算一副牌的牌型的返回双连
type GetDoubleLinkedPokerTypeReply struct {
	//返回的牌型
	DoubleLinkedPokerType DoubleLinkedPokerType `protobuf:"varint,1,opt,name=doubleLinkedPokerType,proto3,enum=DoubleLinkedPokerType" json:"doubleLinkedPokerType,omitempty"`
	//返回的倍数
	DoubleLinkedPokerOdds int64    `protobuf:"varint,2,opt,name=doubleLinkedPokerOdds,proto3" json:"doubleLinkedPokerOdds,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *GetDoubleLinkedPokerTypeReply) Reset()         { *m = GetDoubleLinkedPokerTypeReply{} }
func (m *GetDoubleLinkedPokerTypeReply) String() string { return proto.CompactTextString(m) }
func (*GetDoubleLinkedPokerTypeReply) ProtoMessage()    {}
func (*GetDoubleLinkedPokerTypeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{94}
}

func (m *GetDoubleLinkedPokerTypeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDoubleLinkedPokerTypeReply.Unmarshal(m, b)
}
func (m *GetDoubleLinkedPokerTypeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDoubleLinkedPokerTypeReply.Marshal(b, m, deterministic)
}
func (m *GetDoubleLinkedPokerTypeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDoubleLinkedPokerTypeReply.Merge(m, src)
}
func (m *GetDoubleLinkedPokerTypeReply) XXX_Size() int {
	return xxx_messageInfo_GetDoubleLinkedPokerTypeReply.Size(m)
}
func (m *GetDoubleLinkedPokerTypeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDoubleLinkedPokerTypeReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetDoubleLinkedPokerTypeReply proto.InternalMessageInfo

func (m *GetDoubleLinkedPokerTypeReply) GetDoubleLinkedPokerType() DoubleLinkedPokerType {
	if m != nil {
		return m.DoubleLinkedPokerType
	}
	return DoubleLinkedPokerType_DoubleLinkedCardType_None
}

func (m *GetDoubleLinkedPokerTypeReply) GetDoubleLinkedPokerOdds() int64 {
	if m != nil {
		return m.DoubleLinkedPokerOdds
	}
	return 0
}

// 比较一组牌的大小的请求
type ComparePokersRequest struct {
	// 需要计算的牌
	AllPokers            []*AllPoker `protobuf:"bytes,1,rep,name=allPokers,proto3" json:"allPokers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ComparePokersRequest) Reset()         { *m = ComparePokersRequest{} }
func (m *ComparePokersRequest) String() string { return proto.CompactTextString(m) }
func (*ComparePokersRequest) ProtoMessage()    {}
func (*ComparePokersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{95}
}

func (m *ComparePokersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComparePokersRequest.Unmarshal(m, b)
}
func (m *ComparePokersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComparePokersRequest.Marshal(b, m, deterministic)
}
func (m *ComparePokersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComparePokersRequest.Merge(m, src)
}
func (m *ComparePokersRequest) XXX_Size() int {
	return xxx_messageInfo_ComparePokersRequest.Size(m)
}
func (m *ComparePokersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ComparePokersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ComparePokersRequest proto.InternalMessageInfo

func (m *ComparePokersRequest) GetAllPokers() []*AllPoker {
	if m != nil {
		return m.AllPokers
	}
	return nil
}

// 比较一组牌的大小的返回,返回请求时的赢家的索引
type ComparePokersReply struct {
	WinIndex             int32    `protobuf:"varint,1,opt,name=winIndex,proto3" json:"winIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComparePokersReply) Reset()         { *m = ComparePokersReply{} }
func (m *ComparePokersReply) String() string { return proto.CompactTextString(m) }
func (*ComparePokersReply) ProtoMessage()    {}
func (*ComparePokersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{96}
}

func (m *ComparePokersReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComparePokersReply.Unmarshal(m, b)
}
func (m *ComparePokersReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComparePokersReply.Marshal(b, m, deterministic)
}
func (m *ComparePokersReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComparePokersReply.Merge(m, src)
}
func (m *ComparePokersReply) XXX_Size() int {
	return xxx_messageInfo_ComparePokersReply.Size(m)
}
func (m *ComparePokersReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ComparePokersReply.DiscardUnknown(m)
}

var xxx_messageInfo_ComparePokersReply proto.InternalMessageInfo

func (m *ComparePokersReply) GetWinIndex() int32 {
	if m != nil {
		return m.WinIndex
	}
	return 0
}

// 房间邀请码的附加信息
type RoomCodeInfo struct {
	// 房间的uuid
	RoomUUID string `protobuf:"bytes,1,opt,name=roomUUID,proto3" json:"roomUUID,omitempty"`
	// 房间的邀请码
	RoomCode string `protobuf:"bytes,2,opt,name=roomCode,proto3" json:"roomCode,omitempty"`
	// 房间所在的服务器id
	ServerIndex string `protobuf:"bytes,3,opt,name=serverIndex,proto3" json:"serverIndex,omitempty"`
	// 房间的游戏类型
	GameType GameType `protobuf:"varint,4,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 房间的类型
	RoomType             RoomType `protobuf:"varint,5,opt,name=roomType,proto3,enum=RoomType" json:"roomType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomCodeInfo) Reset()         { *m = RoomCodeInfo{} }
func (m *RoomCodeInfo) String() string { return proto.CompactTextString(m) }
func (*RoomCodeInfo) ProtoMessage()    {}
func (*RoomCodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{97}
}

func (m *RoomCodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomCodeInfo.Unmarshal(m, b)
}
func (m *RoomCodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomCodeInfo.Marshal(b, m, deterministic)
}
func (m *RoomCodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomCodeInfo.Merge(m, src)
}
func (m *RoomCodeInfo) XXX_Size() int {
	return xxx_messageInfo_RoomCodeInfo.Size(m)
}
func (m *RoomCodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomCodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoomCodeInfo proto.InternalMessageInfo

func (m *RoomCodeInfo) GetRoomUUID() string {
	if m != nil {
		return m.RoomUUID
	}
	return ""
}

func (m *RoomCodeInfo) GetRoomCode() string {
	if m != nil {
		return m.RoomCode
	}
	return ""
}

func (m *RoomCodeInfo) GetServerIndex() string {
	if m != nil {
		return m.ServerIndex
	}
	return ""
}

func (m *RoomCodeInfo) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *RoomCodeInfo) GetRoomType() RoomType {
	if m != nil {
		return m.RoomType
	}
	return RoomType_RoomType_None
}

// 所有游戏创建房间请求
type GameCreateRoomRequest struct {
	// 房间的游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 想要的配置信息，只传name和value就行
	Config []*GameConfig `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty"`
	// 俱乐部的uuid
	ClubUUID string `protobuf:"bytes,3,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	// 联盟的uuid
	LeagueUUID string `protobuf:"bytes,4,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 房间的游戏场次
	GameScene int32 `protobuf:"varint,5,opt,name=GameScene,proto3" json:"GameScene,omitempty"`
	// 打旋 - 是否地九王
	IsDiJiuWang          bool     `protobuf:"varint,6,opt,name=IsDiJiuWang,proto3" json:"IsDiJiuWang,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameCreateRoomRequest) Reset()         { *m = GameCreateRoomRequest{} }
func (m *GameCreateRoomRequest) String() string { return proto.CompactTextString(m) }
func (*GameCreateRoomRequest) ProtoMessage()    {}
func (*GameCreateRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{98}
}

func (m *GameCreateRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameCreateRoomRequest.Unmarshal(m, b)
}
func (m *GameCreateRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameCreateRoomRequest.Marshal(b, m, deterministic)
}
func (m *GameCreateRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameCreateRoomRequest.Merge(m, src)
}
func (m *GameCreateRoomRequest) XXX_Size() int {
	return xxx_messageInfo_GameCreateRoomRequest.Size(m)
}
func (m *GameCreateRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameCreateRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameCreateRoomRequest proto.InternalMessageInfo

func (m *GameCreateRoomRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GameCreateRoomRequest) GetConfig() []*GameConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *GameCreateRoomRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *GameCreateRoomRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *GameCreateRoomRequest) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *GameCreateRoomRequest) GetIsDiJiuWang() bool {
	if m != nil {
		return m.IsDiJiuWang
	}
	return false
}

//  所有游戏创建房间请求回执
type GameCreateRoomReply struct {
	// 房间的游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 房间的邀请码附加信息
	RoomCodeInfo         *RoomCodeInfo `protobuf:"bytes,2,opt,name=roomCodeInfo,proto3" json:"roomCodeInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GameCreateRoomReply) Reset()         { *m = GameCreateRoomReply{} }
func (m *GameCreateRoomReply) String() string { return proto.CompactTextString(m) }
func (*GameCreateRoomReply) ProtoMessage()    {}
func (*GameCreateRoomReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{99}
}

func (m *GameCreateRoomReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameCreateRoomReply.Unmarshal(m, b)
}
func (m *GameCreateRoomReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameCreateRoomReply.Marshal(b, m, deterministic)
}
func (m *GameCreateRoomReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameCreateRoomReply.Merge(m, src)
}
func (m *GameCreateRoomReply) XXX_Size() int {
	return xxx_messageInfo_GameCreateRoomReply.Size(m)
}
func (m *GameCreateRoomReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GameCreateRoomReply.DiscardUnknown(m)
}

var xxx_messageInfo_GameCreateRoomReply proto.InternalMessageInfo

func (m *GameCreateRoomReply) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GameCreateRoomReply) GetRoomCodeInfo() *RoomCodeInfo {
	if m != nil {
		return m.RoomCodeInfo
	}
	return nil
}

// 所有游戏 进入房间请求，断线重连恢复也使用此接口
type GameJoinRoomRequest struct {
	// 想要进入的场次
	GameScene int32 `protobuf:"varint,1,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	// 进入房间时，房间中的机器人不得多于多少人
	JoinRoomRobotLimit int32 `protobuf:"varint,2,opt,name=joinRoomRobotLimit,proto3" json:"joinRoomRobotLimit,omitempty"`
	// 房间的邀请码,通过邀请码加入
	RoomCode string `protobuf:"bytes,3,opt,name=roomCode,proto3" json:"roomCode,omitempty"`
	// 房间的uuid,通过房间uuid加入
	RoomUUID string `protobuf:"bytes,4,opt,name=roomUUID,proto3" json:"roomUUID,omitempty"`
	// 俱乐部的uuid, 俱乐部接口用
	ClubUUID string `protobuf:"bytes,5,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	// 俱乐部游戏的类型, 俱乐部接口用
	ClubGameType GameType `protobuf:"varint,6,opt,name=clubGameType,proto3,enum=GameType" json:"clubGameType,omitempty"`
	//联盟ID
	LeagueUUID string `protobuf:"bytes,7,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 加入房间的serverIndex
	ServerIndex string `protobuf:"bytes,8,opt,name=serverIndex,proto3" json:"serverIndex,omitempty"`
	// 是否地久王 - 打旋 创建房间参数
	IsDiJiuWang bool `protobuf:"varint,9,opt,name=isDiJiuWang,proto3" json:"isDiJiuWang,omitempty"`
	// 想要加入的连线游戏子游戏的类型
	WantLineGameSubType LineGameSubType `protobuf:"varint,10,opt,name=wantLineGameSubType,proto3,enum=LineGameSubType" json:"wantLineGameSubType,omitempty"`
	// 普通房间想要进入的游戏类型，服务器内部使用
	GameType             GameType `protobuf:"varint,11,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameJoinRoomRequest) Reset()         { *m = GameJoinRoomRequest{} }
func (m *GameJoinRoomRequest) String() string { return proto.CompactTextString(m) }
func (*GameJoinRoomRequest) ProtoMessage()    {}
func (*GameJoinRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{100}
}

func (m *GameJoinRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameJoinRoomRequest.Unmarshal(m, b)
}
func (m *GameJoinRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameJoinRoomRequest.Marshal(b, m, deterministic)
}
func (m *GameJoinRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameJoinRoomRequest.Merge(m, src)
}
func (m *GameJoinRoomRequest) XXX_Size() int {
	return xxx_messageInfo_GameJoinRoomRequest.Size(m)
}
func (m *GameJoinRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameJoinRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameJoinRoomRequest proto.InternalMessageInfo

func (m *GameJoinRoomRequest) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *GameJoinRoomRequest) GetJoinRoomRobotLimit() int32 {
	if m != nil {
		return m.JoinRoomRobotLimit
	}
	return 0
}

func (m *GameJoinRoomRequest) GetRoomCode() string {
	if m != nil {
		return m.RoomCode
	}
	return ""
}

func (m *GameJoinRoomRequest) GetRoomUUID() string {
	if m != nil {
		return m.RoomUUID
	}
	return ""
}

func (m *GameJoinRoomRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *GameJoinRoomRequest) GetClubGameType() GameType {
	if m != nil {
		return m.ClubGameType
	}
	return GameType_None
}

func (m *GameJoinRoomRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *GameJoinRoomRequest) GetServerIndex() string {
	if m != nil {
		return m.ServerIndex
	}
	return ""
}

func (m *GameJoinRoomRequest) GetIsDiJiuWang() bool {
	if m != nil {
		return m.IsDiJiuWang
	}
	return false
}

func (m *GameJoinRoomRequest) GetWantLineGameSubType() LineGameSubType {
	if m != nil {
		return m.WantLineGameSubType
	}
	return LineGameSubType_LineGameSubType_None
}

func (m *GameJoinRoomRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

// 所有游戏 进入房间请求，断线重连恢复也使用此接口
type GameJoinRoomReply struct {
	// 加入的房间信息
	RoomInfo             *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GameJoinRoomReply) Reset()         { *m = GameJoinRoomReply{} }
func (m *GameJoinRoomReply) String() string { return proto.CompactTextString(m) }
func (*GameJoinRoomReply) ProtoMessage()    {}
func (*GameJoinRoomReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{101}
}

func (m *GameJoinRoomReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameJoinRoomReply.Unmarshal(m, b)
}
func (m *GameJoinRoomReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameJoinRoomReply.Marshal(b, m, deterministic)
}
func (m *GameJoinRoomReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameJoinRoomReply.Merge(m, src)
}
func (m *GameJoinRoomReply) XXX_Size() int {
	return xxx_messageInfo_GameJoinRoomReply.Size(m)
}
func (m *GameJoinRoomReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GameJoinRoomReply.DiscardUnknown(m)
}

var xxx_messageInfo_GameJoinRoomReply proto.InternalMessageInfo

func (m *GameJoinRoomReply) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

// 所有游戏 退出房间请求
type GameExitRoomRequest struct {
	// 普通房间想要进入的游戏类型，服务器内部使用
	GameType             GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameExitRoomRequest) Reset()         { *m = GameExitRoomRequest{} }
func (m *GameExitRoomRequest) String() string { return proto.CompactTextString(m) }
func (*GameExitRoomRequest) ProtoMessage()    {}
func (*GameExitRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{102}
}

func (m *GameExitRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameExitRoomRequest.Unmarshal(m, b)
}
func (m *GameExitRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameExitRoomRequest.Marshal(b, m, deterministic)
}
func (m *GameExitRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameExitRoomRequest.Merge(m, src)
}
func (m *GameExitRoomRequest) XXX_Size() int {
	return xxx_messageInfo_GameExitRoomRequest.Size(m)
}
func (m *GameExitRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameExitRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameExitRoomRequest proto.InternalMessageInfo

func (m *GameExitRoomRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

//  所有游戏 退出房间请求回执
type GameExitRoomReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameExitRoomReply) Reset()         { *m = GameExitRoomReply{} }
func (m *GameExitRoomReply) String() string { return proto.CompactTextString(m) }
func (*GameExitRoomReply) ProtoMessage()    {}
func (*GameExitRoomReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{103}
}

func (m *GameExitRoomReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameExitRoomReply.Unmarshal(m, b)
}
func (m *GameExitRoomReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameExitRoomReply.Marshal(b, m, deterministic)
}
func (m *GameExitRoomReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameExitRoomReply.Merge(m, src)
}
func (m *GameExitRoomReply) XXX_Size() int {
	return xxx_messageInfo_GameExitRoomReply.Size(m)
}
func (m *GameExitRoomReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GameExitRoomReply.DiscardUnknown(m)
}

var xxx_messageInfo_GameExitRoomReply proto.InternalMessageInfo

// 所有游戏 房间开始游戏请求
type GameStartRoomRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameStartRoomRequest) Reset()         { *m = GameStartRoomRequest{} }
func (m *GameStartRoomRequest) String() string { return proto.CompactTextString(m) }
func (*GameStartRoomRequest) ProtoMessage()    {}
func (*GameStartRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{104}
}

func (m *GameStartRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStartRoomRequest.Unmarshal(m, b)
}
func (m *GameStartRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStartRoomRequest.Marshal(b, m, deterministic)
}
func (m *GameStartRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStartRoomRequest.Merge(m, src)
}
func (m *GameStartRoomRequest) XXX_Size() int {
	return xxx_messageInfo_GameStartRoomRequest.Size(m)
}
func (m *GameStartRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStartRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameStartRoomRequest proto.InternalMessageInfo

//  所有游戏 房间开始游戏回执
type GameStartRoomReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameStartRoomReply) Reset()         { *m = GameStartRoomReply{} }
func (m *GameStartRoomReply) String() string { return proto.CompactTextString(m) }
func (*GameStartRoomReply) ProtoMessage()    {}
func (*GameStartRoomReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{105}
}

func (m *GameStartRoomReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStartRoomReply.Unmarshal(m, b)
}
func (m *GameStartRoomReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStartRoomReply.Marshal(b, m, deterministic)
}
func (m *GameStartRoomReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStartRoomReply.Merge(m, src)
}
func (m *GameStartRoomReply) XXX_Size() int {
	return xxx_messageInfo_GameStartRoomReply.Size(m)
}
func (m *GameStartRoomReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStartRoomReply.DiscardUnknown(m)
}

var xxx_messageInfo_GameStartRoomReply proto.InternalMessageInfo

// 所有游戏 开牌的请求
type GameOpenCardRequest struct {
	// 玩家想要改变成的状态
	OpenPokers           []*Poker `protobuf:"bytes,1,rep,name=openPokers,proto3" json:"openPokers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameOpenCardRequest) Reset()         { *m = GameOpenCardRequest{} }
func (m *GameOpenCardRequest) String() string { return proto.CompactTextString(m) }
func (*GameOpenCardRequest) ProtoMessage()    {}
func (*GameOpenCardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{106}
}

func (m *GameOpenCardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameOpenCardRequest.Unmarshal(m, b)
}
func (m *GameOpenCardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameOpenCardRequest.Marshal(b, m, deterministic)
}
func (m *GameOpenCardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameOpenCardRequest.Merge(m, src)
}
func (m *GameOpenCardRequest) XXX_Size() int {
	return xxx_messageInfo_GameOpenCardRequest.Size(m)
}
func (m *GameOpenCardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameOpenCardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameOpenCardRequest proto.InternalMessageInfo

func (m *GameOpenCardRequest) GetOpenPokers() []*Poker {
	if m != nil {
		return m.OpenPokers
	}
	return nil
}

// 所有游戏 开牌的回执
type GameOpenCardReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameOpenCardReply) Reset()         { *m = GameOpenCardReply{} }
func (m *GameOpenCardReply) String() string { return proto.CompactTextString(m) }
func (*GameOpenCardReply) ProtoMessage()    {}
func (*GameOpenCardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{107}
}

func (m *GameOpenCardReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameOpenCardReply.Unmarshal(m, b)
}
func (m *GameOpenCardReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameOpenCardReply.Marshal(b, m, deterministic)
}
func (m *GameOpenCardReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameOpenCardReply.Merge(m, src)
}
func (m *GameOpenCardReply) XXX_Size() int {
	return xxx_messageInfo_GameOpenCardReply.Size(m)
}
func (m *GameOpenCardReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GameOpenCardReply.DiscardUnknown(m)
}

var xxx_messageInfo_GameOpenCardReply proto.InternalMessageInfo

// 通比牛牛操作请求
type CompareBullDoRequest struct {
	// 想要进行的操作
	DoType CompareBullDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=CompareBullDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompareBullDoRequest) Reset()         { *m = CompareBullDoRequest{} }
func (m *CompareBullDoRequest) String() string { return proto.CompactTextString(m) }
func (*CompareBullDoRequest) ProtoMessage()    {}
func (*CompareBullDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{108}
}

func (m *CompareBullDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompareBullDoRequest.Unmarshal(m, b)
}
func (m *CompareBullDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompareBullDoRequest.Marshal(b, m, deterministic)
}
func (m *CompareBullDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompareBullDoRequest.Merge(m, src)
}
func (m *CompareBullDoRequest) XXX_Size() int {
	return xxx_messageInfo_CompareBullDoRequest.Size(m)
}
func (m *CompareBullDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompareBullDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompareBullDoRequest proto.InternalMessageInfo

func (m *CompareBullDoRequest) GetDoType() CompareBullDoType {
	if m != nil {
		return m.DoType
	}
	return CompareBullDoType_CompareBullDo_None
}

func (m *CompareBullDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 疯狂牛牛操作请求
type CrazyBullDoRequest struct {
	// 想要进行的操作
	DoType CrazyBullDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=CrazyBullDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrazyBullDoRequest) Reset()         { *m = CrazyBullDoRequest{} }
func (m *CrazyBullDoRequest) String() string { return proto.CompactTextString(m) }
func (*CrazyBullDoRequest) ProtoMessage()    {}
func (*CrazyBullDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{109}
}

func (m *CrazyBullDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrazyBullDoRequest.Unmarshal(m, b)
}
func (m *CrazyBullDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrazyBullDoRequest.Marshal(b, m, deterministic)
}
func (m *CrazyBullDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrazyBullDoRequest.Merge(m, src)
}
func (m *CrazyBullDoRequest) XXX_Size() int {
	return xxx_messageInfo_CrazyBullDoRequest.Size(m)
}
func (m *CrazyBullDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CrazyBullDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CrazyBullDoRequest proto.InternalMessageInfo

func (m *CrazyBullDoRequest) GetDoType() CrazyBullDoType {
	if m != nil {
		return m.DoType
	}
	return CrazyBullDoType_CrazyBullDo_None
}

func (m *CrazyBullDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 双连操作请求
type DoubleLinkedDoRequest struct {
	// 想要进行的操作
	DoType DoubleLinkedDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=DoubleLinkedDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleLinkedDoRequest) Reset()         { *m = DoubleLinkedDoRequest{} }
func (m *DoubleLinkedDoRequest) String() string { return proto.CompactTextString(m) }
func (*DoubleLinkedDoRequest) ProtoMessage()    {}
func (*DoubleLinkedDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{110}
}

func (m *DoubleLinkedDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleLinkedDoRequest.Unmarshal(m, b)
}
func (m *DoubleLinkedDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleLinkedDoRequest.Marshal(b, m, deterministic)
}
func (m *DoubleLinkedDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleLinkedDoRequest.Merge(m, src)
}
func (m *DoubleLinkedDoRequest) XXX_Size() int {
	return xxx_messageInfo_DoubleLinkedDoRequest.Size(m)
}
func (m *DoubleLinkedDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleLinkedDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleLinkedDoRequest proto.InternalMessageInfo

func (m *DoubleLinkedDoRequest) GetDoType() DoubleLinkedDoType {
	if m != nil {
		return m.DoType
	}
	return DoubleLinkedDoType_DoubleLinkedDo_None
}

func (m *DoubleLinkedDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 百家乐操作请求
type BaccaratDoRequest struct {
	// 想要进行的操作
	DoType BaccaratDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=BaccaratDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaccaratDoRequest) Reset()         { *m = BaccaratDoRequest{} }
func (m *BaccaratDoRequest) String() string { return proto.CompactTextString(m) }
func (*BaccaratDoRequest) ProtoMessage()    {}
func (*BaccaratDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{111}
}

func (m *BaccaratDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaccaratDoRequest.Unmarshal(m, b)
}
func (m *BaccaratDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaccaratDoRequest.Marshal(b, m, deterministic)
}
func (m *BaccaratDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaccaratDoRequest.Merge(m, src)
}
func (m *BaccaratDoRequest) XXX_Size() int {
	return xxx_messageInfo_BaccaratDoRequest.Size(m)
}
func (m *BaccaratDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BaccaratDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BaccaratDoRequest proto.InternalMessageInfo

func (m *BaccaratDoRequest) GetDoType() BaccaratDoType {
	if m != nil {
		return m.DoType
	}
	return BaccaratDoType_BaccaratDo_None
}

func (m *BaccaratDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 玩家金币改变推送
type PushUserBalanceChange struct {
	UserId  string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Balance int64  `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	//打旋 游戏的带入金币
	SafeMoney            int64    `protobuf:"varint,3,opt,name=safeMoney,proto3" json:"safeMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushUserBalanceChange) Reset()         { *m = PushUserBalanceChange{} }
func (m *PushUserBalanceChange) String() string { return proto.CompactTextString(m) }
func (*PushUserBalanceChange) ProtoMessage()    {}
func (*PushUserBalanceChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{112}
}

func (m *PushUserBalanceChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushUserBalanceChange.Unmarshal(m, b)
}
func (m *PushUserBalanceChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushUserBalanceChange.Marshal(b, m, deterministic)
}
func (m *PushUserBalanceChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushUserBalanceChange.Merge(m, src)
}
func (m *PushUserBalanceChange) XXX_Size() int {
	return xxx_messageInfo_PushUserBalanceChange.Size(m)
}
func (m *PushUserBalanceChange) XXX_DiscardUnknown() {
	xxx_messageInfo_PushUserBalanceChange.DiscardUnknown(m)
}

var xxx_messageInfo_PushUserBalanceChange proto.InternalMessageInfo

func (m *PushUserBalanceChange) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PushUserBalanceChange) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *PushUserBalanceChange) GetSafeMoney() int64 {
	if m != nil {
		return m.SafeMoney
	}
	return 0
}

// 玩家进出房间的推送
type PushRoomSeatsChange struct {
	RoomId               string                `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	SeatIndex            int32                 `protobuf:"varint,2,opt,name=seatIndex,proto3" json:"seatIndex,omitempty"`
	PlayerInfo           *RoomPlayerInfo       `protobuf:"bytes,3,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	Reason               RoomSeatsChangeReason `protobuf:"varint,4,opt,name=reason,proto3,enum=RoomSeatsChangeReason" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PushRoomSeatsChange) Reset()         { *m = PushRoomSeatsChange{} }
func (m *PushRoomSeatsChange) String() string { return proto.CompactTextString(m) }
func (*PushRoomSeatsChange) ProtoMessage()    {}
func (*PushRoomSeatsChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{113}
}

func (m *PushRoomSeatsChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRoomSeatsChange.Unmarshal(m, b)
}
func (m *PushRoomSeatsChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRoomSeatsChange.Marshal(b, m, deterministic)
}
func (m *PushRoomSeatsChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRoomSeatsChange.Merge(m, src)
}
func (m *PushRoomSeatsChange) XXX_Size() int {
	return xxx_messageInfo_PushRoomSeatsChange.Size(m)
}
func (m *PushRoomSeatsChange) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRoomSeatsChange.DiscardUnknown(m)
}

var xxx_messageInfo_PushRoomSeatsChange proto.InternalMessageInfo

func (m *PushRoomSeatsChange) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushRoomSeatsChange) GetSeatIndex() int32 {
	if m != nil {
		return m.SeatIndex
	}
	return 0
}

func (m *PushRoomSeatsChange) GetPlayerInfo() *RoomPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *PushRoomSeatsChange) GetReason() RoomSeatsChangeReason {
	if m != nil {
		return m.Reason
	}
	return RoomSeatsChangeReason_RoomSeatsChangeReason_None
}

// 玩家状态改变的推送
type PushPlayerStateChange struct {
	RoomId               string          `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	UserId               string          `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	BeforeState          PlayerRoomState `protobuf:"varint,3,opt,name=beforeState,proto3,enum=PlayerRoomState" json:"beforeState,omitempty"`
	AfterState           PlayerRoomState `protobuf:"varint,4,opt,name=afterState,proto3,enum=PlayerRoomState" json:"afterState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PushPlayerStateChange) Reset()         { *m = PushPlayerStateChange{} }
func (m *PushPlayerStateChange) String() string { return proto.CompactTextString(m) }
func (*PushPlayerStateChange) ProtoMessage()    {}
func (*PushPlayerStateChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{114}
}

func (m *PushPlayerStateChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPlayerStateChange.Unmarshal(m, b)
}
func (m *PushPlayerStateChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPlayerStateChange.Marshal(b, m, deterministic)
}
func (m *PushPlayerStateChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPlayerStateChange.Merge(m, src)
}
func (m *PushPlayerStateChange) XXX_Size() int {
	return xxx_messageInfo_PushPlayerStateChange.Size(m)
}
func (m *PushPlayerStateChange) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPlayerStateChange.DiscardUnknown(m)
}

var xxx_messageInfo_PushPlayerStateChange proto.InternalMessageInfo

func (m *PushPlayerStateChange) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushPlayerStateChange) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PushPlayerStateChange) GetBeforeState() PlayerRoomState {
	if m != nil {
		return m.BeforeState
	}
	return PlayerRoomState_PlayerRoomStateNone
}

func (m *PushPlayerStateChange) GetAfterState() PlayerRoomState {
	if m != nil {
		return m.AfterState
	}
	return PlayerRoomState_PlayerRoomStateNone
}

// 拥有开始权的玩家变动的推送
type PushStartPlayerChange struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	BeforeStartPlayer    string   `protobuf:"bytes,2,opt,name=beforeStartPlayer,proto3" json:"beforeStartPlayer,omitempty"`
	AfterStartPlayer     string   `protobuf:"bytes,3,opt,name=afterStartPlayer,proto3" json:"afterStartPlayer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushStartPlayerChange) Reset()         { *m = PushStartPlayerChange{} }
func (m *PushStartPlayerChange) String() string { return proto.CompactTextString(m) }
func (*PushStartPlayerChange) ProtoMessage()    {}
func (*PushStartPlayerChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{115}
}

func (m *PushStartPlayerChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushStartPlayerChange.Unmarshal(m, b)
}
func (m *PushStartPlayerChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushStartPlayerChange.Marshal(b, m, deterministic)
}
func (m *PushStartPlayerChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushStartPlayerChange.Merge(m, src)
}
func (m *PushStartPlayerChange) XXX_Size() int {
	return xxx_messageInfo_PushStartPlayerChange.Size(m)
}
func (m *PushStartPlayerChange) XXX_DiscardUnknown() {
	xxx_messageInfo_PushStartPlayerChange.DiscardUnknown(m)
}

var xxx_messageInfo_PushStartPlayerChange proto.InternalMessageInfo

func (m *PushStartPlayerChange) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushStartPlayerChange) GetBeforeStartPlayer() string {
	if m != nil {
		return m.BeforeStartPlayer
	}
	return ""
}

func (m *PushStartPlayerChange) GetAfterStartPlayer() string {
	if m != nil {
		return m.AfterStartPlayer
	}
	return ""
}

// 房间状态改变的推送
// 启用
type PushRoomStateChange struct {
	RoomId               string    `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	BeforeState          RoomState `protobuf:"varint,2,opt,name=beforeState,proto3,enum=RoomState" json:"beforeState,omitempty"`
	AfterState           RoomState `protobuf:"varint,3,opt,name=afterState,proto3,enum=RoomState" json:"afterState,omitempty"`
	AfterStateEndTime    int64     `protobuf:"varint,4,opt,name=afterStateEndTime,proto3" json:"afterStateEndTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PushRoomStateChange) Reset()         { *m = PushRoomStateChange{} }
func (m *PushRoomStateChange) String() string { return proto.CompactTextString(m) }
func (*PushRoomStateChange) ProtoMessage()    {}
func (*PushRoomStateChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{116}
}

func (m *PushRoomStateChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRoomStateChange.Unmarshal(m, b)
}
func (m *PushRoomStateChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRoomStateChange.Marshal(b, m, deterministic)
}
func (m *PushRoomStateChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRoomStateChange.Merge(m, src)
}
func (m *PushRoomStateChange) XXX_Size() int {
	return xxx_messageInfo_PushRoomStateChange.Size(m)
}
func (m *PushRoomStateChange) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRoomStateChange.DiscardUnknown(m)
}

var xxx_messageInfo_PushRoomStateChange proto.InternalMessageInfo

func (m *PushRoomStateChange) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushRoomStateChange) GetBeforeState() RoomState {
	if m != nil {
		return m.BeforeState
	}
	return RoomState_RoomStateNone
}

func (m *PushRoomStateChange) GetAfterState() RoomState {
	if m != nil {
		return m.AfterState
	}
	return RoomState_RoomStateNone
}

func (m *PushRoomStateChange) GetAfterStateEndTime() int64 {
	if m != nil {
		return m.AfterStateEndTime
	}
	return 0
}

// 玩家扑克牌改变时的推送
type PushPlayerCardChange struct {
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 手牌变动的玩家的id
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	// 庄家索引
	BankerIndex int32 `protobuf:"varint,3,opt,name=bankerIndex,proto3" json:"bankerIndex,omitempty"`
	// 玩家手牌,手牌中已经包含了获得的牌
	HandPoker []*Poker `protobuf:"bytes,4,rep,name=handPoker,proto3" json:"handPoker,omitempty"`
	// 玩家获得的牌
	InPoker []*Poker `protobuf:"bytes,5,rep,name=inPoker,proto3" json:"inPoker,omitempty"`
	// 玩家打出的牌,手牌中不包含打出的牌
	OutPoker []*Poker `protobuf:"bytes,6,rep,name=outPoker,proto3" json:"outPoker,omitempty"`
	// 所有牌变动了的玩家的id,用于发牌时客户端确定要发给谁
	AllChangeId []string `protobuf:"bytes,7,rep,name=allChangeId,proto3" json:"allChangeId,omitempty"`
	// 牛牛手牌的牌型
	CompareBullPokerType CompareBullPokerType `protobuf:"varint,8,opt,name=compareBullPokerType,proto3,enum=CompareBullPokerType" json:"compareBullPokerType,omitempty"`
	// 牛牛手牌的倍数
	CompareBullPokerOdds uint32 `protobuf:"varint,9,opt,name=compareBullPokerOdds,proto3" json:"compareBullPokerOdds,omitempty"`
	// 疯狂牛牛手牌的牌型
	CrazyBullPokerType CrazyBullPokerType `protobuf:"varint,10,opt,name=crazyBullPokerType,proto3,enum=CrazyBullPokerType" json:"crazyBullPokerType,omitempty"`
	// 疯狂牛牛手牌的倍数
	CrazyBullPokerOdds uint32 `protobuf:"varint,11,opt,name=crazyBullPokerOdds,proto3" json:"crazyBullPokerOdds,omitempty"`
	// 双连是否可以炸牌
	DoubleLinkedIsBoom bool `protobuf:"varint,12,opt,name=DoubleLinkedIsBoom,proto3" json:"DoubleLinkedIsBoom,omitempty"`
	// 双连手牌的牌型
	DoubleLinkedPokerType DoubleLinkedPokerType `protobuf:"varint,13,opt,name=doubleLinkedPokerType,proto3,enum=DoubleLinkedPokerType" json:"doubleLinkedPokerType,omitempty"`
	// 双连手牌的倍数
	DoubleLinkedPokerOdds uint32 `protobuf:"varint,14,opt,name=doubleLinkedPokerOdds,proto3" json:"doubleLinkedPokerOdds,omitempty"`
	// 双连是否开牌
	IsOpenCard bool `protobuf:"varint,15,opt,name=isOpenCard,proto3" json:"isOpenCard,omitempty"`
	// 是否是捞牌发牌
	IsLaoPoker bool `protobuf:"varint,16,opt,name=isLaoPoker,proto3" json:"isLaoPoker,omitempty"`
	// 双连手牌点数
	DoubleLinkedPokerNum uint32 `protobuf:"varint,17,opt,name=doubleLinkedPokerNum,proto3" json:"doubleLinkedPokerNum,omitempty"`
	// 双连手牌类型是双连或者三连
	DoubleLinkedSlOrSl uint32 `protobuf:"varint,18,opt,name=doubleLinkedSlOrSl,proto3" json:"doubleLinkedSlOrSl,omitempty"`
	// 双连是否展示双连或者三连的牌型
	IsSlOrSl             bool     `protobuf:"varint,19,opt,name=isSlOrSl,proto3" json:"isSlOrSl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPlayerCardChange) Reset()         { *m = PushPlayerCardChange{} }
func (m *PushPlayerCardChange) String() string { return proto.CompactTextString(m) }
func (*PushPlayerCardChange) ProtoMessage()    {}
func (*PushPlayerCardChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{117}
}

func (m *PushPlayerCardChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPlayerCardChange.Unmarshal(m, b)
}
func (m *PushPlayerCardChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPlayerCardChange.Marshal(b, m, deterministic)
}
func (m *PushPlayerCardChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPlayerCardChange.Merge(m, src)
}
func (m *PushPlayerCardChange) XXX_Size() int {
	return xxx_messageInfo_PushPlayerCardChange.Size(m)
}
func (m *PushPlayerCardChange) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPlayerCardChange.DiscardUnknown(m)
}

var xxx_messageInfo_PushPlayerCardChange proto.InternalMessageInfo

func (m *PushPlayerCardChange) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushPlayerCardChange) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PushPlayerCardChange) GetBankerIndex() int32 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

func (m *PushPlayerCardChange) GetHandPoker() []*Poker {
	if m != nil {
		return m.HandPoker
	}
	return nil
}

func (m *PushPlayerCardChange) GetInPoker() []*Poker {
	if m != nil {
		return m.InPoker
	}
	return nil
}

func (m *PushPlayerCardChange) GetOutPoker() []*Poker {
	if m != nil {
		return m.OutPoker
	}
	return nil
}

func (m *PushPlayerCardChange) GetAllChangeId() []string {
	if m != nil {
		return m.AllChangeId
	}
	return nil
}

func (m *PushPlayerCardChange) GetCompareBullPokerType() CompareBullPokerType {
	if m != nil {
		return m.CompareBullPokerType
	}
	return CompareBullPokerType_CompareBullCardType_None
}

func (m *PushPlayerCardChange) GetCompareBullPokerOdds() uint32 {
	if m != nil {
		return m.CompareBullPokerOdds
	}
	return 0
}

func (m *PushPlayerCardChange) GetCrazyBullPokerType() CrazyBullPokerType {
	if m != nil {
		return m.CrazyBullPokerType
	}
	return CrazyBullPokerType_CrazyBullCardType_None
}

func (m *PushPlayerCardChange) GetCrazyBullPokerOdds() uint32 {
	if m != nil {
		return m.CrazyBullPokerOdds
	}
	return 0
}

func (m *PushPlayerCardChange) GetDoubleLinkedIsBoom() bool {
	if m != nil {
		return m.DoubleLinkedIsBoom
	}
	return false
}

func (m *PushPlayerCardChange) GetDoubleLinkedPokerType() DoubleLinkedPokerType {
	if m != nil {
		return m.DoubleLinkedPokerType
	}
	return DoubleLinkedPokerType_DoubleLinkedCardType_None
}

func (m *PushPlayerCardChange) GetDoubleLinkedPokerOdds() uint32 {
	if m != nil {
		return m.DoubleLinkedPokerOdds
	}
	return 0
}

func (m *PushPlayerCardChange) GetIsOpenCard() bool {
	if m != nil {
		return m.IsOpenCard
	}
	return false
}

func (m *PushPlayerCardChange) GetIsLaoPoker() bool {
	if m != nil {
		return m.IsLaoPoker
	}
	return false
}

func (m *PushPlayerCardChange) GetDoubleLinkedPokerNum() uint32 {
	if m != nil {
		return m.DoubleLinkedPokerNum
	}
	return 0
}

func (m *PushPlayerCardChange) GetDoubleLinkedSlOrSl() uint32 {
	if m != nil {
		return m.DoubleLinkedSlOrSl
	}
	return 0
}

func (m *PushPlayerCardChange) GetIsSlOrSl() bool {
	if m != nil {
		return m.IsSlOrSl
	}
	return false
}

// 双连庄家是否是炸弹
type PushIsDoubleLinkedBoom struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Isboom               bool     `protobuf:"varint,3,opt,name=isboom,proto3" json:"isboom,omitempty"`
	EndTime              int64    `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	PokerNum             int64    `protobuf:"varint,5,opt,name=pokerNum,proto3" json:"pokerNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushIsDoubleLinkedBoom) Reset()         { *m = PushIsDoubleLinkedBoom{} }
func (m *PushIsDoubleLinkedBoom) String() string { return proto.CompactTextString(m) }
func (*PushIsDoubleLinkedBoom) ProtoMessage()    {}
func (*PushIsDoubleLinkedBoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{118}
}

func (m *PushIsDoubleLinkedBoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushIsDoubleLinkedBoom.Unmarshal(m, b)
}
func (m *PushIsDoubleLinkedBoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushIsDoubleLinkedBoom.Marshal(b, m, deterministic)
}
func (m *PushIsDoubleLinkedBoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushIsDoubleLinkedBoom.Merge(m, src)
}
func (m *PushIsDoubleLinkedBoom) XXX_Size() int {
	return xxx_messageInfo_PushIsDoubleLinkedBoom.Size(m)
}
func (m *PushIsDoubleLinkedBoom) XXX_DiscardUnknown() {
	xxx_messageInfo_PushIsDoubleLinkedBoom.DiscardUnknown(m)
}

var xxx_messageInfo_PushIsDoubleLinkedBoom proto.InternalMessageInfo

func (m *PushIsDoubleLinkedBoom) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushIsDoubleLinkedBoom) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PushIsDoubleLinkedBoom) GetIsboom() bool {
	if m != nil {
		return m.Isboom
	}
	return false
}

func (m *PushIsDoubleLinkedBoom) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *PushIsDoubleLinkedBoom) GetPokerNum() int64 {
	if m != nil {
		return m.PokerNum
	}
	return 0
}

// 双连玩家是否是炸弹
type PushIsDoubleLinkedBoomPlayer struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Isboom               bool     `protobuf:"varint,3,opt,name=isboom,proto3" json:"isboom,omitempty"`
	PokerNum             int64    `protobuf:"varint,4,opt,name=pokerNum,proto3" json:"pokerNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushIsDoubleLinkedBoomPlayer) Reset()         { *m = PushIsDoubleLinkedBoomPlayer{} }
func (m *PushIsDoubleLinkedBoomPlayer) String() string { return proto.CompactTextString(m) }
func (*PushIsDoubleLinkedBoomPlayer) ProtoMessage()    {}
func (*PushIsDoubleLinkedBoomPlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{119}
}

func (m *PushIsDoubleLinkedBoomPlayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushIsDoubleLinkedBoomPlayer.Unmarshal(m, b)
}
func (m *PushIsDoubleLinkedBoomPlayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushIsDoubleLinkedBoomPlayer.Marshal(b, m, deterministic)
}
func (m *PushIsDoubleLinkedBoomPlayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushIsDoubleLinkedBoomPlayer.Merge(m, src)
}
func (m *PushIsDoubleLinkedBoomPlayer) XXX_Size() int {
	return xxx_messageInfo_PushIsDoubleLinkedBoomPlayer.Size(m)
}
func (m *PushIsDoubleLinkedBoomPlayer) XXX_DiscardUnknown() {
	xxx_messageInfo_PushIsDoubleLinkedBoomPlayer.DiscardUnknown(m)
}

var xxx_messageInfo_PushIsDoubleLinkedBoomPlayer proto.InternalMessageInfo

func (m *PushIsDoubleLinkedBoomPlayer) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushIsDoubleLinkedBoomPlayer) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PushIsDoubleLinkedBoomPlayer) GetIsboom() bool {
	if m != nil {
		return m.Isboom
	}
	return false
}

func (m *PushIsDoubleLinkedBoomPlayer) GetPokerNum() int64 {
	if m != nil {
		return m.PokerNum
	}
	return 0
}

// 双连闲家点击炸牌
type PushPlayerBoom struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Zuuid                string   `protobuf:"bytes,3,opt,name=zuuid,proto3" json:"zuuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPlayerBoom) Reset()         { *m = PushPlayerBoom{} }
func (m *PushPlayerBoom) String() string { return proto.CompactTextString(m) }
func (*PushPlayerBoom) ProtoMessage()    {}
func (*PushPlayerBoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{120}
}

func (m *PushPlayerBoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPlayerBoom.Unmarshal(m, b)
}
func (m *PushPlayerBoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPlayerBoom.Marshal(b, m, deterministic)
}
func (m *PushPlayerBoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPlayerBoom.Merge(m, src)
}
func (m *PushPlayerBoom) XXX_Size() int {
	return xxx_messageInfo_PushPlayerBoom.Size(m)
}
func (m *PushPlayerBoom) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPlayerBoom.DiscardUnknown(m)
}

var xxx_messageInfo_PushPlayerBoom proto.InternalMessageInfo

func (m *PushPlayerBoom) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushPlayerBoom) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PushPlayerBoom) GetZuuid() string {
	if m != nil {
		return m.Zuuid
	}
	return ""
}

// 双连闲家没炸弹集合
type PushIsNotBoomPlayer struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Isboom               bool     `protobuf:"varint,3,opt,name=isboom,proto3" json:"isboom,omitempty"`
	Uuids                []string `protobuf:"bytes,4,rep,name=uuids,proto3" json:"uuids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushIsNotBoomPlayer) Reset()         { *m = PushIsNotBoomPlayer{} }
func (m *PushIsNotBoomPlayer) String() string { return proto.CompactTextString(m) }
func (*PushIsNotBoomPlayer) ProtoMessage()    {}
func (*PushIsNotBoomPlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{121}
}

func (m *PushIsNotBoomPlayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushIsNotBoomPlayer.Unmarshal(m, b)
}
func (m *PushIsNotBoomPlayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushIsNotBoomPlayer.Marshal(b, m, deterministic)
}
func (m *PushIsNotBoomPlayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushIsNotBoomPlayer.Merge(m, src)
}
func (m *PushIsNotBoomPlayer) XXX_Size() int {
	return xxx_messageInfo_PushIsNotBoomPlayer.Size(m)
}
func (m *PushIsNotBoomPlayer) XXX_DiscardUnknown() {
	xxx_messageInfo_PushIsNotBoomPlayer.DiscardUnknown(m)
}

var xxx_messageInfo_PushIsNotBoomPlayer proto.InternalMessageInfo

func (m *PushIsNotBoomPlayer) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushIsNotBoomPlayer) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PushIsNotBoomPlayer) GetIsboom() bool {
	if m != nil {
		return m.Isboom
	}
	return false
}

func (m *PushIsNotBoomPlayer) GetUuids() []string {
	if m != nil {
		return m.Uuids
	}
	return nil
}

// 向某个玩家发牌,即摸牌
type PushPlayerGangHuaMahjongSendCard struct {
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 当前操作的玩家的索引
	DoIndex int32 `protobuf:"varint,2,opt,name=doIndex,proto3" json:"doIndex,omitempty"`
	//牌堆剩余长度
	RemainCardNum int32 `protobuf:"varint,5,opt,name=RemainCardNum,proto3" json:"RemainCardNum,omitempty"`
	// 玩家获得的牌
	NewMahjong           *Mahjong `protobuf:"bytes,6,opt,name=newMahjong,proto3" json:"newMahjong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPlayerGangHuaMahjongSendCard) Reset()         { *m = PushPlayerGangHuaMahjongSendCard{} }
func (m *PushPlayerGangHuaMahjongSendCard) String() string { return proto.CompactTextString(m) }
func (*PushPlayerGangHuaMahjongSendCard) ProtoMessage()    {}
func (*PushPlayerGangHuaMahjongSendCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{122}
}

func (m *PushPlayerGangHuaMahjongSendCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPlayerGangHuaMahjongSendCard.Unmarshal(m, b)
}
func (m *PushPlayerGangHuaMahjongSendCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPlayerGangHuaMahjongSendCard.Marshal(b, m, deterministic)
}
func (m *PushPlayerGangHuaMahjongSendCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPlayerGangHuaMahjongSendCard.Merge(m, src)
}
func (m *PushPlayerGangHuaMahjongSendCard) XXX_Size() int {
	return xxx_messageInfo_PushPlayerGangHuaMahjongSendCard.Size(m)
}
func (m *PushPlayerGangHuaMahjongSendCard) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPlayerGangHuaMahjongSendCard.DiscardUnknown(m)
}

var xxx_messageInfo_PushPlayerGangHuaMahjongSendCard proto.InternalMessageInfo

func (m *PushPlayerGangHuaMahjongSendCard) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushPlayerGangHuaMahjongSendCard) GetDoIndex() int32 {
	if m != nil {
		return m.DoIndex
	}
	return 0
}

func (m *PushPlayerGangHuaMahjongSendCard) GetRemainCardNum() int32 {
	if m != nil {
		return m.RemainCardNum
	}
	return 0
}

func (m *PushPlayerGangHuaMahjongSendCard) GetNewMahjong() *Mahjong {
	if m != nil {
		return m.NewMahjong
	}
	return nil
}

// 玩家杠花麻将牌改变时的推送
type PushPlayerGangHuaMahjongCardChange struct {
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 手牌变动的玩家的id
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	// 庄家索引
	BankerIndex int32 `protobuf:"varint,3,opt,name=bankerIndex,proto3" json:"bankerIndex,omitempty"`
	// 玩家手牌,手牌中不包含刚获得的牌
	HandMahjong []*Mahjong `protobuf:"bytes,4,rep,name=handMahjong,proto3" json:"handMahjong,omitempty"`
	// 玩家获得的牌
	InMahjong *Mahjong `protobuf:"bytes,5,opt,name=inMahjong,proto3" json:"inMahjong,omitempty"`
	//骰子
	Dice []int32 `protobuf:"varint,8,rep,packed,name=Dice,proto3" json:"Dice,omitempty"`
	//牌堆剩余长度
	RemainCardNum int32 `protobuf:"varint,9,opt,name=RemainCardNum,proto3" json:"RemainCardNum,omitempty"`
	//明牌信息
	OpenCardS []*OpenCard `protobuf:"bytes,10,rep,name=OpenCardS,proto3" json:"OpenCardS,omitempty"`
	// 玩家手牌剩余数量
	RemainMahjong int32 `protobuf:"varint,13,opt,name=remainMahjong,proto3" json:"remainMahjong,omitempty"`
	// 等待时长
	EndTime              int64    `protobuf:"varint,14,opt,name=endTime,proto3" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPlayerGangHuaMahjongCardChange) Reset()         { *m = PushPlayerGangHuaMahjongCardChange{} }
func (m *PushPlayerGangHuaMahjongCardChange) String() string { return proto.CompactTextString(m) }
func (*PushPlayerGangHuaMahjongCardChange) ProtoMessage()    {}
func (*PushPlayerGangHuaMahjongCardChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{123}
}

func (m *PushPlayerGangHuaMahjongCardChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPlayerGangHuaMahjongCardChange.Unmarshal(m, b)
}
func (m *PushPlayerGangHuaMahjongCardChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPlayerGangHuaMahjongCardChange.Marshal(b, m, deterministic)
}
func (m *PushPlayerGangHuaMahjongCardChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPlayerGangHuaMahjongCardChange.Merge(m, src)
}
func (m *PushPlayerGangHuaMahjongCardChange) XXX_Size() int {
	return xxx_messageInfo_PushPlayerGangHuaMahjongCardChange.Size(m)
}
func (m *PushPlayerGangHuaMahjongCardChange) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPlayerGangHuaMahjongCardChange.DiscardUnknown(m)
}

var xxx_messageInfo_PushPlayerGangHuaMahjongCardChange proto.InternalMessageInfo

func (m *PushPlayerGangHuaMahjongCardChange) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushPlayerGangHuaMahjongCardChange) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PushPlayerGangHuaMahjongCardChange) GetBankerIndex() int32 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

func (m *PushPlayerGangHuaMahjongCardChange) GetHandMahjong() []*Mahjong {
	if m != nil {
		return m.HandMahjong
	}
	return nil
}

func (m *PushPlayerGangHuaMahjongCardChange) GetInMahjong() *Mahjong {
	if m != nil {
		return m.InMahjong
	}
	return nil
}

func (m *PushPlayerGangHuaMahjongCardChange) GetDice() []int32 {
	if m != nil {
		return m.Dice
	}
	return nil
}

func (m *PushPlayerGangHuaMahjongCardChange) GetRemainCardNum() int32 {
	if m != nil {
		return m.RemainCardNum
	}
	return 0
}

func (m *PushPlayerGangHuaMahjongCardChange) GetOpenCardS() []*OpenCard {
	if m != nil {
		return m.OpenCardS
	}
	return nil
}

func (m *PushPlayerGangHuaMahjongCardChange) GetRemainMahjong() int32 {
	if m != nil {
		return m.RemainMahjong
	}
	return 0
}

func (m *PushPlayerGangHuaMahjongCardChange) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

// 碰杠胡的可操作推送
type PushGangHuaMahjongOperate struct {
	// 操作类型
	OperateType []GangHuaMahjongOperateType `protobuf:"varint,2,rep,packed,name=OperateType,proto3,enum=GangHuaMahjongOperateType" json:"OperateType,omitempty"`
	// 等待时长,为0时 表示不用等待
	EndTime int64 `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	// 杠牌时, operateType[i] == GangHuaMahjongOperateType_Kong 下面这个值才有效
	KongType GangHuaMahjongKongType `protobuf:"varint,3,opt,name=kongType,proto3,enum=GangHuaMahjongKongType" json:"kongType,omitempty"`
	// 可以碰牌或者直杠时, operateType[i] == GangHuaMahjongOperateType_Kong && kongType == GangHuaMahjongKongType_Zhi
	// 下面这个值才有效, 表示别人出的牌
	AnotherMahjong *Mahjong `protobuf:"bytes,5,opt,name=anotherMahjong,proto3" json:"anotherMahjong,omitempty"`
	// 碰杠胡的可操作者索引
	OptIndex int32 `protobuf:"varint,6,opt,name=optIndex,proto3" json:"optIndex,omitempty"`
	// 是否可胡
	CanWin bool `protobuf:"varint,8,opt,name=canWin,proto3" json:"canWin,omitempty"`
	// 有多个玩家可以碰杠胡时, 若某个用户操作了,就 operated = true
	// 正在碰杠胡的玩家断线重连时,若 operated = true, 表示操作过了
	// 若 operated = false 表示没操作过,客户端需要加载"碰杠胡"提示
	Operated bool `protobuf:"varint,9,opt,name=operated,proto3" json:"operated,omitempty"`
	// 若多个用户可以碰杠胡,排在后面的玩家选择时,就保存在这里
	SelectedOpt          GangHuaMahjongOperateType `protobuf:"varint,10,opt,name=selectedOpt,proto3,enum=GangHuaMahjongOperateType" json:"selectedOpt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *PushGangHuaMahjongOperate) Reset()         { *m = PushGangHuaMahjongOperate{} }
func (m *PushGangHuaMahjongOperate) String() string { return proto.CompactTextString(m) }
func (*PushGangHuaMahjongOperate) ProtoMessage()    {}
func (*PushGangHuaMahjongOperate) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{124}
}

func (m *PushGangHuaMahjongOperate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushGangHuaMahjongOperate.Unmarshal(m, b)
}
func (m *PushGangHuaMahjongOperate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushGangHuaMahjongOperate.Marshal(b, m, deterministic)
}
func (m *PushGangHuaMahjongOperate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushGangHuaMahjongOperate.Merge(m, src)
}
func (m *PushGangHuaMahjongOperate) XXX_Size() int {
	return xxx_messageInfo_PushGangHuaMahjongOperate.Size(m)
}
func (m *PushGangHuaMahjongOperate) XXX_DiscardUnknown() {
	xxx_messageInfo_PushGangHuaMahjongOperate.DiscardUnknown(m)
}

var xxx_messageInfo_PushGangHuaMahjongOperate proto.InternalMessageInfo

func (m *PushGangHuaMahjongOperate) GetOperateType() []GangHuaMahjongOperateType {
	if m != nil {
		return m.OperateType
	}
	return nil
}

func (m *PushGangHuaMahjongOperate) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *PushGangHuaMahjongOperate) GetKongType() GangHuaMahjongKongType {
	if m != nil {
		return m.KongType
	}
	return GangHuaMahjongKongType_GangHuaMahjongKongType_None
}

func (m *PushGangHuaMahjongOperate) GetAnotherMahjong() *Mahjong {
	if m != nil {
		return m.AnotherMahjong
	}
	return nil
}

func (m *PushGangHuaMahjongOperate) GetOptIndex() int32 {
	if m != nil {
		return m.OptIndex
	}
	return 0
}

func (m *PushGangHuaMahjongOperate) GetCanWin() bool {
	if m != nil {
		return m.CanWin
	}
	return false
}

func (m *PushGangHuaMahjongOperate) GetOperated() bool {
	if m != nil {
		return m.Operated
	}
	return false
}

func (m *PushGangHuaMahjongOperate) GetSelectedOpt() GangHuaMahjongOperateType {
	if m != nil {
		return m.SelectedOpt
	}
	return GangHuaMahjongOperateType_GangHuaMahjongOperateType_None
}

// 当有玩家碰杠胡时, 服务端通知所有玩家
type PushGangHuaMahjongOperates struct {
	// 房间id
	RoomId string                       `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Optes  []*PushGangHuaMahjongOperate `protobuf:"bytes,2,rep,name=optes,proto3" json:"optes,omitempty"`
	// 多个用户可以碰杠胡时,可以操作的座位位序
	MultiOptIndex []int32 `protobuf:"varint,3,rep,packed,name=multiOptIndex,proto3" json:"multiOptIndex,omitempty"`
	// 其他玩家可以碰杠胡时, 当前的操作者位序
	CurIdx               int32    `protobuf:"varint,4,opt,name=curIdx,proto3" json:"curIdx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushGangHuaMahjongOperates) Reset()         { *m = PushGangHuaMahjongOperates{} }
func (m *PushGangHuaMahjongOperates) String() string { return proto.CompactTextString(m) }
func (*PushGangHuaMahjongOperates) ProtoMessage()    {}
func (*PushGangHuaMahjongOperates) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{125}
}

func (m *PushGangHuaMahjongOperates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushGangHuaMahjongOperates.Unmarshal(m, b)
}
func (m *PushGangHuaMahjongOperates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushGangHuaMahjongOperates.Marshal(b, m, deterministic)
}
func (m *PushGangHuaMahjongOperates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushGangHuaMahjongOperates.Merge(m, src)
}
func (m *PushGangHuaMahjongOperates) XXX_Size() int {
	return xxx_messageInfo_PushGangHuaMahjongOperates.Size(m)
}
func (m *PushGangHuaMahjongOperates) XXX_DiscardUnknown() {
	xxx_messageInfo_PushGangHuaMahjongOperates.DiscardUnknown(m)
}

var xxx_messageInfo_PushGangHuaMahjongOperates proto.InternalMessageInfo

func (m *PushGangHuaMahjongOperates) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushGangHuaMahjongOperates) GetOptes() []*PushGangHuaMahjongOperate {
	if m != nil {
		return m.Optes
	}
	return nil
}

func (m *PushGangHuaMahjongOperates) GetMultiOptIndex() []int32 {
	if m != nil {
		return m.MultiOptIndex
	}
	return nil
}

func (m *PushGangHuaMahjongOperates) GetCurIdx() int32 {
	if m != nil {
		return m.CurIdx
	}
	return 0
}

// 碰杠胡的操作完成推送
type PushGangHuaMahjongOperateOver struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 碰杠胡的玩家的id
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	// 被碰杠胡的玩家的id
	ToUserId string `protobuf:"bytes,3,opt,name=toUserId,proto3" json:"toUserId,omitempty"`
	// 操作类型
	OperateType          GangHuaMahjongOperateType `protobuf:"varint,4,opt,name=OperateType,proto3,enum=GangHuaMahjongOperateType" json:"OperateType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *PushGangHuaMahjongOperateOver) Reset()         { *m = PushGangHuaMahjongOperateOver{} }
func (m *PushGangHuaMahjongOperateOver) String() string { return proto.CompactTextString(m) }
func (*PushGangHuaMahjongOperateOver) ProtoMessage()    {}
func (*PushGangHuaMahjongOperateOver) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{126}
}

func (m *PushGangHuaMahjongOperateOver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushGangHuaMahjongOperateOver.Unmarshal(m, b)
}
func (m *PushGangHuaMahjongOperateOver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushGangHuaMahjongOperateOver.Marshal(b, m, deterministic)
}
func (m *PushGangHuaMahjongOperateOver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushGangHuaMahjongOperateOver.Merge(m, src)
}
func (m *PushGangHuaMahjongOperateOver) XXX_Size() int {
	return xxx_messageInfo_PushGangHuaMahjongOperateOver.Size(m)
}
func (m *PushGangHuaMahjongOperateOver) XXX_DiscardUnknown() {
	xxx_messageInfo_PushGangHuaMahjongOperateOver.DiscardUnknown(m)
}

var xxx_messageInfo_PushGangHuaMahjongOperateOver proto.InternalMessageInfo

func (m *PushGangHuaMahjongOperateOver) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushGangHuaMahjongOperateOver) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PushGangHuaMahjongOperateOver) GetToUserId() string {
	if m != nil {
		return m.ToUserId
	}
	return ""
}

func (m *PushGangHuaMahjongOperateOver) GetOperateType() GangHuaMahjongOperateType {
	if m != nil {
		return m.OperateType
	}
	return GangHuaMahjongOperateType_GangHuaMahjongOperateType_None
}

// 杠牌成功后,服务端通知玩家摸一张明牌
type PushGangHuaMahjongReqSelectOpenCard struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 操作者索引
	DoIndex              int32    `protobuf:"varint,2,opt,name=doIndex,proto3" json:"doIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushGangHuaMahjongReqSelectOpenCard) Reset()         { *m = PushGangHuaMahjongReqSelectOpenCard{} }
func (m *PushGangHuaMahjongReqSelectOpenCard) String() string { return proto.CompactTextString(m) }
func (*PushGangHuaMahjongReqSelectOpenCard) ProtoMessage()    {}
func (*PushGangHuaMahjongReqSelectOpenCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{127}
}

func (m *PushGangHuaMahjongReqSelectOpenCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushGangHuaMahjongReqSelectOpenCard.Unmarshal(m, b)
}
func (m *PushGangHuaMahjongReqSelectOpenCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushGangHuaMahjongReqSelectOpenCard.Marshal(b, m, deterministic)
}
func (m *PushGangHuaMahjongReqSelectOpenCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushGangHuaMahjongReqSelectOpenCard.Merge(m, src)
}
func (m *PushGangHuaMahjongReqSelectOpenCard) XXX_Size() int {
	return xxx_messageInfo_PushGangHuaMahjongReqSelectOpenCard.Size(m)
}
func (m *PushGangHuaMahjongReqSelectOpenCard) XXX_DiscardUnknown() {
	xxx_messageInfo_PushGangHuaMahjongReqSelectOpenCard.DiscardUnknown(m)
}

var xxx_messageInfo_PushGangHuaMahjongReqSelectOpenCard proto.InternalMessageInfo

func (m *PushGangHuaMahjongReqSelectOpenCard) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushGangHuaMahjongReqSelectOpenCard) GetDoIndex() int32 {
	if m != nil {
		return m.DoIndex
	}
	return 0
}

// 单纯的推送明牌区
type PushGangHuaMahjongOpenCards struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	//明牌信息
	OpenCardS            []*OpenCard `protobuf:"bytes,2,rep,name=OpenCardS,proto3" json:"OpenCardS,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PushGangHuaMahjongOpenCards) Reset()         { *m = PushGangHuaMahjongOpenCards{} }
func (m *PushGangHuaMahjongOpenCards) String() string { return proto.CompactTextString(m) }
func (*PushGangHuaMahjongOpenCards) ProtoMessage()    {}
func (*PushGangHuaMahjongOpenCards) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{128}
}

func (m *PushGangHuaMahjongOpenCards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushGangHuaMahjongOpenCards.Unmarshal(m, b)
}
func (m *PushGangHuaMahjongOpenCards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushGangHuaMahjongOpenCards.Marshal(b, m, deterministic)
}
func (m *PushGangHuaMahjongOpenCards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushGangHuaMahjongOpenCards.Merge(m, src)
}
func (m *PushGangHuaMahjongOpenCards) XXX_Size() int {
	return xxx_messageInfo_PushGangHuaMahjongOpenCards.Size(m)
}
func (m *PushGangHuaMahjongOpenCards) XXX_DiscardUnknown() {
	xxx_messageInfo_PushGangHuaMahjongOpenCards.DiscardUnknown(m)
}

var xxx_messageInfo_PushGangHuaMahjongOpenCards proto.InternalMessageInfo

func (m *PushGangHuaMahjongOpenCards) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushGangHuaMahjongOpenCards) GetOpenCardS() []*OpenCard {
	if m != nil {
		return m.OpenCardS
	}
	return nil
}

// 推送准备阶段的倒计时
type PushDoTimeInReady struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 准备阶段的倒计时
	DoTime               int64    `protobuf:"varint,2,opt,name=doTime,proto3" json:"doTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushDoTimeInReady) Reset()         { *m = PushDoTimeInReady{} }
func (m *PushDoTimeInReady) String() string { return proto.CompactTextString(m) }
func (*PushDoTimeInReady) ProtoMessage()    {}
func (*PushDoTimeInReady) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{129}
}

func (m *PushDoTimeInReady) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDoTimeInReady.Unmarshal(m, b)
}
func (m *PushDoTimeInReady) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDoTimeInReady.Marshal(b, m, deterministic)
}
func (m *PushDoTimeInReady) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDoTimeInReady.Merge(m, src)
}
func (m *PushDoTimeInReady) XXX_Size() int {
	return xxx_messageInfo_PushDoTimeInReady.Size(m)
}
func (m *PushDoTimeInReady) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDoTimeInReady.DiscardUnknown(m)
}

var xxx_messageInfo_PushDoTimeInReady proto.InternalMessageInfo

func (m *PushDoTimeInReady) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushDoTimeInReady) GetDoTime() int64 {
	if m != nil {
		return m.DoTime
	}
	return 0
}

type OpenCard struct {
	OpenLocal            int32    `protobuf:"varint,1,opt,name=OpenLocal,proto3" json:"OpenLocal,omitempty"`
	Card                 *Mahjong `protobuf:"bytes,2,opt,name=Card,proto3" json:"Card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenCard) Reset()         { *m = OpenCard{} }
func (m *OpenCard) String() string { return proto.CompactTextString(m) }
func (*OpenCard) ProtoMessage()    {}
func (*OpenCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{130}
}

func (m *OpenCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenCard.Unmarshal(m, b)
}
func (m *OpenCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenCard.Marshal(b, m, deterministic)
}
func (m *OpenCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenCard.Merge(m, src)
}
func (m *OpenCard) XXX_Size() int {
	return xxx_messageInfo_OpenCard.Size(m)
}
func (m *OpenCard) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenCard.DiscardUnknown(m)
}

var xxx_messageInfo_OpenCard proto.InternalMessageInfo

func (m *OpenCard) GetOpenLocal() int32 {
	if m != nil {
		return m.OpenLocal
	}
	return 0
}

func (m *OpenCard) GetCard() *Mahjong {
	if m != nil {
		return m.Card
	}
	return nil
}

// 房间结算的推送
type PushRoomSettleInfo struct {
	RoomId     string            `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	PlayerInfo []*RoomPlayerInfo `protobuf:"bytes,2,rep,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	// true 杠花麻将流局
	Deuce bool `protobuf:"varint,3,opt,name=deuce,proto3" json:"deuce,omitempty"`
	// 百人场庄家输赢
	BankerWinOrLose      int64    `protobuf:"varint,4,opt,name=BankerWinOrLose,proto3" json:"BankerWinOrLose,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRoomSettleInfo) Reset()         { *m = PushRoomSettleInfo{} }
func (m *PushRoomSettleInfo) String() string { return proto.CompactTextString(m) }
func (*PushRoomSettleInfo) ProtoMessage()    {}
func (*PushRoomSettleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{131}
}

func (m *PushRoomSettleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRoomSettleInfo.Unmarshal(m, b)
}
func (m *PushRoomSettleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRoomSettleInfo.Marshal(b, m, deterministic)
}
func (m *PushRoomSettleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRoomSettleInfo.Merge(m, src)
}
func (m *PushRoomSettleInfo) XXX_Size() int {
	return xxx_messageInfo_PushRoomSettleInfo.Size(m)
}
func (m *PushRoomSettleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRoomSettleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PushRoomSettleInfo proto.InternalMessageInfo

func (m *PushRoomSettleInfo) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushRoomSettleInfo) GetPlayerInfo() []*RoomPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *PushRoomSettleInfo) GetDeuce() bool {
	if m != nil {
		return m.Deuce
	}
	return false
}

func (m *PushRoomSettleInfo) GetBankerWinOrLose() int64 {
	if m != nil {
		return m.BankerWinOrLose
	}
	return 0
}

// 房间大结算的推送
type PushRoomBigSettleInfo struct {
	RoomId               string        `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	AllSettleInfo        []*SettleInfo `protobuf:"bytes,2,rep,name=allSettleInfo,proto3" json:"allSettleInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PushRoomBigSettleInfo) Reset()         { *m = PushRoomBigSettleInfo{} }
func (m *PushRoomBigSettleInfo) String() string { return proto.CompactTextString(m) }
func (*PushRoomBigSettleInfo) ProtoMessage()    {}
func (*PushRoomBigSettleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{132}
}

func (m *PushRoomBigSettleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRoomBigSettleInfo.Unmarshal(m, b)
}
func (m *PushRoomBigSettleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRoomBigSettleInfo.Marshal(b, m, deterministic)
}
func (m *PushRoomBigSettleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRoomBigSettleInfo.Merge(m, src)
}
func (m *PushRoomBigSettleInfo) XXX_Size() int {
	return xxx_messageInfo_PushRoomBigSettleInfo.Size(m)
}
func (m *PushRoomBigSettleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRoomBigSettleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PushRoomBigSettleInfo proto.InternalMessageInfo

func (m *PushRoomBigSettleInfo) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushRoomBigSettleInfo) GetAllSettleInfo() []*SettleInfo {
	if m != nil {
		return m.AllSettleInfo
	}
	return nil
}

// 玩家需要看牌的推送
type PushPlayerOpenCard struct {
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 玩家手牌,要看牌的手牌
	HandPoker []*Poker `protobuf:"bytes,2,rep,name=handPoker,proto3" json:"handPoker,omitempty"`
	// 操作到期时间
	EndTime              int64    `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPlayerOpenCard) Reset()         { *m = PushPlayerOpenCard{} }
func (m *PushPlayerOpenCard) String() string { return proto.CompactTextString(m) }
func (*PushPlayerOpenCard) ProtoMessage()    {}
func (*PushPlayerOpenCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{133}
}

func (m *PushPlayerOpenCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPlayerOpenCard.Unmarshal(m, b)
}
func (m *PushPlayerOpenCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPlayerOpenCard.Marshal(b, m, deterministic)
}
func (m *PushPlayerOpenCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPlayerOpenCard.Merge(m, src)
}
func (m *PushPlayerOpenCard) XXX_Size() int {
	return xxx_messageInfo_PushPlayerOpenCard.Size(m)
}
func (m *PushPlayerOpenCard) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPlayerOpenCard.DiscardUnknown(m)
}

var xxx_messageInfo_PushPlayerOpenCard proto.InternalMessageInfo

func (m *PushPlayerOpenCard) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushPlayerOpenCard) GetHandPoker() []*Poker {
	if m != nil {
		return m.HandPoker
	}
	return nil
}

func (m *PushPlayerOpenCard) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

// 房间倒计时改变的推送
type PushRoomDoTimeChange struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	EndTime              int64    `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRoomDoTimeChange) Reset()         { *m = PushRoomDoTimeChange{} }
func (m *PushRoomDoTimeChange) String() string { return proto.CompactTextString(m) }
func (*PushRoomDoTimeChange) ProtoMessage()    {}
func (*PushRoomDoTimeChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{134}
}

func (m *PushRoomDoTimeChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRoomDoTimeChange.Unmarshal(m, b)
}
func (m *PushRoomDoTimeChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRoomDoTimeChange.Marshal(b, m, deterministic)
}
func (m *PushRoomDoTimeChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRoomDoTimeChange.Merge(m, src)
}
func (m *PushRoomDoTimeChange) XXX_Size() int {
	return xxx_messageInfo_PushRoomDoTimeChange.Size(m)
}
func (m *PushRoomDoTimeChange) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRoomDoTimeChange.DiscardUnknown(m)
}

var xxx_messageInfo_PushRoomDoTimeChange proto.InternalMessageInfo

func (m *PushRoomDoTimeChange) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushRoomDoTimeChange) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type GetShortIdRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetShortIdRequest) Reset()         { *m = GetShortIdRequest{} }
func (m *GetShortIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetShortIdRequest) ProtoMessage()    {}
func (*GetShortIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{135}
}

func (m *GetShortIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShortIdRequest.Unmarshal(m, b)
}
func (m *GetShortIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShortIdRequest.Marshal(b, m, deterministic)
}
func (m *GetShortIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShortIdRequest.Merge(m, src)
}
func (m *GetShortIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetShortIdRequest.Size(m)
}
func (m *GetShortIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShortIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetShortIdRequest proto.InternalMessageInfo

type GetShortIdReply struct {
	ShortId              string   `protobuf:"bytes,1,opt,name=shortId,proto3" json:"shortId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetShortIdReply) Reset()         { *m = GetShortIdReply{} }
func (m *GetShortIdReply) String() string { return proto.CompactTextString(m) }
func (*GetShortIdReply) ProtoMessage()    {}
func (*GetShortIdReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{136}
}

func (m *GetShortIdReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShortIdReply.Unmarshal(m, b)
}
func (m *GetShortIdReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShortIdReply.Marshal(b, m, deterministic)
}
func (m *GetShortIdReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShortIdReply.Merge(m, src)
}
func (m *GetShortIdReply) XXX_Size() int {
	return xxx_messageInfo_GetShortIdReply.Size(m)
}
func (m *GetShortIdReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShortIdReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetShortIdReply proto.InternalMessageInfo

func (m *GetShortIdReply) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

type GetClubInviteCodeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClubInviteCodeRequest) Reset()         { *m = GetClubInviteCodeRequest{} }
func (m *GetClubInviteCodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetClubInviteCodeRequest) ProtoMessage()    {}
func (*GetClubInviteCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{137}
}

func (m *GetClubInviteCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClubInviteCodeRequest.Unmarshal(m, b)
}
func (m *GetClubInviteCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClubInviteCodeRequest.Marshal(b, m, deterministic)
}
func (m *GetClubInviteCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClubInviteCodeRequest.Merge(m, src)
}
func (m *GetClubInviteCodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetClubInviteCodeRequest.Size(m)
}
func (m *GetClubInviteCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClubInviteCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetClubInviteCodeRequest proto.InternalMessageInfo

type GetClubInviteCodeReply struct {
	InviteCode           string   `protobuf:"bytes,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClubInviteCodeReply) Reset()         { *m = GetClubInviteCodeReply{} }
func (m *GetClubInviteCodeReply) String() string { return proto.CompactTextString(m) }
func (*GetClubInviteCodeReply) ProtoMessage()    {}
func (*GetClubInviteCodeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{138}
}

func (m *GetClubInviteCodeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClubInviteCodeReply.Unmarshal(m, b)
}
func (m *GetClubInviteCodeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClubInviteCodeReply.Marshal(b, m, deterministic)
}
func (m *GetClubInviteCodeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClubInviteCodeReply.Merge(m, src)
}
func (m *GetClubInviteCodeReply) XXX_Size() int {
	return xxx_messageInfo_GetClubInviteCodeReply.Size(m)
}
func (m *GetClubInviteCodeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClubInviteCodeReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetClubInviteCodeReply proto.InternalMessageInfo

func (m *GetClubInviteCodeReply) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

type GetLeagueInviteCodeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeagueInviteCodeRequest) Reset()         { *m = GetLeagueInviteCodeRequest{} }
func (m *GetLeagueInviteCodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetLeagueInviteCodeRequest) ProtoMessage()    {}
func (*GetLeagueInviteCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{139}
}

func (m *GetLeagueInviteCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueInviteCodeRequest.Unmarshal(m, b)
}
func (m *GetLeagueInviteCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueInviteCodeRequest.Marshal(b, m, deterministic)
}
func (m *GetLeagueInviteCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueInviteCodeRequest.Merge(m, src)
}
func (m *GetLeagueInviteCodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetLeagueInviteCodeRequest.Size(m)
}
func (m *GetLeagueInviteCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueInviteCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueInviteCodeRequest proto.InternalMessageInfo

type GetLeagueInviteCodeReply struct {
	InviteCode           string   `protobuf:"bytes,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeagueInviteCodeReply) Reset()         { *m = GetLeagueInviteCodeReply{} }
func (m *GetLeagueInviteCodeReply) String() string { return proto.CompactTextString(m) }
func (*GetLeagueInviteCodeReply) ProtoMessage()    {}
func (*GetLeagueInviteCodeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{140}
}

func (m *GetLeagueInviteCodeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueInviteCodeReply.Unmarshal(m, b)
}
func (m *GetLeagueInviteCodeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueInviteCodeReply.Marshal(b, m, deterministic)
}
func (m *GetLeagueInviteCodeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueInviteCodeReply.Merge(m, src)
}
func (m *GetLeagueInviteCodeReply) XXX_Size() int {
	return xxx_messageInfo_GetLeagueInviteCodeReply.Size(m)
}
func (m *GetLeagueInviteCodeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueInviteCodeReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueInviteCodeReply proto.InternalMessageInfo

func (m *GetLeagueInviteCodeReply) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

type GenShortIdRequest struct {
	Length               int32    `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	RedisKey             string   `protobuf:"bytes,2,opt,name=redisKey,proto3" json:"redisKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenShortIdRequest) Reset()         { *m = GenShortIdRequest{} }
func (m *GenShortIdRequest) String() string { return proto.CompactTextString(m) }
func (*GenShortIdRequest) ProtoMessage()    {}
func (*GenShortIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{141}
}

func (m *GenShortIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenShortIdRequest.Unmarshal(m, b)
}
func (m *GenShortIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenShortIdRequest.Marshal(b, m, deterministic)
}
func (m *GenShortIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenShortIdRequest.Merge(m, src)
}
func (m *GenShortIdRequest) XXX_Size() int {
	return xxx_messageInfo_GenShortIdRequest.Size(m)
}
func (m *GenShortIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenShortIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenShortIdRequest proto.InternalMessageInfo

func (m *GenShortIdRequest) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *GenShortIdRequest) GetRedisKey() string {
	if m != nil {
		return m.RedisKey
	}
	return ""
}

type GenShortIdReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenShortIdReply) Reset()         { *m = GenShortIdReply{} }
func (m *GenShortIdReply) String() string { return proto.CompactTextString(m) }
func (*GenShortIdReply) ProtoMessage()    {}
func (*GenShortIdReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{142}
}

func (m *GenShortIdReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenShortIdReply.Unmarshal(m, b)
}
func (m *GenShortIdReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenShortIdReply.Marshal(b, m, deterministic)
}
func (m *GenShortIdReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenShortIdReply.Merge(m, src)
}
func (m *GenShortIdReply) XXX_Size() int {
	return xxx_messageInfo_GenShortIdReply.Size(m)
}
func (m *GenShortIdReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GenShortIdReply.DiscardUnknown(m)
}

var xxx_messageInfo_GenShortIdReply proto.InternalMessageInfo

type GlobalConfig struct {
	AutoId               uint64   `protobuf:"varint,1,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Remark               string   `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GlobalConfig) Reset()         { *m = GlobalConfig{} }
func (m *GlobalConfig) String() string { return proto.CompactTextString(m) }
func (*GlobalConfig) ProtoMessage()    {}
func (*GlobalConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{143}
}

func (m *GlobalConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalConfig.Unmarshal(m, b)
}
func (m *GlobalConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalConfig.Marshal(b, m, deterministic)
}
func (m *GlobalConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalConfig.Merge(m, src)
}
func (m *GlobalConfig) XXX_Size() int {
	return xxx_messageInfo_GlobalConfig.Size(m)
}
func (m *GlobalConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalConfig proto.InternalMessageInfo

func (m *GlobalConfig) GetAutoId() uint64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *GlobalConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GlobalConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *GlobalConfig) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type GameConfig struct {
	AutoId               uint64   `protobuf:"varint,1,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`
	GameScene            int32    `protobuf:"varint,2,opt,name=game_scene,json=gameScene,proto3" json:"game_scene,omitempty"`
	GameType             GameType `protobuf:"varint,3,opt,name=game_type,json=gameType,proto3,enum=GameType" json:"game_type,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Remark               string   `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameConfig) Reset()         { *m = GameConfig{} }
func (m *GameConfig) String() string { return proto.CompactTextString(m) }
func (*GameConfig) ProtoMessage()    {}
func (*GameConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{144}
}

func (m *GameConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameConfig.Unmarshal(m, b)
}
func (m *GameConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameConfig.Marshal(b, m, deterministic)
}
func (m *GameConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameConfig.Merge(m, src)
}
func (m *GameConfig) XXX_Size() int {
	return xxx_messageInfo_GameConfig.Size(m)
}
func (m *GameConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GameConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GameConfig proto.InternalMessageInfo

func (m *GameConfig) GetAutoId() uint64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *GameConfig) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *GameConfig) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GameConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GameConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *GameConfig) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type MysqlRBTMessage struct {
	TableName            string   `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	AutoId               uint64   `protobuf:"varint,2,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`
	Uuid                 string   `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ShortId              string   `protobuf:"bytes,4,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	Info                 []byte   `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	UpdateTime           int64    `protobuf:"varint,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MysqlRBTMessage) Reset()         { *m = MysqlRBTMessage{} }
func (m *MysqlRBTMessage) String() string { return proto.CompactTextString(m) }
func (*MysqlRBTMessage) ProtoMessage()    {}
func (*MysqlRBTMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{145}
}

func (m *MysqlRBTMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlRBTMessage.Unmarshal(m, b)
}
func (m *MysqlRBTMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlRBTMessage.Marshal(b, m, deterministic)
}
func (m *MysqlRBTMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlRBTMessage.Merge(m, src)
}
func (m *MysqlRBTMessage) XXX_Size() int {
	return xxx_messageInfo_MysqlRBTMessage.Size(m)
}
func (m *MysqlRBTMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlRBTMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlRBTMessage proto.InternalMessageInfo

func (m *MysqlRBTMessage) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *MysqlRBTMessage) GetAutoId() uint64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *MysqlRBTMessage) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *MysqlRBTMessage) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *MysqlRBTMessage) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *MysqlRBTMessage) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

type RobotMngRequest struct {
	RbtNum               int64    `protobuf:"varint,1,opt,name=rbtNum,proto3" json:"rbtNum,omitempty"`
	MaxRbtNum            int64    `protobuf:"varint,2,opt,name=MaxRbtNum,proto3" json:"MaxRbtNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobotMngRequest) Reset()         { *m = RobotMngRequest{} }
func (m *RobotMngRequest) String() string { return proto.CompactTextString(m) }
func (*RobotMngRequest) ProtoMessage()    {}
func (*RobotMngRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{146}
}

func (m *RobotMngRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotMngRequest.Unmarshal(m, b)
}
func (m *RobotMngRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotMngRequest.Marshal(b, m, deterministic)
}
func (m *RobotMngRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotMngRequest.Merge(m, src)
}
func (m *RobotMngRequest) XXX_Size() int {
	return xxx_messageInfo_RobotMngRequest.Size(m)
}
func (m *RobotMngRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotMngRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RobotMngRequest proto.InternalMessageInfo

func (m *RobotMngRequest) GetRbtNum() int64 {
	if m != nil {
		return m.RbtNum
	}
	return 0
}

func (m *RobotMngRequest) GetMaxRbtNum() int64 {
	if m != nil {
		return m.MaxRbtNum
	}
	return 0
}

type RobotMngReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobotMngReply) Reset()         { *m = RobotMngReply{} }
func (m *RobotMngReply) String() string { return proto.CompactTextString(m) }
func (*RobotMngReply) ProtoMessage()    {}
func (*RobotMngReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{147}
}

func (m *RobotMngReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotMngReply.Unmarshal(m, b)
}
func (m *RobotMngReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotMngReply.Marshal(b, m, deterministic)
}
func (m *RobotMngReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotMngReply.Merge(m, src)
}
func (m *RobotMngReply) XXX_Size() int {
	return xxx_messageInfo_RobotMngReply.Size(m)
}
func (m *RobotMngReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotMngReply.DiscardUnknown(m)
}

var xxx_messageInfo_RobotMngReply proto.InternalMessageInfo

type RBTLoginRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RBTLoginRequest) Reset()         { *m = RBTLoginRequest{} }
func (m *RBTLoginRequest) String() string { return proto.CompactTextString(m) }
func (*RBTLoginRequest) ProtoMessage()    {}
func (*RBTLoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{148}
}

func (m *RBTLoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RBTLoginRequest.Unmarshal(m, b)
}
func (m *RBTLoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RBTLoginRequest.Marshal(b, m, deterministic)
}
func (m *RBTLoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RBTLoginRequest.Merge(m, src)
}
func (m *RBTLoginRequest) XXX_Size() int {
	return xxx_messageInfo_RBTLoginRequest.Size(m)
}
func (m *RBTLoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RBTLoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RBTLoginRequest proto.InternalMessageInfo

func (m *RBTLoginRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type RBTLoginReply struct {
	PlayerInfo           *PlayerInfo `protobuf:"bytes,2,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RBTLoginReply) Reset()         { *m = RBTLoginReply{} }
func (m *RBTLoginReply) String() string { return proto.CompactTextString(m) }
func (*RBTLoginReply) ProtoMessage()    {}
func (*RBTLoginReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{149}
}

func (m *RBTLoginReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RBTLoginReply.Unmarshal(m, b)
}
func (m *RBTLoginReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RBTLoginReply.Marshal(b, m, deterministic)
}
func (m *RBTLoginReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RBTLoginReply.Merge(m, src)
}
func (m *RBTLoginReply) XXX_Size() int {
	return xxx_messageInfo_RBTLoginReply.Size(m)
}
func (m *RBTLoginReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RBTLoginReply.DiscardUnknown(m)
}

var xxx_messageInfo_RBTLoginReply proto.InternalMessageInfo

func (m *RBTLoginReply) GetPlayerInfo() *PlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

type RobotShortidRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobotShortidRequest) Reset()         { *m = RobotShortidRequest{} }
func (m *RobotShortidRequest) String() string { return proto.CompactTextString(m) }
func (*RobotShortidRequest) ProtoMessage()    {}
func (*RobotShortidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{150}
}

func (m *RobotShortidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotShortidRequest.Unmarshal(m, b)
}
func (m *RobotShortidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotShortidRequest.Marshal(b, m, deterministic)
}
func (m *RobotShortidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotShortidRequest.Merge(m, src)
}
func (m *RobotShortidRequest) XXX_Size() int {
	return xxx_messageInfo_RobotShortidRequest.Size(m)
}
func (m *RobotShortidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotShortidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RobotShortidRequest proto.InternalMessageInfo

type RobotShortidReply struct {
	ShortId              string   `protobuf:"bytes,1,opt,name=shortId,proto3" json:"shortId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobotShortidReply) Reset()         { *m = RobotShortidReply{} }
func (m *RobotShortidReply) String() string { return proto.CompactTextString(m) }
func (*RobotShortidReply) ProtoMessage()    {}
func (*RobotShortidReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{151}
}

func (m *RobotShortidReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotShortidReply.Unmarshal(m, b)
}
func (m *RobotShortidReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotShortidReply.Marshal(b, m, deterministic)
}
func (m *RobotShortidReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotShortidReply.Merge(m, src)
}
func (m *RobotShortidReply) XXX_Size() int {
	return xxx_messageInfo_RobotShortidReply.Size(m)
}
func (m *RobotShortidReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotShortidReply.DiscardUnknown(m)
}

var xxx_messageInfo_RobotShortidReply proto.InternalMessageInfo

func (m *RobotShortidReply) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

type Authorization struct {
	AutoId uint64 `protobuf:"varint,1,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`
	//角色
	Role Roles `protobuf:"varint,2,opt,name=role,proto3,enum=Roles" json:"role,omitempty"`
	//访问地址
	Addr string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	//备注
	Remark               string   `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Authorization) Reset()         { *m = Authorization{} }
func (m *Authorization) String() string { return proto.CompactTextString(m) }
func (*Authorization) ProtoMessage()    {}
func (*Authorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{152}
}

func (m *Authorization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Authorization.Unmarshal(m, b)
}
func (m *Authorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Authorization.Marshal(b, m, deterministic)
}
func (m *Authorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Authorization.Merge(m, src)
}
func (m *Authorization) XXX_Size() int {
	return xxx_messageInfo_Authorization.Size(m)
}
func (m *Authorization) XXX_DiscardUnknown() {
	xxx_messageInfo_Authorization.DiscardUnknown(m)
}

var xxx_messageInfo_Authorization proto.InternalMessageInfo

func (m *Authorization) GetAutoId() uint64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *Authorization) GetRole() Roles {
	if m != nil {
		return m.Role
	}
	return Roles_Error
}

func (m *Authorization) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *Authorization) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type MysqlRBTNumberRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MysqlRBTNumberRequest) Reset()         { *m = MysqlRBTNumberRequest{} }
func (m *MysqlRBTNumberRequest) String() string { return proto.CompactTextString(m) }
func (*MysqlRBTNumberRequest) ProtoMessage()    {}
func (*MysqlRBTNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{153}
}

func (m *MysqlRBTNumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlRBTNumberRequest.Unmarshal(m, b)
}
func (m *MysqlRBTNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlRBTNumberRequest.Marshal(b, m, deterministic)
}
func (m *MysqlRBTNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlRBTNumberRequest.Merge(m, src)
}
func (m *MysqlRBTNumberRequest) XXX_Size() int {
	return xxx_messageInfo_MysqlRBTNumberRequest.Size(m)
}
func (m *MysqlRBTNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlRBTNumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlRBTNumberRequest proto.InternalMessageInfo

type MysqlRBTNumberReply struct {
	//机器人数量
	RbtNum               int64    `protobuf:"varint,1,opt,name=rbtNum,proto3" json:"rbtNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MysqlRBTNumberReply) Reset()         { *m = MysqlRBTNumberReply{} }
func (m *MysqlRBTNumberReply) String() string { return proto.CompactTextString(m) }
func (*MysqlRBTNumberReply) ProtoMessage()    {}
func (*MysqlRBTNumberReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{154}
}

func (m *MysqlRBTNumberReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlRBTNumberReply.Unmarshal(m, b)
}
func (m *MysqlRBTNumberReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlRBTNumberReply.Marshal(b, m, deterministic)
}
func (m *MysqlRBTNumberReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlRBTNumberReply.Merge(m, src)
}
func (m *MysqlRBTNumberReply) XXX_Size() int {
	return xxx_messageInfo_MysqlRBTNumberReply.Size(m)
}
func (m *MysqlRBTNumberReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlRBTNumberReply.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlRBTNumberReply proto.InternalMessageInfo

func (m *MysqlRBTNumberReply) GetRbtNum() int64 {
	if m != nil {
		return m.RbtNum
	}
	return 0
}

//获取账号分页列表
type GetAccountPageListRequest struct {
	PageIndex            int32            `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32            `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RoleType             Roles            `protobuf:"varint,3,opt,name=role_type,json=roleType,proto3,enum=Roles" json:"role_type,omitempty"`
	AccountId            string           `protobuf:"bytes,4,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	SourceType           PlayerSourceType `protobuf:"varint,5,opt,name=sourceType,proto3,enum=PlayerSourceType" json:"sourceType,omitempty"`
	Account              string           `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetAccountPageListRequest) Reset()         { *m = GetAccountPageListRequest{} }
func (m *GetAccountPageListRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountPageListRequest) ProtoMessage()    {}
func (*GetAccountPageListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{155}
}

func (m *GetAccountPageListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountPageListRequest.Unmarshal(m, b)
}
func (m *GetAccountPageListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountPageListRequest.Marshal(b, m, deterministic)
}
func (m *GetAccountPageListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountPageListRequest.Merge(m, src)
}
func (m *GetAccountPageListRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountPageListRequest.Size(m)
}
func (m *GetAccountPageListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountPageListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountPageListRequest proto.InternalMessageInfo

func (m *GetAccountPageListRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetAccountPageListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetAccountPageListRequest) GetRoleType() Roles {
	if m != nil {
		return m.RoleType
	}
	return Roles_Error
}

func (m *GetAccountPageListRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *GetAccountPageListRequest) GetSourceType() PlayerSourceType {
	if m != nil {
		return m.SourceType
	}
	return PlayerSourceType_PlayerSourceType_None
}

func (m *GetAccountPageListRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

type AccountDetailReply struct {
	AutoId     uint64     `protobuf:"varint,1,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`
	Uuid       string     `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ShortId    string     `protobuf:"bytes,3,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	Account    string     `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	RoleType   Roles      `protobuf:"varint,5,opt,name=role_type,json=roleType,proto3,enum=Roles" json:"role_type,omitempty"`
	UpdateTime int64      `protobuf:"varint,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Status     UserStatus `protobuf:"varint,7,opt,name=status,proto3,enum=UserStatus" json:"status,omitempty"`
	// 玩家昵称
	Name string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	// 玩家余额
	Balance int64 `protobuf:"varint,9,opt,name=balance,proto3" json:"balance,omitempty"`
	// 是否是机器人
	IsRobot bool `protobuf:"varint,10,opt,name=isRobot,proto3" json:"isRobot,omitempty"`
	// 玩家正在游玩的游戏类型
	GameType GameType `protobuf:"varint,11,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 玩家正在游玩的游戏场次
	GameScene int32 `protobuf:"varint,12,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	// 玩家正在游玩的游戏的线路，即服务器索引
	GameServerIndex string `protobuf:"bytes,13,opt,name=gameServerIndex,proto3" json:"gameServerIndex,omitempty"`
	//权限
	Auths []AuthorizationDef `protobuf:"varint,14,rep,packed,name=auths,proto3,enum=AuthorizationDef" json:"auths,omitempty"`
	// 玩家正在游玩的游戏房间id
	RoomId string `protobuf:"bytes,15,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 上次加入的房间id
	LastRoomId string           `protobuf:"bytes,16,opt,name=lastRoomId,proto3" json:"lastRoomId,omitempty"`
	SourceType PlayerSourceType `protobuf:"varint,17,opt,name=sourceType,proto3,enum=PlayerSourceType" json:"sourceType,omitempty"`
	//第三方登录openId
	OpenId string `protobuf:"bytes,18,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	//第三方登录UnionId
	UnionId              string   `protobuf:"bytes,19,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
	CreateTime           int64    `protobuf:"varint,20,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	LastLoginTime        int64    `protobuf:"varint,21,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountDetailReply) Reset()         { *m = AccountDetailReply{} }
func (m *AccountDetailReply) String() string { return proto.CompactTextString(m) }
func (*AccountDetailReply) ProtoMessage()    {}
func (*AccountDetailReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{156}
}

func (m *AccountDetailReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountDetailReply.Unmarshal(m, b)
}
func (m *AccountDetailReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountDetailReply.Marshal(b, m, deterministic)
}
func (m *AccountDetailReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountDetailReply.Merge(m, src)
}
func (m *AccountDetailReply) XXX_Size() int {
	return xxx_messageInfo_AccountDetailReply.Size(m)
}
func (m *AccountDetailReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountDetailReply.DiscardUnknown(m)
}

var xxx_messageInfo_AccountDetailReply proto.InternalMessageInfo

func (m *AccountDetailReply) GetAutoId() uint64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *AccountDetailReply) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *AccountDetailReply) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *AccountDetailReply) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *AccountDetailReply) GetRoleType() Roles {
	if m != nil {
		return m.RoleType
	}
	return Roles_Error
}

func (m *AccountDetailReply) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *AccountDetailReply) GetStatus() UserStatus {
	if m != nil {
		return m.Status
	}
	return UserStatus_invalid
}

func (m *AccountDetailReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AccountDetailReply) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *AccountDetailReply) GetIsRobot() bool {
	if m != nil {
		return m.IsRobot
	}
	return false
}

func (m *AccountDetailReply) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *AccountDetailReply) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *AccountDetailReply) GetGameServerIndex() string {
	if m != nil {
		return m.GameServerIndex
	}
	return ""
}

func (m *AccountDetailReply) GetAuths() []AuthorizationDef {
	if m != nil {
		return m.Auths
	}
	return nil
}

func (m *AccountDetailReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *AccountDetailReply) GetLastRoomId() string {
	if m != nil {
		return m.LastRoomId
	}
	return ""
}

func (m *AccountDetailReply) GetSourceType() PlayerSourceType {
	if m != nil {
		return m.SourceType
	}
	return PlayerSourceType_PlayerSourceType_None
}

func (m *AccountDetailReply) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *AccountDetailReply) GetUnionId() string {
	if m != nil {
		return m.UnionId
	}
	return ""
}

func (m *AccountDetailReply) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *AccountDetailReply) GetLastLoginTime() int64 {
	if m != nil {
		return m.LastLoginTime
	}
	return 0
}

//获取账号分页列表回复
type GetAccountPageListReply struct {
	PageIndex            int32                 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32                 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RecordCount          int32                 `protobuf:"varint,3,opt,name=recordCount,proto3" json:"recordCount,omitempty"`
	Data                 []*AccountDetailReply `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetAccountPageListReply) Reset()         { *m = GetAccountPageListReply{} }
func (m *GetAccountPageListReply) String() string { return proto.CompactTextString(m) }
func (*GetAccountPageListReply) ProtoMessage()    {}
func (*GetAccountPageListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{157}
}

func (m *GetAccountPageListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountPageListReply.Unmarshal(m, b)
}
func (m *GetAccountPageListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountPageListReply.Marshal(b, m, deterministic)
}
func (m *GetAccountPageListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountPageListReply.Merge(m, src)
}
func (m *GetAccountPageListReply) XXX_Size() int {
	return xxx_messageInfo_GetAccountPageListReply.Size(m)
}
func (m *GetAccountPageListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountPageListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountPageListReply proto.InternalMessageInfo

func (m *GetAccountPageListReply) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetAccountPageListReply) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetAccountPageListReply) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *GetAccountPageListReply) GetData() []*AccountDetailReply {
	if m != nil {
		return m.Data
	}
	return nil
}

//获取在线玩家列表回复
type GetOnlineAccountPageListReply struct {
	PageIndex            int32                  `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RecordCount          int32                  `protobuf:"varint,3,opt,name=recordCount,proto3" json:"recordCount,omitempty"`
	Data                 []*OnlineAccountDetail `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetOnlineAccountPageListReply) Reset()         { *m = GetOnlineAccountPageListReply{} }
func (m *GetOnlineAccountPageListReply) String() string { return proto.CompactTextString(m) }
func (*GetOnlineAccountPageListReply) ProtoMessage()    {}
func (*GetOnlineAccountPageListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{158}
}

func (m *GetOnlineAccountPageListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOnlineAccountPageListReply.Unmarshal(m, b)
}
func (m *GetOnlineAccountPageListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOnlineAccountPageListReply.Marshal(b, m, deterministic)
}
func (m *GetOnlineAccountPageListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOnlineAccountPageListReply.Merge(m, src)
}
func (m *GetOnlineAccountPageListReply) XXX_Size() int {
	return xxx_messageInfo_GetOnlineAccountPageListReply.Size(m)
}
func (m *GetOnlineAccountPageListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOnlineAccountPageListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetOnlineAccountPageListReply proto.InternalMessageInfo

func (m *GetOnlineAccountPageListReply) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetOnlineAccountPageListReply) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetOnlineAccountPageListReply) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *GetOnlineAccountPageListReply) GetData() []*OnlineAccountDetail {
	if m != nil {
		return m.Data
	}
	return nil
}

//在线玩家详情
type OnlineAccountDetail struct {
	Uuid       string     `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ShortId    string     `protobuf:"bytes,2,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	Account    string     `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	RoleType   Roles      `protobuf:"varint,4,opt,name=role_type,json=roleType,proto3,enum=Roles" json:"role_type,omitempty"`
	UpdateTime int64      `protobuf:"varint,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Status     UserStatus `protobuf:"varint,6,opt,name=status,proto3,enum=UserStatus" json:"status,omitempty"`
	// 玩家昵称
	Name string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	// 玩家余额
	Balance int64 `protobuf:"varint,8,opt,name=balance,proto3" json:"balance,omitempty"`
	// 是否是机器人
	IsRobot bool `protobuf:"varint,9,opt,name=isRobot,proto3" json:"isRobot,omitempty"`
	// 玩家正在游玩的游戏类型
	GameType GameType `protobuf:"varint,10,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 玩家正在游玩的游戏场次
	GameScene int32 `protobuf:"varint,11,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	// 玩家正在游玩的游戏的线路，即服务器索引
	GameServerIndex string `protobuf:"bytes,12,opt,name=gameServerIndex,proto3" json:"gameServerIndex,omitempty"`
	// 玩家正在游玩的游戏房间id
	RoomId               string           `protobuf:"bytes,13,opt,name=roomId,proto3" json:"roomId,omitempty"`
	SourceType           PlayerSourceType `protobuf:"varint,14,opt,name=sourceType,proto3,enum=PlayerSourceType" json:"sourceType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OnlineAccountDetail) Reset()         { *m = OnlineAccountDetail{} }
func (m *OnlineAccountDetail) String() string { return proto.CompactTextString(m) }
func (*OnlineAccountDetail) ProtoMessage()    {}
func (*OnlineAccountDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{159}
}

func (m *OnlineAccountDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnlineAccountDetail.Unmarshal(m, b)
}
func (m *OnlineAccountDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnlineAccountDetail.Marshal(b, m, deterministic)
}
func (m *OnlineAccountDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnlineAccountDetail.Merge(m, src)
}
func (m *OnlineAccountDetail) XXX_Size() int {
	return xxx_messageInfo_OnlineAccountDetail.Size(m)
}
func (m *OnlineAccountDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_OnlineAccountDetail.DiscardUnknown(m)
}

var xxx_messageInfo_OnlineAccountDetail proto.InternalMessageInfo

func (m *OnlineAccountDetail) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *OnlineAccountDetail) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *OnlineAccountDetail) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *OnlineAccountDetail) GetRoleType() Roles {
	if m != nil {
		return m.RoleType
	}
	return Roles_Error
}

func (m *OnlineAccountDetail) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *OnlineAccountDetail) GetStatus() UserStatus {
	if m != nil {
		return m.Status
	}
	return UserStatus_invalid
}

func (m *OnlineAccountDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OnlineAccountDetail) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *OnlineAccountDetail) GetIsRobot() bool {
	if m != nil {
		return m.IsRobot
	}
	return false
}

func (m *OnlineAccountDetail) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *OnlineAccountDetail) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *OnlineAccountDetail) GetGameServerIndex() string {
	if m != nil {
		return m.GameServerIndex
	}
	return ""
}

func (m *OnlineAccountDetail) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *OnlineAccountDetail) GetSourceType() PlayerSourceType {
	if m != nil {
		return m.SourceType
	}
	return PlayerSourceType_PlayerSourceType_None
}

//新增账户请求
type AddAccountRequest struct {
	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	RoleType Roles  `protobuf:"varint,3,opt,name=role_type,json=roleType,proto3,enum=Roles" json:"role_type,omitempty"`
	//用户状态
	Status UserStatus `protobuf:"varint,4,opt,name=status,proto3,enum=UserStatus" json:"status,omitempty"`
	// 玩家昵称
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// 玩家余额
	Balance uint32 `protobuf:"varint,6,opt,name=balance,proto3" json:"balance,omitempty"`
	// 是否是机器人
	IsRobot bool `protobuf:"varint,7,opt,name=isRobot,proto3" json:"isRobot,omitempty"`
	//权限
	Auths                []AuthorizationDef `protobuf:"varint,9,rep,packed,name=auths,proto3,enum=AuthorizationDef" json:"auths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AddAccountRequest) Reset()         { *m = AddAccountRequest{} }
func (m *AddAccountRequest) String() string { return proto.CompactTextString(m) }
func (*AddAccountRequest) ProtoMessage()    {}
func (*AddAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{160}
}

func (m *AddAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAccountRequest.Unmarshal(m, b)
}
func (m *AddAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAccountRequest.Marshal(b, m, deterministic)
}
func (m *AddAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAccountRequest.Merge(m, src)
}
func (m *AddAccountRequest) XXX_Size() int {
	return xxx_messageInfo_AddAccountRequest.Size(m)
}
func (m *AddAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddAccountRequest proto.InternalMessageInfo

func (m *AddAccountRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *AddAccountRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AddAccountRequest) GetRoleType() Roles {
	if m != nil {
		return m.RoleType
	}
	return Roles_Error
}

func (m *AddAccountRequest) GetStatus() UserStatus {
	if m != nil {
		return m.Status
	}
	return UserStatus_invalid
}

func (m *AddAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddAccountRequest) GetBalance() uint32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *AddAccountRequest) GetIsRobot() bool {
	if m != nil {
		return m.IsRobot
	}
	return false
}

func (m *AddAccountRequest) GetAuths() []AuthorizationDef {
	if m != nil {
		return m.Auths
	}
	return nil
}

//修改账户请求
type UpdateAccountRequest struct {
	Uuid     string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	//用户状态
	Status UserStatus `protobuf:"varint,3,opt,name=status,proto3,enum=UserStatus" json:"status,omitempty"`
	// 玩家昵称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	//权限
	Auths                []AuthorizationDef `protobuf:"varint,5,rep,packed,name=auths,proto3,enum=AuthorizationDef" json:"auths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UpdateAccountRequest) Reset()         { *m = UpdateAccountRequest{} }
func (m *UpdateAccountRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAccountRequest) ProtoMessage()    {}
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{161}
}

func (m *UpdateAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAccountRequest.Unmarshal(m, b)
}
func (m *UpdateAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAccountRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAccountRequest.Merge(m, src)
}
func (m *UpdateAccountRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAccountRequest.Size(m)
}
func (m *UpdateAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAccountRequest proto.InternalMessageInfo

func (m *UpdateAccountRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *UpdateAccountRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UpdateAccountRequest) GetStatus() UserStatus {
	if m != nil {
		return m.Status
	}
	return UserStatus_invalid
}

func (m *UpdateAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateAccountRequest) GetAuths() []AuthorizationDef {
	if m != nil {
		return m.Auths
	}
	return nil
}

//获取游戏详情请求
type GameInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameInfoRequest) Reset()         { *m = GameInfoRequest{} }
func (m *GameInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GameInfoRequest) ProtoMessage()    {}
func (*GameInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{162}
}

func (m *GameInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameInfoRequest.Unmarshal(m, b)
}
func (m *GameInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameInfoRequest.Marshal(b, m, deterministic)
}
func (m *GameInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameInfoRequest.Merge(m, src)
}
func (m *GameInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GameInfoRequest.Size(m)
}
func (m *GameInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameInfoRequest proto.InternalMessageInfo

//获取游戏详情回复
type GameInfoReply struct {
	GameMap              map[int32]*GameStatus `protobuf:"bytes,1,rep,name=GameMap,proto3" json:"GameMap,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GameInfoReply) Reset()         { *m = GameInfoReply{} }
func (m *GameInfoReply) String() string { return proto.CompactTextString(m) }
func (*GameInfoReply) ProtoMessage()    {}
func (*GameInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{163}
}

func (m *GameInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameInfoReply.Unmarshal(m, b)
}
func (m *GameInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameInfoReply.Marshal(b, m, deterministic)
}
func (m *GameInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameInfoReply.Merge(m, src)
}
func (m *GameInfoReply) XXX_Size() int {
	return xxx_messageInfo_GameInfoReply.Size(m)
}
func (m *GameInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GameInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GameInfoReply proto.InternalMessageInfo

func (m *GameInfoReply) GetGameMap() map[int32]*GameStatus {
	if m != nil {
		return m.GameMap
	}
	return nil
}

//游戏开放状态
type GameStatus struct {
	IsOpen               bool         `protobuf:"varint,1,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Scenes               []*GameScene `protobuf:"bytes,2,rep,name=Scenes,proto3" json:"Scenes,omitempty"`
	SortIndex            int32        `protobuf:"varint,3,opt,name=SortIndex,proto3" json:"SortIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GameStatus) Reset()         { *m = GameStatus{} }
func (m *GameStatus) String() string { return proto.CompactTextString(m) }
func (*GameStatus) ProtoMessage()    {}
func (*GameStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{164}
}

func (m *GameStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStatus.Unmarshal(m, b)
}
func (m *GameStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStatus.Marshal(b, m, deterministic)
}
func (m *GameStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStatus.Merge(m, src)
}
func (m *GameStatus) XXX_Size() int {
	return xxx_messageInfo_GameStatus.Size(m)
}
func (m *GameStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStatus.DiscardUnknown(m)
}

var xxx_messageInfo_GameStatus proto.InternalMessageInfo

func (m *GameStatus) GetIsOpen() bool {
	if m != nil {
		return m.IsOpen
	}
	return false
}

func (m *GameStatus) GetScenes() []*GameScene {
	if m != nil {
		return m.Scenes
	}
	return nil
}

func (m *GameStatus) GetSortIndex() int32 {
	if m != nil {
		return m.SortIndex
	}
	return 0
}

//玩家获取场次信息和配置回复
type GameInfoGetGameSceneAndConfig struct {
	Scenes               []*GameScene `protobuf:"bytes,1,rep,name=Scenes,proto3" json:"Scenes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GameInfoGetGameSceneAndConfig) Reset()         { *m = GameInfoGetGameSceneAndConfig{} }
func (m *GameInfoGetGameSceneAndConfig) String() string { return proto.CompactTextString(m) }
func (*GameInfoGetGameSceneAndConfig) ProtoMessage()    {}
func (*GameInfoGetGameSceneAndConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{165}
}

func (m *GameInfoGetGameSceneAndConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameInfoGetGameSceneAndConfig.Unmarshal(m, b)
}
func (m *GameInfoGetGameSceneAndConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameInfoGetGameSceneAndConfig.Marshal(b, m, deterministic)
}
func (m *GameInfoGetGameSceneAndConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameInfoGetGameSceneAndConfig.Merge(m, src)
}
func (m *GameInfoGetGameSceneAndConfig) XXX_Size() int {
	return xxx_messageInfo_GameInfoGetGameSceneAndConfig.Size(m)
}
func (m *GameInfoGetGameSceneAndConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GameInfoGetGameSceneAndConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GameInfoGetGameSceneAndConfig proto.InternalMessageInfo

func (m *GameInfoGetGameSceneAndConfig) GetScenes() []*GameScene {
	if m != nil {
		return m.Scenes
	}
	return nil
}

//游戏场次
type GameScene struct {
	Scene                int32               `protobuf:"varint,1,opt,name=Scene,proto3" json:"Scene,omitempty"`
	Config               map[string]*GameCfg `protobuf:"bytes,2,rep,name=Config,proto3" json:"Config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GameScene) Reset()         { *m = GameScene{} }
func (m *GameScene) String() string { return proto.CompactTextString(m) }
func (*GameScene) ProtoMessage()    {}
func (*GameScene) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{166}
}

func (m *GameScene) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameScene.Unmarshal(m, b)
}
func (m *GameScene) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameScene.Marshal(b, m, deterministic)
}
func (m *GameScene) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameScene.Merge(m, src)
}
func (m *GameScene) XXX_Size() int {
	return xxx_messageInfo_GameScene.Size(m)
}
func (m *GameScene) XXX_DiscardUnknown() {
	xxx_messageInfo_GameScene.DiscardUnknown(m)
}

var xxx_messageInfo_GameScene proto.InternalMessageInfo

func (m *GameScene) GetScene() int32 {
	if m != nil {
		return m.Scene
	}
	return 0
}

func (m *GameScene) GetConfig() map[string]*GameCfg {
	if m != nil {
		return m.Config
	}
	return nil
}

//游戏配置
type GameCfg struct {
	Value                string   `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	Remake               string   `protobuf:"bytes,2,opt,name=Remake,proto3" json:"Remake,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameCfg) Reset()         { *m = GameCfg{} }
func (m *GameCfg) String() string { return proto.CompactTextString(m) }
func (*GameCfg) ProtoMessage()    {}
func (*GameCfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{167}
}

func (m *GameCfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameCfg.Unmarshal(m, b)
}
func (m *GameCfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameCfg.Marshal(b, m, deterministic)
}
func (m *GameCfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameCfg.Merge(m, src)
}
func (m *GameCfg) XXX_Size() int {
	return xxx_messageInfo_GameCfg.Size(m)
}
func (m *GameCfg) XXX_DiscardUnknown() {
	xxx_messageInfo_GameCfg.DiscardUnknown(m)
}

var xxx_messageInfo_GameCfg proto.InternalMessageInfo

func (m *GameCfg) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *GameCfg) GetRemake() string {
	if m != nil {
		return m.Remake
	}
	return ""
}

//设置用户状态
type SetAccountStatusRequest struct {
	Uuid                 string     `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Status               UserStatus `protobuf:"varint,2,opt,name=status,proto3,enum=UserStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SetAccountStatusRequest) Reset()         { *m = SetAccountStatusRequest{} }
func (m *SetAccountStatusRequest) String() string { return proto.CompactTextString(m) }
func (*SetAccountStatusRequest) ProtoMessage()    {}
func (*SetAccountStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{168}
}

func (m *SetAccountStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAccountStatusRequest.Unmarshal(m, b)
}
func (m *SetAccountStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAccountStatusRequest.Marshal(b, m, deterministic)
}
func (m *SetAccountStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAccountStatusRequest.Merge(m, src)
}
func (m *SetAccountStatusRequest) XXX_Size() int {
	return xxx_messageInfo_SetAccountStatusRequest.Size(m)
}
func (m *SetAccountStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAccountStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetAccountStatusRequest proto.InternalMessageInfo

func (m *SetAccountStatusRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *SetAccountStatusRequest) GetStatus() UserStatus {
	if m != nil {
		return m.Status
	}
	return UserStatus_invalid
}

//设置用户状态回复
type SetAccountStatusReply struct {
	Uuid                 string     `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Status               UserStatus `protobuf:"varint,2,opt,name=status,proto3,enum=UserStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SetAccountStatusReply) Reset()         { *m = SetAccountStatusReply{} }
func (m *SetAccountStatusReply) String() string { return proto.CompactTextString(m) }
func (*SetAccountStatusReply) ProtoMessage()    {}
func (*SetAccountStatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{169}
}

func (m *SetAccountStatusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAccountStatusReply.Unmarshal(m, b)
}
func (m *SetAccountStatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAccountStatusReply.Marshal(b, m, deterministic)
}
func (m *SetAccountStatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAccountStatusReply.Merge(m, src)
}
func (m *SetAccountStatusReply) XXX_Size() int {
	return xxx_messageInfo_SetAccountStatusReply.Size(m)
}
func (m *SetAccountStatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAccountStatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetAccountStatusReply proto.InternalMessageInfo

func (m *SetAccountStatusReply) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *SetAccountStatusReply) GetStatus() UserStatus {
	if m != nil {
		return m.Status
	}
	return UserStatus_invalid
}

//删除用户请求
type DeleteAccountRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAccountRequest) Reset()         { *m = DeleteAccountRequest{} }
func (m *DeleteAccountRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAccountRequest) ProtoMessage()    {}
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{170}
}

func (m *DeleteAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAccountRequest.Unmarshal(m, b)
}
func (m *DeleteAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAccountRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAccountRequest.Merge(m, src)
}
func (m *DeleteAccountRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAccountRequest.Size(m)
}
func (m *DeleteAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAccountRequest proto.InternalMessageInfo

func (m *DeleteAccountRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

//删除用户回复
type DeleteAccountReply struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAccountReply) Reset()         { *m = DeleteAccountReply{} }
func (m *DeleteAccountReply) String() string { return proto.CompactTextString(m) }
func (*DeleteAccountReply) ProtoMessage()    {}
func (*DeleteAccountReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{171}
}

func (m *DeleteAccountReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAccountReply.Unmarshal(m, b)
}
func (m *DeleteAccountReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAccountReply.Marshal(b, m, deterministic)
}
func (m *DeleteAccountReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAccountReply.Merge(m, src)
}
func (m *DeleteAccountReply) XXX_Size() int {
	return xxx_messageInfo_DeleteAccountReply.Size(m)
}
func (m *DeleteAccountReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAccountReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAccountReply proto.InternalMessageInfo

func (m *DeleteAccountReply) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

//踢人
type KickPlayerRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KickPlayerRequest) Reset()         { *m = KickPlayerRequest{} }
func (m *KickPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*KickPlayerRequest) ProtoMessage()    {}
func (*KickPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{172}
}

func (m *KickPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KickPlayerRequest.Unmarshal(m, b)
}
func (m *KickPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KickPlayerRequest.Marshal(b, m, deterministic)
}
func (m *KickPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KickPlayerRequest.Merge(m, src)
}
func (m *KickPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_KickPlayerRequest.Size(m)
}
func (m *KickPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KickPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KickPlayerRequest proto.InternalMessageInfo

func (m *KickPlayerRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

//账户上下分
type AccountScoreRequest struct {
	Score                int32    `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountScoreRequest) Reset()         { *m = AccountScoreRequest{} }
func (m *AccountScoreRequest) String() string { return proto.CompactTextString(m) }
func (*AccountScoreRequest) ProtoMessage()    {}
func (*AccountScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{173}
}

func (m *AccountScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountScoreRequest.Unmarshal(m, b)
}
func (m *AccountScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountScoreRequest.Marshal(b, m, deterministic)
}
func (m *AccountScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountScoreRequest.Merge(m, src)
}
func (m *AccountScoreRequest) XXX_Size() int {
	return xxx_messageInfo_AccountScoreRequest.Size(m)
}
func (m *AccountScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountScoreRequest proto.InternalMessageInfo

func (m *AccountScoreRequest) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *AccountScoreRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

//账户上下分回复
type AccountScoreReply struct {
	Score                int32    `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Balance              int64    `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountScoreReply) Reset()         { *m = AccountScoreReply{} }
func (m *AccountScoreReply) String() string { return proto.CompactTextString(m) }
func (*AccountScoreReply) ProtoMessage()    {}
func (*AccountScoreReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{174}
}

func (m *AccountScoreReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountScoreReply.Unmarshal(m, b)
}
func (m *AccountScoreReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountScoreReply.Marshal(b, m, deterministic)
}
func (m *AccountScoreReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountScoreReply.Merge(m, src)
}
func (m *AccountScoreReply) XXX_Size() int {
	return xxx_messageInfo_AccountScoreReply.Size(m)
}
func (m *AccountScoreReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountScoreReply.DiscardUnknown(m)
}

var xxx_messageInfo_AccountScoreReply proto.InternalMessageInfo

func (m *AccountScoreReply) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *AccountScoreReply) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *AccountScoreReply) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type GetAccountInfo struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountInfo) Reset()         { *m = GetAccountInfo{} }
func (m *GetAccountInfo) String() string { return proto.CompactTextString(m) }
func (*GetAccountInfo) ProtoMessage()    {}
func (*GetAccountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{175}
}

func (m *GetAccountInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountInfo.Unmarshal(m, b)
}
func (m *GetAccountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountInfo.Marshal(b, m, deterministic)
}
func (m *GetAccountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountInfo.Merge(m, src)
}
func (m *GetAccountInfo) XXX_Size() int {
	return xxx_messageInfo_GetAccountInfo.Size(m)
}
func (m *GetAccountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountInfo proto.InternalMessageInfo

func (m *GetAccountInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

// 杠花麻将, 服务器通知某玩家出牌
type PushPlayerGangHuaMahjongReqOutCard struct {
	// roomInfo 中的 doIndex
	DoIndex int32 `protobuf:"varint,1,opt,name=doIndex,proto3" json:"doIndex,omitempty"`
	// 操作前判断杠胡
	BeforeOptReply *MahjongBeforeOperateReply `protobuf:"bytes,2,opt,name=beforeOptReply,proto3" json:"beforeOptReply,omitempty"`
	EndTime        int64                      `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,4,opt,name=roomId,proto3" json:"roomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPlayerGangHuaMahjongReqOutCard) Reset()         { *m = PushPlayerGangHuaMahjongReqOutCard{} }
func (m *PushPlayerGangHuaMahjongReqOutCard) String() string { return proto.CompactTextString(m) }
func (*PushPlayerGangHuaMahjongReqOutCard) ProtoMessage()    {}
func (*PushPlayerGangHuaMahjongReqOutCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{176}
}

func (m *PushPlayerGangHuaMahjongReqOutCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPlayerGangHuaMahjongReqOutCard.Unmarshal(m, b)
}
func (m *PushPlayerGangHuaMahjongReqOutCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPlayerGangHuaMahjongReqOutCard.Marshal(b, m, deterministic)
}
func (m *PushPlayerGangHuaMahjongReqOutCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPlayerGangHuaMahjongReqOutCard.Merge(m, src)
}
func (m *PushPlayerGangHuaMahjongReqOutCard) XXX_Size() int {
	return xxx_messageInfo_PushPlayerGangHuaMahjongReqOutCard.Size(m)
}
func (m *PushPlayerGangHuaMahjongReqOutCard) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPlayerGangHuaMahjongReqOutCard.DiscardUnknown(m)
}

var xxx_messageInfo_PushPlayerGangHuaMahjongReqOutCard proto.InternalMessageInfo

func (m *PushPlayerGangHuaMahjongReqOutCard) GetDoIndex() int32 {
	if m != nil {
		return m.DoIndex
	}
	return 0
}

func (m *PushPlayerGangHuaMahjongReqOutCard) GetBeforeOptReply() *MahjongBeforeOperateReply {
	if m != nil {
		return m.BeforeOptReply
	}
	return nil
}

func (m *PushPlayerGangHuaMahjongReqOutCard) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *PushPlayerGangHuaMahjongReqOutCard) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 杠花麻将操作请求
type GangHuaMahjongDoRequest struct {
	// 想要进行的操作
	DoType GangHuaMahjongDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=GangHuaMahjongDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GangHuaMahjongDoRequest) Reset()         { *m = GangHuaMahjongDoRequest{} }
func (m *GangHuaMahjongDoRequest) String() string { return proto.CompactTextString(m) }
func (*GangHuaMahjongDoRequest) ProtoMessage()    {}
func (*GangHuaMahjongDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{177}
}

func (m *GangHuaMahjongDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GangHuaMahjongDoRequest.Unmarshal(m, b)
}
func (m *GangHuaMahjongDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GangHuaMahjongDoRequest.Marshal(b, m, deterministic)
}
func (m *GangHuaMahjongDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GangHuaMahjongDoRequest.Merge(m, src)
}
func (m *GangHuaMahjongDoRequest) XXX_Size() int {
	return xxx_messageInfo_GangHuaMahjongDoRequest.Size(m)
}
func (m *GangHuaMahjongDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GangHuaMahjongDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GangHuaMahjongDoRequest proto.InternalMessageInfo

func (m *GangHuaMahjongDoRequest) GetDoType() GangHuaMahjongDoType {
	if m != nil {
		return m.DoType
	}
	return GangHuaMahjongDoType_GangHuaMahjong_None
}

func (m *GangHuaMahjongDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 杠花麻将 杠，碰，吃等操作
type GangHuaMahjongOperateRequest struct {
	OperateType GangHuaMahjongOperateType `protobuf:"varint,1,opt,name=operateType,proto3,enum=GangHuaMahjongOperateType" json:"operateType,omitempty"`
	// 出牌时, 暗杠(手中有4张相同的牌), 选择明牌时, 才需要对 mahjong 赋值
	// 如果是直杠(手中有3张相同的牌,别人打出一张相同的牌), 补杠(碰牌区有3张牌, 摸到一张相同的牌), 就不需要对 mahjong 赋值
	Mahjong              *Mahjong `protobuf:"bytes,2,opt,name=mahjong,proto3" json:"mahjong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GangHuaMahjongOperateRequest) Reset()         { *m = GangHuaMahjongOperateRequest{} }
func (m *GangHuaMahjongOperateRequest) String() string { return proto.CompactTextString(m) }
func (*GangHuaMahjongOperateRequest) ProtoMessage()    {}
func (*GangHuaMahjongOperateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{178}
}

func (m *GangHuaMahjongOperateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GangHuaMahjongOperateRequest.Unmarshal(m, b)
}
func (m *GangHuaMahjongOperateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GangHuaMahjongOperateRequest.Marshal(b, m, deterministic)
}
func (m *GangHuaMahjongOperateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GangHuaMahjongOperateRequest.Merge(m, src)
}
func (m *GangHuaMahjongOperateRequest) XXX_Size() int {
	return xxx_messageInfo_GangHuaMahjongOperateRequest.Size(m)
}
func (m *GangHuaMahjongOperateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GangHuaMahjongOperateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GangHuaMahjongOperateRequest proto.InternalMessageInfo

func (m *GangHuaMahjongOperateRequest) GetOperateType() GangHuaMahjongOperateType {
	if m != nil {
		return m.OperateType
	}
	return GangHuaMahjongOperateType_GangHuaMahjongOperateType_None
}

func (m *GangHuaMahjongOperateRequest) GetMahjong() *Mahjong {
	if m != nil {
		return m.Mahjong
	}
	return nil
}

// 杠花麻将 杠，碰，吃等回复
type GangHuaMahjongOperateReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GangHuaMahjongOperateReply) Reset()         { *m = GangHuaMahjongOperateReply{} }
func (m *GangHuaMahjongOperateReply) String() string { return proto.CompactTextString(m) }
func (*GangHuaMahjongOperateReply) ProtoMessage()    {}
func (*GangHuaMahjongOperateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{179}
}

func (m *GangHuaMahjongOperateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GangHuaMahjongOperateReply.Unmarshal(m, b)
}
func (m *GangHuaMahjongOperateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GangHuaMahjongOperateReply.Marshal(b, m, deterministic)
}
func (m *GangHuaMahjongOperateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GangHuaMahjongOperateReply.Merge(m, src)
}
func (m *GangHuaMahjongOperateReply) XXX_Size() int {
	return xxx_messageInfo_GangHuaMahjongOperateReply.Size(m)
}
func (m *GangHuaMahjongOperateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GangHuaMahjongOperateReply.DiscardUnknown(m)
}

var xxx_messageInfo_GangHuaMahjongOperateReply proto.InternalMessageInfo

// 杠花麻将 杠，碰，吃等回复
type PushGangHuaMahjongOperateReply struct {
	OperateType GangHuaMahjongOperateType `protobuf:"varint,1,opt,name=operateType,proto3,enum=GangHuaMahjongOperateType" json:"operateType,omitempty"`
	// 当前操作的玩家的索引
	DoIndex int32 `protobuf:"varint,3,opt,name=doIndex,proto3" json:"doIndex,omitempty"`
	// 出牌区
	OutMahjongs []*Mahjong `protobuf:"bytes,4,rep,name=outMahjongs,proto3" json:"outMahjongs,omitempty"`
	// 手牌区
	HandMahjongs []*Mahjong `protobuf:"bytes,2,rep,name=handMahjongs,proto3" json:"handMahjongs,omitempty"`
	// 房间id
	RoomId string `protobuf:"bytes,5,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 碰牌区
	Tripletes []*Mahjong `protobuf:"bytes,6,rep,name=tripletes,proto3" json:"tripletes,omitempty"`
	// 杠牌区
	// 杠牌类型: 直杠, 补扛, 暗杠
	QuadrupletesAn  []*Mahjong `protobuf:"bytes,7,rep,name=quadrupletesAn,proto3" json:"quadrupletesAn,omitempty"`
	QuadrupletesZhi []*Mahjong `protobuf:"bytes,8,rep,name=quadrupletesZhi,proto3" json:"quadrupletesZhi,omitempty"`
	QuadrupletesBu  []*Mahjong `protobuf:"bytes,9,rep,name=quadrupletesBu,proto3" json:"quadrupletesBu,omitempty"`
	// 当 operateType == GangHuaMahjongOperateType_Pong 时,preDoIndex 和 preOutMahjongs 这2个字段才有意义
	// 上次出牌玩家的索引
	PreDoIndex int32 `protobuf:"varint,10,opt,name=preDoIndex,proto3" json:"preDoIndex,omitempty"`
	// 上次出牌玩家的出牌区,供客户端渲染刷新用
	PreOutMahjongs       []*Mahjong `protobuf:"bytes,11,rep,name=preOutMahjongs,proto3" json:"preOutMahjongs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PushGangHuaMahjongOperateReply) Reset()         { *m = PushGangHuaMahjongOperateReply{} }
func (m *PushGangHuaMahjongOperateReply) String() string { return proto.CompactTextString(m) }
func (*PushGangHuaMahjongOperateReply) ProtoMessage()    {}
func (*PushGangHuaMahjongOperateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{180}
}

func (m *PushGangHuaMahjongOperateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushGangHuaMahjongOperateReply.Unmarshal(m, b)
}
func (m *PushGangHuaMahjongOperateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushGangHuaMahjongOperateReply.Marshal(b, m, deterministic)
}
func (m *PushGangHuaMahjongOperateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushGangHuaMahjongOperateReply.Merge(m, src)
}
func (m *PushGangHuaMahjongOperateReply) XXX_Size() int {
	return xxx_messageInfo_PushGangHuaMahjongOperateReply.Size(m)
}
func (m *PushGangHuaMahjongOperateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PushGangHuaMahjongOperateReply.DiscardUnknown(m)
}

var xxx_messageInfo_PushGangHuaMahjongOperateReply proto.InternalMessageInfo

func (m *PushGangHuaMahjongOperateReply) GetOperateType() GangHuaMahjongOperateType {
	if m != nil {
		return m.OperateType
	}
	return GangHuaMahjongOperateType_GangHuaMahjongOperateType_None
}

func (m *PushGangHuaMahjongOperateReply) GetDoIndex() int32 {
	if m != nil {
		return m.DoIndex
	}
	return 0
}

func (m *PushGangHuaMahjongOperateReply) GetOutMahjongs() []*Mahjong {
	if m != nil {
		return m.OutMahjongs
	}
	return nil
}

func (m *PushGangHuaMahjongOperateReply) GetHandMahjongs() []*Mahjong {
	if m != nil {
		return m.HandMahjongs
	}
	return nil
}

func (m *PushGangHuaMahjongOperateReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushGangHuaMahjongOperateReply) GetTripletes() []*Mahjong {
	if m != nil {
		return m.Tripletes
	}
	return nil
}

func (m *PushGangHuaMahjongOperateReply) GetQuadrupletesAn() []*Mahjong {
	if m != nil {
		return m.QuadrupletesAn
	}
	return nil
}

func (m *PushGangHuaMahjongOperateReply) GetQuadrupletesZhi() []*Mahjong {
	if m != nil {
		return m.QuadrupletesZhi
	}
	return nil
}

func (m *PushGangHuaMahjongOperateReply) GetQuadrupletesBu() []*Mahjong {
	if m != nil {
		return m.QuadrupletesBu
	}
	return nil
}

func (m *PushGangHuaMahjongOperateReply) GetPreDoIndex() int32 {
	if m != nil {
		return m.PreDoIndex
	}
	return 0
}

func (m *PushGangHuaMahjongOperateReply) GetPreOutMahjongs() []*Mahjong {
	if m != nil {
		return m.PreOutMahjongs
	}
	return nil
}

// 杠花麻将 下庄 请求
type GangHuaMahjongXiaZhuangRequest struct {
	DownBanker           int32    `protobuf:"varint,1,opt,name=downBanker,proto3" json:"downBanker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GangHuaMahjongXiaZhuangRequest) Reset()         { *m = GangHuaMahjongXiaZhuangRequest{} }
func (m *GangHuaMahjongXiaZhuangRequest) String() string { return proto.CompactTextString(m) }
func (*GangHuaMahjongXiaZhuangRequest) ProtoMessage()    {}
func (*GangHuaMahjongXiaZhuangRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{181}
}

func (m *GangHuaMahjongXiaZhuangRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GangHuaMahjongXiaZhuangRequest.Unmarshal(m, b)
}
func (m *GangHuaMahjongXiaZhuangRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GangHuaMahjongXiaZhuangRequest.Marshal(b, m, deterministic)
}
func (m *GangHuaMahjongXiaZhuangRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GangHuaMahjongXiaZhuangRequest.Merge(m, src)
}
func (m *GangHuaMahjongXiaZhuangRequest) XXX_Size() int {
	return xxx_messageInfo_GangHuaMahjongXiaZhuangRequest.Size(m)
}
func (m *GangHuaMahjongXiaZhuangRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GangHuaMahjongXiaZhuangRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GangHuaMahjongXiaZhuangRequest proto.InternalMessageInfo

func (m *GangHuaMahjongXiaZhuangRequest) GetDownBanker() int32 {
	if m != nil {
		return m.DownBanker
	}
	return 0
}

// 杠花麻将 下庄 回执
type GangHuaMahjongXiaZhuangReply struct {
	DownBanker           int32    `protobuf:"varint,1,opt,name=downBanker,proto3" json:"downBanker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GangHuaMahjongXiaZhuangReply) Reset()         { *m = GangHuaMahjongXiaZhuangReply{} }
func (m *GangHuaMahjongXiaZhuangReply) String() string { return proto.CompactTextString(m) }
func (*GangHuaMahjongXiaZhuangReply) ProtoMessage()    {}
func (*GangHuaMahjongXiaZhuangReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{182}
}

func (m *GangHuaMahjongXiaZhuangReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GangHuaMahjongXiaZhuangReply.Unmarshal(m, b)
}
func (m *GangHuaMahjongXiaZhuangReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GangHuaMahjongXiaZhuangReply.Marshal(b, m, deterministic)
}
func (m *GangHuaMahjongXiaZhuangReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GangHuaMahjongXiaZhuangReply.Merge(m, src)
}
func (m *GangHuaMahjongXiaZhuangReply) XXX_Size() int {
	return xxx_messageInfo_GangHuaMahjongXiaZhuangReply.Size(m)
}
func (m *GangHuaMahjongXiaZhuangReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GangHuaMahjongXiaZhuangReply.DiscardUnknown(m)
}

var xxx_messageInfo_GangHuaMahjongXiaZhuangReply proto.InternalMessageInfo

func (m *GangHuaMahjongXiaZhuangReply) GetDownBanker() int32 {
	if m != nil {
		return m.DownBanker
	}
	return 0
}

// 杠花麻将 买点 请求
type GangHuaMahjongMaiDianRequest struct {
	Points               int32    `protobuf:"varint,1,opt,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GangHuaMahjongMaiDianRequest) Reset()         { *m = GangHuaMahjongMaiDianRequest{} }
func (m *GangHuaMahjongMaiDianRequest) String() string { return proto.CompactTextString(m) }
func (*GangHuaMahjongMaiDianRequest) ProtoMessage()    {}
func (*GangHuaMahjongMaiDianRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{183}
}

func (m *GangHuaMahjongMaiDianRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GangHuaMahjongMaiDianRequest.Unmarshal(m, b)
}
func (m *GangHuaMahjongMaiDianRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GangHuaMahjongMaiDianRequest.Marshal(b, m, deterministic)
}
func (m *GangHuaMahjongMaiDianRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GangHuaMahjongMaiDianRequest.Merge(m, src)
}
func (m *GangHuaMahjongMaiDianRequest) XXX_Size() int {
	return xxx_messageInfo_GangHuaMahjongMaiDianRequest.Size(m)
}
func (m *GangHuaMahjongMaiDianRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GangHuaMahjongMaiDianRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GangHuaMahjongMaiDianRequest proto.InternalMessageInfo

func (m *GangHuaMahjongMaiDianRequest) GetPoints() int32 {
	if m != nil {
		return m.Points
	}
	return 0
}

// 杠花麻将 买点 回执
type GangHuaMahjongMaiDianReply struct {
	Points               int32    `protobuf:"varint,1,opt,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GangHuaMahjongMaiDianReply) Reset()         { *m = GangHuaMahjongMaiDianReply{} }
func (m *GangHuaMahjongMaiDianReply) String() string { return proto.CompactTextString(m) }
func (*GangHuaMahjongMaiDianReply) ProtoMessage()    {}
func (*GangHuaMahjongMaiDianReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{184}
}

func (m *GangHuaMahjongMaiDianReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GangHuaMahjongMaiDianReply.Unmarshal(m, b)
}
func (m *GangHuaMahjongMaiDianReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GangHuaMahjongMaiDianReply.Marshal(b, m, deterministic)
}
func (m *GangHuaMahjongMaiDianReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GangHuaMahjongMaiDianReply.Merge(m, src)
}
func (m *GangHuaMahjongMaiDianReply) XXX_Size() int {
	return xxx_messageInfo_GangHuaMahjongMaiDianReply.Size(m)
}
func (m *GangHuaMahjongMaiDianReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GangHuaMahjongMaiDianReply.DiscardUnknown(m)
}

var xxx_messageInfo_GangHuaMahjongMaiDianReply proto.InternalMessageInfo

func (m *GangHuaMahjongMaiDianReply) GetPoints() int32 {
	if m != nil {
		return m.Points
	}
	return 0
}

type PushGangHuaMahjongBankerTimes struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 连庄数
	BankerTimes int32 `protobuf:"varint,2,opt,name=bankerTimes,proto3" json:"bankerTimes,omitempty"`
	// 庄家index
	BankerIndex          int32    `protobuf:"varint,3,opt,name=bankerIndex,proto3" json:"bankerIndex,omitempty"`
	DoTime               int64    `protobuf:"varint,4,opt,name=doTime,proto3" json:"doTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushGangHuaMahjongBankerTimes) Reset()         { *m = PushGangHuaMahjongBankerTimes{} }
func (m *PushGangHuaMahjongBankerTimes) String() string { return proto.CompactTextString(m) }
func (*PushGangHuaMahjongBankerTimes) ProtoMessage()    {}
func (*PushGangHuaMahjongBankerTimes) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{185}
}

func (m *PushGangHuaMahjongBankerTimes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushGangHuaMahjongBankerTimes.Unmarshal(m, b)
}
func (m *PushGangHuaMahjongBankerTimes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushGangHuaMahjongBankerTimes.Marshal(b, m, deterministic)
}
func (m *PushGangHuaMahjongBankerTimes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushGangHuaMahjongBankerTimes.Merge(m, src)
}
func (m *PushGangHuaMahjongBankerTimes) XXX_Size() int {
	return xxx_messageInfo_PushGangHuaMahjongBankerTimes.Size(m)
}
func (m *PushGangHuaMahjongBankerTimes) XXX_DiscardUnknown() {
	xxx_messageInfo_PushGangHuaMahjongBankerTimes.DiscardUnknown(m)
}

var xxx_messageInfo_PushGangHuaMahjongBankerTimes proto.InternalMessageInfo

func (m *PushGangHuaMahjongBankerTimes) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushGangHuaMahjongBankerTimes) GetBankerTimes() int32 {
	if m != nil {
		return m.BankerTimes
	}
	return 0
}

func (m *PushGangHuaMahjongBankerTimes) GetBankerIndex() int32 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

func (m *PushGangHuaMahjongBankerTimes) GetDoTime() int64 {
	if m != nil {
		return m.DoTime
	}
	return 0
}

// 推送杠花麻将下庄和买点的信息
type PushGangHuaMahjongBetInfo struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 下注的玩家 index
	UserIndex int32 `protobuf:"varint,2,opt,name=userIndex,proto3" json:"userIndex,omitempty"`
	// 是否下庄
	DownBanker int32 `protobuf:"varint,3,opt,name=downBanker,proto3" json:"downBanker,omitempty"`
	// 买点数
	Points int32 `protobuf:"varint,4,opt,name=points,proto3" json:"points,omitempty"`
	// true 为买点, false 为下庄
	IsBuyPoint           bool     `protobuf:"varint,5,opt,name=isBuyPoint,proto3" json:"isBuyPoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushGangHuaMahjongBetInfo) Reset()         { *m = PushGangHuaMahjongBetInfo{} }
func (m *PushGangHuaMahjongBetInfo) String() string { return proto.CompactTextString(m) }
func (*PushGangHuaMahjongBetInfo) ProtoMessage()    {}
func (*PushGangHuaMahjongBetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{186}
}

func (m *PushGangHuaMahjongBetInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushGangHuaMahjongBetInfo.Unmarshal(m, b)
}
func (m *PushGangHuaMahjongBetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushGangHuaMahjongBetInfo.Marshal(b, m, deterministic)
}
func (m *PushGangHuaMahjongBetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushGangHuaMahjongBetInfo.Merge(m, src)
}
func (m *PushGangHuaMahjongBetInfo) XXX_Size() int {
	return xxx_messageInfo_PushGangHuaMahjongBetInfo.Size(m)
}
func (m *PushGangHuaMahjongBetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PushGangHuaMahjongBetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PushGangHuaMahjongBetInfo proto.InternalMessageInfo

func (m *PushGangHuaMahjongBetInfo) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushGangHuaMahjongBetInfo) GetUserIndex() int32 {
	if m != nil {
		return m.UserIndex
	}
	return 0
}

func (m *PushGangHuaMahjongBetInfo) GetDownBanker() int32 {
	if m != nil {
		return m.DownBanker
	}
	return 0
}

func (m *PushGangHuaMahjongBetInfo) GetPoints() int32 {
	if m != nil {
		return m.Points
	}
	return 0
}

func (m *PushGangHuaMahjongBetInfo) GetIsBuyPoint() bool {
	if m != nil {
		return m.IsBuyPoint
	}
	return false
}

//礼包详情 礼包内容id-状态-内容列表-备注
type GiftInfo struct {
	GiftId  string     `protobuf:"bytes,1,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"`
	Status  GiftStatus `protobuf:"varint,2,opt,name=Status,proto3,enum=GiftStatus" json:"Status,omitempty"`
	Content *GiftList  `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	//备注
	Remark               string   `protobuf:"bytes,4,opt,name=Remark,proto3" json:"Remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GiftInfo) Reset()         { *m = GiftInfo{} }
func (m *GiftInfo) String() string { return proto.CompactTextString(m) }
func (*GiftInfo) ProtoMessage()    {}
func (*GiftInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{187}
}

func (m *GiftInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GiftInfo.Unmarshal(m, b)
}
func (m *GiftInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GiftInfo.Marshal(b, m, deterministic)
}
func (m *GiftInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GiftInfo.Merge(m, src)
}
func (m *GiftInfo) XXX_Size() int {
	return xxx_messageInfo_GiftInfo.Size(m)
}
func (m *GiftInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GiftInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GiftInfo proto.InternalMessageInfo

func (m *GiftInfo) GetGiftId() string {
	if m != nil {
		return m.GiftId
	}
	return ""
}

func (m *GiftInfo) GetStatus() GiftStatus {
	if m != nil {
		return m.Status
	}
	return GiftStatus_Can_not
}

func (m *GiftInfo) GetContent() *GiftList {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *GiftInfo) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

//礼包内容列表 -- 里面有礼物内容数组
type GiftList struct {
	Gifts                []*GiftContentInfo `protobuf:"bytes,1,rep,name=gifts,proto3" json:"gifts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GiftList) Reset()         { *m = GiftList{} }
func (m *GiftList) String() string { return proto.CompactTextString(m) }
func (*GiftList) ProtoMessage()    {}
func (*GiftList) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{188}
}

func (m *GiftList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GiftList.Unmarshal(m, b)
}
func (m *GiftList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GiftList.Marshal(b, m, deterministic)
}
func (m *GiftList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GiftList.Merge(m, src)
}
func (m *GiftList) XXX_Size() int {
	return xxx_messageInfo_GiftList.Size(m)
}
func (m *GiftList) XXX_DiscardUnknown() {
	xxx_messageInfo_GiftList.DiscardUnknown(m)
}

var xxx_messageInfo_GiftList proto.InternalMessageInfo

func (m *GiftList) GetGifts() []*GiftContentInfo {
	if m != nil {
		return m.Gifts
	}
	return nil
}

//礼包内容详情 -- 暂时
type GiftContentInfo struct {
	// 奖励的类型 -如金币
	RewardType RewardType `protobuf:"varint,1,opt,name=rewardType,proto3,enum=RewardType" json:"rewardType,omitempty"`
	//  奖励的num -如100
	Num                  int64    `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GiftContentInfo) Reset()         { *m = GiftContentInfo{} }
func (m *GiftContentInfo) String() string { return proto.CompactTextString(m) }
func (*GiftContentInfo) ProtoMessage()    {}
func (*GiftContentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{189}
}

func (m *GiftContentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GiftContentInfo.Unmarshal(m, b)
}
func (m *GiftContentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GiftContentInfo.Marshal(b, m, deterministic)
}
func (m *GiftContentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GiftContentInfo.Merge(m, src)
}
func (m *GiftContentInfo) XXX_Size() int {
	return xxx_messageInfo_GiftContentInfo.Size(m)
}
func (m *GiftContentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GiftContentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GiftContentInfo proto.InternalMessageInfo

func (m *GiftContentInfo) GetRewardType() RewardType {
	if m != nil {
		return m.RewardType
	}
	return RewardType_RewardNone
}

func (m *GiftContentInfo) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

//礼包详情       礼包类型+其详细信息,数组长度必须与类型相对应
type GetGiftInfo struct {
	GiftType             GiftType    `protobuf:"varint,1,opt,name=gift_type,json=giftType,proto3,enum=GiftType" json:"gift_type,omitempty"`
	GiftInfo             []*GiftInfo `protobuf:"bytes,2,rep,name=gift_info,json=giftInfo,proto3" json:"gift_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetGiftInfo) Reset()         { *m = GetGiftInfo{} }
func (m *GetGiftInfo) String() string { return proto.CompactTextString(m) }
func (*GetGiftInfo) ProtoMessage()    {}
func (*GetGiftInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{190}
}

func (m *GetGiftInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGiftInfo.Unmarshal(m, b)
}
func (m *GetGiftInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGiftInfo.Marshal(b, m, deterministic)
}
func (m *GetGiftInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGiftInfo.Merge(m, src)
}
func (m *GetGiftInfo) XXX_Size() int {
	return xxx_messageInfo_GetGiftInfo.Size(m)
}
func (m *GetGiftInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGiftInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GetGiftInfo proto.InternalMessageInfo

func (m *GetGiftInfo) GetGiftType() GiftType {
	if m != nil {
		return m.GiftType
	}
	return GiftType_GiftNone
}

func (m *GetGiftInfo) GetGiftInfo() []*GiftInfo {
	if m != nil {
		return m.GiftInfo
	}
	return nil
}

//获取礼包详情申请
type GetGiftInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGiftInfoRequest) Reset()         { *m = GetGiftInfoRequest{} }
func (m *GetGiftInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetGiftInfoRequest) ProtoMessage()    {}
func (*GetGiftInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{191}
}

func (m *GetGiftInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGiftInfoRequest.Unmarshal(m, b)
}
func (m *GetGiftInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGiftInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetGiftInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGiftInfoRequest.Merge(m, src)
}
func (m *GetGiftInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetGiftInfoRequest.Size(m)
}
func (m *GetGiftInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGiftInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGiftInfoRequest proto.InternalMessageInfo

//获取礼包详情回复      礼包详情数组
type GetGiftInfoReply struct {
	GiftInfos            []*GetGiftInfo `protobuf:"bytes,1,rep,name=gift_infos,json=giftInfos,proto3" json:"gift_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetGiftInfoReply) Reset()         { *m = GetGiftInfoReply{} }
func (m *GetGiftInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetGiftInfoReply) ProtoMessage()    {}
func (*GetGiftInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{192}
}

func (m *GetGiftInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGiftInfoReply.Unmarshal(m, b)
}
func (m *GetGiftInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGiftInfoReply.Marshal(b, m, deterministic)
}
func (m *GetGiftInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGiftInfoReply.Merge(m, src)
}
func (m *GetGiftInfoReply) XXX_Size() int {
	return xxx_messageInfo_GetGiftInfoReply.Size(m)
}
func (m *GetGiftInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGiftInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetGiftInfoReply proto.InternalMessageInfo

func (m *GetGiftInfoReply) GetGiftInfos() []*GetGiftInfo {
	if m != nil {
		return m.GiftInfos
	}
	return nil
}

//领取签到礼包申请      礼包类型-该礼包数组下标
type GetSignGiftRequest struct {
	GiftType             GiftType `protobuf:"varint,1,opt,name=gift_type,json=giftType,proto3,enum=GiftType" json:"gift_type,omitempty"`
	GiftSub              int32    `protobuf:"varint,2,opt,name=gift_sub,json=giftSub,proto3" json:"gift_sub,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSignGiftRequest) Reset()         { *m = GetSignGiftRequest{} }
func (m *GetSignGiftRequest) String() string { return proto.CompactTextString(m) }
func (*GetSignGiftRequest) ProtoMessage()    {}
func (*GetSignGiftRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{193}
}

func (m *GetSignGiftRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSignGiftRequest.Unmarshal(m, b)
}
func (m *GetSignGiftRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSignGiftRequest.Marshal(b, m, deterministic)
}
func (m *GetSignGiftRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSignGiftRequest.Merge(m, src)
}
func (m *GetSignGiftRequest) XXX_Size() int {
	return xxx_messageInfo_GetSignGiftRequest.Size(m)
}
func (m *GetSignGiftRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSignGiftRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSignGiftRequest proto.InternalMessageInfo

func (m *GetSignGiftRequest) GetGiftType() GiftType {
	if m != nil {
		return m.GiftType
	}
	return GiftType_GiftNone
}

func (m *GetSignGiftRequest) GetGiftSub() int32 {
	if m != nil {
		return m.GiftSub
	}
	return 0
}

//领取签到礼包回复      是否成功-该礼包下标id-礼包内容
type GetSignGiftReply struct {
	IsSuccess            bool      `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	GiftSub              int32     `protobuf:"varint,2,opt,name=gift_sub,json=giftSub,proto3" json:"gift_sub,omitempty"`
	GiftType             GiftType  `protobuf:"varint,3,opt,name=gift_type,json=giftType,proto3,enum=GiftType" json:"gift_type,omitempty"`
	Content              *GiftList `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetSignGiftReply) Reset()         { *m = GetSignGiftReply{} }
func (m *GetSignGiftReply) String() string { return proto.CompactTextString(m) }
func (*GetSignGiftReply) ProtoMessage()    {}
func (*GetSignGiftReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{194}
}

func (m *GetSignGiftReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSignGiftReply.Unmarshal(m, b)
}
func (m *GetSignGiftReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSignGiftReply.Marshal(b, m, deterministic)
}
func (m *GetSignGiftReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSignGiftReply.Merge(m, src)
}
func (m *GetSignGiftReply) XXX_Size() int {
	return xxx_messageInfo_GetSignGiftReply.Size(m)
}
func (m *GetSignGiftReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSignGiftReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetSignGiftReply proto.InternalMessageInfo

func (m *GetSignGiftReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *GetSignGiftReply) GetGiftSub() int32 {
	if m != nil {
		return m.GiftSub
	}
	return 0
}

func (m *GetSignGiftReply) GetGiftType() GiftType {
	if m != nil {
		return m.GiftType
	}
	return GiftType_GiftNone
}

func (m *GetSignGiftReply) GetContent() *GiftList {
	if m != nil {
		return m.Content
	}
	return nil
}

//获取排行榜请求
type GetLeaderBoardRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeaderBoardRequest) Reset()         { *m = GetLeaderBoardRequest{} }
func (m *GetLeaderBoardRequest) String() string { return proto.CompactTextString(m) }
func (*GetLeaderBoardRequest) ProtoMessage()    {}
func (*GetLeaderBoardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{195}
}

func (m *GetLeaderBoardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeaderBoardRequest.Unmarshal(m, b)
}
func (m *GetLeaderBoardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeaderBoardRequest.Marshal(b, m, deterministic)
}
func (m *GetLeaderBoardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeaderBoardRequest.Merge(m, src)
}
func (m *GetLeaderBoardRequest) XXX_Size() int {
	return xxx_messageInfo_GetLeaderBoardRequest.Size(m)
}
func (m *GetLeaderBoardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeaderBoardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeaderBoardRequest proto.InternalMessageInfo

//获取排行榜回复
type GetLeaderBoardReply struct {
	LeaderBoards         []*LeaderBoardInfo `protobuf:"bytes,1,rep,name=LeaderBoards,proto3" json:"LeaderBoards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetLeaderBoardReply) Reset()         { *m = GetLeaderBoardReply{} }
func (m *GetLeaderBoardReply) String() string { return proto.CompactTextString(m) }
func (*GetLeaderBoardReply) ProtoMessage()    {}
func (*GetLeaderBoardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{196}
}

func (m *GetLeaderBoardReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeaderBoardReply.Unmarshal(m, b)
}
func (m *GetLeaderBoardReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeaderBoardReply.Marshal(b, m, deterministic)
}
func (m *GetLeaderBoardReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeaderBoardReply.Merge(m, src)
}
func (m *GetLeaderBoardReply) XXX_Size() int {
	return xxx_messageInfo_GetLeaderBoardReply.Size(m)
}
func (m *GetLeaderBoardReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeaderBoardReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeaderBoardReply proto.InternalMessageInfo

func (m *GetLeaderBoardReply) GetLeaderBoards() []*LeaderBoardInfo {
	if m != nil {
		return m.LeaderBoards
	}
	return nil
}

//排行榜详情
type LeaderBoardInfo struct {
	// 排行榜类型
	Type LeaderBoardType `protobuf:"varint,1,opt,name=Type,proto3,enum=LeaderBoardType" json:"Type,omitempty"`
	// 目前 排行榜前30的排行榜用户信息
	LeaderBoards []*LeaderBoardPlayerInfo `protobuf:"bytes,2,rep,name=LeaderBoards,proto3" json:"LeaderBoards,omitempty"`
	// 申请人的排行榜用户信息
	SelfBoards           *LeaderBoardPlayerInfo `protobuf:"bytes,3,opt,name=SelfBoards,proto3" json:"SelfBoards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *LeaderBoardInfo) Reset()         { *m = LeaderBoardInfo{} }
func (m *LeaderBoardInfo) String() string { return proto.CompactTextString(m) }
func (*LeaderBoardInfo) ProtoMessage()    {}
func (*LeaderBoardInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{197}
}

func (m *LeaderBoardInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaderBoardInfo.Unmarshal(m, b)
}
func (m *LeaderBoardInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaderBoardInfo.Marshal(b, m, deterministic)
}
func (m *LeaderBoardInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaderBoardInfo.Merge(m, src)
}
func (m *LeaderBoardInfo) XXX_Size() int {
	return xxx_messageInfo_LeaderBoardInfo.Size(m)
}
func (m *LeaderBoardInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaderBoardInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LeaderBoardInfo proto.InternalMessageInfo

func (m *LeaderBoardInfo) GetType() LeaderBoardType {
	if m != nil {
		return m.Type
	}
	return LeaderBoardType_Type_None
}

func (m *LeaderBoardInfo) GetLeaderBoards() []*LeaderBoardPlayerInfo {
	if m != nil {
		return m.LeaderBoards
	}
	return nil
}

func (m *LeaderBoardInfo) GetSelfBoards() *LeaderBoardPlayerInfo {
	if m != nil {
		return m.SelfBoards
	}
	return nil
}

//排行榜用户信息
type LeaderBoardPlayerInfo struct {
	// 名次
	Ranking int64 `protobuf:"varint,1,opt,name=Ranking,proto3" json:"Ranking,omitempty"`
	// 用户id
	Uuid string `protobuf:"bytes,2,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
	// 用户vip等级
	VipLevel int32 `protobuf:"varint,3,opt,name=VipLevel,proto3" json:"VipLevel,omitempty"`
	// 用户名字
	Name string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	// 金额-或者其他？
	Value string `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"`
	// 在线情况
	IsOnline bool `protobuf:"varint,6,opt,name=IsOnline,proto3" json:"IsOnline,omitempty"`
	// 用户性别
	Sex int32 `protobuf:"varint,7,opt,name=Sex,proto3" json:"Sex,omitempty"`
	// 用户头像
	HeadUrl              string   `protobuf:"bytes,8,opt,name=HeadUrl,proto3" json:"HeadUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaderBoardPlayerInfo) Reset()         { *m = LeaderBoardPlayerInfo{} }
func (m *LeaderBoardPlayerInfo) String() string { return proto.CompactTextString(m) }
func (*LeaderBoardPlayerInfo) ProtoMessage()    {}
func (*LeaderBoardPlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{198}
}

func (m *LeaderBoardPlayerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaderBoardPlayerInfo.Unmarshal(m, b)
}
func (m *LeaderBoardPlayerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaderBoardPlayerInfo.Marshal(b, m, deterministic)
}
func (m *LeaderBoardPlayerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaderBoardPlayerInfo.Merge(m, src)
}
func (m *LeaderBoardPlayerInfo) XXX_Size() int {
	return xxx_messageInfo_LeaderBoardPlayerInfo.Size(m)
}
func (m *LeaderBoardPlayerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaderBoardPlayerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LeaderBoardPlayerInfo proto.InternalMessageInfo

func (m *LeaderBoardPlayerInfo) GetRanking() int64 {
	if m != nil {
		return m.Ranking
	}
	return 0
}

func (m *LeaderBoardPlayerInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *LeaderBoardPlayerInfo) GetVipLevel() int32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

func (m *LeaderBoardPlayerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LeaderBoardPlayerInfo) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *LeaderBoardPlayerInfo) GetIsOnline() bool {
	if m != nil {
		return m.IsOnline
	}
	return false
}

func (m *LeaderBoardPlayerInfo) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *LeaderBoardPlayerInfo) GetHeadUrl() string {
	if m != nil {
		return m.HeadUrl
	}
	return ""
}

//获取礼包配置申请
type GetGiftConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGiftConfigRequest) Reset()         { *m = GetGiftConfigRequest{} }
func (m *GetGiftConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetGiftConfigRequest) ProtoMessage()    {}
func (*GetGiftConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{199}
}

func (m *GetGiftConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGiftConfigRequest.Unmarshal(m, b)
}
func (m *GetGiftConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGiftConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetGiftConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGiftConfigRequest.Merge(m, src)
}
func (m *GetGiftConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetGiftConfigRequest.Size(m)
}
func (m *GetGiftConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGiftConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGiftConfigRequest proto.InternalMessageInfo

//获取礼包配置回复
type GetGiftConfigReply struct {
	Gifts                []*GiftInfo `protobuf:"bytes,1,rep,name=gifts,proto3" json:"gifts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetGiftConfigReply) Reset()         { *m = GetGiftConfigReply{} }
func (m *GetGiftConfigReply) String() string { return proto.CompactTextString(m) }
func (*GetGiftConfigReply) ProtoMessage()    {}
func (*GetGiftConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{200}
}

func (m *GetGiftConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGiftConfigReply.Unmarshal(m, b)
}
func (m *GetGiftConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGiftConfigReply.Marshal(b, m, deterministic)
}
func (m *GetGiftConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGiftConfigReply.Merge(m, src)
}
func (m *GetGiftConfigReply) XXX_Size() int {
	return xxx_messageInfo_GetGiftConfigReply.Size(m)
}
func (m *GetGiftConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGiftConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetGiftConfigReply proto.InternalMessageInfo

func (m *GetGiftConfigReply) GetGifts() []*GiftInfo {
	if m != nil {
		return m.Gifts
	}
	return nil
}

//修改礼包配置申请
type SetGiftConfigRequest struct {
	Gifts                *GiftInfo `protobuf:"bytes,1,opt,name=gifts,proto3" json:"gifts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SetGiftConfigRequest) Reset()         { *m = SetGiftConfigRequest{} }
func (m *SetGiftConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetGiftConfigRequest) ProtoMessage()    {}
func (*SetGiftConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{201}
}

func (m *SetGiftConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGiftConfigRequest.Unmarshal(m, b)
}
func (m *SetGiftConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGiftConfigRequest.Marshal(b, m, deterministic)
}
func (m *SetGiftConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGiftConfigRequest.Merge(m, src)
}
func (m *SetGiftConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetGiftConfigRequest.Size(m)
}
func (m *SetGiftConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGiftConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetGiftConfigRequest proto.InternalMessageInfo

func (m *SetGiftConfigRequest) GetGifts() *GiftInfo {
	if m != nil {
		return m.Gifts
	}
	return nil
}

//修改礼包配置回复
type SetGiftConfigReply struct {
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetGiftConfigReply) Reset()         { *m = SetGiftConfigReply{} }
func (m *SetGiftConfigReply) String() string { return proto.CompactTextString(m) }
func (*SetGiftConfigReply) ProtoMessage()    {}
func (*SetGiftConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{202}
}

func (m *SetGiftConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGiftConfigReply.Unmarshal(m, b)
}
func (m *SetGiftConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGiftConfigReply.Marshal(b, m, deterministic)
}
func (m *SetGiftConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGiftConfigReply.Merge(m, src)
}
func (m *SetGiftConfigReply) XXX_Size() int {
	return xxx_messageInfo_SetGiftConfigReply.Size(m)
}
func (m *SetGiftConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGiftConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetGiftConfigReply proto.InternalMessageInfo

func (m *SetGiftConfigReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

//新增礼包配置申请
type InsertGiftConfigRequest struct {
	Gifts                *GiftInfo `protobuf:"bytes,1,opt,name=gifts,proto3" json:"gifts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *InsertGiftConfigRequest) Reset()         { *m = InsertGiftConfigRequest{} }
func (m *InsertGiftConfigRequest) String() string { return proto.CompactTextString(m) }
func (*InsertGiftConfigRequest) ProtoMessage()    {}
func (*InsertGiftConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{203}
}

func (m *InsertGiftConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertGiftConfigRequest.Unmarshal(m, b)
}
func (m *InsertGiftConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertGiftConfigRequest.Marshal(b, m, deterministic)
}
func (m *InsertGiftConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertGiftConfigRequest.Merge(m, src)
}
func (m *InsertGiftConfigRequest) XXX_Size() int {
	return xxx_messageInfo_InsertGiftConfigRequest.Size(m)
}
func (m *InsertGiftConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertGiftConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertGiftConfigRequest proto.InternalMessageInfo

func (m *InsertGiftConfigRequest) GetGifts() *GiftInfo {
	if m != nil {
		return m.Gifts
	}
	return nil
}

//新增礼包配置回复
type InsertGiftConfigReply struct {
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertGiftConfigReply) Reset()         { *m = InsertGiftConfigReply{} }
func (m *InsertGiftConfigReply) String() string { return proto.CompactTextString(m) }
func (*InsertGiftConfigReply) ProtoMessage()    {}
func (*InsertGiftConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{204}
}

func (m *InsertGiftConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertGiftConfigReply.Unmarshal(m, b)
}
func (m *InsertGiftConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertGiftConfigReply.Marshal(b, m, deterministic)
}
func (m *InsertGiftConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertGiftConfigReply.Merge(m, src)
}
func (m *InsertGiftConfigReply) XXX_Size() int {
	return xxx_messageInfo_InsertGiftConfigReply.Size(m)
}
func (m *InsertGiftConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertGiftConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_InsertGiftConfigReply proto.InternalMessageInfo

func (m *InsertGiftConfigReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

//删除礼包配置申请
type DeleteGiftConfigRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGiftConfigRequest) Reset()         { *m = DeleteGiftConfigRequest{} }
func (m *DeleteGiftConfigRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteGiftConfigRequest) ProtoMessage()    {}
func (*DeleteGiftConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{205}
}

func (m *DeleteGiftConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGiftConfigRequest.Unmarshal(m, b)
}
func (m *DeleteGiftConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGiftConfigRequest.Marshal(b, m, deterministic)
}
func (m *DeleteGiftConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGiftConfigRequest.Merge(m, src)
}
func (m *DeleteGiftConfigRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteGiftConfigRequest.Size(m)
}
func (m *DeleteGiftConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGiftConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGiftConfigRequest proto.InternalMessageInfo

func (m *DeleteGiftConfigRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

//删除礼包配置回复
type DeleteGiftConfigReply struct {
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGiftConfigReply) Reset()         { *m = DeleteGiftConfigReply{} }
func (m *DeleteGiftConfigReply) String() string { return proto.CompactTextString(m) }
func (*DeleteGiftConfigReply) ProtoMessage()    {}
func (*DeleteGiftConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{206}
}

func (m *DeleteGiftConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGiftConfigReply.Unmarshal(m, b)
}
func (m *DeleteGiftConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGiftConfigReply.Marshal(b, m, deterministic)
}
func (m *DeleteGiftConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGiftConfigReply.Merge(m, src)
}
func (m *DeleteGiftConfigReply) XXX_Size() int {
	return xxx_messageInfo_DeleteGiftConfigReply.Size(m)
}
func (m *DeleteGiftConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGiftConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGiftConfigReply proto.InternalMessageInfo

func (m *DeleteGiftConfigReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

//跑马灯配置
type HorseRaceLampConfig struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	//内容
	Content    string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	CreateTime int64  `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime int64  `protobuf:"varint,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	//播放跑马灯次数
	Frequency int64 `protobuf:"varint,5,opt,name=frequency,proto3" json:"frequency,omitempty"`
	//跑马灯cd
	CdTime int64 `protobuf:"varint,6,opt,name=cd_time,json=cdTime,proto3" json:"cd_time,omitempty"`
	//消息推送的类型
	MessageType HorseRaceLampType `protobuf:"varint,7,opt,name=message_type,json=messageType,proto3,enum=HorseRaceLampType" json:"message_type,omitempty"`
	//跑马灯走动每帧移动距离
	Movedis int64 `protobuf:"varint,8,opt,name=movedis,proto3" json:"movedis,omitempty"`
	//跑马灯走动帧率
	Moveft int64 `protobuf:"varint,9,opt,name=moveft,proto3" json:"moveft,omitempty"`
	//跑马灯开始播放时间
	StartTime int64 `protobuf:"varint,10,opt,name=startTime,proto3" json:"startTime,omitempty"`
	//玩家昵称
	PlayerName string `protobuf:"bytes,11,opt,name=playerName,proto3" json:"playerName,omitempty"`
	//游戏类型
	GameType GameType `protobuf:"varint,12,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	//赢得的钱
	WinMoney int64 `protobuf:"varint,13,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	//消息推送的操作类型
	PullType             HorseRaceLampType `protobuf:"varint,14,opt,name=pull_type,json=pullType,proto3,enum=HorseRaceLampType" json:"pull_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HorseRaceLampConfig) Reset()         { *m = HorseRaceLampConfig{} }
func (m *HorseRaceLampConfig) String() string { return proto.CompactTextString(m) }
func (*HorseRaceLampConfig) ProtoMessage()    {}
func (*HorseRaceLampConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{207}
}

func (m *HorseRaceLampConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorseRaceLampConfig.Unmarshal(m, b)
}
func (m *HorseRaceLampConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorseRaceLampConfig.Marshal(b, m, deterministic)
}
func (m *HorseRaceLampConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorseRaceLampConfig.Merge(m, src)
}
func (m *HorseRaceLampConfig) XXX_Size() int {
	return xxx_messageInfo_HorseRaceLampConfig.Size(m)
}
func (m *HorseRaceLampConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HorseRaceLampConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HorseRaceLampConfig proto.InternalMessageInfo

func (m *HorseRaceLampConfig) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *HorseRaceLampConfig) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *HorseRaceLampConfig) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *HorseRaceLampConfig) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *HorseRaceLampConfig) GetFrequency() int64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *HorseRaceLampConfig) GetCdTime() int64 {
	if m != nil {
		return m.CdTime
	}
	return 0
}

func (m *HorseRaceLampConfig) GetMessageType() HorseRaceLampType {
	if m != nil {
		return m.MessageType
	}
	return HorseRaceLampType_system_push
}

func (m *HorseRaceLampConfig) GetMovedis() int64 {
	if m != nil {
		return m.Movedis
	}
	return 0
}

func (m *HorseRaceLampConfig) GetMoveft() int64 {
	if m != nil {
		return m.Moveft
	}
	return 0
}

func (m *HorseRaceLampConfig) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *HorseRaceLampConfig) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *HorseRaceLampConfig) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *HorseRaceLampConfig) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

func (m *HorseRaceLampConfig) GetPullType() HorseRaceLampType {
	if m != nil {
		return m.PullType
	}
	return HorseRaceLampType_system_push
}

//跑马灯配置(打旋)
type HorseRaceLamp struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	//内容
	Content    string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	CreateTime int64  `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime int64  `protobuf:"varint,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	//播放跑马灯次数
	Frequency int64 `protobuf:"varint,5,opt,name=frequency,proto3" json:"frequency,omitempty"`
	//跑马灯cd
	CdTime int64 `protobuf:"varint,6,opt,name=cd_time,json=cdTime,proto3" json:"cd_time,omitempty"`
	//消息推送的类型
	MessageType HorseRaceLampType `protobuf:"varint,7,opt,name=message_type,json=messageType,proto3,enum=HorseRaceLampType" json:"message_type,omitempty"`
	//跑马灯走动每帧移动距离
	Movedis int64 `protobuf:"varint,8,opt,name=movedis,proto3" json:"movedis,omitempty"`
	//跑马灯走动帧率
	Moveft int64 `protobuf:"varint,9,opt,name=moveft,proto3" json:"moveft,omitempty"`
	//跑马灯开始播放时间
	StartTime int64 `protobuf:"varint,10,opt,name=startTime,proto3" json:"startTime,omitempty"`
	//玩家昵称
	PlayerName string `protobuf:"bytes,11,opt,name=playerName,proto3" json:"playerName,omitempty"`
	//游戏类型
	GameType GameType `protobuf:"varint,12,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	//赢得的钱
	WinMoney int64 `protobuf:"varint,13,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	//消息推送的操作类型
	PullType HorseRaceLampType `protobuf:"varint,14,opt,name=pull_type,json=pullType,proto3,enum=HorseRaceLampType" json:"pull_type,omitempty"`
	//房间uuid
	RoomUuid string `protobuf:"bytes,15,opt,name=roomUuid,proto3" json:"roomUuid,omitempty"`
	//中奖金额
	Prize int64 `protobuf:"varint,16,opt,name=prize,proto3" json:"prize,omitempty"`
	//中奖牌型
	DaXuanPokerTypePrizeType DaXuanPokerTypePrizeType `protobuf:"varint,17,opt,name=daXuanPokerTypePrizeType,proto3,enum=DaXuanPokerTypePrizeType" json:"daXuanPokerTypePrizeType,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                 `json:"-"`
	XXX_unrecognized         []byte                   `json:"-"`
	XXX_sizecache            int32                    `json:"-"`
}

func (m *HorseRaceLamp) Reset()         { *m = HorseRaceLamp{} }
func (m *HorseRaceLamp) String() string { return proto.CompactTextString(m) }
func (*HorseRaceLamp) ProtoMessage()    {}
func (*HorseRaceLamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{208}
}

func (m *HorseRaceLamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorseRaceLamp.Unmarshal(m, b)
}
func (m *HorseRaceLamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorseRaceLamp.Marshal(b, m, deterministic)
}
func (m *HorseRaceLamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorseRaceLamp.Merge(m, src)
}
func (m *HorseRaceLamp) XXX_Size() int {
	return xxx_messageInfo_HorseRaceLamp.Size(m)
}
func (m *HorseRaceLamp) XXX_DiscardUnknown() {
	xxx_messageInfo_HorseRaceLamp.DiscardUnknown(m)
}

var xxx_messageInfo_HorseRaceLamp proto.InternalMessageInfo

func (m *HorseRaceLamp) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *HorseRaceLamp) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *HorseRaceLamp) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *HorseRaceLamp) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *HorseRaceLamp) GetFrequency() int64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *HorseRaceLamp) GetCdTime() int64 {
	if m != nil {
		return m.CdTime
	}
	return 0
}

func (m *HorseRaceLamp) GetMessageType() HorseRaceLampType {
	if m != nil {
		return m.MessageType
	}
	return HorseRaceLampType_system_push
}

func (m *HorseRaceLamp) GetMovedis() int64 {
	if m != nil {
		return m.Movedis
	}
	return 0
}

func (m *HorseRaceLamp) GetMoveft() int64 {
	if m != nil {
		return m.Moveft
	}
	return 0
}

func (m *HorseRaceLamp) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *HorseRaceLamp) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *HorseRaceLamp) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *HorseRaceLamp) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

func (m *HorseRaceLamp) GetPullType() HorseRaceLampType {
	if m != nil {
		return m.PullType
	}
	return HorseRaceLampType_system_push
}

func (m *HorseRaceLamp) GetRoomUuid() string {
	if m != nil {
		return m.RoomUuid
	}
	return ""
}

func (m *HorseRaceLamp) GetPrize() int64 {
	if m != nil {
		return m.Prize
	}
	return 0
}

func (m *HorseRaceLamp) GetDaXuanPokerTypePrizeType() DaXuanPokerTypePrizeType {
	if m != nil {
		return m.DaXuanPokerTypePrizeType
	}
	return DaXuanPokerTypePrizeType_DaXuanPokerTypePrizeType_None
}

//商品配置
type ProductConfig struct {
	// 商品的uuid
	ProductUuid string `protobuf:"bytes,1,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	// 商品的类型
	ProductType ProductType `protobuf:"varint,2,opt,name=productType,proto3,enum=ProductType" json:"productType,omitempty"`
	// 商品数量
	ProductNum int64 `protobuf:"varint,4,opt,name=productNum,proto3" json:"productNum,omitempty"`
	// 商品原价格
	OriginalPrice float32 `protobuf:"fixed32,5,opt,name=OriginalPrice,proto3" json:"OriginalPrice,omitempty"`
	// 商品现价格
	PresentPrice float32 `protobuf:"fixed32,6,opt,name=PresentPrice,proto3" json:"PresentPrice,omitempty"`
	//商品币种
	Currency             Currency `protobuf:"varint,7,opt,name=Currency,proto3,enum=Currency" json:"Currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductConfig) Reset()         { *m = ProductConfig{} }
func (m *ProductConfig) String() string { return proto.CompactTextString(m) }
func (*ProductConfig) ProtoMessage()    {}
func (*ProductConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{209}
}

func (m *ProductConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductConfig.Unmarshal(m, b)
}
func (m *ProductConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductConfig.Marshal(b, m, deterministic)
}
func (m *ProductConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductConfig.Merge(m, src)
}
func (m *ProductConfig) XXX_Size() int {
	return xxx_messageInfo_ProductConfig.Size(m)
}
func (m *ProductConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProductConfig proto.InternalMessageInfo

func (m *ProductConfig) GetProductUuid() string {
	if m != nil {
		return m.ProductUuid
	}
	return ""
}

func (m *ProductConfig) GetProductType() ProductType {
	if m != nil {
		return m.ProductType
	}
	return ProductType_ProductType_None
}

func (m *ProductConfig) GetProductNum() int64 {
	if m != nil {
		return m.ProductNum
	}
	return 0
}

func (m *ProductConfig) GetOriginalPrice() float32 {
	if m != nil {
		return m.OriginalPrice
	}
	return 0
}

func (m *ProductConfig) GetPresentPrice() float32 {
	if m != nil {
		return m.PresentPrice
	}
	return 0
}

func (m *ProductConfig) GetCurrency() Currency {
	if m != nil {
		return m.Currency
	}
	return Currency_Currency_None
}

//获取跑马灯配置申请
type GetHorseRaceLampConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHorseRaceLampConfigRequest) Reset()         { *m = GetHorseRaceLampConfigRequest{} }
func (m *GetHorseRaceLampConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetHorseRaceLampConfigRequest) ProtoMessage()    {}
func (*GetHorseRaceLampConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{210}
}

func (m *GetHorseRaceLampConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHorseRaceLampConfigRequest.Unmarshal(m, b)
}
func (m *GetHorseRaceLampConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHorseRaceLampConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetHorseRaceLampConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHorseRaceLampConfigRequest.Merge(m, src)
}
func (m *GetHorseRaceLampConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetHorseRaceLampConfigRequest.Size(m)
}
func (m *GetHorseRaceLampConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHorseRaceLampConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHorseRaceLampConfigRequest proto.InternalMessageInfo

//获取跑马灯配置回复
type GetHorseRaceLampConfigReply struct {
	HorseRaceLamps       []*HorseRaceLampConfig `protobuf:"bytes,1,rep,name=HorseRaceLamps,proto3" json:"HorseRaceLamps,omitempty"`
	Time                 int64                  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetHorseRaceLampConfigReply) Reset()         { *m = GetHorseRaceLampConfigReply{} }
func (m *GetHorseRaceLampConfigReply) String() string { return proto.CompactTextString(m) }
func (*GetHorseRaceLampConfigReply) ProtoMessage()    {}
func (*GetHorseRaceLampConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{211}
}

func (m *GetHorseRaceLampConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHorseRaceLampConfigReply.Unmarshal(m, b)
}
func (m *GetHorseRaceLampConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHorseRaceLampConfigReply.Marshal(b, m, deterministic)
}
func (m *GetHorseRaceLampConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHorseRaceLampConfigReply.Merge(m, src)
}
func (m *GetHorseRaceLampConfigReply) XXX_Size() int {
	return xxx_messageInfo_GetHorseRaceLampConfigReply.Size(m)
}
func (m *GetHorseRaceLampConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHorseRaceLampConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetHorseRaceLampConfigReply proto.InternalMessageInfo

func (m *GetHorseRaceLampConfigReply) GetHorseRaceLamps() []*HorseRaceLampConfig {
	if m != nil {
		return m.HorseRaceLamps
	}
	return nil
}

func (m *GetHorseRaceLampConfigReply) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

//获取商品配置申请
type GetProductConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProductConfigRequest) Reset()         { *m = GetProductConfigRequest{} }
func (m *GetProductConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetProductConfigRequest) ProtoMessage()    {}
func (*GetProductConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{212}
}

func (m *GetProductConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProductConfigRequest.Unmarshal(m, b)
}
func (m *GetProductConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProductConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetProductConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProductConfigRequest.Merge(m, src)
}
func (m *GetProductConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetProductConfigRequest.Size(m)
}
func (m *GetProductConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProductConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProductConfigRequest proto.InternalMessageInfo

//获取商品配置回复
type GetProductConfigReply struct {
	Products             []*ProductConfig `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetProductConfigReply) Reset()         { *m = GetProductConfigReply{} }
func (m *GetProductConfigReply) String() string { return proto.CompactTextString(m) }
func (*GetProductConfigReply) ProtoMessage()    {}
func (*GetProductConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{213}
}

func (m *GetProductConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProductConfigReply.Unmarshal(m, b)
}
func (m *GetProductConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProductConfigReply.Marshal(b, m, deterministic)
}
func (m *GetProductConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProductConfigReply.Merge(m, src)
}
func (m *GetProductConfigReply) XXX_Size() int {
	return xxx_messageInfo_GetProductConfigReply.Size(m)
}
func (m *GetProductConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProductConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetProductConfigReply proto.InternalMessageInfo

func (m *GetProductConfigReply) GetProducts() []*ProductConfig {
	if m != nil {
		return m.Products
	}
	return nil
}

//修改跑马灯配置申请
type UpdateHorseRaceLampConfigRequest struct {
	HorseRaceLamp        *HorseRaceLampConfig `protobuf:"bytes,1,opt,name=HorseRaceLamp,proto3" json:"HorseRaceLamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateHorseRaceLampConfigRequest) Reset()         { *m = UpdateHorseRaceLampConfigRequest{} }
func (m *UpdateHorseRaceLampConfigRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateHorseRaceLampConfigRequest) ProtoMessage()    {}
func (*UpdateHorseRaceLampConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{214}
}

func (m *UpdateHorseRaceLampConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateHorseRaceLampConfigRequest.Unmarshal(m, b)
}
func (m *UpdateHorseRaceLampConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateHorseRaceLampConfigRequest.Marshal(b, m, deterministic)
}
func (m *UpdateHorseRaceLampConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateHorseRaceLampConfigRequest.Merge(m, src)
}
func (m *UpdateHorseRaceLampConfigRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateHorseRaceLampConfigRequest.Size(m)
}
func (m *UpdateHorseRaceLampConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateHorseRaceLampConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateHorseRaceLampConfigRequest proto.InternalMessageInfo

func (m *UpdateHorseRaceLampConfigRequest) GetHorseRaceLamp() *HorseRaceLampConfig {
	if m != nil {
		return m.HorseRaceLamp
	}
	return nil
}

//修改跑马灯配置回复
type UpdateHorseRaceLampConfigReply struct {
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateHorseRaceLampConfigReply) Reset()         { *m = UpdateHorseRaceLampConfigReply{} }
func (m *UpdateHorseRaceLampConfigReply) String() string { return proto.CompactTextString(m) }
func (*UpdateHorseRaceLampConfigReply) ProtoMessage()    {}
func (*UpdateHorseRaceLampConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{215}
}

func (m *UpdateHorseRaceLampConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateHorseRaceLampConfigReply.Unmarshal(m, b)
}
func (m *UpdateHorseRaceLampConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateHorseRaceLampConfigReply.Marshal(b, m, deterministic)
}
func (m *UpdateHorseRaceLampConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateHorseRaceLampConfigReply.Merge(m, src)
}
func (m *UpdateHorseRaceLampConfigReply) XXX_Size() int {
	return xxx_messageInfo_UpdateHorseRaceLampConfigReply.Size(m)
}
func (m *UpdateHorseRaceLampConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateHorseRaceLampConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateHorseRaceLampConfigReply proto.InternalMessageInfo

func (m *UpdateHorseRaceLampConfigReply) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

//修改商品配置申请
type UpdateProductConfigRequest struct {
	Product              *ProductConfig `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateProductConfigRequest) Reset()         { *m = UpdateProductConfigRequest{} }
func (m *UpdateProductConfigRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProductConfigRequest) ProtoMessage()    {}
func (*UpdateProductConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{216}
}

func (m *UpdateProductConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProductConfigRequest.Unmarshal(m, b)
}
func (m *UpdateProductConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProductConfigRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProductConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProductConfigRequest.Merge(m, src)
}
func (m *UpdateProductConfigRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProductConfigRequest.Size(m)
}
func (m *UpdateProductConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProductConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProductConfigRequest proto.InternalMessageInfo

func (m *UpdateProductConfigRequest) GetProduct() *ProductConfig {
	if m != nil {
		return m.Product
	}
	return nil
}

//修改商品配置回复
type UpdateProductConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateProductConfigReply) Reset()         { *m = UpdateProductConfigReply{} }
func (m *UpdateProductConfigReply) String() string { return proto.CompactTextString(m) }
func (*UpdateProductConfigReply) ProtoMessage()    {}
func (*UpdateProductConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{217}
}

func (m *UpdateProductConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProductConfigReply.Unmarshal(m, b)
}
func (m *UpdateProductConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProductConfigReply.Marshal(b, m, deterministic)
}
func (m *UpdateProductConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProductConfigReply.Merge(m, src)
}
func (m *UpdateProductConfigReply) XXX_Size() int {
	return xxx_messageInfo_UpdateProductConfigReply.Size(m)
}
func (m *UpdateProductConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProductConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProductConfigReply proto.InternalMessageInfo

//新增跑马灯配置申请
type InsertHorseRaceLampConfigRequest struct {
	HorseRaceLamp        *HorseRaceLampConfig `protobuf:"bytes,1,opt,name=HorseRaceLamp,proto3" json:"HorseRaceLamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *InsertHorseRaceLampConfigRequest) Reset()         { *m = InsertHorseRaceLampConfigRequest{} }
func (m *InsertHorseRaceLampConfigRequest) String() string { return proto.CompactTextString(m) }
func (*InsertHorseRaceLampConfigRequest) ProtoMessage()    {}
func (*InsertHorseRaceLampConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{218}
}

func (m *InsertHorseRaceLampConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertHorseRaceLampConfigRequest.Unmarshal(m, b)
}
func (m *InsertHorseRaceLampConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertHorseRaceLampConfigRequest.Marshal(b, m, deterministic)
}
func (m *InsertHorseRaceLampConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertHorseRaceLampConfigRequest.Merge(m, src)
}
func (m *InsertHorseRaceLampConfigRequest) XXX_Size() int {
	return xxx_messageInfo_InsertHorseRaceLampConfigRequest.Size(m)
}
func (m *InsertHorseRaceLampConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertHorseRaceLampConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertHorseRaceLampConfigRequest proto.InternalMessageInfo

func (m *InsertHorseRaceLampConfigRequest) GetHorseRaceLamp() *HorseRaceLampConfig {
	if m != nil {
		return m.HorseRaceLamp
	}
	return nil
}

//新增跑马灯配置回复
type InsertHorseRaceLampConfigReply struct {
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertHorseRaceLampConfigReply) Reset()         { *m = InsertHorseRaceLampConfigReply{} }
func (m *InsertHorseRaceLampConfigReply) String() string { return proto.CompactTextString(m) }
func (*InsertHorseRaceLampConfigReply) ProtoMessage()    {}
func (*InsertHorseRaceLampConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{219}
}

func (m *InsertHorseRaceLampConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertHorseRaceLampConfigReply.Unmarshal(m, b)
}
func (m *InsertHorseRaceLampConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertHorseRaceLampConfigReply.Marshal(b, m, deterministic)
}
func (m *InsertHorseRaceLampConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertHorseRaceLampConfigReply.Merge(m, src)
}
func (m *InsertHorseRaceLampConfigReply) XXX_Size() int {
	return xxx_messageInfo_InsertHorseRaceLampConfigReply.Size(m)
}
func (m *InsertHorseRaceLampConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertHorseRaceLampConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_InsertHorseRaceLampConfigReply proto.InternalMessageInfo

func (m *InsertHorseRaceLampConfigReply) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

//新增商品配置申请
type InsertProductConfigRequest struct {
	Product              *ProductConfig `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *InsertProductConfigRequest) Reset()         { *m = InsertProductConfigRequest{} }
func (m *InsertProductConfigRequest) String() string { return proto.CompactTextString(m) }
func (*InsertProductConfigRequest) ProtoMessage()    {}
func (*InsertProductConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{220}
}

func (m *InsertProductConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertProductConfigRequest.Unmarshal(m, b)
}
func (m *InsertProductConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertProductConfigRequest.Marshal(b, m, deterministic)
}
func (m *InsertProductConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertProductConfigRequest.Merge(m, src)
}
func (m *InsertProductConfigRequest) XXX_Size() int {
	return xxx_messageInfo_InsertProductConfigRequest.Size(m)
}
func (m *InsertProductConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertProductConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertProductConfigRequest proto.InternalMessageInfo

func (m *InsertProductConfigRequest) GetProduct() *ProductConfig {
	if m != nil {
		return m.Product
	}
	return nil
}

//新增商品配置回复
type InsertProductConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertProductConfigReply) Reset()         { *m = InsertProductConfigReply{} }
func (m *InsertProductConfigReply) String() string { return proto.CompactTextString(m) }
func (*InsertProductConfigReply) ProtoMessage()    {}
func (*InsertProductConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{221}
}

func (m *InsertProductConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertProductConfigReply.Unmarshal(m, b)
}
func (m *InsertProductConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertProductConfigReply.Marshal(b, m, deterministic)
}
func (m *InsertProductConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertProductConfigReply.Merge(m, src)
}
func (m *InsertProductConfigReply) XXX_Size() int {
	return xxx_messageInfo_InsertProductConfigReply.Size(m)
}
func (m *InsertProductConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertProductConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_InsertProductConfigReply proto.InternalMessageInfo

//删除跑马灯配置申请
type DeleteHorseRaceLampConfigRequest struct {
	HorseRaceLampUuid    string   `protobuf:"bytes,1,opt,name=HorseRaceLampUuid,proto3" json:"HorseRaceLampUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteHorseRaceLampConfigRequest) Reset()         { *m = DeleteHorseRaceLampConfigRequest{} }
func (m *DeleteHorseRaceLampConfigRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteHorseRaceLampConfigRequest) ProtoMessage()    {}
func (*DeleteHorseRaceLampConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{222}
}

func (m *DeleteHorseRaceLampConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteHorseRaceLampConfigRequest.Unmarshal(m, b)
}
func (m *DeleteHorseRaceLampConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteHorseRaceLampConfigRequest.Marshal(b, m, deterministic)
}
func (m *DeleteHorseRaceLampConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteHorseRaceLampConfigRequest.Merge(m, src)
}
func (m *DeleteHorseRaceLampConfigRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteHorseRaceLampConfigRequest.Size(m)
}
func (m *DeleteHorseRaceLampConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteHorseRaceLampConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteHorseRaceLampConfigRequest proto.InternalMessageInfo

func (m *DeleteHorseRaceLampConfigRequest) GetHorseRaceLampUuid() string {
	if m != nil {
		return m.HorseRaceLampUuid
	}
	return ""
}

//删除跑马灯配置回复
type DeleteHorseRaceLampConfigReply struct {
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteHorseRaceLampConfigReply) Reset()         { *m = DeleteHorseRaceLampConfigReply{} }
func (m *DeleteHorseRaceLampConfigReply) String() string { return proto.CompactTextString(m) }
func (*DeleteHorseRaceLampConfigReply) ProtoMessage()    {}
func (*DeleteHorseRaceLampConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{223}
}

func (m *DeleteHorseRaceLampConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteHorseRaceLampConfigReply.Unmarshal(m, b)
}
func (m *DeleteHorseRaceLampConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteHorseRaceLampConfigReply.Marshal(b, m, deterministic)
}
func (m *DeleteHorseRaceLampConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteHorseRaceLampConfigReply.Merge(m, src)
}
func (m *DeleteHorseRaceLampConfigReply) XXX_Size() int {
	return xxx_messageInfo_DeleteHorseRaceLampConfigReply.Size(m)
}
func (m *DeleteHorseRaceLampConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteHorseRaceLampConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteHorseRaceLampConfigReply proto.InternalMessageInfo

func (m *DeleteHorseRaceLampConfigReply) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

//删除商品配置申请
type DeleteProductConfigRequest struct {
	ProductUuid          string   `protobuf:"bytes,1,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProductConfigRequest) Reset()         { *m = DeleteProductConfigRequest{} }
func (m *DeleteProductConfigRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProductConfigRequest) ProtoMessage()    {}
func (*DeleteProductConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{224}
}

func (m *DeleteProductConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProductConfigRequest.Unmarshal(m, b)
}
func (m *DeleteProductConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProductConfigRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProductConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProductConfigRequest.Merge(m, src)
}
func (m *DeleteProductConfigRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProductConfigRequest.Size(m)
}
func (m *DeleteProductConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProductConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProductConfigRequest proto.InternalMessageInfo

func (m *DeleteProductConfigRequest) GetProductUuid() string {
	if m != nil {
		return m.ProductUuid
	}
	return ""
}

//删除商品配置回复
type DeleteProductConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProductConfigReply) Reset()         { *m = DeleteProductConfigReply{} }
func (m *DeleteProductConfigReply) String() string { return proto.CompactTextString(m) }
func (*DeleteProductConfigReply) ProtoMessage()    {}
func (*DeleteProductConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{225}
}

func (m *DeleteProductConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProductConfigReply.Unmarshal(m, b)
}
func (m *DeleteProductConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProductConfigReply.Marshal(b, m, deterministic)
}
func (m *DeleteProductConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProductConfigReply.Merge(m, src)
}
func (m *DeleteProductConfigReply) XXX_Size() int {
	return xxx_messageInfo_DeleteProductConfigReply.Size(m)
}
func (m *DeleteProductConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProductConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProductConfigReply proto.InternalMessageInfo

//支付通道
type ChannelConfig struct {
	// 支付通道的uuid
	ChannelUuid string `protobuf:"bytes,1,opt,name=channelUuid,proto3" json:"channelUuid,omitempty"`
	//支付通道编号定义
	PayMentChannel PayMentChannel `protobuf:"varint,2,opt,name=payMentChannel,proto3,enum=PayMentChannel" json:"payMentChannel,omitempty"`
	//支付通道的名称
	ChannelName string `protobuf:"bytes,3,opt,name=channelName,proto3" json:"channelName,omitempty"`
	//开放状态
	IsOpen               bool     `protobuf:"varint,4,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelConfig) Reset()         { *m = ChannelConfig{} }
func (m *ChannelConfig) String() string { return proto.CompactTextString(m) }
func (*ChannelConfig) ProtoMessage()    {}
func (*ChannelConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{226}
}

func (m *ChannelConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelConfig.Unmarshal(m, b)
}
func (m *ChannelConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelConfig.Marshal(b, m, deterministic)
}
func (m *ChannelConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelConfig.Merge(m, src)
}
func (m *ChannelConfig) XXX_Size() int {
	return xxx_messageInfo_ChannelConfig.Size(m)
}
func (m *ChannelConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelConfig proto.InternalMessageInfo

func (m *ChannelConfig) GetChannelUuid() string {
	if m != nil {
		return m.ChannelUuid
	}
	return ""
}

func (m *ChannelConfig) GetPayMentChannel() PayMentChannel {
	if m != nil {
		return m.PayMentChannel
	}
	return PayMentChannel_PayMentChannel_None
}

func (m *ChannelConfig) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *ChannelConfig) GetIsOpen() bool {
	if m != nil {
		return m.IsOpen
	}
	return false
}

//获取支付通道配置申请
type GetChannelConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChannelConfigRequest) Reset()         { *m = GetChannelConfigRequest{} }
func (m *GetChannelConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetChannelConfigRequest) ProtoMessage()    {}
func (*GetChannelConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{227}
}

func (m *GetChannelConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelConfigRequest.Unmarshal(m, b)
}
func (m *GetChannelConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetChannelConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelConfigRequest.Merge(m, src)
}
func (m *GetChannelConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetChannelConfigRequest.Size(m)
}
func (m *GetChannelConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelConfigRequest proto.InternalMessageInfo

//获取支付通道配置回复
type GetChannelConfigReply struct {
	Channels             []*ChannelConfig `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetChannelConfigReply) Reset()         { *m = GetChannelConfigReply{} }
func (m *GetChannelConfigReply) String() string { return proto.CompactTextString(m) }
func (*GetChannelConfigReply) ProtoMessage()    {}
func (*GetChannelConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{228}
}

func (m *GetChannelConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelConfigReply.Unmarshal(m, b)
}
func (m *GetChannelConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelConfigReply.Marshal(b, m, deterministic)
}
func (m *GetChannelConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelConfigReply.Merge(m, src)
}
func (m *GetChannelConfigReply) XXX_Size() int {
	return xxx_messageInfo_GetChannelConfigReply.Size(m)
}
func (m *GetChannelConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelConfigReply proto.InternalMessageInfo

func (m *GetChannelConfigReply) GetChannels() []*ChannelConfig {
	if m != nil {
		return m.Channels
	}
	return nil
}

//修改支付通道配置申请
type UpdateChannelConfigRequest struct {
	Channel              *ChannelConfig `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateChannelConfigRequest) Reset()         { *m = UpdateChannelConfigRequest{} }
func (m *UpdateChannelConfigRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateChannelConfigRequest) ProtoMessage()    {}
func (*UpdateChannelConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{229}
}

func (m *UpdateChannelConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateChannelConfigRequest.Unmarshal(m, b)
}
func (m *UpdateChannelConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateChannelConfigRequest.Marshal(b, m, deterministic)
}
func (m *UpdateChannelConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateChannelConfigRequest.Merge(m, src)
}
func (m *UpdateChannelConfigRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateChannelConfigRequest.Size(m)
}
func (m *UpdateChannelConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateChannelConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateChannelConfigRequest proto.InternalMessageInfo

func (m *UpdateChannelConfigRequest) GetChannel() *ChannelConfig {
	if m != nil {
		return m.Channel
	}
	return nil
}

//修改支付通道配置回复
type UpdateChannelConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateChannelConfigReply) Reset()         { *m = UpdateChannelConfigReply{} }
func (m *UpdateChannelConfigReply) String() string { return proto.CompactTextString(m) }
func (*UpdateChannelConfigReply) ProtoMessage()    {}
func (*UpdateChannelConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{230}
}

func (m *UpdateChannelConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateChannelConfigReply.Unmarshal(m, b)
}
func (m *UpdateChannelConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateChannelConfigReply.Marshal(b, m, deterministic)
}
func (m *UpdateChannelConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateChannelConfigReply.Merge(m, src)
}
func (m *UpdateChannelConfigReply) XXX_Size() int {
	return xxx_messageInfo_UpdateChannelConfigReply.Size(m)
}
func (m *UpdateChannelConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateChannelConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateChannelConfigReply proto.InternalMessageInfo

//新增支付通道配置申请
type InsertChannelConfigRequest struct {
	Channel              *ChannelConfig `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *InsertChannelConfigRequest) Reset()         { *m = InsertChannelConfigRequest{} }
func (m *InsertChannelConfigRequest) String() string { return proto.CompactTextString(m) }
func (*InsertChannelConfigRequest) ProtoMessage()    {}
func (*InsertChannelConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{231}
}

func (m *InsertChannelConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertChannelConfigRequest.Unmarshal(m, b)
}
func (m *InsertChannelConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertChannelConfigRequest.Marshal(b, m, deterministic)
}
func (m *InsertChannelConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertChannelConfigRequest.Merge(m, src)
}
func (m *InsertChannelConfigRequest) XXX_Size() int {
	return xxx_messageInfo_InsertChannelConfigRequest.Size(m)
}
func (m *InsertChannelConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertChannelConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertChannelConfigRequest proto.InternalMessageInfo

func (m *InsertChannelConfigRequest) GetChannel() *ChannelConfig {
	if m != nil {
		return m.Channel
	}
	return nil
}

//新增支付通道配置回复
type InsertChannelConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertChannelConfigReply) Reset()         { *m = InsertChannelConfigReply{} }
func (m *InsertChannelConfigReply) String() string { return proto.CompactTextString(m) }
func (*InsertChannelConfigReply) ProtoMessage()    {}
func (*InsertChannelConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{232}
}

func (m *InsertChannelConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertChannelConfigReply.Unmarshal(m, b)
}
func (m *InsertChannelConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertChannelConfigReply.Marshal(b, m, deterministic)
}
func (m *InsertChannelConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertChannelConfigReply.Merge(m, src)
}
func (m *InsertChannelConfigReply) XXX_Size() int {
	return xxx_messageInfo_InsertChannelConfigReply.Size(m)
}
func (m *InsertChannelConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertChannelConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_InsertChannelConfigReply proto.InternalMessageInfo

//删除支付通道配置申请
type DeleteChannelConfigRequest struct {
	ChannelUuid          string   `protobuf:"bytes,1,opt,name=channelUuid,proto3" json:"channelUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteChannelConfigRequest) Reset()         { *m = DeleteChannelConfigRequest{} }
func (m *DeleteChannelConfigRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteChannelConfigRequest) ProtoMessage()    {}
func (*DeleteChannelConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{233}
}

func (m *DeleteChannelConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChannelConfigRequest.Unmarshal(m, b)
}
func (m *DeleteChannelConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChannelConfigRequest.Marshal(b, m, deterministic)
}
func (m *DeleteChannelConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChannelConfigRequest.Merge(m, src)
}
func (m *DeleteChannelConfigRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteChannelConfigRequest.Size(m)
}
func (m *DeleteChannelConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChannelConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChannelConfigRequest proto.InternalMessageInfo

func (m *DeleteChannelConfigRequest) GetChannelUuid() string {
	if m != nil {
		return m.ChannelUuid
	}
	return ""
}

//删除支付通道配置回复
type DeleteChannelConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteChannelConfigReply) Reset()         { *m = DeleteChannelConfigReply{} }
func (m *DeleteChannelConfigReply) String() string { return proto.CompactTextString(m) }
func (*DeleteChannelConfigReply) ProtoMessage()    {}
func (*DeleteChannelConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{234}
}

func (m *DeleteChannelConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChannelConfigReply.Unmarshal(m, b)
}
func (m *DeleteChannelConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChannelConfigReply.Marshal(b, m, deterministic)
}
func (m *DeleteChannelConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChannelConfigReply.Merge(m, src)
}
func (m *DeleteChannelConfigReply) XXX_Size() int {
	return xxx_messageInfo_DeleteChannelConfigReply.Size(m)
}
func (m *DeleteChannelConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChannelConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChannelConfigReply proto.InternalMessageInfo

//任务配置
type TaskConfig struct {
	// 任务的uuid
	TaskUuid string `protobuf:"bytes,1,opt,name=taskUuid,proto3" json:"taskUuid,omitempty"`
	// 任务的类型
	TaskType TaskType `protobuf:"varint,2,opt,name=taskType,proto3,enum=TaskType" json:"taskType,omitempty"`
	// 任务游戏的类型
	GameType GameType `protobuf:"varint,3,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 任务游戏场次
	GameScene int32 `protobuf:"varint,4,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	// 任务标题
	TaskTitle string `protobuf:"bytes,5,opt,name=taskTitle,proto3" json:"taskTitle,omitempty"`
	// 任务需求进度
	TaskNum int64 `protobuf:"varint,6,opt,name=taskNum,proto3" json:"taskNum,omitempty"`
	// 任务游戏的大类型
	GameCateGoryType []GameCateGoryType `protobuf:"varint,7,rep,packed,name=gameCateGoryType,proto3,enum=GameCateGoryType" json:"gameCateGoryType,omitempty"`
	// 任务奖励礼包id
	TaskRewardId         string   `protobuf:"bytes,8,opt,name=taskRewardId,proto3" json:"taskRewardId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskConfig) Reset()         { *m = TaskConfig{} }
func (m *TaskConfig) String() string { return proto.CompactTextString(m) }
func (*TaskConfig) ProtoMessage()    {}
func (*TaskConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{235}
}

func (m *TaskConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskConfig.Unmarshal(m, b)
}
func (m *TaskConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskConfig.Marshal(b, m, deterministic)
}
func (m *TaskConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskConfig.Merge(m, src)
}
func (m *TaskConfig) XXX_Size() int {
	return xxx_messageInfo_TaskConfig.Size(m)
}
func (m *TaskConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TaskConfig proto.InternalMessageInfo

func (m *TaskConfig) GetTaskUuid() string {
	if m != nil {
		return m.TaskUuid
	}
	return ""
}

func (m *TaskConfig) GetTaskType() TaskType {
	if m != nil {
		return m.TaskType
	}
	return TaskType_Task_None
}

func (m *TaskConfig) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *TaskConfig) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *TaskConfig) GetTaskTitle() string {
	if m != nil {
		return m.TaskTitle
	}
	return ""
}

func (m *TaskConfig) GetTaskNum() int64 {
	if m != nil {
		return m.TaskNum
	}
	return 0
}

func (m *TaskConfig) GetGameCateGoryType() []GameCateGoryType {
	if m != nil {
		return m.GameCateGoryType
	}
	return nil
}

func (m *TaskConfig) GetTaskRewardId() string {
	if m != nil {
		return m.TaskRewardId
	}
	return ""
}

//获取礼包配置申请
type GetTaskConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskConfigRequest) Reset()         { *m = GetTaskConfigRequest{} }
func (m *GetTaskConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskConfigRequest) ProtoMessage()    {}
func (*GetTaskConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{236}
}

func (m *GetTaskConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskConfigRequest.Unmarshal(m, b)
}
func (m *GetTaskConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetTaskConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskConfigRequest.Merge(m, src)
}
func (m *GetTaskConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetTaskConfigRequest.Size(m)
}
func (m *GetTaskConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskConfigRequest proto.InternalMessageInfo

//获取礼包配置回复
type GetTaskConfigReply struct {
	Tasks                []*TaskConfig `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetTaskConfigReply) Reset()         { *m = GetTaskConfigReply{} }
func (m *GetTaskConfigReply) String() string { return proto.CompactTextString(m) }
func (*GetTaskConfigReply) ProtoMessage()    {}
func (*GetTaskConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{237}
}

func (m *GetTaskConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskConfigReply.Unmarshal(m, b)
}
func (m *GetTaskConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskConfigReply.Marshal(b, m, deterministic)
}
func (m *GetTaskConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskConfigReply.Merge(m, src)
}
func (m *GetTaskConfigReply) XXX_Size() int {
	return xxx_messageInfo_GetTaskConfigReply.Size(m)
}
func (m *GetTaskConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskConfigReply proto.InternalMessageInfo

func (m *GetTaskConfigReply) GetTasks() []*TaskConfig {
	if m != nil {
		return m.Tasks
	}
	return nil
}

//修改礼包配置申请
type UpdateTaskConfigRequest struct {
	Tasks                *TaskConfig `protobuf:"bytes,1,opt,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateTaskConfigRequest) Reset()         { *m = UpdateTaskConfigRequest{} }
func (m *UpdateTaskConfigRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskConfigRequest) ProtoMessage()    {}
func (*UpdateTaskConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{238}
}

func (m *UpdateTaskConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskConfigRequest.Unmarshal(m, b)
}
func (m *UpdateTaskConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskConfigRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTaskConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskConfigRequest.Merge(m, src)
}
func (m *UpdateTaskConfigRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskConfigRequest.Size(m)
}
func (m *UpdateTaskConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskConfigRequest proto.InternalMessageInfo

func (m *UpdateTaskConfigRequest) GetTasks() *TaskConfig {
	if m != nil {
		return m.Tasks
	}
	return nil
}

//修改礼包配置回复
type UpdateTaskConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskConfigReply) Reset()         { *m = UpdateTaskConfigReply{} }
func (m *UpdateTaskConfigReply) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskConfigReply) ProtoMessage()    {}
func (*UpdateTaskConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{239}
}

func (m *UpdateTaskConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskConfigReply.Unmarshal(m, b)
}
func (m *UpdateTaskConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskConfigReply.Marshal(b, m, deterministic)
}
func (m *UpdateTaskConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskConfigReply.Merge(m, src)
}
func (m *UpdateTaskConfigReply) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskConfigReply.Size(m)
}
func (m *UpdateTaskConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskConfigReply proto.InternalMessageInfo

//新增礼包配置申请
type InsertTaskConfigRequest struct {
	Task                 *TaskConfig `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *InsertTaskConfigRequest) Reset()         { *m = InsertTaskConfigRequest{} }
func (m *InsertTaskConfigRequest) String() string { return proto.CompactTextString(m) }
func (*InsertTaskConfigRequest) ProtoMessage()    {}
func (*InsertTaskConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{240}
}

func (m *InsertTaskConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertTaskConfigRequest.Unmarshal(m, b)
}
func (m *InsertTaskConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertTaskConfigRequest.Marshal(b, m, deterministic)
}
func (m *InsertTaskConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertTaskConfigRequest.Merge(m, src)
}
func (m *InsertTaskConfigRequest) XXX_Size() int {
	return xxx_messageInfo_InsertTaskConfigRequest.Size(m)
}
func (m *InsertTaskConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertTaskConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertTaskConfigRequest proto.InternalMessageInfo

func (m *InsertTaskConfigRequest) GetTask() *TaskConfig {
	if m != nil {
		return m.Task
	}
	return nil
}

//新增礼包配置回复
type InsertTaskConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertTaskConfigReply) Reset()         { *m = InsertTaskConfigReply{} }
func (m *InsertTaskConfigReply) String() string { return proto.CompactTextString(m) }
func (*InsertTaskConfigReply) ProtoMessage()    {}
func (*InsertTaskConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{241}
}

func (m *InsertTaskConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertTaskConfigReply.Unmarshal(m, b)
}
func (m *InsertTaskConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertTaskConfigReply.Marshal(b, m, deterministic)
}
func (m *InsertTaskConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertTaskConfigReply.Merge(m, src)
}
func (m *InsertTaskConfigReply) XXX_Size() int {
	return xxx_messageInfo_InsertTaskConfigReply.Size(m)
}
func (m *InsertTaskConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertTaskConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_InsertTaskConfigReply proto.InternalMessageInfo

//删除礼包配置申请
type DeleteTaskConfigRequest struct {
	TaskUuid             string   `protobuf:"bytes,1,opt,name=taskUuid,proto3" json:"taskUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTaskConfigRequest) Reset()         { *m = DeleteTaskConfigRequest{} }
func (m *DeleteTaskConfigRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskConfigRequest) ProtoMessage()    {}
func (*DeleteTaskConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{242}
}

func (m *DeleteTaskConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskConfigRequest.Unmarshal(m, b)
}
func (m *DeleteTaskConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskConfigRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTaskConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskConfigRequest.Merge(m, src)
}
func (m *DeleteTaskConfigRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskConfigRequest.Size(m)
}
func (m *DeleteTaskConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskConfigRequest proto.InternalMessageInfo

func (m *DeleteTaskConfigRequest) GetTaskUuid() string {
	if m != nil {
		return m.TaskUuid
	}
	return ""
}

//删除礼包配置回复
type DeleteTaskConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTaskConfigReply) Reset()         { *m = DeleteTaskConfigReply{} }
func (m *DeleteTaskConfigReply) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskConfigReply) ProtoMessage()    {}
func (*DeleteTaskConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{243}
}

func (m *DeleteTaskConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskConfigReply.Unmarshal(m, b)
}
func (m *DeleteTaskConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskConfigReply.Marshal(b, m, deterministic)
}
func (m *DeleteTaskConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskConfigReply.Merge(m, src)
}
func (m *DeleteTaskConfigReply) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskConfigReply.Size(m)
}
func (m *DeleteTaskConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskConfigReply proto.InternalMessageInfo

//任务信息
type TaskInfo struct {
	// 任务的uuid
	TaskUuid string `protobuf:"bytes,1,opt,name=taskUuid,proto3" json:"taskUuid,omitempty"`
	// 任务状态
	TaskStatus TaskStatus `protobuf:"varint,2,opt,name=taskStatus,proto3,enum=TaskStatus" json:"taskStatus,omitempty"`
	// 任务当前进度
	TaskNum              int64    `protobuf:"varint,3,opt,name=taskNum,proto3" json:"taskNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskInfo) Reset()         { *m = TaskInfo{} }
func (m *TaskInfo) String() string { return proto.CompactTextString(m) }
func (*TaskInfo) ProtoMessage()    {}
func (*TaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{244}
}

func (m *TaskInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskInfo.Unmarshal(m, b)
}
func (m *TaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskInfo.Marshal(b, m, deterministic)
}
func (m *TaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskInfo.Merge(m, src)
}
func (m *TaskInfo) XXX_Size() int {
	return xxx_messageInfo_TaskInfo.Size(m)
}
func (m *TaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaskInfo proto.InternalMessageInfo

func (m *TaskInfo) GetTaskUuid() string {
	if m != nil {
		return m.TaskUuid
	}
	return ""
}

func (m *TaskInfo) GetTaskStatus() TaskStatus {
	if m != nil {
		return m.TaskStatus
	}
	return TaskStatus_TaskStatus_None
}

func (m *TaskInfo) GetTaskNum() int64 {
	if m != nil {
		return m.TaskNum
	}
	return 0
}

//查询任务信息
type TaskInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskInfoRequest) Reset()         { *m = TaskInfoRequest{} }
func (m *TaskInfoRequest) String() string { return proto.CompactTextString(m) }
func (*TaskInfoRequest) ProtoMessage()    {}
func (*TaskInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{245}
}

func (m *TaskInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskInfoRequest.Unmarshal(m, b)
}
func (m *TaskInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskInfoRequest.Marshal(b, m, deterministic)
}
func (m *TaskInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskInfoRequest.Merge(m, src)
}
func (m *TaskInfoRequest) XXX_Size() int {
	return xxx_messageInfo_TaskInfoRequest.Size(m)
}
func (m *TaskInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskInfoRequest proto.InternalMessageInfo

//查询任务信息回复
type TaskInfoReply struct {
	TaskInfos            []*TaskInfo `protobuf:"bytes,1,rep,name=taskInfos,proto3" json:"taskInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TaskInfoReply) Reset()         { *m = TaskInfoReply{} }
func (m *TaskInfoReply) String() string { return proto.CompactTextString(m) }
func (*TaskInfoReply) ProtoMessage()    {}
func (*TaskInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{246}
}

func (m *TaskInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskInfoReply.Unmarshal(m, b)
}
func (m *TaskInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskInfoReply.Marshal(b, m, deterministic)
}
func (m *TaskInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskInfoReply.Merge(m, src)
}
func (m *TaskInfoReply) XXX_Size() int {
	return xxx_messageInfo_TaskInfoReply.Size(m)
}
func (m *TaskInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_TaskInfoReply proto.InternalMessageInfo

func (m *TaskInfoReply) GetTaskInfos() []*TaskInfo {
	if m != nil {
		return m.TaskInfos
	}
	return nil
}

//领取任务奖励
type GetTaskInfoRewardRequest struct {
	TaskUuid             string   `protobuf:"bytes,1,opt,name=taskUuid,proto3" json:"taskUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskInfoRewardRequest) Reset()         { *m = GetTaskInfoRewardRequest{} }
func (m *GetTaskInfoRewardRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskInfoRewardRequest) ProtoMessage()    {}
func (*GetTaskInfoRewardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{247}
}

func (m *GetTaskInfoRewardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskInfoRewardRequest.Unmarshal(m, b)
}
func (m *GetTaskInfoRewardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskInfoRewardRequest.Marshal(b, m, deterministic)
}
func (m *GetTaskInfoRewardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskInfoRewardRequest.Merge(m, src)
}
func (m *GetTaskInfoRewardRequest) XXX_Size() int {
	return xxx_messageInfo_GetTaskInfoRewardRequest.Size(m)
}
func (m *GetTaskInfoRewardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskInfoRewardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskInfoRewardRequest proto.InternalMessageInfo

func (m *GetTaskInfoRewardRequest) GetTaskUuid() string {
	if m != nil {
		return m.TaskUuid
	}
	return ""
}

//领取任务奖励回复
type GetTaskInfoRewardReply struct {
	TaskRewardId         string   `protobuf:"bytes,1,opt,name=taskRewardId,proto3" json:"taskRewardId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskInfoRewardReply) Reset()         { *m = GetTaskInfoRewardReply{} }
func (m *GetTaskInfoRewardReply) String() string { return proto.CompactTextString(m) }
func (*GetTaskInfoRewardReply) ProtoMessage()    {}
func (*GetTaskInfoRewardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{248}
}

func (m *GetTaskInfoRewardReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskInfoRewardReply.Unmarshal(m, b)
}
func (m *GetTaskInfoRewardReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskInfoRewardReply.Marshal(b, m, deterministic)
}
func (m *GetTaskInfoRewardReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskInfoRewardReply.Merge(m, src)
}
func (m *GetTaskInfoRewardReply) XXX_Size() int {
	return xxx_messageInfo_GetTaskInfoRewardReply.Size(m)
}
func (m *GetTaskInfoRewardReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskInfoRewardReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskInfoRewardReply proto.InternalMessageInfo

func (m *GetTaskInfoRewardReply) GetTaskRewardId() string {
	if m != nil {
		return m.TaskRewardId
	}
	return ""
}

//查询转盘信息
type SpinInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpinInfoRequest) Reset()         { *m = SpinInfoRequest{} }
func (m *SpinInfoRequest) String() string { return proto.CompactTextString(m) }
func (*SpinInfoRequest) ProtoMessage()    {}
func (*SpinInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{249}
}

func (m *SpinInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpinInfoRequest.Unmarshal(m, b)
}
func (m *SpinInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpinInfoRequest.Marshal(b, m, deterministic)
}
func (m *SpinInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpinInfoRequest.Merge(m, src)
}
func (m *SpinInfoRequest) XXX_Size() int {
	return xxx_messageInfo_SpinInfoRequest.Size(m)
}
func (m *SpinInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SpinInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SpinInfoRequest proto.InternalMessageInfo

//查询转盘信息回复
type SpinInfoReply struct {
	SpinNum              int32    `protobuf:"varint,1,opt,name=spinNum,proto3" json:"spinNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpinInfoReply) Reset()         { *m = SpinInfoReply{} }
func (m *SpinInfoReply) String() string { return proto.CompactTextString(m) }
func (*SpinInfoReply) ProtoMessage()    {}
func (*SpinInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{250}
}

func (m *SpinInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpinInfoReply.Unmarshal(m, b)
}
func (m *SpinInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpinInfoReply.Marshal(b, m, deterministic)
}
func (m *SpinInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpinInfoReply.Merge(m, src)
}
func (m *SpinInfoReply) XXX_Size() int {
	return xxx_messageInfo_SpinInfoReply.Size(m)
}
func (m *SpinInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SpinInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_SpinInfoReply proto.InternalMessageInfo

func (m *SpinInfoReply) GetSpinNum() int32 {
	if m != nil {
		return m.SpinNum
	}
	return 0
}

//转转盘请求
type GetSpinRewardRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSpinRewardRequest) Reset()         { *m = GetSpinRewardRequest{} }
func (m *GetSpinRewardRequest) String() string { return proto.CompactTextString(m) }
func (*GetSpinRewardRequest) ProtoMessage()    {}
func (*GetSpinRewardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{251}
}

func (m *GetSpinRewardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSpinRewardRequest.Unmarshal(m, b)
}
func (m *GetSpinRewardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSpinRewardRequest.Marshal(b, m, deterministic)
}
func (m *GetSpinRewardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpinRewardRequest.Merge(m, src)
}
func (m *GetSpinRewardRequest) XXX_Size() int {
	return xxx_messageInfo_GetSpinRewardRequest.Size(m)
}
func (m *GetSpinRewardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpinRewardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpinRewardRequest proto.InternalMessageInfo

//转转盘请求回复
type GetSpinRewardReply struct {
	// 结果是转盘数组的索引
	SpinIndex            int32    `protobuf:"varint,1,opt,name=spinIndex,proto3" json:"spinIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSpinRewardReply) Reset()         { *m = GetSpinRewardReply{} }
func (m *GetSpinRewardReply) String() string { return proto.CompactTextString(m) }
func (*GetSpinRewardReply) ProtoMessage()    {}
func (*GetSpinRewardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{252}
}

func (m *GetSpinRewardReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSpinRewardReply.Unmarshal(m, b)
}
func (m *GetSpinRewardReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSpinRewardReply.Marshal(b, m, deterministic)
}
func (m *GetSpinRewardReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpinRewardReply.Merge(m, src)
}
func (m *GetSpinRewardReply) XXX_Size() int {
	return xxx_messageInfo_GetSpinRewardReply.Size(m)
}
func (m *GetSpinRewardReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpinRewardReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpinRewardReply proto.InternalMessageInfo

func (m *GetSpinRewardReply) GetSpinIndex() int32 {
	if m != nil {
		return m.SpinIndex
	}
	return 0
}

//转盘记录
type SpinRecord struct {
	Account              string    `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Gifts                *GiftList `protobuf:"bytes,2,opt,name=gifts,proto3" json:"gifts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SpinRecord) Reset()         { *m = SpinRecord{} }
func (m *SpinRecord) String() string { return proto.CompactTextString(m) }
func (*SpinRecord) ProtoMessage()    {}
func (*SpinRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{253}
}

func (m *SpinRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpinRecord.Unmarshal(m, b)
}
func (m *SpinRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpinRecord.Marshal(b, m, deterministic)
}
func (m *SpinRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpinRecord.Merge(m, src)
}
func (m *SpinRecord) XXX_Size() int {
	return xxx_messageInfo_SpinRecord.Size(m)
}
func (m *SpinRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SpinRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SpinRecord proto.InternalMessageInfo

func (m *SpinRecord) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *SpinRecord) GetGifts() *GiftList {
	if m != nil {
		return m.Gifts
	}
	return nil
}

//转盘记录请求
type GetSpinRecordRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSpinRecordRequest) Reset()         { *m = GetSpinRecordRequest{} }
func (m *GetSpinRecordRequest) String() string { return proto.CompactTextString(m) }
func (*GetSpinRecordRequest) ProtoMessage()    {}
func (*GetSpinRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{254}
}

func (m *GetSpinRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSpinRecordRequest.Unmarshal(m, b)
}
func (m *GetSpinRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSpinRecordRequest.Marshal(b, m, deterministic)
}
func (m *GetSpinRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpinRecordRequest.Merge(m, src)
}
func (m *GetSpinRecordRequest) XXX_Size() int {
	return xxx_messageInfo_GetSpinRecordRequest.Size(m)
}
func (m *GetSpinRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpinRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpinRecordRequest proto.InternalMessageInfo

//转盘记录请求回复
type GetSpinRecordReply struct {
	Records              []*SpinRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetSpinRecordReply) Reset()         { *m = GetSpinRecordReply{} }
func (m *GetSpinRecordReply) String() string { return proto.CompactTextString(m) }
func (*GetSpinRecordReply) ProtoMessage()    {}
func (*GetSpinRecordReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{255}
}

func (m *GetSpinRecordReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSpinRecordReply.Unmarshal(m, b)
}
func (m *GetSpinRecordReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSpinRecordReply.Marshal(b, m, deterministic)
}
func (m *GetSpinRecordReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpinRecordReply.Merge(m, src)
}
func (m *GetSpinRecordReply) XXX_Size() int {
	return xxx_messageInfo_GetSpinRecordReply.Size(m)
}
func (m *GetSpinRecordReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpinRecordReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpinRecordReply proto.InternalMessageInfo

func (m *GetSpinRecordReply) GetRecords() []*SpinRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

//客户端获取配置的请求
type GetClientConfigRequest struct {
	// 请求的配置类型
	ConfigType           []ConfigType `protobuf:"varint,1,rep,packed,name=configType,proto3,enum=ConfigType" json:"configType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetClientConfigRequest) Reset()         { *m = GetClientConfigRequest{} }
func (m *GetClientConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetClientConfigRequest) ProtoMessage()    {}
func (*GetClientConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{256}
}

func (m *GetClientConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClientConfigRequest.Unmarshal(m, b)
}
func (m *GetClientConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClientConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetClientConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClientConfigRequest.Merge(m, src)
}
func (m *GetClientConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetClientConfigRequest.Size(m)
}
func (m *GetClientConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClientConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetClientConfigRequest proto.InternalMessageInfo

func (m *GetClientConfigRequest) GetConfigType() []ConfigType {
	if m != nil {
		return m.ConfigType
	}
	return nil
}

//客户端获取配置的回执
type GetClientConfigReply struct {
	GlobalConfigs []*GlobalConfig `protobuf:"bytes,1,rep,name=globalConfigs,proto3" json:"globalConfigs,omitempty"`
	GiftConfigs   []*GiftInfo     `protobuf:"bytes,2,rep,name=giftConfigs,proto3" json:"giftConfigs,omitempty"`
	TaskConfigs   []*TaskConfig   `protobuf:"bytes,3,rep,name=taskConfigs,proto3" json:"taskConfigs,omitempty"`
	// 请求的透传参数，就是请求的值
	ConfigType           []ConfigType `protobuf:"varint,4,rep,packed,name=configType,proto3,enum=ConfigType" json:"configType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetClientConfigReply) Reset()         { *m = GetClientConfigReply{} }
func (m *GetClientConfigReply) String() string { return proto.CompactTextString(m) }
func (*GetClientConfigReply) ProtoMessage()    {}
func (*GetClientConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{257}
}

func (m *GetClientConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClientConfigReply.Unmarshal(m, b)
}
func (m *GetClientConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClientConfigReply.Marshal(b, m, deterministic)
}
func (m *GetClientConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClientConfigReply.Merge(m, src)
}
func (m *GetClientConfigReply) XXX_Size() int {
	return xxx_messageInfo_GetClientConfigReply.Size(m)
}
func (m *GetClientConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClientConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetClientConfigReply proto.InternalMessageInfo

func (m *GetClientConfigReply) GetGlobalConfigs() []*GlobalConfig {
	if m != nil {
		return m.GlobalConfigs
	}
	return nil
}

func (m *GetClientConfigReply) GetGiftConfigs() []*GiftInfo {
	if m != nil {
		return m.GiftConfigs
	}
	return nil
}

func (m *GetClientConfigReply) GetTaskConfigs() []*TaskConfig {
	if m != nil {
		return m.TaskConfigs
	}
	return nil
}

func (m *GetClientConfigReply) GetConfigType() []ConfigType {
	if m != nil {
		return m.ConfigType
	}
	return nil
}

// 打旋在房间中的信息
type DaXuanInRoom struct {
	//芒果
	Mongo int64 `protobuf:"varint,1,opt,name=mongo,proto3" json:"mongo,omitempty"`
	//皮池
	PPool int64 `protobuf:"varint,2,opt,name=PPool,proto3" json:"PPool,omitempty"`
	//当前游戏中步骤
	CurDaXuanOperateStep DaXuanOperateStep `protobuf:"varint,3,opt,name=curDaXuanOperateStep,proto3,enum=DaXuanOperateStep" json:"curDaXuanOperateStep,omitempty"`
	//当前操作玩家的UUID
	CurDoUuid string `protobuf:"bytes,4,opt,name=curDoUuid,proto3" json:"curDoUuid,omitempty"`
	//上一次操作玩家的UUID
	LastDoUuid string `protobuf:"bytes,5,opt,name=LastDoUuid,proto3" json:"LastDoUuid,omitempty"`
	//上一家发言的操作类型，记录本圈发言最大值
	LastDoType DaXuanDoType `protobuf:"varint,6,opt,name=LastDoType,proto3,enum=DaXuanDoType" json:"LastDoType,omitempty"`
	//上一家发言的最大下注
	LastBet int64 `protobuf:"varint,7,opt,name=LastBet,proto3" json:"LastBet,omitempty"`
	//上一把打芒类型
	LastMongoType DaXuanMongoType `protobuf:"varint,8,opt,name=LastMongoType,proto3,enum=DaXuanMongoType" json:"LastMongoType,omitempty"`
	//连续同类型打芒类型计数，如:连续休芒2局
	MongoNum int64 `protobuf:"varint,9,opt,name=MongoNum,proto3" json:"MongoNum,omitempty"`
	//玩家详细信息
	PlayerDoTypeMessegeInfo []*PlayerDoTypeMessege `protobuf:"bytes,10,rep,name=playerDoTypeMessegeInfo,proto3" json:"playerDoTypeMessegeInfo,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}               `json:"-"`
	XXX_unrecognized        []byte                 `json:"-"`
	XXX_sizecache           int32                  `json:"-"`
}

func (m *DaXuanInRoom) Reset()         { *m = DaXuanInRoom{} }
func (m *DaXuanInRoom) String() string { return proto.CompactTextString(m) }
func (*DaXuanInRoom) ProtoMessage()    {}
func (*DaXuanInRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{258}
}

func (m *DaXuanInRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanInRoom.Unmarshal(m, b)
}
func (m *DaXuanInRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanInRoom.Marshal(b, m, deterministic)
}
func (m *DaXuanInRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanInRoom.Merge(m, src)
}
func (m *DaXuanInRoom) XXX_Size() int {
	return xxx_messageInfo_DaXuanInRoom.Size(m)
}
func (m *DaXuanInRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanInRoom.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanInRoom proto.InternalMessageInfo

func (m *DaXuanInRoom) GetMongo() int64 {
	if m != nil {
		return m.Mongo
	}
	return 0
}

func (m *DaXuanInRoom) GetPPool() int64 {
	if m != nil {
		return m.PPool
	}
	return 0
}

func (m *DaXuanInRoom) GetCurDaXuanOperateStep() DaXuanOperateStep {
	if m != nil {
		return m.CurDaXuanOperateStep
	}
	return DaXuanOperateStep_DaXuanOperate_None
}

func (m *DaXuanInRoom) GetCurDoUuid() string {
	if m != nil {
		return m.CurDoUuid
	}
	return ""
}

func (m *DaXuanInRoom) GetLastDoUuid() string {
	if m != nil {
		return m.LastDoUuid
	}
	return ""
}

func (m *DaXuanInRoom) GetLastDoType() DaXuanDoType {
	if m != nil {
		return m.LastDoType
	}
	return DaXuanDoType_DaXuanDo_None
}

func (m *DaXuanInRoom) GetLastBet() int64 {
	if m != nil {
		return m.LastBet
	}
	return 0
}

func (m *DaXuanInRoom) GetLastMongoType() DaXuanMongoType {
	if m != nil {
		return m.LastMongoType
	}
	return DaXuanMongoType_DaXuanMongoType_None
}

func (m *DaXuanInRoom) GetMongoNum() int64 {
	if m != nil {
		return m.MongoNum
	}
	return 0
}

func (m *DaXuanInRoom) GetPlayerDoTypeMessegeInfo() []*PlayerDoTypeMessege {
	if m != nil {
		return m.PlayerDoTypeMessegeInfo
	}
	return nil
}

// 打旋保存分牌
type DaXuanPartRequest struct {
	//分好的牌，前两张一组是头牌，后两张一组是尾牌
	PartPokers []*Poker `protobuf:"bytes,1,rep,name=partPokers,proto3" json:"partPokers,omitempty"`
	//对应分组的牌型
	PokerTypes           []DaXuanPokerType `protobuf:"varint,3,rep,packed,name=pokerTypes,proto3,enum=DaXuanPokerType" json:"pokerTypes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DaXuanPartRequest) Reset()         { *m = DaXuanPartRequest{} }
func (m *DaXuanPartRequest) String() string { return proto.CompactTextString(m) }
func (*DaXuanPartRequest) ProtoMessage()    {}
func (*DaXuanPartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{259}
}

func (m *DaXuanPartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanPartRequest.Unmarshal(m, b)
}
func (m *DaXuanPartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanPartRequest.Marshal(b, m, deterministic)
}
func (m *DaXuanPartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanPartRequest.Merge(m, src)
}
func (m *DaXuanPartRequest) XXX_Size() int {
	return xxx_messageInfo_DaXuanPartRequest.Size(m)
}
func (m *DaXuanPartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanPartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanPartRequest proto.InternalMessageInfo

func (m *DaXuanPartRequest) GetPartPokers() []*Poker {
	if m != nil {
		return m.PartPokers
	}
	return nil
}

func (m *DaXuanPartRequest) GetPokerTypes() []DaXuanPokerType {
	if m != nil {
		return m.PokerTypes
	}
	return nil
}

// 打旋分牌记录
type DaXuanPokerLog struct {
	//分好的牌，前两张一组是头牌，后两张一组是尾牌
	PartPokers []*Poker `protobuf:"bytes,1,rep,name=partPokers,proto3" json:"partPokers,omitempty"`
	//对应分组的牌型
	PokerTypes []DaXuanPokerType `protobuf:"varint,2,rep,packed,name=pokerTypes,proto3,enum=DaXuanPokerType" json:"pokerTypes,omitempty"`
	//对应牌的标签
	PokerFlag []DaXuanPartPokerFlag `protobuf:"varint,3,rep,packed,name=pokerFlag,proto3,enum=DaXuanPartPokerFlag" json:"pokerFlag,omitempty"`
	//总下注
	BetsCount int64 `protobuf:"varint,4,opt,name=BetsCount,proto3" json:"BetsCount,omitempty"`
	//总输赢
	WinOrLose            int64    `protobuf:"varint,5,opt,name=winOrLose,proto3" json:"winOrLose,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanPokerLog) Reset()         { *m = DaXuanPokerLog{} }
func (m *DaXuanPokerLog) String() string { return proto.CompactTextString(m) }
func (*DaXuanPokerLog) ProtoMessage()    {}
func (*DaXuanPokerLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{260}
}

func (m *DaXuanPokerLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanPokerLog.Unmarshal(m, b)
}
func (m *DaXuanPokerLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanPokerLog.Marshal(b, m, deterministic)
}
func (m *DaXuanPokerLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanPokerLog.Merge(m, src)
}
func (m *DaXuanPokerLog) XXX_Size() int {
	return xxx_messageInfo_DaXuanPokerLog.Size(m)
}
func (m *DaXuanPokerLog) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanPokerLog.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanPokerLog proto.InternalMessageInfo

func (m *DaXuanPokerLog) GetPartPokers() []*Poker {
	if m != nil {
		return m.PartPokers
	}
	return nil
}

func (m *DaXuanPokerLog) GetPokerTypes() []DaXuanPokerType {
	if m != nil {
		return m.PokerTypes
	}
	return nil
}

func (m *DaXuanPokerLog) GetPokerFlag() []DaXuanPartPokerFlag {
	if m != nil {
		return m.PokerFlag
	}
	return nil
}

func (m *DaXuanPokerLog) GetBetsCount() int64 {
	if m != nil {
		return m.BetsCount
	}
	return 0
}

func (m *DaXuanPokerLog) GetWinOrLose() int64 {
	if m != nil {
		return m.WinOrLose
	}
	return 0
}

// 打旋分牌回复，前两张一组是头牌，后两张一组是尾牌
type DaXuanPartReply struct {
	PartPokers []*Poker `protobuf:"bytes,1,rep,name=partPokers,proto3" json:"partPokers,omitempty"`
	//对应分组的牌型
	PokerTypes           []DaXuanPokerType `protobuf:"varint,3,rep,packed,name=pokerTypes,proto3,enum=DaXuanPokerType" json:"pokerTypes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DaXuanPartReply) Reset()         { *m = DaXuanPartReply{} }
func (m *DaXuanPartReply) String() string { return proto.CompactTextString(m) }
func (*DaXuanPartReply) ProtoMessage()    {}
func (*DaXuanPartReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{261}
}

func (m *DaXuanPartReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanPartReply.Unmarshal(m, b)
}
func (m *DaXuanPartReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanPartReply.Marshal(b, m, deterministic)
}
func (m *DaXuanPartReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanPartReply.Merge(m, src)
}
func (m *DaXuanPartReply) XXX_Size() int {
	return xxx_messageInfo_DaXuanPartReply.Size(m)
}
func (m *DaXuanPartReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanPartReply.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanPartReply proto.InternalMessageInfo

func (m *DaXuanPartReply) GetPartPokers() []*Poker {
	if m != nil {
		return m.PartPokers
	}
	return nil
}

func (m *DaXuanPartReply) GetPokerTypes() []DaXuanPokerType {
	if m != nil {
		return m.PokerTypes
	}
	return nil
}

// 打旋Pass申请
type DaXuanPassRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanPassRequest) Reset()         { *m = DaXuanPassRequest{} }
func (m *DaXuanPassRequest) String() string { return proto.CompactTextString(m) }
func (*DaXuanPassRequest) ProtoMessage()    {}
func (*DaXuanPassRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{262}
}

func (m *DaXuanPassRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanPassRequest.Unmarshal(m, b)
}
func (m *DaXuanPassRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanPassRequest.Marshal(b, m, deterministic)
}
func (m *DaXuanPassRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanPassRequest.Merge(m, src)
}
func (m *DaXuanPassRequest) XXX_Size() int {
	return xxx_messageInfo_DaXuanPassRequest.Size(m)
}
func (m *DaXuanPassRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanPassRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanPassRequest proto.InternalMessageInfo

// 打旋Pass回复
type DaXuanPassReply struct {
	// 成功与否
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanPassReply) Reset()         { *m = DaXuanPassReply{} }
func (m *DaXuanPassReply) String() string { return proto.CompactTextString(m) }
func (*DaXuanPassReply) ProtoMessage()    {}
func (*DaXuanPassReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{263}
}

func (m *DaXuanPassReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanPassReply.Unmarshal(m, b)
}
func (m *DaXuanPassReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanPassReply.Marshal(b, m, deterministic)
}
func (m *DaXuanPassReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanPassReply.Merge(m, src)
}
func (m *DaXuanPassReply) XXX_Size() int {
	return xxx_messageInfo_DaXuanPassReply.Size(m)
}
func (m *DaXuanPassReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanPassReply.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanPassReply proto.InternalMessageInfo

func (m *DaXuanPassReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 打旋AllIn申请
type DaXuanAllInRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanAllInRequest) Reset()         { *m = DaXuanAllInRequest{} }
func (m *DaXuanAllInRequest) String() string { return proto.CompactTextString(m) }
func (*DaXuanAllInRequest) ProtoMessage()    {}
func (*DaXuanAllInRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{264}
}

func (m *DaXuanAllInRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanAllInRequest.Unmarshal(m, b)
}
func (m *DaXuanAllInRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanAllInRequest.Marshal(b, m, deterministic)
}
func (m *DaXuanAllInRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanAllInRequest.Merge(m, src)
}
func (m *DaXuanAllInRequest) XXX_Size() int {
	return xxx_messageInfo_DaXuanAllInRequest.Size(m)
}
func (m *DaXuanAllInRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanAllInRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanAllInRequest proto.InternalMessageInfo

// 打旋AllIn回复
type DaXuanAllInReply struct {
	// 成功与否
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanAllInReply) Reset()         { *m = DaXuanAllInReply{} }
func (m *DaXuanAllInReply) String() string { return proto.CompactTextString(m) }
func (*DaXuanAllInReply) ProtoMessage()    {}
func (*DaXuanAllInReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{265}
}

func (m *DaXuanAllInReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanAllInReply.Unmarshal(m, b)
}
func (m *DaXuanAllInReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanAllInReply.Marshal(b, m, deterministic)
}
func (m *DaXuanAllInReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanAllInReply.Merge(m, src)
}
func (m *DaXuanAllInReply) XXX_Size() int {
	return xxx_messageInfo_DaXuanAllInReply.Size(m)
}
func (m *DaXuanAllInReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanAllInReply.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanAllInReply proto.InternalMessageInfo

func (m *DaXuanAllInReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 打旋加注申请
type DaXuanPlusRequest struct {
	//加注金额
	BetBalance           int64    `protobuf:"varint,1,opt,name=BetBalance,proto3" json:"BetBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanPlusRequest) Reset()         { *m = DaXuanPlusRequest{} }
func (m *DaXuanPlusRequest) String() string { return proto.CompactTextString(m) }
func (*DaXuanPlusRequest) ProtoMessage()    {}
func (*DaXuanPlusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{266}
}

func (m *DaXuanPlusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanPlusRequest.Unmarshal(m, b)
}
func (m *DaXuanPlusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanPlusRequest.Marshal(b, m, deterministic)
}
func (m *DaXuanPlusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanPlusRequest.Merge(m, src)
}
func (m *DaXuanPlusRequest) XXX_Size() int {
	return xxx_messageInfo_DaXuanPlusRequest.Size(m)
}
func (m *DaXuanPlusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanPlusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanPlusRequest proto.InternalMessageInfo

func (m *DaXuanPlusRequest) GetBetBalance() int64 {
	if m != nil {
		return m.BetBalance
	}
	return 0
}

// 打旋加注回复
type DaXuanPlusReply struct {
	// 成功与否
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanPlusReply) Reset()         { *m = DaXuanPlusReply{} }
func (m *DaXuanPlusReply) String() string { return proto.CompactTextString(m) }
func (*DaXuanPlusReply) ProtoMessage()    {}
func (*DaXuanPlusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{267}
}

func (m *DaXuanPlusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanPlusReply.Unmarshal(m, b)
}
func (m *DaXuanPlusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanPlusReply.Marshal(b, m, deterministic)
}
func (m *DaXuanPlusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanPlusReply.Merge(m, src)
}
func (m *DaXuanPlusReply) XXX_Size() int {
	return xxx_messageInfo_DaXuanPlusReply.Size(m)
}
func (m *DaXuanPlusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanPlusReply.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanPlusReply proto.InternalMessageInfo

func (m *DaXuanPlusReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 打旋跟注注申请
type DaXuanFollowRequest struct {
	//加注金额
	BetBalance           int64    `protobuf:"varint,1,opt,name=BetBalance,proto3" json:"BetBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanFollowRequest) Reset()         { *m = DaXuanFollowRequest{} }
func (m *DaXuanFollowRequest) String() string { return proto.CompactTextString(m) }
func (*DaXuanFollowRequest) ProtoMessage()    {}
func (*DaXuanFollowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{268}
}

func (m *DaXuanFollowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanFollowRequest.Unmarshal(m, b)
}
func (m *DaXuanFollowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanFollowRequest.Marshal(b, m, deterministic)
}
func (m *DaXuanFollowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanFollowRequest.Merge(m, src)
}
func (m *DaXuanFollowRequest) XXX_Size() int {
	return xxx_messageInfo_DaXuanFollowRequest.Size(m)
}
func (m *DaXuanFollowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanFollowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanFollowRequest proto.InternalMessageInfo

func (m *DaXuanFollowRequest) GetBetBalance() int64 {
	if m != nil {
		return m.BetBalance
	}
	return 0
}

// 打旋跟注回复
type DaXuanFollowReply struct {
	// 成功与否
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanFollowReply) Reset()         { *m = DaXuanFollowReply{} }
func (m *DaXuanFollowReply) String() string { return proto.CompactTextString(m) }
func (*DaXuanFollowReply) ProtoMessage()    {}
func (*DaXuanFollowReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{269}
}

func (m *DaXuanFollowReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanFollowReply.Unmarshal(m, b)
}
func (m *DaXuanFollowReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanFollowReply.Marshal(b, m, deterministic)
}
func (m *DaXuanFollowReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanFollowReply.Merge(m, src)
}
func (m *DaXuanFollowReply) XXX_Size() int {
	return xxx_messageInfo_DaXuanFollowReply.Size(m)
}
func (m *DaXuanFollowReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanFollowReply.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanFollowReply proto.InternalMessageInfo

func (m *DaXuanFollowReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 打旋押注申请
type DaXuanCallRequest struct {
	//下注金额
	BetBalance           int64    `protobuf:"varint,1,opt,name=BetBalance,proto3" json:"BetBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanCallRequest) Reset()         { *m = DaXuanCallRequest{} }
func (m *DaXuanCallRequest) String() string { return proto.CompactTextString(m) }
func (*DaXuanCallRequest) ProtoMessage()    {}
func (*DaXuanCallRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{270}
}

func (m *DaXuanCallRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanCallRequest.Unmarshal(m, b)
}
func (m *DaXuanCallRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanCallRequest.Marshal(b, m, deterministic)
}
func (m *DaXuanCallRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanCallRequest.Merge(m, src)
}
func (m *DaXuanCallRequest) XXX_Size() int {
	return xxx_messageInfo_DaXuanCallRequest.Size(m)
}
func (m *DaXuanCallRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanCallRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanCallRequest proto.InternalMessageInfo

func (m *DaXuanCallRequest) GetBetBalance() int64 {
	if m != nil {
		return m.BetBalance
	}
	return 0
}

// 打旋押注回复
type DaXuanCallReply struct {
	// 成功与否
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanCallReply) Reset()         { *m = DaXuanCallReply{} }
func (m *DaXuanCallReply) String() string { return proto.CompactTextString(m) }
func (*DaXuanCallReply) ProtoMessage()    {}
func (*DaXuanCallReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{271}
}

func (m *DaXuanCallReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanCallReply.Unmarshal(m, b)
}
func (m *DaXuanCallReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanCallReply.Marshal(b, m, deterministic)
}
func (m *DaXuanCallReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanCallReply.Merge(m, src)
}
func (m *DaXuanCallReply) XXX_Size() int {
	return xxx_messageInfo_DaXuanCallReply.Size(m)
}
func (m *DaXuanCallReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanCallReply.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanCallReply proto.InternalMessageInfo

func (m *DaXuanCallReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 打旋弃牌申请
type DaXuanFoldRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanFoldRequest) Reset()         { *m = DaXuanFoldRequest{} }
func (m *DaXuanFoldRequest) String() string { return proto.CompactTextString(m) }
func (*DaXuanFoldRequest) ProtoMessage()    {}
func (*DaXuanFoldRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{272}
}

func (m *DaXuanFoldRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanFoldRequest.Unmarshal(m, b)
}
func (m *DaXuanFoldRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanFoldRequest.Marshal(b, m, deterministic)
}
func (m *DaXuanFoldRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanFoldRequest.Merge(m, src)
}
func (m *DaXuanFoldRequest) XXX_Size() int {
	return xxx_messageInfo_DaXuanFoldRequest.Size(m)
}
func (m *DaXuanFoldRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanFoldRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanFoldRequest proto.InternalMessageInfo

// 打旋弃牌回复
type DaXuanFoldReply struct {
	// 成功与否
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanFoldReply) Reset()         { *m = DaXuanFoldReply{} }
func (m *DaXuanFoldReply) String() string { return proto.CompactTextString(m) }
func (*DaXuanFoldReply) ProtoMessage()    {}
func (*DaXuanFoldReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{273}
}

func (m *DaXuanFoldReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanFoldReply.Unmarshal(m, b)
}
func (m *DaXuanFoldReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanFoldReply.Marshal(b, m, deterministic)
}
func (m *DaXuanFoldReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanFoldReply.Merge(m, src)
}
func (m *DaXuanFoldReply) XXX_Size() int {
	return xxx_messageInfo_DaXuanFoldReply.Size(m)
}
func (m *DaXuanFoldReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanFoldReply.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanFoldReply proto.InternalMessageInfo

func (m *DaXuanFoldReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

//打旋获取房间列表请求
type GetRoomsDaXuanRequest struct {
	//房间筛选条件倍数
	RoomsType            DaXuanRoomsType `protobuf:"varint,1,opt,name=roomsType,proto3,enum=DaXuanRoomsType" json:"roomsType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetRoomsDaXuanRequest) Reset()         { *m = GetRoomsDaXuanRequest{} }
func (m *GetRoomsDaXuanRequest) String() string { return proto.CompactTextString(m) }
func (*GetRoomsDaXuanRequest) ProtoMessage()    {}
func (*GetRoomsDaXuanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{274}
}

func (m *GetRoomsDaXuanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomsDaXuanRequest.Unmarshal(m, b)
}
func (m *GetRoomsDaXuanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomsDaXuanRequest.Marshal(b, m, deterministic)
}
func (m *GetRoomsDaXuanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomsDaXuanRequest.Merge(m, src)
}
func (m *GetRoomsDaXuanRequest) XXX_Size() int {
	return xxx_messageInfo_GetRoomsDaXuanRequest.Size(m)
}
func (m *GetRoomsDaXuanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomsDaXuanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomsDaXuanRequest proto.InternalMessageInfo

func (m *GetRoomsDaXuanRequest) GetRoomsType() DaXuanRoomsType {
	if m != nil {
		return m.RoomsType
	}
	return DaXuanRoomsType_DaXuanRooms_Small
}

//打旋获取房间牌局回顾
type GetGameReviewRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGameReviewRequest) Reset()         { *m = GetGameReviewRequest{} }
func (m *GetGameReviewRequest) String() string { return proto.CompactTextString(m) }
func (*GetGameReviewRequest) ProtoMessage()    {}
func (*GetGameReviewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{275}
}

func (m *GetGameReviewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGameReviewRequest.Unmarshal(m, b)
}
func (m *GetGameReviewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGameReviewRequest.Marshal(b, m, deterministic)
}
func (m *GetGameReviewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGameReviewRequest.Merge(m, src)
}
func (m *GetGameReviewRequest) XXX_Size() int {
	return xxx_messageInfo_GetGameReviewRequest.Size(m)
}
func (m *GetGameReviewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGameReviewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGameReviewRequest proto.InternalMessageInfo

//打旋修改交易密码请求
type UpdTransactionPasswordRequest struct {
	//新交易密码
	NewTransactionPassword string `protobuf:"bytes,1,opt,name=newTransactionPassword,proto3" json:"newTransactionPassword,omitempty"`
	//原密码
	OldTransactionPassword string   `protobuf:"bytes,2,opt,name=oldTransactionPassword,proto3" json:"oldTransactionPassword,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *UpdTransactionPasswordRequest) Reset()         { *m = UpdTransactionPasswordRequest{} }
func (m *UpdTransactionPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*UpdTransactionPasswordRequest) ProtoMessage()    {}
func (*UpdTransactionPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{276}
}

func (m *UpdTransactionPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdTransactionPasswordRequest.Unmarshal(m, b)
}
func (m *UpdTransactionPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdTransactionPasswordRequest.Marshal(b, m, deterministic)
}
func (m *UpdTransactionPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdTransactionPasswordRequest.Merge(m, src)
}
func (m *UpdTransactionPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_UpdTransactionPasswordRequest.Size(m)
}
func (m *UpdTransactionPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdTransactionPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdTransactionPasswordRequest proto.InternalMessageInfo

func (m *UpdTransactionPasswordRequest) GetNewTransactionPassword() string {
	if m != nil {
		return m.NewTransactionPassword
	}
	return ""
}

func (m *UpdTransactionPasswordRequest) GetOldTransactionPassword() string {
	if m != nil {
		return m.OldTransactionPassword
	}
	return ""
}

//打旋修改交易密码回复
type UpdTransactionPasswordReply struct {
	//修改状态
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdTransactionPasswordReply) Reset()         { *m = UpdTransactionPasswordReply{} }
func (m *UpdTransactionPasswordReply) String() string { return proto.CompactTextString(m) }
func (*UpdTransactionPasswordReply) ProtoMessage()    {}
func (*UpdTransactionPasswordReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{277}
}

func (m *UpdTransactionPasswordReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdTransactionPasswordReply.Unmarshal(m, b)
}
func (m *UpdTransactionPasswordReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdTransactionPasswordReply.Marshal(b, m, deterministic)
}
func (m *UpdTransactionPasswordReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdTransactionPasswordReply.Merge(m, src)
}
func (m *UpdTransactionPasswordReply) XXX_Size() int {
	return xxx_messageInfo_UpdTransactionPasswordReply.Size(m)
}
func (m *UpdTransactionPasswordReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdTransactionPasswordReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdTransactionPasswordReply proto.InternalMessageInfo

func (m *UpdTransactionPasswordReply) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

//打旋获取牌局回顾回复
type GetGameReviewReply struct {
	RoomInfo             *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetGameReviewReply) Reset()         { *m = GetGameReviewReply{} }
func (m *GetGameReviewReply) String() string { return proto.CompactTextString(m) }
func (*GetGameReviewReply) ProtoMessage()    {}
func (*GetGameReviewReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{278}
}

func (m *GetGameReviewReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGameReviewReply.Unmarshal(m, b)
}
func (m *GetGameReviewReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGameReviewReply.Marshal(b, m, deterministic)
}
func (m *GetGameReviewReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGameReviewReply.Merge(m, src)
}
func (m *GetGameReviewReply) XXX_Size() int {
	return xxx_messageInfo_GetGameReviewReply.Size(m)
}
func (m *GetGameReviewReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGameReviewReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetGameReviewReply proto.InternalMessageInfo

func (m *GetGameReviewReply) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

//打旋获取房间实时战绩
type GetRecordRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecordRequest) Reset()         { *m = GetRecordRequest{} }
func (m *GetRecordRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecordRequest) ProtoMessage()    {}
func (*GetRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{279}
}

func (m *GetRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecordRequest.Unmarshal(m, b)
}
func (m *GetRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecordRequest.Marshal(b, m, deterministic)
}
func (m *GetRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecordRequest.Merge(m, src)
}
func (m *GetRecordRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecordRequest.Size(m)
}
func (m *GetRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecordRequest proto.InternalMessageInfo

//打旋获取实时战绩回复
type GetRecordReply struct {
	PlayerInfo           []*RoomPlayerInfo `protobuf:"bytes,1,rep,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	SidelinesPlayerInfo  []*RoomPlayerInfo `protobuf:"bytes,2,rep,name=sidelinesPlayerInfo,proto3" json:"sidelinesPlayerInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetRecordReply) Reset()         { *m = GetRecordReply{} }
func (m *GetRecordReply) String() string { return proto.CompactTextString(m) }
func (*GetRecordReply) ProtoMessage()    {}
func (*GetRecordReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{280}
}

func (m *GetRecordReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecordReply.Unmarshal(m, b)
}
func (m *GetRecordReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecordReply.Marshal(b, m, deterministic)
}
func (m *GetRecordReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecordReply.Merge(m, src)
}
func (m *GetRecordReply) XXX_Size() int {
	return xxx_messageInfo_GetRecordReply.Size(m)
}
func (m *GetRecordReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecordReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecordReply proto.InternalMessageInfo

func (m *GetRecordReply) GetPlayerInfo() []*RoomPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *GetRecordReply) GetSidelinesPlayerInfo() []*RoomPlayerInfo {
	if m != nil {
		return m.SidelinesPlayerInfo
	}
	return nil
}

//打旋获取房间列表回复
type GetRoomsDaXuanReply struct {
	Rooms                []*RoomInfo `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetRoomsDaXuanReply) Reset()         { *m = GetRoomsDaXuanReply{} }
func (m *GetRoomsDaXuanReply) String() string { return proto.CompactTextString(m) }
func (*GetRoomsDaXuanReply) ProtoMessage()    {}
func (*GetRoomsDaXuanReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{281}
}

func (m *GetRoomsDaXuanReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomsDaXuanReply.Unmarshal(m, b)
}
func (m *GetRoomsDaXuanReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomsDaXuanReply.Marshal(b, m, deterministic)
}
func (m *GetRoomsDaXuanReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomsDaXuanReply.Merge(m, src)
}
func (m *GetRoomsDaXuanReply) XXX_Size() int {
	return xxx_messageInfo_GetRoomsDaXuanReply.Size(m)
}
func (m *GetRoomsDaXuanReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomsDaXuanReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomsDaXuanReply proto.InternalMessageInfo

func (m *GetRoomsDaXuanReply) GetRooms() []*RoomInfo {
	if m != nil {
		return m.Rooms
	}
	return nil
}

// 打旋上座申请 - 即状态改变
type DaXuanUpSeatRequest struct {
	// 座位号 - 索引
	TableIndex int64 `protobuf:"varint,1,opt,name=TableIndex,proto3" json:"TableIndex,omitempty"`
	// 带多少钱
	UpSeatMoney          int64    `protobuf:"varint,2,opt,name=UpSeatMoney,proto3" json:"UpSeatMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanUpSeatRequest) Reset()         { *m = DaXuanUpSeatRequest{} }
func (m *DaXuanUpSeatRequest) String() string { return proto.CompactTextString(m) }
func (*DaXuanUpSeatRequest) ProtoMessage()    {}
func (*DaXuanUpSeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{282}
}

func (m *DaXuanUpSeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanUpSeatRequest.Unmarshal(m, b)
}
func (m *DaXuanUpSeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanUpSeatRequest.Marshal(b, m, deterministic)
}
func (m *DaXuanUpSeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanUpSeatRequest.Merge(m, src)
}
func (m *DaXuanUpSeatRequest) XXX_Size() int {
	return xxx_messageInfo_DaXuanUpSeatRequest.Size(m)
}
func (m *DaXuanUpSeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanUpSeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanUpSeatRequest proto.InternalMessageInfo

func (m *DaXuanUpSeatRequest) GetTableIndex() int64 {
	if m != nil {
		return m.TableIndex
	}
	return 0
}

func (m *DaXuanUpSeatRequest) GetUpSeatMoney() int64 {
	if m != nil {
		return m.UpSeatMoney
	}
	return 0
}

// 打旋上座回复
type DaXuanUpSeatReply struct {
	// 成功与否
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 玩家座位上的金额
	SafeMoney            int64    `protobuf:"varint,2,opt,name=SafeMoney,proto3" json:"SafeMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanUpSeatReply) Reset()         { *m = DaXuanUpSeatReply{} }
func (m *DaXuanUpSeatReply) String() string { return proto.CompactTextString(m) }
func (*DaXuanUpSeatReply) ProtoMessage()    {}
func (*DaXuanUpSeatReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{283}
}

func (m *DaXuanUpSeatReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanUpSeatReply.Unmarshal(m, b)
}
func (m *DaXuanUpSeatReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanUpSeatReply.Marshal(b, m, deterministic)
}
func (m *DaXuanUpSeatReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanUpSeatReply.Merge(m, src)
}
func (m *DaXuanUpSeatReply) XXX_Size() int {
	return xxx_messageInfo_DaXuanUpSeatReply.Size(m)
}
func (m *DaXuanUpSeatReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanUpSeatReply.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanUpSeatReply proto.InternalMessageInfo

func (m *DaXuanUpSeatReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *DaXuanUpSeatReply) GetSafeMoney() int64 {
	if m != nil {
		return m.SafeMoney
	}
	return 0
}

// 打旋下座申请 - 即状态改变
type DaXuanDownSeatRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanDownSeatRequest) Reset()         { *m = DaXuanDownSeatRequest{} }
func (m *DaXuanDownSeatRequest) String() string { return proto.CompactTextString(m) }
func (*DaXuanDownSeatRequest) ProtoMessage()    {}
func (*DaXuanDownSeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{284}
}

func (m *DaXuanDownSeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanDownSeatRequest.Unmarshal(m, b)
}
func (m *DaXuanDownSeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanDownSeatRequest.Marshal(b, m, deterministic)
}
func (m *DaXuanDownSeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanDownSeatRequest.Merge(m, src)
}
func (m *DaXuanDownSeatRequest) XXX_Size() int {
	return xxx_messageInfo_DaXuanDownSeatRequest.Size(m)
}
func (m *DaXuanDownSeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanDownSeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanDownSeatRequest proto.InternalMessageInfo

// 打旋下座回复
type DaXuanDownSeatReply struct {
	// 成功与否
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 申请true/取消申请false
	IsRequest            bool     `protobuf:"varint,2,opt,name=IsRequest,proto3" json:"IsRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanDownSeatReply) Reset()         { *m = DaXuanDownSeatReply{} }
func (m *DaXuanDownSeatReply) String() string { return proto.CompactTextString(m) }
func (*DaXuanDownSeatReply) ProtoMessage()    {}
func (*DaXuanDownSeatReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{285}
}

func (m *DaXuanDownSeatReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanDownSeatReply.Unmarshal(m, b)
}
func (m *DaXuanDownSeatReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanDownSeatReply.Marshal(b, m, deterministic)
}
func (m *DaXuanDownSeatReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanDownSeatReply.Merge(m, src)
}
func (m *DaXuanDownSeatReply) XXX_Size() int {
	return xxx_messageInfo_DaXuanDownSeatReply.Size(m)
}
func (m *DaXuanDownSeatReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanDownSeatReply.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanDownSeatReply proto.InternalMessageInfo

func (m *DaXuanDownSeatReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *DaXuanDownSeatReply) GetIsRequest() bool {
	if m != nil {
		return m.IsRequest
	}
	return false
}

// 打旋保座申请 - 即状态改变
type DaXuanKeepSeatRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanKeepSeatRequest) Reset()         { *m = DaXuanKeepSeatRequest{} }
func (m *DaXuanKeepSeatRequest) String() string { return proto.CompactTextString(m) }
func (*DaXuanKeepSeatRequest) ProtoMessage()    {}
func (*DaXuanKeepSeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{286}
}

func (m *DaXuanKeepSeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanKeepSeatRequest.Unmarshal(m, b)
}
func (m *DaXuanKeepSeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanKeepSeatRequest.Marshal(b, m, deterministic)
}
func (m *DaXuanKeepSeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanKeepSeatRequest.Merge(m, src)
}
func (m *DaXuanKeepSeatRequest) XXX_Size() int {
	return xxx_messageInfo_DaXuanKeepSeatRequest.Size(m)
}
func (m *DaXuanKeepSeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanKeepSeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanKeepSeatRequest proto.InternalMessageInfo

// 打旋保座回复
type DaXuanKeepSeatReply struct {
	// 成功与否
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanKeepSeatReply) Reset()         { *m = DaXuanKeepSeatReply{} }
func (m *DaXuanKeepSeatReply) String() string { return proto.CompactTextString(m) }
func (*DaXuanKeepSeatReply) ProtoMessage()    {}
func (*DaXuanKeepSeatReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{287}
}

func (m *DaXuanKeepSeatReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanKeepSeatReply.Unmarshal(m, b)
}
func (m *DaXuanKeepSeatReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanKeepSeatReply.Marshal(b, m, deterministic)
}
func (m *DaXuanKeepSeatReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanKeepSeatReply.Merge(m, src)
}
func (m *DaXuanKeepSeatReply) XXX_Size() int {
	return xxx_messageInfo_DaXuanKeepSeatReply.Size(m)
}
func (m *DaXuanKeepSeatReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanKeepSeatReply.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanKeepSeatReply proto.InternalMessageInfo

func (m *DaXuanKeepSeatReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 打旋归座申请
type DaXuanBackSeatRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanBackSeatRequest) Reset()         { *m = DaXuanBackSeatRequest{} }
func (m *DaXuanBackSeatRequest) String() string { return proto.CompactTextString(m) }
func (*DaXuanBackSeatRequest) ProtoMessage()    {}
func (*DaXuanBackSeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{288}
}

func (m *DaXuanBackSeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanBackSeatRequest.Unmarshal(m, b)
}
func (m *DaXuanBackSeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanBackSeatRequest.Marshal(b, m, deterministic)
}
func (m *DaXuanBackSeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanBackSeatRequest.Merge(m, src)
}
func (m *DaXuanBackSeatRequest) XXX_Size() int {
	return xxx_messageInfo_DaXuanBackSeatRequest.Size(m)
}
func (m *DaXuanBackSeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanBackSeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanBackSeatRequest proto.InternalMessageInfo

// 打旋归座回复
type DaXuanBackSeatReply struct {
	// 成功与否
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanBackSeatReply) Reset()         { *m = DaXuanBackSeatReply{} }
func (m *DaXuanBackSeatReply) String() string { return proto.CompactTextString(m) }
func (*DaXuanBackSeatReply) ProtoMessage()    {}
func (*DaXuanBackSeatReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{289}
}

func (m *DaXuanBackSeatReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanBackSeatReply.Unmarshal(m, b)
}
func (m *DaXuanBackSeatReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanBackSeatReply.Marshal(b, m, deterministic)
}
func (m *DaXuanBackSeatReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanBackSeatReply.Merge(m, src)
}
func (m *DaXuanBackSeatReply) XXX_Size() int {
	return xxx_messageInfo_DaXuanBackSeatReply.Size(m)
}
func (m *DaXuanBackSeatReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanBackSeatReply.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanBackSeatReply proto.InternalMessageInfo

func (m *DaXuanBackSeatReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 打旋充钵钵申请
type DaXuanTopUpRequest struct {
	// 充值金额
	TopUpBalance         int64    `protobuf:"varint,1,opt,name=TopUpBalance,proto3" json:"TopUpBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanTopUpRequest) Reset()         { *m = DaXuanTopUpRequest{} }
func (m *DaXuanTopUpRequest) String() string { return proto.CompactTextString(m) }
func (*DaXuanTopUpRequest) ProtoMessage()    {}
func (*DaXuanTopUpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{290}
}

func (m *DaXuanTopUpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanTopUpRequest.Unmarshal(m, b)
}
func (m *DaXuanTopUpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanTopUpRequest.Marshal(b, m, deterministic)
}
func (m *DaXuanTopUpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanTopUpRequest.Merge(m, src)
}
func (m *DaXuanTopUpRequest) XXX_Size() int {
	return xxx_messageInfo_DaXuanTopUpRequest.Size(m)
}
func (m *DaXuanTopUpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanTopUpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanTopUpRequest proto.InternalMessageInfo

func (m *DaXuanTopUpRequest) GetTopUpBalance() int64 {
	if m != nil {
		return m.TopUpBalance
	}
	return 0
}

// 打旋充钵钵回复
type DaXuanTopUpReply struct {
	// 是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 玩家现在金额
	SafeMoney            int64    `protobuf:"varint,2,opt,name=SafeMoney,proto3" json:"SafeMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanTopUpReply) Reset()         { *m = DaXuanTopUpReply{} }
func (m *DaXuanTopUpReply) String() string { return proto.CompactTextString(m) }
func (*DaXuanTopUpReply) ProtoMessage()    {}
func (*DaXuanTopUpReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{291}
}

func (m *DaXuanTopUpReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanTopUpReply.Unmarshal(m, b)
}
func (m *DaXuanTopUpReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanTopUpReply.Marshal(b, m, deterministic)
}
func (m *DaXuanTopUpReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanTopUpReply.Merge(m, src)
}
func (m *DaXuanTopUpReply) XXX_Size() int {
	return xxx_messageInfo_DaXuanTopUpReply.Size(m)
}
func (m *DaXuanTopUpReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanTopUpReply.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanTopUpReply proto.InternalMessageInfo

func (m *DaXuanTopUpReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *DaXuanTopUpReply) GetSafeMoney() int64 {
	if m != nil {
		return m.SafeMoney
	}
	return 0
}

// 推送 - 桌子信息 - 抢座模式都可以用
type PushTableChange struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 被操作的桌位号
	TableIndex int64 `protobuf:"varint,2,opt,name=TableIndex,proto3" json:"TableIndex,omitempty"`
	// 玩家Id
	PlayerUuid string `protobuf:"bytes,3,opt,name=PlayerUuid,proto3" json:"PlayerUuid,omitempty"`
	// 上座true下座false
	IsUpSeat bool `protobuf:"varint,4,opt,name=IsUpSeat,proto3" json:"IsUpSeat,omitempty"`
	// 玩家的safeMoney
	SafeMoney int64 `protobuf:"varint,5,opt,name=SafeMoney,proto3" json:"SafeMoney,omitempty"`
	// 玩家的AllSafeMoney
	AllSafeMoney int64 `protobuf:"varint,6,opt,name=AllSafeMoney,proto3" json:"AllSafeMoney,omitempty"`
	// 玩家头像
	PlayerHeadUrl string `protobuf:"bytes,7,opt,name=PlayerHeadUrl,proto3" json:"PlayerHeadUrl,omitempty"`
	// 玩家名字
	PlayerName string `protobuf:"bytes,8,opt,name=PlayerName,proto3" json:"PlayerName,omitempty"`
	// 玩家shortId
	PlayerShortId        string   `protobuf:"bytes,9,opt,name=PlayerShortId,proto3" json:"PlayerShortId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushTableChange) Reset()         { *m = PushTableChange{} }
func (m *PushTableChange) String() string { return proto.CompactTextString(m) }
func (*PushTableChange) ProtoMessage()    {}
func (*PushTableChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{292}
}

func (m *PushTableChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushTableChange.Unmarshal(m, b)
}
func (m *PushTableChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushTableChange.Marshal(b, m, deterministic)
}
func (m *PushTableChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushTableChange.Merge(m, src)
}
func (m *PushTableChange) XXX_Size() int {
	return xxx_messageInfo_PushTableChange.Size(m)
}
func (m *PushTableChange) XXX_DiscardUnknown() {
	xxx_messageInfo_PushTableChange.DiscardUnknown(m)
}

var xxx_messageInfo_PushTableChange proto.InternalMessageInfo

func (m *PushTableChange) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushTableChange) GetTableIndex() int64 {
	if m != nil {
		return m.TableIndex
	}
	return 0
}

func (m *PushTableChange) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *PushTableChange) GetIsUpSeat() bool {
	if m != nil {
		return m.IsUpSeat
	}
	return false
}

func (m *PushTableChange) GetSafeMoney() int64 {
	if m != nil {
		return m.SafeMoney
	}
	return 0
}

func (m *PushTableChange) GetAllSafeMoney() int64 {
	if m != nil {
		return m.AllSafeMoney
	}
	return 0
}

func (m *PushTableChange) GetPlayerHeadUrl() string {
	if m != nil {
		return m.PlayerHeadUrl
	}
	return ""
}

func (m *PushTableChange) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *PushTableChange) GetPlayerShortId() string {
	if m != nil {
		return m.PlayerShortId
	}
	return ""
}

// 推送 - 当前操作的玩家
type CurDoPlayerMessege struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	//当前操作玩家UUID
	DoUuid string `protobuf:"bytes,2,opt,name=doUuid,proto3" json:"doUuid,omitempty"`
	//操作结束时间
	EndTime int64 `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	//当前玩家可做的操作
	Operates []DaXuanDoType `protobuf:"varint,4,rep,packed,name=operates,proto3,enum=DaXuanDoType" json:"operates,omitempty"`
	//最大可加注的倍数
	MaxBetOdds int64 `protobuf:"varint,5,opt,name=maxBetOdds,proto3" json:"maxBetOdds,omitempty"`
	//下注金额
	BetBalance           int64    `protobuf:"varint,6,opt,name=BetBalance,proto3" json:"BetBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurDoPlayerMessege) Reset()         { *m = CurDoPlayerMessege{} }
func (m *CurDoPlayerMessege) String() string { return proto.CompactTextString(m) }
func (*CurDoPlayerMessege) ProtoMessage()    {}
func (*CurDoPlayerMessege) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{293}
}

func (m *CurDoPlayerMessege) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurDoPlayerMessege.Unmarshal(m, b)
}
func (m *CurDoPlayerMessege) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurDoPlayerMessege.Marshal(b, m, deterministic)
}
func (m *CurDoPlayerMessege) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurDoPlayerMessege.Merge(m, src)
}
func (m *CurDoPlayerMessege) XXX_Size() int {
	return xxx_messageInfo_CurDoPlayerMessege.Size(m)
}
func (m *CurDoPlayerMessege) XXX_DiscardUnknown() {
	xxx_messageInfo_CurDoPlayerMessege.DiscardUnknown(m)
}

var xxx_messageInfo_CurDoPlayerMessege proto.InternalMessageInfo

func (m *CurDoPlayerMessege) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *CurDoPlayerMessege) GetDoUuid() string {
	if m != nil {
		return m.DoUuid
	}
	return ""
}

func (m *CurDoPlayerMessege) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *CurDoPlayerMessege) GetOperates() []DaXuanDoType {
	if m != nil {
		return m.Operates
	}
	return nil
}

func (m *CurDoPlayerMessege) GetMaxBetOdds() int64 {
	if m != nil {
		return m.MaxBetOdds
	}
	return 0
}

func (m *CurDoPlayerMessege) GetBetBalance() int64 {
	if m != nil {
		return m.BetBalance
	}
	return 0
}

// 推送 - 玩家的操作行为推送
type PlayerDoTypeMessege struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	//当前操作玩家UUID
	DoUuid string `protobuf:"bytes,2,opt,name=doUuid,proto3" json:"doUuid,omitempty"`
	//玩家选择的操作，弃牌、跟、加注、AllIN
	Operates DaXuanDoType `protobuf:"varint,3,opt,name=operates,proto3,enum=DaXuanDoType" json:"operates,omitempty"`
	//下注金额
	BetBalance int64 `protobuf:"varint,4,opt,name=BetBalance,proto3" json:"BetBalance,omitempty"`
	//下注后剩余钵钵
	SafeMoney int64 `protobuf:"varint,5,opt,name=SafeMoney,proto3" json:"SafeMoney,omitempty"`
	//当前芒果总额
	Mongo int64 `protobuf:"varint,6,opt,name=mongo,proto3" json:"mongo,omitempty"`
	//当前皮池总额
	PPull                int64    `protobuf:"varint,7,opt,name=PPull,proto3" json:"PPull,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDoTypeMessege) Reset()         { *m = PlayerDoTypeMessege{} }
func (m *PlayerDoTypeMessege) String() string { return proto.CompactTextString(m) }
func (*PlayerDoTypeMessege) ProtoMessage()    {}
func (*PlayerDoTypeMessege) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{294}
}

func (m *PlayerDoTypeMessege) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDoTypeMessege.Unmarshal(m, b)
}
func (m *PlayerDoTypeMessege) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDoTypeMessege.Marshal(b, m, deterministic)
}
func (m *PlayerDoTypeMessege) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDoTypeMessege.Merge(m, src)
}
func (m *PlayerDoTypeMessege) XXX_Size() int {
	return xxx_messageInfo_PlayerDoTypeMessege.Size(m)
}
func (m *PlayerDoTypeMessege) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDoTypeMessege.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDoTypeMessege proto.InternalMessageInfo

func (m *PlayerDoTypeMessege) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PlayerDoTypeMessege) GetDoUuid() string {
	if m != nil {
		return m.DoUuid
	}
	return ""
}

func (m *PlayerDoTypeMessege) GetOperates() DaXuanDoType {
	if m != nil {
		return m.Operates
	}
	return DaXuanDoType_DaXuanDo_None
}

func (m *PlayerDoTypeMessege) GetBetBalance() int64 {
	if m != nil {
		return m.BetBalance
	}
	return 0
}

func (m *PlayerDoTypeMessege) GetSafeMoney() int64 {
	if m != nil {
		return m.SafeMoney
	}
	return 0
}

func (m *PlayerDoTypeMessege) GetMongo() int64 {
	if m != nil {
		return m.Mongo
	}
	return 0
}

func (m *PlayerDoTypeMessege) GetPPull() int64 {
	if m != nil {
		return m.PPull
	}
	return 0
}

// 推送 - 玩家的明牌
type PublicPokersMessege struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	//当前玩家可做的操作
	PublicPokers         []*PublicPokers `protobuf:"bytes,2,rep,name=publicPokers,proto3" json:"publicPokers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PublicPokersMessege) Reset()         { *m = PublicPokersMessege{} }
func (m *PublicPokersMessege) String() string { return proto.CompactTextString(m) }
func (*PublicPokersMessege) ProtoMessage()    {}
func (*PublicPokersMessege) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{295}
}

func (m *PublicPokersMessege) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicPokersMessege.Unmarshal(m, b)
}
func (m *PublicPokersMessege) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicPokersMessege.Marshal(b, m, deterministic)
}
func (m *PublicPokersMessege) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicPokersMessege.Merge(m, src)
}
func (m *PublicPokersMessege) XXX_Size() int {
	return xxx_messageInfo_PublicPokersMessege.Size(m)
}
func (m *PublicPokersMessege) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicPokersMessege.DiscardUnknown(m)
}

var xxx_messageInfo_PublicPokersMessege proto.InternalMessageInfo

func (m *PublicPokersMessege) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PublicPokersMessege) GetPublicPokers() []*PublicPokers {
	if m != nil {
		return m.PublicPokers
	}
	return nil
}

type PublicPokers struct {
	//玩家UUID
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Pokers               []*Poker `protobuf:"bytes,2,rep,name=pokers,proto3" json:"pokers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicPokers) Reset()         { *m = PublicPokers{} }
func (m *PublicPokers) String() string { return proto.CompactTextString(m) }
func (*PublicPokers) ProtoMessage()    {}
func (*PublicPokers) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{296}
}

func (m *PublicPokers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicPokers.Unmarshal(m, b)
}
func (m *PublicPokers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicPokers.Marshal(b, m, deterministic)
}
func (m *PublicPokers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicPokers.Merge(m, src)
}
func (m *PublicPokers) XXX_Size() int {
	return xxx_messageInfo_PublicPokers.Size(m)
}
func (m *PublicPokers) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicPokers.DiscardUnknown(m)
}

var xxx_messageInfo_PublicPokers proto.InternalMessageInfo

func (m *PublicPokers) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PublicPokers) GetPokers() []*Poker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

// 补充钵钵推送
type PushTopUp struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 玩家id
	PlayerUuid string `protobuf:"bytes,2,opt,name=playerUuid,proto3" json:"playerUuid,omitempty"`
	// 玩家SafeMoney
	SafeMoney int64 `protobuf:"varint,3,opt,name=SafeMoney,proto3" json:"SafeMoney,omitempty"`
	// 玩家AllSafeMoney
	AllSafeMoney         int64    `protobuf:"varint,4,opt,name=AllSafeMoney,proto3" json:"AllSafeMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushTopUp) Reset()         { *m = PushTopUp{} }
func (m *PushTopUp) String() string { return proto.CompactTextString(m) }
func (*PushTopUp) ProtoMessage()    {}
func (*PushTopUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{297}
}

func (m *PushTopUp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushTopUp.Unmarshal(m, b)
}
func (m *PushTopUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushTopUp.Marshal(b, m, deterministic)
}
func (m *PushTopUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushTopUp.Merge(m, src)
}
func (m *PushTopUp) XXX_Size() int {
	return xxx_messageInfo_PushTopUp.Size(m)
}
func (m *PushTopUp) XXX_DiscardUnknown() {
	xxx_messageInfo_PushTopUp.DiscardUnknown(m)
}

var xxx_messageInfo_PushTopUp proto.InternalMessageInfo

func (m *PushTopUp) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushTopUp) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *PushTopUp) GetSafeMoney() int64 {
	if m != nil {
		return m.SafeMoney
	}
	return 0
}

func (m *PushTopUp) GetAllSafeMoney() int64 {
	if m != nil {
		return m.AllSafeMoney
	}
	return 0
}

// 跑得快在房间中的信息
type RunFastInRoom struct {
	// 最后一次出牌的玩家的 uuid
	LastPlayerUuid string `protobuf:"bytes,1,opt,name=lastPlayerUuid,proto3" json:"lastPlayerUuid,omitempty"`
	//上一把玩家出的牌
	LastOutPokers        []*Poker `protobuf:"bytes,2,rep,name=lastOutPokers,proto3" json:"lastOutPokers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunFastInRoom) Reset()         { *m = RunFastInRoom{} }
func (m *RunFastInRoom) String() string { return proto.CompactTextString(m) }
func (*RunFastInRoom) ProtoMessage()    {}
func (*RunFastInRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{298}
}

func (m *RunFastInRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunFastInRoom.Unmarshal(m, b)
}
func (m *RunFastInRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunFastInRoom.Marshal(b, m, deterministic)
}
func (m *RunFastInRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunFastInRoom.Merge(m, src)
}
func (m *RunFastInRoom) XXX_Size() int {
	return xxx_messageInfo_RunFastInRoom.Size(m)
}
func (m *RunFastInRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_RunFastInRoom.DiscardUnknown(m)
}

var xxx_messageInfo_RunFastInRoom proto.InternalMessageInfo

func (m *RunFastInRoom) GetLastPlayerUuid() string {
	if m != nil {
		return m.LastPlayerUuid
	}
	return ""
}

func (m *RunFastInRoom) GetLastOutPokers() []*Poker {
	if m != nil {
		return m.LastOutPokers
	}
	return nil
}

// 连连看获取可以消除的一对图标请求
type Get2CellsCanLinkRequest struct {
	//剩余的图标
	Points               []*IconPoint `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Get2CellsCanLinkRequest) Reset()         { *m = Get2CellsCanLinkRequest{} }
func (m *Get2CellsCanLinkRequest) String() string { return proto.CompactTextString(m) }
func (*Get2CellsCanLinkRequest) ProtoMessage()    {}
func (*Get2CellsCanLinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{299}
}

func (m *Get2CellsCanLinkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Get2CellsCanLinkRequest.Unmarshal(m, b)
}
func (m *Get2CellsCanLinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Get2CellsCanLinkRequest.Marshal(b, m, deterministic)
}
func (m *Get2CellsCanLinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Get2CellsCanLinkRequest.Merge(m, src)
}
func (m *Get2CellsCanLinkRequest) XXX_Size() int {
	return xxx_messageInfo_Get2CellsCanLinkRequest.Size(m)
}
func (m *Get2CellsCanLinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Get2CellsCanLinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Get2CellsCanLinkRequest proto.InternalMessageInfo

func (m *Get2CellsCanLinkRequest) GetPoints() []*IconPoint {
	if m != nil {
		return m.Points
	}
	return nil
}

type Get2CellsCanLinkReply struct {
	//消除的起点坐标
	IconPointA *IconPoint `protobuf:"bytes,1,opt,name=iconPointA,proto3" json:"iconPointA,omitempty"`
	//消除的终点坐标
	IconPointB           *IconPoint `protobuf:"bytes,2,opt,name=iconPointB,proto3" json:"iconPointB,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Get2CellsCanLinkReply) Reset()         { *m = Get2CellsCanLinkReply{} }
func (m *Get2CellsCanLinkReply) String() string { return proto.CompactTextString(m) }
func (*Get2CellsCanLinkReply) ProtoMessage()    {}
func (*Get2CellsCanLinkReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{300}
}

func (m *Get2CellsCanLinkReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Get2CellsCanLinkReply.Unmarshal(m, b)
}
func (m *Get2CellsCanLinkReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Get2CellsCanLinkReply.Marshal(b, m, deterministic)
}
func (m *Get2CellsCanLinkReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Get2CellsCanLinkReply.Merge(m, src)
}
func (m *Get2CellsCanLinkReply) XXX_Size() int {
	return xxx_messageInfo_Get2CellsCanLinkReply.Size(m)
}
func (m *Get2CellsCanLinkReply) XXX_DiscardUnknown() {
	xxx_messageInfo_Get2CellsCanLinkReply.DiscardUnknown(m)
}

var xxx_messageInfo_Get2CellsCanLinkReply proto.InternalMessageInfo

func (m *Get2CellsCanLinkReply) GetIconPointA() *IconPoint {
	if m != nil {
		return m.IconPointA
	}
	return nil
}

func (m *Get2CellsCanLinkReply) GetIconPointB() *IconPoint {
	if m != nil {
		return m.IconPointB
	}
	return nil
}

// 连连看消除请求
type LinkUpClearIconRequest struct {
	//消除的起点坐标
	IconPointA *IconPoint `protobuf:"bytes,1,opt,name=iconPointA,proto3" json:"iconPointA,omitempty"`
	//消除的终点坐标
	IconPointB           *IconPoint `protobuf:"bytes,2,opt,name=iconPointB,proto3" json:"iconPointB,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LinkUpClearIconRequest) Reset()         { *m = LinkUpClearIconRequest{} }
func (m *LinkUpClearIconRequest) String() string { return proto.CompactTextString(m) }
func (*LinkUpClearIconRequest) ProtoMessage()    {}
func (*LinkUpClearIconRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{301}
}

func (m *LinkUpClearIconRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkUpClearIconRequest.Unmarshal(m, b)
}
func (m *LinkUpClearIconRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkUpClearIconRequest.Marshal(b, m, deterministic)
}
func (m *LinkUpClearIconRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkUpClearIconRequest.Merge(m, src)
}
func (m *LinkUpClearIconRequest) XXX_Size() int {
	return xxx_messageInfo_LinkUpClearIconRequest.Size(m)
}
func (m *LinkUpClearIconRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkUpClearIconRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LinkUpClearIconRequest proto.InternalMessageInfo

func (m *LinkUpClearIconRequest) GetIconPointA() *IconPoint {
	if m != nil {
		return m.IconPointA
	}
	return nil
}

func (m *LinkUpClearIconRequest) GetIconPointB() *IconPoint {
	if m != nil {
		return m.IconPointB
	}
	return nil
}

// 连连看消除回复
type LinkUpClearIconReply struct {
	//消除是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	//消除路径的拐点的图标，按顺序连接
	IconPointLine []*IconPoint `protobuf:"bytes,2,rep,name=iconPointLine,proto3" json:"iconPointLine,omitempty"`
	//完成率
	CompletionRates int32 `protobuf:"varint,3,opt,name=completionRates,proto3" json:"completionRates,omitempty"`
	//图上剩余图标
	RestIcons            []*IconPoint `protobuf:"bytes,4,rep,name=restIcons,proto3" json:"restIcons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LinkUpClearIconReply) Reset()         { *m = LinkUpClearIconReply{} }
func (m *LinkUpClearIconReply) String() string { return proto.CompactTextString(m) }
func (*LinkUpClearIconReply) ProtoMessage()    {}
func (*LinkUpClearIconReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{302}
}

func (m *LinkUpClearIconReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkUpClearIconReply.Unmarshal(m, b)
}
func (m *LinkUpClearIconReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkUpClearIconReply.Marshal(b, m, deterministic)
}
func (m *LinkUpClearIconReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkUpClearIconReply.Merge(m, src)
}
func (m *LinkUpClearIconReply) XXX_Size() int {
	return xxx_messageInfo_LinkUpClearIconReply.Size(m)
}
func (m *LinkUpClearIconReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkUpClearIconReply.DiscardUnknown(m)
}

var xxx_messageInfo_LinkUpClearIconReply proto.InternalMessageInfo

func (m *LinkUpClearIconReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *LinkUpClearIconReply) GetIconPointLine() []*IconPoint {
	if m != nil {
		return m.IconPointLine
	}
	return nil
}

func (m *LinkUpClearIconReply) GetCompletionRates() int32 {
	if m != nil {
		return m.CompletionRates
	}
	return 0
}

func (m *LinkUpClearIconReply) GetRestIcons() []*IconPoint {
	if m != nil {
		return m.RestIcons
	}
	return nil
}

// 连连看操作请求
type LinkUpDoRequest struct {
	// 想要进行的操作
	DoType LinkUpDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=LinkUpDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkUpDoRequest) Reset()         { *m = LinkUpDoRequest{} }
func (m *LinkUpDoRequest) String() string { return proto.CompactTextString(m) }
func (*LinkUpDoRequest) ProtoMessage()    {}
func (*LinkUpDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{303}
}

func (m *LinkUpDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkUpDoRequest.Unmarshal(m, b)
}
func (m *LinkUpDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkUpDoRequest.Marshal(b, m, deterministic)
}
func (m *LinkUpDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkUpDoRequest.Merge(m, src)
}
func (m *LinkUpDoRequest) XXX_Size() int {
	return xxx_messageInfo_LinkUpDoRequest.Size(m)
}
func (m *LinkUpDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkUpDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LinkUpDoRequest proto.InternalMessageInfo

func (m *LinkUpDoRequest) GetDoType() LinkUpDoType {
	if m != nil {
		return m.DoType
	}
	return LinkUpDoType_LinkUpDo_None
}

func (m *LinkUpDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 跑得快操作请求
type RunFastOperateRequest struct {
	//操作类型，
	OperateType          RunFastOperateType `protobuf:"varint,1,opt,name=operateType,proto3,enum=RunFastOperateType" json:"operateType,omitempty"`
	OutPokers            []*Poker           `protobuf:"bytes,2,rep,name=outPokers,proto3" json:"outPokers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RunFastOperateRequest) Reset()         { *m = RunFastOperateRequest{} }
func (m *RunFastOperateRequest) String() string { return proto.CompactTextString(m) }
func (*RunFastOperateRequest) ProtoMessage()    {}
func (*RunFastOperateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{304}
}

func (m *RunFastOperateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunFastOperateRequest.Unmarshal(m, b)
}
func (m *RunFastOperateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunFastOperateRequest.Marshal(b, m, deterministic)
}
func (m *RunFastOperateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunFastOperateRequest.Merge(m, src)
}
func (m *RunFastOperateRequest) XXX_Size() int {
	return xxx_messageInfo_RunFastOperateRequest.Size(m)
}
func (m *RunFastOperateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunFastOperateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunFastOperateRequest proto.InternalMessageInfo

func (m *RunFastOperateRequest) GetOperateType() RunFastOperateType {
	if m != nil {
		return m.OperateType
	}
	return RunFastOperateType_RunFastOperateType_None
}

func (m *RunFastOperateRequest) GetOutPokers() []*Poker {
	if m != nil {
		return m.OutPokers
	}
	return nil
}

// 跑得快操作回复
type RunFastOperateReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunFastOperateReply) Reset()         { *m = RunFastOperateReply{} }
func (m *RunFastOperateReply) String() string { return proto.CompactTextString(m) }
func (*RunFastOperateReply) ProtoMessage()    {}
func (*RunFastOperateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{305}
}

func (m *RunFastOperateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunFastOperateReply.Unmarshal(m, b)
}
func (m *RunFastOperateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunFastOperateReply.Marshal(b, m, deterministic)
}
func (m *RunFastOperateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunFastOperateReply.Merge(m, src)
}
func (m *RunFastOperateReply) XXX_Size() int {
	return xxx_messageInfo_RunFastOperateReply.Size(m)
}
func (m *RunFastOperateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RunFastOperateReply.DiscardUnknown(m)
}

var xxx_messageInfo_RunFastOperateReply proto.InternalMessageInfo

// 十三水拿到特殊牌型时推送
type PushPlayerSpecialCard struct {
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 玩家特殊牌型的默认摆牌
	PlacePoker           *ShiSanShuiPlacePoker `protobuf:"bytes,2,opt,name=placePoker,proto3" json:"placePoker,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PushPlayerSpecialCard) Reset()         { *m = PushPlayerSpecialCard{} }
func (m *PushPlayerSpecialCard) String() string { return proto.CompactTextString(m) }
func (*PushPlayerSpecialCard) ProtoMessage()    {}
func (*PushPlayerSpecialCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{306}
}

func (m *PushPlayerSpecialCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPlayerSpecialCard.Unmarshal(m, b)
}
func (m *PushPlayerSpecialCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPlayerSpecialCard.Marshal(b, m, deterministic)
}
func (m *PushPlayerSpecialCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPlayerSpecialCard.Merge(m, src)
}
func (m *PushPlayerSpecialCard) XXX_Size() int {
	return xxx_messageInfo_PushPlayerSpecialCard.Size(m)
}
func (m *PushPlayerSpecialCard) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPlayerSpecialCard.DiscardUnknown(m)
}

var xxx_messageInfo_PushPlayerSpecialCard proto.InternalMessageInfo

func (m *PushPlayerSpecialCard) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushPlayerSpecialCard) GetPlacePoker() *ShiSanShuiPlacePoker {
	if m != nil {
		return m.PlacePoker
	}
	return nil
}

// 十三水摆牌请求
type ShiSanShuiPlaceRequest struct {
	//十三水摆牌方案
	PlacePoker           *ShiSanShuiPlacePoker `protobuf:"bytes,1,opt,name=PlacePoker,proto3" json:"PlacePoker,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ShiSanShuiPlaceRequest) Reset()         { *m = ShiSanShuiPlaceRequest{} }
func (m *ShiSanShuiPlaceRequest) String() string { return proto.CompactTextString(m) }
func (*ShiSanShuiPlaceRequest) ProtoMessage()    {}
func (*ShiSanShuiPlaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{307}
}

func (m *ShiSanShuiPlaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiSanShuiPlaceRequest.Unmarshal(m, b)
}
func (m *ShiSanShuiPlaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiSanShuiPlaceRequest.Marshal(b, m, deterministic)
}
func (m *ShiSanShuiPlaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiSanShuiPlaceRequest.Merge(m, src)
}
func (m *ShiSanShuiPlaceRequest) XXX_Size() int {
	return xxx_messageInfo_ShiSanShuiPlaceRequest.Size(m)
}
func (m *ShiSanShuiPlaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiSanShuiPlaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShiSanShuiPlaceRequest proto.InternalMessageInfo

func (m *ShiSanShuiPlaceRequest) GetPlacePoker() *ShiSanShuiPlacePoker {
	if m != nil {
		return m.PlacePoker
	}
	return nil
}

// 十三水申请摆牌请求
type ShiSanShuiAskForPlaceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShiSanShuiAskForPlaceRequest) Reset()         { *m = ShiSanShuiAskForPlaceRequest{} }
func (m *ShiSanShuiAskForPlaceRequest) String() string { return proto.CompactTextString(m) }
func (*ShiSanShuiAskForPlaceRequest) ProtoMessage()    {}
func (*ShiSanShuiAskForPlaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{308}
}

func (m *ShiSanShuiAskForPlaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiSanShuiAskForPlaceRequest.Unmarshal(m, b)
}
func (m *ShiSanShuiAskForPlaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiSanShuiAskForPlaceRequest.Marshal(b, m, deterministic)
}
func (m *ShiSanShuiAskForPlaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiSanShuiAskForPlaceRequest.Merge(m, src)
}
func (m *ShiSanShuiAskForPlaceRequest) XXX_Size() int {
	return xxx_messageInfo_ShiSanShuiAskForPlaceRequest.Size(m)
}
func (m *ShiSanShuiAskForPlaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiSanShuiAskForPlaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShiSanShuiAskForPlaceRequest proto.InternalMessageInfo

// 十三水申请摆牌回复
type ShiSanShuiAskForPlaceReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShiSanShuiAskForPlaceReply) Reset()         { *m = ShiSanShuiAskForPlaceReply{} }
func (m *ShiSanShuiAskForPlaceReply) String() string { return proto.CompactTextString(m) }
func (*ShiSanShuiAskForPlaceReply) ProtoMessage()    {}
func (*ShiSanShuiAskForPlaceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{309}
}

func (m *ShiSanShuiAskForPlaceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiSanShuiAskForPlaceReply.Unmarshal(m, b)
}
func (m *ShiSanShuiAskForPlaceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiSanShuiAskForPlaceReply.Marshal(b, m, deterministic)
}
func (m *ShiSanShuiAskForPlaceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiSanShuiAskForPlaceReply.Merge(m, src)
}
func (m *ShiSanShuiAskForPlaceReply) XXX_Size() int {
	return xxx_messageInfo_ShiSanShuiAskForPlaceReply.Size(m)
}
func (m *ShiSanShuiAskForPlaceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiSanShuiAskForPlaceReply.DiscardUnknown(m)
}

var xxx_messageInfo_ShiSanShuiAskForPlaceReply proto.InternalMessageInfo

// 十三水摆牌回复,返回每一墩牌的牌型
type ShiSanShuiPlaceReply struct {
	PlacePoker *ShiSanShuiPlacePoker `protobuf:"bytes,1,opt,name=PlacePoker,proto3" json:"PlacePoker,omitempty"`
	//摆牌截止时间
	EndTime              int64    `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShiSanShuiPlaceReply) Reset()         { *m = ShiSanShuiPlaceReply{} }
func (m *ShiSanShuiPlaceReply) String() string { return proto.CompactTextString(m) }
func (*ShiSanShuiPlaceReply) ProtoMessage()    {}
func (*ShiSanShuiPlaceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{310}
}

func (m *ShiSanShuiPlaceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiSanShuiPlaceReply.Unmarshal(m, b)
}
func (m *ShiSanShuiPlaceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiSanShuiPlaceReply.Marshal(b, m, deterministic)
}
func (m *ShiSanShuiPlaceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiSanShuiPlaceReply.Merge(m, src)
}
func (m *ShiSanShuiPlaceReply) XXX_Size() int {
	return xxx_messageInfo_ShiSanShuiPlaceReply.Size(m)
}
func (m *ShiSanShuiPlaceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiSanShuiPlaceReply.DiscardUnknown(m)
}

var xxx_messageInfo_ShiSanShuiPlaceReply proto.InternalMessageInfo

func (m *ShiSanShuiPlaceReply) GetPlacePoker() *ShiSanShuiPlacePoker {
	if m != nil {
		return m.PlacePoker
	}
	return nil
}

func (m *ShiSanShuiPlaceReply) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

//十三水比牌记录
type ShiSanShuiCompareLog struct {
	//比牌步骤,heap1,heap2,heap3,shoot,homeRun,specialType
	//第一墩，第二墩，第三墩，打枪，全垒打，特殊牌型
	CompareStep ShiSanShuiCompareStep `protobuf:"varint,1,opt,name=CompareStep,proto3,enum=ShiSanShuiCompareStep" json:"CompareStep,omitempty"`
	//赢家ID
	WinnerID string `protobuf:"bytes,2,opt,name=WinnerID,proto3" json:"WinnerID,omitempty"`
	//输家ID
	LoserID string `protobuf:"bytes,3,opt,name=LoserID,proto3" json:"LoserID,omitempty"`
	//输赢额度
	Amount               int32    `protobuf:"varint,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShiSanShuiCompareLog) Reset()         { *m = ShiSanShuiCompareLog{} }
func (m *ShiSanShuiCompareLog) String() string { return proto.CompactTextString(m) }
func (*ShiSanShuiCompareLog) ProtoMessage()    {}
func (*ShiSanShuiCompareLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{311}
}

func (m *ShiSanShuiCompareLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiSanShuiCompareLog.Unmarshal(m, b)
}
func (m *ShiSanShuiCompareLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiSanShuiCompareLog.Marshal(b, m, deterministic)
}
func (m *ShiSanShuiCompareLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiSanShuiCompareLog.Merge(m, src)
}
func (m *ShiSanShuiCompareLog) XXX_Size() int {
	return xxx_messageInfo_ShiSanShuiCompareLog.Size(m)
}
func (m *ShiSanShuiCompareLog) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiSanShuiCompareLog.DiscardUnknown(m)
}

var xxx_messageInfo_ShiSanShuiCompareLog proto.InternalMessageInfo

func (m *ShiSanShuiCompareLog) GetCompareStep() ShiSanShuiCompareStep {
	if m != nil {
		return m.CompareStep
	}
	return ShiSanShuiCompareStep_ShiSanShuiCompare_Start
}

func (m *ShiSanShuiCompareLog) GetWinnerID() string {
	if m != nil {
		return m.WinnerID
	}
	return ""
}

func (m *ShiSanShuiCompareLog) GetLoserID() string {
	if m != nil {
		return m.LoserID
	}
	return ""
}

func (m *ShiSanShuiCompareLog) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

//十三水比牌结果推送
type ShiSanShuiCompareMessege struct {
	// 房间id
	RoomId  string            `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	Players []*RoomPlayerInfo `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	//比牌第几步，第一墩，第二墩，第三墩，打枪，全垒打，特殊牌型
	Step ShiSanShuiCompareStep `protobuf:"varint,3,opt,name=step,proto3,enum=ShiSanShuiCompareStep" json:"step,omitempty"`
	//打枪
	Shoot []*ShiSanShuiCompareLog `protobuf:"bytes,4,rep,name=Shoot,proto3" json:"Shoot,omitempty"`
	//全垒打赢家
	RunHomePlayer        *RoomPlayerInfo `protobuf:"bytes,5,opt,name=RunHomePlayer,proto3" json:"RunHomePlayer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ShiSanShuiCompareMessege) Reset()         { *m = ShiSanShuiCompareMessege{} }
func (m *ShiSanShuiCompareMessege) String() string { return proto.CompactTextString(m) }
func (*ShiSanShuiCompareMessege) ProtoMessage()    {}
func (*ShiSanShuiCompareMessege) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{312}
}

func (m *ShiSanShuiCompareMessege) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiSanShuiCompareMessege.Unmarshal(m, b)
}
func (m *ShiSanShuiCompareMessege) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiSanShuiCompareMessege.Marshal(b, m, deterministic)
}
func (m *ShiSanShuiCompareMessege) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiSanShuiCompareMessege.Merge(m, src)
}
func (m *ShiSanShuiCompareMessege) XXX_Size() int {
	return xxx_messageInfo_ShiSanShuiCompareMessege.Size(m)
}
func (m *ShiSanShuiCompareMessege) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiSanShuiCompareMessege.DiscardUnknown(m)
}

var xxx_messageInfo_ShiSanShuiCompareMessege proto.InternalMessageInfo

func (m *ShiSanShuiCompareMessege) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *ShiSanShuiCompareMessege) GetPlayers() []*RoomPlayerInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *ShiSanShuiCompareMessege) GetStep() ShiSanShuiCompareStep {
	if m != nil {
		return m.Step
	}
	return ShiSanShuiCompareStep_ShiSanShuiCompare_Start
}

func (m *ShiSanShuiCompareMessege) GetShoot() []*ShiSanShuiCompareLog {
	if m != nil {
		return m.Shoot
	}
	return nil
}

func (m *ShiSanShuiCompareMessege) GetRunHomePlayer() *RoomPlayerInfo {
	if m != nil {
		return m.RunHomePlayer
	}
	return nil
}

//十三水摆牌确认和申请摆牌推送
type ShiSanShuiPlasedMessege struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	//操作用户UUID
	PlayerUuid string `protobuf:"bytes,2,opt,name=playerUuid,proto3" json:"playerUuid,omitempty"`
	//是否已经摆牌
	Placed               bool     `protobuf:"varint,5,opt,name=placed,proto3" json:"placed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShiSanShuiPlasedMessege) Reset()         { *m = ShiSanShuiPlasedMessege{} }
func (m *ShiSanShuiPlasedMessege) String() string { return proto.CompactTextString(m) }
func (*ShiSanShuiPlasedMessege) ProtoMessage()    {}
func (*ShiSanShuiPlasedMessege) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{313}
}

func (m *ShiSanShuiPlasedMessege) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiSanShuiPlasedMessege.Unmarshal(m, b)
}
func (m *ShiSanShuiPlasedMessege) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiSanShuiPlasedMessege.Marshal(b, m, deterministic)
}
func (m *ShiSanShuiPlasedMessege) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiSanShuiPlasedMessege.Merge(m, src)
}
func (m *ShiSanShuiPlasedMessege) XXX_Size() int {
	return xxx_messageInfo_ShiSanShuiPlasedMessege.Size(m)
}
func (m *ShiSanShuiPlasedMessege) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiSanShuiPlasedMessege.DiscardUnknown(m)
}

var xxx_messageInfo_ShiSanShuiPlasedMessege proto.InternalMessageInfo

func (m *ShiSanShuiPlasedMessege) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *ShiSanShuiPlasedMessege) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *ShiSanShuiPlasedMessege) GetPlaced() bool {
	if m != nil {
		return m.Placed
	}
	return false
}

// 十三水一键摆牌请求
type ShiSanShuiAutoPlaceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShiSanShuiAutoPlaceRequest) Reset()         { *m = ShiSanShuiAutoPlaceRequest{} }
func (m *ShiSanShuiAutoPlaceRequest) String() string { return proto.CompactTextString(m) }
func (*ShiSanShuiAutoPlaceRequest) ProtoMessage()    {}
func (*ShiSanShuiAutoPlaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{314}
}

func (m *ShiSanShuiAutoPlaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiSanShuiAutoPlaceRequest.Unmarshal(m, b)
}
func (m *ShiSanShuiAutoPlaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiSanShuiAutoPlaceRequest.Marshal(b, m, deterministic)
}
func (m *ShiSanShuiAutoPlaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiSanShuiAutoPlaceRequest.Merge(m, src)
}
func (m *ShiSanShuiAutoPlaceRequest) XXX_Size() int {
	return xxx_messageInfo_ShiSanShuiAutoPlaceRequest.Size(m)
}
func (m *ShiSanShuiAutoPlaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiSanShuiAutoPlaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShiSanShuiAutoPlaceRequest proto.InternalMessageInfo

// 十三水一键摆牌回复
type ShiSanShuiAutoPlaceReply struct {
	//十三水默认摆牌方案
	AutoPlacePoker *ShiSanShuiPlacePoker `protobuf:"bytes,1,opt,name=autoPlacePoker,proto3" json:"autoPlacePoker,omitempty"`
	//摆牌截止时间
	EndTime              int64    `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShiSanShuiAutoPlaceReply) Reset()         { *m = ShiSanShuiAutoPlaceReply{} }
func (m *ShiSanShuiAutoPlaceReply) String() string { return proto.CompactTextString(m) }
func (*ShiSanShuiAutoPlaceReply) ProtoMessage()    {}
func (*ShiSanShuiAutoPlaceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{315}
}

func (m *ShiSanShuiAutoPlaceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiSanShuiAutoPlaceReply.Unmarshal(m, b)
}
func (m *ShiSanShuiAutoPlaceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiSanShuiAutoPlaceReply.Marshal(b, m, deterministic)
}
func (m *ShiSanShuiAutoPlaceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiSanShuiAutoPlaceReply.Merge(m, src)
}
func (m *ShiSanShuiAutoPlaceReply) XXX_Size() int {
	return xxx_messageInfo_ShiSanShuiAutoPlaceReply.Size(m)
}
func (m *ShiSanShuiAutoPlaceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiSanShuiAutoPlaceReply.DiscardUnknown(m)
}

var xxx_messageInfo_ShiSanShuiAutoPlaceReply proto.InternalMessageInfo

func (m *ShiSanShuiAutoPlaceReply) GetAutoPlacePoker() *ShiSanShuiPlacePoker {
	if m != nil {
		return m.AutoPlacePoker
	}
	return nil
}

func (m *ShiSanShuiAutoPlaceReply) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

// 十三水摆牌请求
type ShiSanShuiDoRequest struct {
	// 想要进行的操作
	DoType ShiSanShuiDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=ShiSanShuiDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShiSanShuiDoRequest) Reset()         { *m = ShiSanShuiDoRequest{} }
func (m *ShiSanShuiDoRequest) String() string { return proto.CompactTextString(m) }
func (*ShiSanShuiDoRequest) ProtoMessage()    {}
func (*ShiSanShuiDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{316}
}

func (m *ShiSanShuiDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiSanShuiDoRequest.Unmarshal(m, b)
}
func (m *ShiSanShuiDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiSanShuiDoRequest.Marshal(b, m, deterministic)
}
func (m *ShiSanShuiDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiSanShuiDoRequest.Merge(m, src)
}
func (m *ShiSanShuiDoRequest) XXX_Size() int {
	return xxx_messageInfo_ShiSanShuiDoRequest.Size(m)
}
func (m *ShiSanShuiDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiSanShuiDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShiSanShuiDoRequest proto.InternalMessageInfo

func (m *ShiSanShuiDoRequest) GetDoType() ShiSanShuiDoType {
	if m != nil {
		return m.DoType
	}
	return ShiSanShuiDoType_ShiSanShuiDo_None
}

func (m *ShiSanShuiDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 十三水摆牌
type ShiSanShuiPlacePoker struct {
	//第一墩
	Pokers1     []*Poker            `protobuf:"bytes,1,rep,name=Pokers1,proto3" json:"Pokers1,omitempty"`
	PokersType1 ShiSanShuiPokerType `protobuf:"varint,2,opt,name=PokersType1,proto3,enum=ShiSanShuiPokerType" json:"PokersType1,omitempty"`
	//第二墩
	Pokers2     []*Poker            `protobuf:"bytes,3,rep,name=Pokers2,proto3" json:"Pokers2,omitempty"`
	PokersType2 ShiSanShuiPokerType `protobuf:"varint,4,opt,name=PokersType2,proto3,enum=ShiSanShuiPokerType" json:"PokersType2,omitempty"`
	//第三墩
	Pokers3     []*Poker            `protobuf:"bytes,5,rep,name=Pokers3,proto3" json:"Pokers3,omitempty"`
	PokersType3 ShiSanShuiPokerType `protobuf:"varint,6,opt,name=PokersType3,proto3,enum=ShiSanShuiPokerType" json:"PokersType3,omitempty"`
	//特殊牌型
	SpetialType          ShiSanShuiPokerType `protobuf:"varint,7,opt,name=spetialType,proto3,enum=ShiSanShuiPokerType" json:"spetialType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ShiSanShuiPlacePoker) Reset()         { *m = ShiSanShuiPlacePoker{} }
func (m *ShiSanShuiPlacePoker) String() string { return proto.CompactTextString(m) }
func (*ShiSanShuiPlacePoker) ProtoMessage()    {}
func (*ShiSanShuiPlacePoker) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{317}
}

func (m *ShiSanShuiPlacePoker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiSanShuiPlacePoker.Unmarshal(m, b)
}
func (m *ShiSanShuiPlacePoker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiSanShuiPlacePoker.Marshal(b, m, deterministic)
}
func (m *ShiSanShuiPlacePoker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiSanShuiPlacePoker.Merge(m, src)
}
func (m *ShiSanShuiPlacePoker) XXX_Size() int {
	return xxx_messageInfo_ShiSanShuiPlacePoker.Size(m)
}
func (m *ShiSanShuiPlacePoker) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiSanShuiPlacePoker.DiscardUnknown(m)
}

var xxx_messageInfo_ShiSanShuiPlacePoker proto.InternalMessageInfo

func (m *ShiSanShuiPlacePoker) GetPokers1() []*Poker {
	if m != nil {
		return m.Pokers1
	}
	return nil
}

func (m *ShiSanShuiPlacePoker) GetPokersType1() ShiSanShuiPokerType {
	if m != nil {
		return m.PokersType1
	}
	return ShiSanShuiPokerType_ShiSanShuiPokerType_None
}

func (m *ShiSanShuiPlacePoker) GetPokers2() []*Poker {
	if m != nil {
		return m.Pokers2
	}
	return nil
}

func (m *ShiSanShuiPlacePoker) GetPokersType2() ShiSanShuiPokerType {
	if m != nil {
		return m.PokersType2
	}
	return ShiSanShuiPokerType_ShiSanShuiPokerType_None
}

func (m *ShiSanShuiPlacePoker) GetPokers3() []*Poker {
	if m != nil {
		return m.Pokers3
	}
	return nil
}

func (m *ShiSanShuiPlacePoker) GetPokersType3() ShiSanShuiPokerType {
	if m != nil {
		return m.PokersType3
	}
	return ShiSanShuiPokerType_ShiSanShuiPokerType_None
}

func (m *ShiSanShuiPlacePoker) GetSpetialType() ShiSanShuiPokerType {
	if m != nil {
		return m.SpetialType
	}
	return ShiSanShuiPokerType_ShiSanShuiPokerType_None
}

// 跑得快操作请求
type RunFastDoRequest struct {
	// 想要进行的操作
	DoType RunFastDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=RunFastDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunFastDoRequest) Reset()         { *m = RunFastDoRequest{} }
func (m *RunFastDoRequest) String() string { return proto.CompactTextString(m) }
func (*RunFastDoRequest) ProtoMessage()    {}
func (*RunFastDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{318}
}

func (m *RunFastDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunFastDoRequest.Unmarshal(m, b)
}
func (m *RunFastDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunFastDoRequest.Marshal(b, m, deterministic)
}
func (m *RunFastDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunFastDoRequest.Merge(m, src)
}
func (m *RunFastDoRequest) XXX_Size() int {
	return xxx_messageInfo_RunFastDoRequest.Size(m)
}
func (m *RunFastDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunFastDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunFastDoRequest proto.InternalMessageInfo

func (m *RunFastDoRequest) GetDoType() RunFastDoType {
	if m != nil {
		return m.DoType
	}
	return RunFastDoType_RunFastDo_None
}

func (m *RunFastDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 打旋操作请求
type DaXuanDoRequest struct {
	// 想要进行的操作
	DoType DaXuanDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=DaXuanDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaXuanDoRequest) Reset()         { *m = DaXuanDoRequest{} }
func (m *DaXuanDoRequest) String() string { return proto.CompactTextString(m) }
func (*DaXuanDoRequest) ProtoMessage()    {}
func (*DaXuanDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{319}
}

func (m *DaXuanDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaXuanDoRequest.Unmarshal(m, b)
}
func (m *DaXuanDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaXuanDoRequest.Marshal(b, m, deterministic)
}
func (m *DaXuanDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaXuanDoRequest.Merge(m, src)
}
func (m *DaXuanDoRequest) XXX_Size() int {
	return xxx_messageInfo_DaXuanDoRequest.Size(m)
}
func (m *DaXuanDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DaXuanDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DaXuanDoRequest proto.InternalMessageInfo

func (m *DaXuanDoRequest) GetDoType() DaXuanDoType {
	if m != nil {
		return m.DoType
	}
	return DaXuanDoType_DaXuanDo_None
}

func (m *DaXuanDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 连连看坐标点定义
type IconPoint struct {
	//x坐标
	X int32 `protobuf:"varint,1,opt,name=X,proto3" json:"X,omitempty"`
	//y坐标
	Y int32 `protobuf:"varint,2,opt,name=Y,proto3" json:"Y,omitempty"`
	//图标
	Icon                 *Icon    `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IconPoint) Reset()         { *m = IconPoint{} }
func (m *IconPoint) String() string { return proto.CompactTextString(m) }
func (*IconPoint) ProtoMessage()    {}
func (*IconPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{320}
}

func (m *IconPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IconPoint.Unmarshal(m, b)
}
func (m *IconPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IconPoint.Marshal(b, m, deterministic)
}
func (m *IconPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IconPoint.Merge(m, src)
}
func (m *IconPoint) XXX_Size() int {
	return xxx_messageInfo_IconPoint.Size(m)
}
func (m *IconPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_IconPoint.DiscardUnknown(m)
}

var xxx_messageInfo_IconPoint proto.InternalMessageInfo

func (m *IconPoint) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *IconPoint) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *IconPoint) GetIcon() *Icon {
	if m != nil {
		return m.Icon
	}
	return nil
}

//
type IconArray struct {
	Icon                 []*Icon  `protobuf:"bytes,1,rep,name=icon,proto3" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IconArray) Reset()         { *m = IconArray{} }
func (m *IconArray) String() string { return proto.CompactTextString(m) }
func (*IconArray) ProtoMessage()    {}
func (*IconArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{321}
}

func (m *IconArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IconArray.Unmarshal(m, b)
}
func (m *IconArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IconArray.Marshal(b, m, deterministic)
}
func (m *IconArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IconArray.Merge(m, src)
}
func (m *IconArray) XXX_Size() int {
	return xxx_messageInfo_IconArray.Size(m)
}
func (m *IconArray) XXX_DiscardUnknown() {
	xxx_messageInfo_IconArray.DiscardUnknown(m)
}

var xxx_messageInfo_IconArray proto.InternalMessageInfo

func (m *IconArray) GetIcon() []*Icon {
	if m != nil {
		return m.Icon
	}
	return nil
}

// 连连看图标定义
type Icon struct {
	//图标编号
	IconNum IconNum `protobuf:"varint,1,opt,name=iconNum,proto3,enum=IconNum" json:"iconNum,omitempty"`
	//图标类型
	IconType             IconType `protobuf:"varint,2,opt,name=iconType,proto3,enum=IconType" json:"iconType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Icon) Reset()         { *m = Icon{} }
func (m *Icon) String() string { return proto.CompactTextString(m) }
func (*Icon) ProtoMessage()    {}
func (*Icon) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{322}
}

func (m *Icon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Icon.Unmarshal(m, b)
}
func (m *Icon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Icon.Marshal(b, m, deterministic)
}
func (m *Icon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Icon.Merge(m, src)
}
func (m *Icon) XXX_Size() int {
	return xxx_messageInfo_Icon.Size(m)
}
func (m *Icon) XXX_DiscardUnknown() {
	xxx_messageInfo_Icon.DiscardUnknown(m)
}

var xxx_messageInfo_Icon proto.InternalMessageInfo

func (m *Icon) GetIconNum() IconNum {
	if m != nil {
		return m.IconNum
	}
	return IconNum_IconNumNone
}

func (m *Icon) GetIconType() IconType {
	if m != nil {
		return m.IconType
	}
	return IconType_IconTypeNone
}

// 疯狂牛牛下注申请
type CrazyBetRequest struct {
	// 下注金额（密等）
	BetBalance           int64    `protobuf:"varint,1,opt,name=BetBalance,proto3" json:"BetBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrazyBetRequest) Reset()         { *m = CrazyBetRequest{} }
func (m *CrazyBetRequest) String() string { return proto.CompactTextString(m) }
func (*CrazyBetRequest) ProtoMessage()    {}
func (*CrazyBetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{323}
}

func (m *CrazyBetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrazyBetRequest.Unmarshal(m, b)
}
func (m *CrazyBetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrazyBetRequest.Marshal(b, m, deterministic)
}
func (m *CrazyBetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrazyBetRequest.Merge(m, src)
}
func (m *CrazyBetRequest) XXX_Size() int {
	return xxx_messageInfo_CrazyBetRequest.Size(m)
}
func (m *CrazyBetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CrazyBetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CrazyBetRequest proto.InternalMessageInfo

func (m *CrazyBetRequest) GetBetBalance() int64 {
	if m != nil {
		return m.BetBalance
	}
	return 0
}

// 疯狂牛牛搓牌申请
type CrazyRubbingCardsRequest struct {
	// 搓牌or看牌
	RubbingCards         int64    `protobuf:"varint,1,opt,name=RubbingCards,proto3" json:"RubbingCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrazyRubbingCardsRequest) Reset()         { *m = CrazyRubbingCardsRequest{} }
func (m *CrazyRubbingCardsRequest) String() string { return proto.CompactTextString(m) }
func (*CrazyRubbingCardsRequest) ProtoMessage()    {}
func (*CrazyRubbingCardsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{324}
}

func (m *CrazyRubbingCardsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrazyRubbingCardsRequest.Unmarshal(m, b)
}
func (m *CrazyRubbingCardsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrazyRubbingCardsRequest.Marshal(b, m, deterministic)
}
func (m *CrazyRubbingCardsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrazyRubbingCardsRequest.Merge(m, src)
}
func (m *CrazyRubbingCardsRequest) XXX_Size() int {
	return xxx_messageInfo_CrazyRubbingCardsRequest.Size(m)
}
func (m *CrazyRubbingCardsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CrazyRubbingCardsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CrazyRubbingCardsRequest proto.InternalMessageInfo

func (m *CrazyRubbingCardsRequest) GetRubbingCards() int64 {
	if m != nil {
		return m.RubbingCards
	}
	return 0
}

// 双连搓牌申请
type DoubleRubbingCardsRequest struct {
	// 搓牌or看牌
	RubbingCards         int64    `protobuf:"varint,1,opt,name=RubbingCards,proto3" json:"RubbingCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleRubbingCardsRequest) Reset()         { *m = DoubleRubbingCardsRequest{} }
func (m *DoubleRubbingCardsRequest) String() string { return proto.CompactTextString(m) }
func (*DoubleRubbingCardsRequest) ProtoMessage()    {}
func (*DoubleRubbingCardsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{325}
}

func (m *DoubleRubbingCardsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleRubbingCardsRequest.Unmarshal(m, b)
}
func (m *DoubleRubbingCardsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleRubbingCardsRequest.Marshal(b, m, deterministic)
}
func (m *DoubleRubbingCardsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleRubbingCardsRequest.Merge(m, src)
}
func (m *DoubleRubbingCardsRequest) XXX_Size() int {
	return xxx_messageInfo_DoubleRubbingCardsRequest.Size(m)
}
func (m *DoubleRubbingCardsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleRubbingCardsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleRubbingCardsRequest proto.InternalMessageInfo

func (m *DoubleRubbingCardsRequest) GetRubbingCards() int64 {
	if m != nil {
		return m.RubbingCards
	}
	return 0
}

// 双连下注申请
type DoubleLinkedBetRequest struct {
	// 下注金额（密等）
	BetBalance           int64    `protobuf:"varint,1,opt,name=BetBalance,proto3" json:"BetBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleLinkedBetRequest) Reset()         { *m = DoubleLinkedBetRequest{} }
func (m *DoubleLinkedBetRequest) String() string { return proto.CompactTextString(m) }
func (*DoubleLinkedBetRequest) ProtoMessage()    {}
func (*DoubleLinkedBetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{326}
}

func (m *DoubleLinkedBetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleLinkedBetRequest.Unmarshal(m, b)
}
func (m *DoubleLinkedBetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleLinkedBetRequest.Marshal(b, m, deterministic)
}
func (m *DoubleLinkedBetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleLinkedBetRequest.Merge(m, src)
}
func (m *DoubleLinkedBetRequest) XXX_Size() int {
	return xxx_messageInfo_DoubleLinkedBetRequest.Size(m)
}
func (m *DoubleLinkedBetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleLinkedBetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleLinkedBetRequest proto.InternalMessageInfo

func (m *DoubleLinkedBetRequest) GetBetBalance() int64 {
	if m != nil {
		return m.BetBalance
	}
	return 0
}

// 双连捞申请
type DoubleLinkedLaoRequest struct {
	// 捞申请
	Lao                  int64    `protobuf:"varint,1,opt,name=Lao,proto3" json:"Lao,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleLinkedLaoRequest) Reset()         { *m = DoubleLinkedLaoRequest{} }
func (m *DoubleLinkedLaoRequest) String() string { return proto.CompactTextString(m) }
func (*DoubleLinkedLaoRequest) ProtoMessage()    {}
func (*DoubleLinkedLaoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{327}
}

func (m *DoubleLinkedLaoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleLinkedLaoRequest.Unmarshal(m, b)
}
func (m *DoubleLinkedLaoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleLinkedLaoRequest.Marshal(b, m, deterministic)
}
func (m *DoubleLinkedLaoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleLinkedLaoRequest.Merge(m, src)
}
func (m *DoubleLinkedLaoRequest) XXX_Size() int {
	return xxx_messageInfo_DoubleLinkedLaoRequest.Size(m)
}
func (m *DoubleLinkedLaoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleLinkedLaoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleLinkedLaoRequest proto.InternalMessageInfo

func (m *DoubleLinkedLaoRequest) GetLao() int64 {
	if m != nil {
		return m.Lao
	}
	return 0
}

// 双连玩家比牌申请
type DoubleLinkedPokerRequest struct {
	// 被比的玩家uuid
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 比牌的庄家uuid
	Zuuid                string   `protobuf:"bytes,2,opt,name=zuuid,proto3" json:"zuuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleLinkedPokerRequest) Reset()         { *m = DoubleLinkedPokerRequest{} }
func (m *DoubleLinkedPokerRequest) String() string { return proto.CompactTextString(m) }
func (*DoubleLinkedPokerRequest) ProtoMessage()    {}
func (*DoubleLinkedPokerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{328}
}

func (m *DoubleLinkedPokerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleLinkedPokerRequest.Unmarshal(m, b)
}
func (m *DoubleLinkedPokerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleLinkedPokerRequest.Marshal(b, m, deterministic)
}
func (m *DoubleLinkedPokerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleLinkedPokerRequest.Merge(m, src)
}
func (m *DoubleLinkedPokerRequest) XXX_Size() int {
	return xxx_messageInfo_DoubleLinkedPokerRequest.Size(m)
}
func (m *DoubleLinkedPokerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleLinkedPokerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleLinkedPokerRequest proto.InternalMessageInfo

func (m *DoubleLinkedPokerRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *DoubleLinkedPokerRequest) GetZuuid() string {
	if m != nil {
		return m.Zuuid
	}
	return ""
}

// 双连玩家比牌申请回复
type DoubleLinkedPokerReply struct {
	RoomId string `protobuf:"bytes,7,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 被比的玩家uuid
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 比牌的庄家uuid
	Zuuid string `protobuf:"bytes,2,opt,name=zuuid,proto3" json:"zuuid,omitempty"`
	// 获胜方的uuid
	Winuuid string `protobuf:"bytes,3,opt,name=winuuid,proto3" json:"winuuid,omitempty"`
	// 失败方的uuid
	Lostuuid string `protobuf:"bytes,4,opt,name=lostuuid,proto3" json:"lostuuid,omitempty"`
	//庄家的牌
	ZPoker []*Poker `protobuf:"bytes,5,rep,name=zPoker,proto3" json:"zPoker,omitempty"`
	//闲家的牌
	XPoker []*Poker `protobuf:"bytes,6,rep,name=xPoker,proto3" json:"xPoker,omitempty"`
	//所有玩家是否已经比完牌了
	IsBPoker bool `protobuf:"varint,8,opt,name=IsBPoker,proto3" json:"IsBPoker,omitempty"`
	//被比牌人的点数
	XPokerNum            int64    `protobuf:"varint,9,opt,name=xPokerNum,proto3" json:"xPokerNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleLinkedPokerReply) Reset()         { *m = DoubleLinkedPokerReply{} }
func (m *DoubleLinkedPokerReply) String() string { return proto.CompactTextString(m) }
func (*DoubleLinkedPokerReply) ProtoMessage()    {}
func (*DoubleLinkedPokerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{329}
}

func (m *DoubleLinkedPokerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleLinkedPokerReply.Unmarshal(m, b)
}
func (m *DoubleLinkedPokerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleLinkedPokerReply.Marshal(b, m, deterministic)
}
func (m *DoubleLinkedPokerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleLinkedPokerReply.Merge(m, src)
}
func (m *DoubleLinkedPokerReply) XXX_Size() int {
	return xxx_messageInfo_DoubleLinkedPokerReply.Size(m)
}
func (m *DoubleLinkedPokerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleLinkedPokerReply.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleLinkedPokerReply proto.InternalMessageInfo

func (m *DoubleLinkedPokerReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *DoubleLinkedPokerReply) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *DoubleLinkedPokerReply) GetZuuid() string {
	if m != nil {
		return m.Zuuid
	}
	return ""
}

func (m *DoubleLinkedPokerReply) GetWinuuid() string {
	if m != nil {
		return m.Winuuid
	}
	return ""
}

func (m *DoubleLinkedPokerReply) GetLostuuid() string {
	if m != nil {
		return m.Lostuuid
	}
	return ""
}

func (m *DoubleLinkedPokerReply) GetZPoker() []*Poker {
	if m != nil {
		return m.ZPoker
	}
	return nil
}

func (m *DoubleLinkedPokerReply) GetXPoker() []*Poker {
	if m != nil {
		return m.XPoker
	}
	return nil
}

func (m *DoubleLinkedPokerReply) GetIsBPoker() bool {
	if m != nil {
		return m.IsBPoker
	}
	return false
}

func (m *DoubleLinkedPokerReply) GetXPokerNum() int64 {
	if m != nil {
		return m.XPokerNum
	}
	return 0
}

// 双连捞回复
type DoubleLinkedLaoReply struct {
	// 捞申请是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleLinkedLaoReply) Reset()         { *m = DoubleLinkedLaoReply{} }
func (m *DoubleLinkedLaoReply) String() string { return proto.CompactTextString(m) }
func (*DoubleLinkedLaoReply) ProtoMessage()    {}
func (*DoubleLinkedLaoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{330}
}

func (m *DoubleLinkedLaoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleLinkedLaoReply.Unmarshal(m, b)
}
func (m *DoubleLinkedLaoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleLinkedLaoReply.Marshal(b, m, deterministic)
}
func (m *DoubleLinkedLaoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleLinkedLaoReply.Merge(m, src)
}
func (m *DoubleLinkedLaoReply) XXX_Size() int {
	return xxx_messageInfo_DoubleLinkedLaoReply.Size(m)
}
func (m *DoubleLinkedLaoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleLinkedLaoReply.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleLinkedLaoReply proto.InternalMessageInfo

func (m *DoubleLinkedLaoReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 双连下注回复
type DoubleLinkedBetReply struct {
	// 下注是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleLinkedBetReply) Reset()         { *m = DoubleLinkedBetReply{} }
func (m *DoubleLinkedBetReply) String() string { return proto.CompactTextString(m) }
func (*DoubleLinkedBetReply) ProtoMessage()    {}
func (*DoubleLinkedBetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{331}
}

func (m *DoubleLinkedBetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleLinkedBetReply.Unmarshal(m, b)
}
func (m *DoubleLinkedBetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleLinkedBetReply.Marshal(b, m, deterministic)
}
func (m *DoubleLinkedBetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleLinkedBetReply.Merge(m, src)
}
func (m *DoubleLinkedBetReply) XXX_Size() int {
	return xxx_messageInfo_DoubleLinkedBetReply.Size(m)
}
func (m *DoubleLinkedBetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleLinkedBetReply.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleLinkedBetReply proto.InternalMessageInfo

func (m *DoubleLinkedBetReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 疯狂牛牛下注回复
type CrazyTigerBetReply struct {
	// 下注是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrazyTigerBetReply) Reset()         { *m = CrazyTigerBetReply{} }
func (m *CrazyTigerBetReply) String() string { return proto.CompactTextString(m) }
func (*CrazyTigerBetReply) ProtoMessage()    {}
func (*CrazyTigerBetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{332}
}

func (m *CrazyTigerBetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrazyTigerBetReply.Unmarshal(m, b)
}
func (m *CrazyTigerBetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrazyTigerBetReply.Marshal(b, m, deterministic)
}
func (m *CrazyTigerBetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrazyTigerBetReply.Merge(m, src)
}
func (m *CrazyTigerBetReply) XXX_Size() int {
	return xxx_messageInfo_CrazyTigerBetReply.Size(m)
}
func (m *CrazyTigerBetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CrazyTigerBetReply.DiscardUnknown(m)
}

var xxx_messageInfo_CrazyTigerBetReply proto.InternalMessageInfo

func (m *CrazyTigerBetReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 疯狂牛牛搓牌回复
type CrazyRubbingCardsReply struct {
	// 搓牌回复
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrazyRubbingCardsReply) Reset()         { *m = CrazyRubbingCardsReply{} }
func (m *CrazyRubbingCardsReply) String() string { return proto.CompactTextString(m) }
func (*CrazyRubbingCardsReply) ProtoMessage()    {}
func (*CrazyRubbingCardsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{333}
}

func (m *CrazyRubbingCardsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrazyRubbingCardsReply.Unmarshal(m, b)
}
func (m *CrazyRubbingCardsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrazyRubbingCardsReply.Marshal(b, m, deterministic)
}
func (m *CrazyRubbingCardsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrazyRubbingCardsReply.Merge(m, src)
}
func (m *CrazyRubbingCardsReply) XXX_Size() int {
	return xxx_messageInfo_CrazyRubbingCardsReply.Size(m)
}
func (m *CrazyRubbingCardsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CrazyRubbingCardsReply.DiscardUnknown(m)
}

var xxx_messageInfo_CrazyRubbingCardsReply proto.InternalMessageInfo

func (m *CrazyRubbingCardsReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 双连搓牌回复
type DoubleRubbingCardsReply struct {
	// 搓牌回复
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleRubbingCardsReply) Reset()         { *m = DoubleRubbingCardsReply{} }
func (m *DoubleRubbingCardsReply) String() string { return proto.CompactTextString(m) }
func (*DoubleRubbingCardsReply) ProtoMessage()    {}
func (*DoubleRubbingCardsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{334}
}

func (m *DoubleRubbingCardsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleRubbingCardsReply.Unmarshal(m, b)
}
func (m *DoubleRubbingCardsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleRubbingCardsReply.Marshal(b, m, deterministic)
}
func (m *DoubleRubbingCardsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleRubbingCardsReply.Merge(m, src)
}
func (m *DoubleRubbingCardsReply) XXX_Size() int {
	return xxx_messageInfo_DoubleRubbingCardsReply.Size(m)
}
func (m *DoubleRubbingCardsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleRubbingCardsReply.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleRubbingCardsReply proto.InternalMessageInfo

func (m *DoubleRubbingCardsReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 疯狂牛牛下注成功后的推送
type CrazyBullPlayerBet struct {
	// 下注倍数
	AllBet int64 `protobuf:"varint,1,opt,name=AllBet,proto3" json:"AllBet,omitempty"`
	// 下注的玩家
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 玩家的投注
	PlayerBets []int64 `protobuf:"varint,3,rep,packed,name=PlayerBets,proto3" json:"PlayerBets,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,4,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrazyBullPlayerBet) Reset()         { *m = CrazyBullPlayerBet{} }
func (m *CrazyBullPlayerBet) String() string { return proto.CompactTextString(m) }
func (*CrazyBullPlayerBet) ProtoMessage()    {}
func (*CrazyBullPlayerBet) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{335}
}

func (m *CrazyBullPlayerBet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrazyBullPlayerBet.Unmarshal(m, b)
}
func (m *CrazyBullPlayerBet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrazyBullPlayerBet.Marshal(b, m, deterministic)
}
func (m *CrazyBullPlayerBet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrazyBullPlayerBet.Merge(m, src)
}
func (m *CrazyBullPlayerBet) XXX_Size() int {
	return xxx_messageInfo_CrazyBullPlayerBet.Size(m)
}
func (m *CrazyBullPlayerBet) XXX_DiscardUnknown() {
	xxx_messageInfo_CrazyBullPlayerBet.DiscardUnknown(m)
}

var xxx_messageInfo_CrazyBullPlayerBet proto.InternalMessageInfo

func (m *CrazyBullPlayerBet) GetAllBet() int64 {
	if m != nil {
		return m.AllBet
	}
	return 0
}

func (m *CrazyBullPlayerBet) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *CrazyBullPlayerBet) GetPlayerBets() []int64 {
	if m != nil {
		return m.PlayerBets
	}
	return nil
}

func (m *CrazyBullPlayerBet) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 疯狂牛牛搓牌后推送
type CrazyBullPlayerRubbingCards struct {
	// 搓牌类型
	RubbingCardsType int64 `protobuf:"varint,1,opt,name=RubbingCardsType,proto3" json:"RubbingCardsType,omitempty"`
	// 搓牌的玩家
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,3,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrazyBullPlayerRubbingCards) Reset()         { *m = CrazyBullPlayerRubbingCards{} }
func (m *CrazyBullPlayerRubbingCards) String() string { return proto.CompactTextString(m) }
func (*CrazyBullPlayerRubbingCards) ProtoMessage()    {}
func (*CrazyBullPlayerRubbingCards) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{336}
}

func (m *CrazyBullPlayerRubbingCards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrazyBullPlayerRubbingCards.Unmarshal(m, b)
}
func (m *CrazyBullPlayerRubbingCards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrazyBullPlayerRubbingCards.Marshal(b, m, deterministic)
}
func (m *CrazyBullPlayerRubbingCards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrazyBullPlayerRubbingCards.Merge(m, src)
}
func (m *CrazyBullPlayerRubbingCards) XXX_Size() int {
	return xxx_messageInfo_CrazyBullPlayerRubbingCards.Size(m)
}
func (m *CrazyBullPlayerRubbingCards) XXX_DiscardUnknown() {
	xxx_messageInfo_CrazyBullPlayerRubbingCards.DiscardUnknown(m)
}

var xxx_messageInfo_CrazyBullPlayerRubbingCards proto.InternalMessageInfo

func (m *CrazyBullPlayerRubbingCards) GetRubbingCardsType() int64 {
	if m != nil {
		return m.RubbingCardsType
	}
	return 0
}

func (m *CrazyBullPlayerRubbingCards) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *CrazyBullPlayerRubbingCards) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 双连搓牌后推送
type DoubleLinkedPlayerRubbingCards struct {
	// 搓牌类型
	RubbingCardsType int64 `protobuf:"varint,1,opt,name=RubbingCardsType,proto3" json:"RubbingCardsType,omitempty"`
	// 搓牌的玩家
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,3,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleLinkedPlayerRubbingCards) Reset()         { *m = DoubleLinkedPlayerRubbingCards{} }
func (m *DoubleLinkedPlayerRubbingCards) String() string { return proto.CompactTextString(m) }
func (*DoubleLinkedPlayerRubbingCards) ProtoMessage()    {}
func (*DoubleLinkedPlayerRubbingCards) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{337}
}

func (m *DoubleLinkedPlayerRubbingCards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleLinkedPlayerRubbingCards.Unmarshal(m, b)
}
func (m *DoubleLinkedPlayerRubbingCards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleLinkedPlayerRubbingCards.Marshal(b, m, deterministic)
}
func (m *DoubleLinkedPlayerRubbingCards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleLinkedPlayerRubbingCards.Merge(m, src)
}
func (m *DoubleLinkedPlayerRubbingCards) XXX_Size() int {
	return xxx_messageInfo_DoubleLinkedPlayerRubbingCards.Size(m)
}
func (m *DoubleLinkedPlayerRubbingCards) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleLinkedPlayerRubbingCards.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleLinkedPlayerRubbingCards proto.InternalMessageInfo

func (m *DoubleLinkedPlayerRubbingCards) GetRubbingCardsType() int64 {
	if m != nil {
		return m.RubbingCardsType
	}
	return 0
}

func (m *DoubleLinkedPlayerRubbingCards) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *DoubleLinkedPlayerRubbingCards) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 双连捞成功后的推送
type DoubleLinkedPlayerLao struct {
	// 捞的操作类型
	Lao int64 `protobuf:"varint,1,opt,name=Lao,proto3" json:"Lao,omitempty"`
	// 玩家
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 房间id
	RoomId string `protobuf:"bytes,4,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	//如果玩家点击了炸弹则返回点数
	PokerNum             int64    `protobuf:"varint,5,opt,name=pokerNum,proto3" json:"pokerNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleLinkedPlayerLao) Reset()         { *m = DoubleLinkedPlayerLao{} }
func (m *DoubleLinkedPlayerLao) String() string { return proto.CompactTextString(m) }
func (*DoubleLinkedPlayerLao) ProtoMessage()    {}
func (*DoubleLinkedPlayerLao) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{338}
}

func (m *DoubleLinkedPlayerLao) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleLinkedPlayerLao.Unmarshal(m, b)
}
func (m *DoubleLinkedPlayerLao) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleLinkedPlayerLao.Marshal(b, m, deterministic)
}
func (m *DoubleLinkedPlayerLao) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleLinkedPlayerLao.Merge(m, src)
}
func (m *DoubleLinkedPlayerLao) XXX_Size() int {
	return xxx_messageInfo_DoubleLinkedPlayerLao.Size(m)
}
func (m *DoubleLinkedPlayerLao) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleLinkedPlayerLao.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleLinkedPlayerLao proto.InternalMessageInfo

func (m *DoubleLinkedPlayerLao) GetLao() int64 {
	if m != nil {
		return m.Lao
	}
	return 0
}

func (m *DoubleLinkedPlayerLao) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *DoubleLinkedPlayerLao) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *DoubleLinkedPlayerLao) GetPokerNum() int64 {
	if m != nil {
		return m.PokerNum
	}
	return 0
}

// 双连庄家炸牌成功后的推送
type DoubleLinkedPlayerZhuangLao struct {
	// 捞的操作类型
	Lao int64 `protobuf:"varint,1,opt,name=Lao,proto3" json:"Lao,omitempty"`
	// 玩家
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 房间id
	RoomId string `protobuf:"bytes,4,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 庄家炸牌
	Isboom               bool     `protobuf:"varint,5,opt,name=isboom,proto3" json:"isboom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleLinkedPlayerZhuangLao) Reset()         { *m = DoubleLinkedPlayerZhuangLao{} }
func (m *DoubleLinkedPlayerZhuangLao) String() string { return proto.CompactTextString(m) }
func (*DoubleLinkedPlayerZhuangLao) ProtoMessage()    {}
func (*DoubleLinkedPlayerZhuangLao) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{339}
}

func (m *DoubleLinkedPlayerZhuangLao) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleLinkedPlayerZhuangLao.Unmarshal(m, b)
}
func (m *DoubleLinkedPlayerZhuangLao) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleLinkedPlayerZhuangLao.Marshal(b, m, deterministic)
}
func (m *DoubleLinkedPlayerZhuangLao) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleLinkedPlayerZhuangLao.Merge(m, src)
}
func (m *DoubleLinkedPlayerZhuangLao) XXX_Size() int {
	return xxx_messageInfo_DoubleLinkedPlayerZhuangLao.Size(m)
}
func (m *DoubleLinkedPlayerZhuangLao) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleLinkedPlayerZhuangLao.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleLinkedPlayerZhuangLao proto.InternalMessageInfo

func (m *DoubleLinkedPlayerZhuangLao) GetLao() int64 {
	if m != nil {
		return m.Lao
	}
	return 0
}

func (m *DoubleLinkedPlayerZhuangLao) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *DoubleLinkedPlayerZhuangLao) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *DoubleLinkedPlayerZhuangLao) GetIsboom() bool {
	if m != nil {
		return m.Isboom
	}
	return false
}

// 双连下注成功后的推送
type DoubleLinkedPlayerBet struct {
	// 下注倍数
	AllBet int64 `protobuf:"varint,1,opt,name=AllBet,proto3" json:"AllBet,omitempty"`
	// 下注的玩家
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 玩家的投注
	PlayerBets []int64 `protobuf:"varint,3,rep,packed,name=PlayerBets,proto3" json:"PlayerBets,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,4,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleLinkedPlayerBet) Reset()         { *m = DoubleLinkedPlayerBet{} }
func (m *DoubleLinkedPlayerBet) String() string { return proto.CompactTextString(m) }
func (*DoubleLinkedPlayerBet) ProtoMessage()    {}
func (*DoubleLinkedPlayerBet) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{340}
}

func (m *DoubleLinkedPlayerBet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleLinkedPlayerBet.Unmarshal(m, b)
}
func (m *DoubleLinkedPlayerBet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleLinkedPlayerBet.Marshal(b, m, deterministic)
}
func (m *DoubleLinkedPlayerBet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleLinkedPlayerBet.Merge(m, src)
}
func (m *DoubleLinkedPlayerBet) XXX_Size() int {
	return xxx_messageInfo_DoubleLinkedPlayerBet.Size(m)
}
func (m *DoubleLinkedPlayerBet) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleLinkedPlayerBet.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleLinkedPlayerBet proto.InternalMessageInfo

func (m *DoubleLinkedPlayerBet) GetAllBet() int64 {
	if m != nil {
		return m.AllBet
	}
	return 0
}

func (m *DoubleLinkedPlayerBet) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *DoubleLinkedPlayerBet) GetPlayerBets() []int64 {
	if m != nil {
		return m.PlayerBets
	}
	return nil
}

func (m *DoubleLinkedPlayerBet) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 疯狂牛牛抢庄申请
type CrazyUpBankerRequest struct {
	//抢庄倍数
	RushVillage          int64    `protobuf:"varint,1,opt,name=RushVillage,proto3" json:"RushVillage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrazyUpBankerRequest) Reset()         { *m = CrazyUpBankerRequest{} }
func (m *CrazyUpBankerRequest) String() string { return proto.CompactTextString(m) }
func (*CrazyUpBankerRequest) ProtoMessage()    {}
func (*CrazyUpBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{341}
}

func (m *CrazyUpBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrazyUpBankerRequest.Unmarshal(m, b)
}
func (m *CrazyUpBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrazyUpBankerRequest.Marshal(b, m, deterministic)
}
func (m *CrazyUpBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrazyUpBankerRequest.Merge(m, src)
}
func (m *CrazyUpBankerRequest) XXX_Size() int {
	return xxx_messageInfo_CrazyUpBankerRequest.Size(m)
}
func (m *CrazyUpBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CrazyUpBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CrazyUpBankerRequest proto.InternalMessageInfo

func (m *CrazyUpBankerRequest) GetRushVillage() int64 {
	if m != nil {
		return m.RushVillage
	}
	return 0
}

// 双连抢庄申请
type DoubleLinkedUpBankerRequest struct {
	//抢庄倍数
	RushVillage          int64    `protobuf:"varint,1,opt,name=RushVillage,proto3" json:"RushVillage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleLinkedUpBankerRequest) Reset()         { *m = DoubleLinkedUpBankerRequest{} }
func (m *DoubleLinkedUpBankerRequest) String() string { return proto.CompactTextString(m) }
func (*DoubleLinkedUpBankerRequest) ProtoMessage()    {}
func (*DoubleLinkedUpBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{342}
}

func (m *DoubleLinkedUpBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleLinkedUpBankerRequest.Unmarshal(m, b)
}
func (m *DoubleLinkedUpBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleLinkedUpBankerRequest.Marshal(b, m, deterministic)
}
func (m *DoubleLinkedUpBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleLinkedUpBankerRequest.Merge(m, src)
}
func (m *DoubleLinkedUpBankerRequest) XXX_Size() int {
	return xxx_messageInfo_DoubleLinkedUpBankerRequest.Size(m)
}
func (m *DoubleLinkedUpBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleLinkedUpBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleLinkedUpBankerRequest proto.InternalMessageInfo

func (m *DoubleLinkedUpBankerRequest) GetRushVillage() int64 {
	if m != nil {
		return m.RushVillage
	}
	return 0
}

// 双连抢庄回复
type DoubleLinkedUpBankerReply struct {
	// 上庄是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleLinkedUpBankerReply) Reset()         { *m = DoubleLinkedUpBankerReply{} }
func (m *DoubleLinkedUpBankerReply) String() string { return proto.CompactTextString(m) }
func (*DoubleLinkedUpBankerReply) ProtoMessage()    {}
func (*DoubleLinkedUpBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{343}
}

func (m *DoubleLinkedUpBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleLinkedUpBankerReply.Unmarshal(m, b)
}
func (m *DoubleLinkedUpBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleLinkedUpBankerReply.Marshal(b, m, deterministic)
}
func (m *DoubleLinkedUpBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleLinkedUpBankerReply.Merge(m, src)
}
func (m *DoubleLinkedUpBankerReply) XXX_Size() int {
	return xxx_messageInfo_DoubleLinkedUpBankerReply.Size(m)
}
func (m *DoubleLinkedUpBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleLinkedUpBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleLinkedUpBankerReply proto.InternalMessageInfo

func (m *DoubleLinkedUpBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 疯狂牛牛抢庄回复
type CrazyUpBankerReply struct {
	// 上庄是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrazyUpBankerReply) Reset()         { *m = CrazyUpBankerReply{} }
func (m *CrazyUpBankerReply) String() string { return proto.CompactTextString(m) }
func (*CrazyUpBankerReply) ProtoMessage()    {}
func (*CrazyUpBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{344}
}

func (m *CrazyUpBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrazyUpBankerReply.Unmarshal(m, b)
}
func (m *CrazyUpBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrazyUpBankerReply.Marshal(b, m, deterministic)
}
func (m *CrazyUpBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrazyUpBankerReply.Merge(m, src)
}
func (m *CrazyUpBankerReply) XXX_Size() int {
	return xxx_messageInfo_CrazyUpBankerReply.Size(m)
}
func (m *CrazyUpBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CrazyUpBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_CrazyUpBankerReply proto.InternalMessageInfo

func (m *CrazyUpBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 疯狂牛牛抢庄成功的推送
type PushCrazyBullChangeBankers struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 现在庄家的等待队列
	CrazyBankers []string `protobuf:"bytes,2,rep,name=CrazyBankers,proto3" json:"CrazyBankers,omitempty"`
	//玩家id
	Uuid string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	//玩家抢庄倍数
	Odds                 int64    `protobuf:"varint,4,opt,name=odds,proto3" json:"odds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushCrazyBullChangeBankers) Reset()         { *m = PushCrazyBullChangeBankers{} }
func (m *PushCrazyBullChangeBankers) String() string { return proto.CompactTextString(m) }
func (*PushCrazyBullChangeBankers) ProtoMessage()    {}
func (*PushCrazyBullChangeBankers) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{345}
}

func (m *PushCrazyBullChangeBankers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushCrazyBullChangeBankers.Unmarshal(m, b)
}
func (m *PushCrazyBullChangeBankers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushCrazyBullChangeBankers.Marshal(b, m, deterministic)
}
func (m *PushCrazyBullChangeBankers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushCrazyBullChangeBankers.Merge(m, src)
}
func (m *PushCrazyBullChangeBankers) XXX_Size() int {
	return xxx_messageInfo_PushCrazyBullChangeBankers.Size(m)
}
func (m *PushCrazyBullChangeBankers) XXX_DiscardUnknown() {
	xxx_messageInfo_PushCrazyBullChangeBankers.DiscardUnknown(m)
}

var xxx_messageInfo_PushCrazyBullChangeBankers proto.InternalMessageInfo

func (m *PushCrazyBullChangeBankers) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushCrazyBullChangeBankers) GetCrazyBankers() []string {
	if m != nil {
		return m.CrazyBankers
	}
	return nil
}

func (m *PushCrazyBullChangeBankers) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PushCrazyBullChangeBankers) GetOdds() int64 {
	if m != nil {
		return m.Odds
	}
	return 0
}

// 双连抢庄成功的推送
type PushDoubleLinkedChangeBankers struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 现在庄家的等待队列
	DoubleLinkedyBankers []string `protobuf:"bytes,2,rep,name=DoubleLinkedyBankers,proto3" json:"DoubleLinkedyBankers,omitempty"`
	//玩家id
	Uuid string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	//玩家抢庄倍数
	Odds                 int64    `protobuf:"varint,4,opt,name=odds,proto3" json:"odds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushDoubleLinkedChangeBankers) Reset()         { *m = PushDoubleLinkedChangeBankers{} }
func (m *PushDoubleLinkedChangeBankers) String() string { return proto.CompactTextString(m) }
func (*PushDoubleLinkedChangeBankers) ProtoMessage()    {}
func (*PushDoubleLinkedChangeBankers) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{346}
}

func (m *PushDoubleLinkedChangeBankers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDoubleLinkedChangeBankers.Unmarshal(m, b)
}
func (m *PushDoubleLinkedChangeBankers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDoubleLinkedChangeBankers.Marshal(b, m, deterministic)
}
func (m *PushDoubleLinkedChangeBankers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDoubleLinkedChangeBankers.Merge(m, src)
}
func (m *PushDoubleLinkedChangeBankers) XXX_Size() int {
	return xxx_messageInfo_PushDoubleLinkedChangeBankers.Size(m)
}
func (m *PushDoubleLinkedChangeBankers) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDoubleLinkedChangeBankers.DiscardUnknown(m)
}

var xxx_messageInfo_PushDoubleLinkedChangeBankers proto.InternalMessageInfo

func (m *PushDoubleLinkedChangeBankers) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushDoubleLinkedChangeBankers) GetDoubleLinkedyBankers() []string {
	if m != nil {
		return m.DoubleLinkedyBankers
	}
	return nil
}

func (m *PushDoubleLinkedChangeBankers) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PushDoubleLinkedChangeBankers) GetOdds() int64 {
	if m != nil {
		return m.Odds
	}
	return 0
}

// 打旋庄家信息推送
type PushDaXuanBankers struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 庄家下标
	DaXuanMultipleIndex  int64    `protobuf:"varint,2,opt,name=DaXuanMultipleIndex,proto3" json:"DaXuanMultipleIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushDaXuanBankers) Reset()         { *m = PushDaXuanBankers{} }
func (m *PushDaXuanBankers) String() string { return proto.CompactTextString(m) }
func (*PushDaXuanBankers) ProtoMessage()    {}
func (*PushDaXuanBankers) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{347}
}

func (m *PushDaXuanBankers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDaXuanBankers.Unmarshal(m, b)
}
func (m *PushDaXuanBankers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDaXuanBankers.Marshal(b, m, deterministic)
}
func (m *PushDaXuanBankers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDaXuanBankers.Merge(m, src)
}
func (m *PushDaXuanBankers) XXX_Size() int {
	return xxx_messageInfo_PushDaXuanBankers.Size(m)
}
func (m *PushDaXuanBankers) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDaXuanBankers.DiscardUnknown(m)
}

var xxx_messageInfo_PushDaXuanBankers proto.InternalMessageInfo

func (m *PushDaXuanBankers) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushDaXuanBankers) GetDaXuanMultipleIndex() int64 {
	if m != nil {
		return m.DaXuanMultipleIndex
	}
	return 0
}

// 疯狂牛牛庄家信息推送
type PushCrazyBullBankers struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 庄家uuid
	CrazyBullMultipleuuid string `protobuf:"bytes,2,opt,name=CrazyBullMultipleuuid,proto3" json:"CrazyBullMultipleuuid,omitempty"`
	//庄家默认抢庄倍数
	Odds int64 `protobuf:"varint,3,opt,name=odds,proto3" json:"odds,omitempty"`
	//抢庄倍数最高列表玩家uuid
	MultipleuuidUuid     []int64  `protobuf:"varint,4,rep,packed,name=MultipleuuidUuid,proto3" json:"MultipleuuidUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushCrazyBullBankers) Reset()         { *m = PushCrazyBullBankers{} }
func (m *PushCrazyBullBankers) String() string { return proto.CompactTextString(m) }
func (*PushCrazyBullBankers) ProtoMessage()    {}
func (*PushCrazyBullBankers) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{348}
}

func (m *PushCrazyBullBankers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushCrazyBullBankers.Unmarshal(m, b)
}
func (m *PushCrazyBullBankers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushCrazyBullBankers.Marshal(b, m, deterministic)
}
func (m *PushCrazyBullBankers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushCrazyBullBankers.Merge(m, src)
}
func (m *PushCrazyBullBankers) XXX_Size() int {
	return xxx_messageInfo_PushCrazyBullBankers.Size(m)
}
func (m *PushCrazyBullBankers) XXX_DiscardUnknown() {
	xxx_messageInfo_PushCrazyBullBankers.DiscardUnknown(m)
}

var xxx_messageInfo_PushCrazyBullBankers proto.InternalMessageInfo

func (m *PushCrazyBullBankers) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushCrazyBullBankers) GetCrazyBullMultipleuuid() string {
	if m != nil {
		return m.CrazyBullMultipleuuid
	}
	return ""
}

func (m *PushCrazyBullBankers) GetOdds() int64 {
	if m != nil {
		return m.Odds
	}
	return 0
}

func (m *PushCrazyBullBankers) GetMultipleuuidUuid() []int64 {
	if m != nil {
		return m.MultipleuuidUuid
	}
	return nil
}

// 双连庄家信息推送
type PushDoubleLinkedBankers struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 庄家uuid
	DoubleLinkedMultipleuuid string `protobuf:"bytes,2,opt,name=DoubleLinkedMultipleuuid,proto3" json:"DoubleLinkedMultipleuuid,omitempty"`
	//庄家默认抢庄倍数
	Odds int64 `protobuf:"varint,3,opt,name=odds,proto3" json:"odds,omitempty"`
	//抢庄倍数最高列表玩家uuid
	MultipleuuidUuid     []int64  `protobuf:"varint,4,rep,packed,name=MultipleuuidUuid,proto3" json:"MultipleuuidUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushDoubleLinkedBankers) Reset()         { *m = PushDoubleLinkedBankers{} }
func (m *PushDoubleLinkedBankers) String() string { return proto.CompactTextString(m) }
func (*PushDoubleLinkedBankers) ProtoMessage()    {}
func (*PushDoubleLinkedBankers) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{349}
}

func (m *PushDoubleLinkedBankers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDoubleLinkedBankers.Unmarshal(m, b)
}
func (m *PushDoubleLinkedBankers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDoubleLinkedBankers.Marshal(b, m, deterministic)
}
func (m *PushDoubleLinkedBankers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDoubleLinkedBankers.Merge(m, src)
}
func (m *PushDoubleLinkedBankers) XXX_Size() int {
	return xxx_messageInfo_PushDoubleLinkedBankers.Size(m)
}
func (m *PushDoubleLinkedBankers) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDoubleLinkedBankers.DiscardUnknown(m)
}

var xxx_messageInfo_PushDoubleLinkedBankers proto.InternalMessageInfo

func (m *PushDoubleLinkedBankers) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushDoubleLinkedBankers) GetDoubleLinkedMultipleuuid() string {
	if m != nil {
		return m.DoubleLinkedMultipleuuid
	}
	return ""
}

func (m *PushDoubleLinkedBankers) GetOdds() int64 {
	if m != nil {
		return m.Odds
	}
	return 0
}

func (m *PushDoubleLinkedBankers) GetMultipleuuidUuid() []int64 {
	if m != nil {
		return m.MultipleuuidUuid
	}
	return nil
}

//双连庄家集合信息推送
type PushDoubleLinkedMultipleuuid struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	//抢庄倍数最高列表玩家uuid
	MultipleuuidUuid     []int64  `protobuf:"varint,2,rep,packed,name=MultipleuuidUuid,proto3" json:"MultipleuuidUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushDoubleLinkedMultipleuuid) Reset()         { *m = PushDoubleLinkedMultipleuuid{} }
func (m *PushDoubleLinkedMultipleuuid) String() string { return proto.CompactTextString(m) }
func (*PushDoubleLinkedMultipleuuid) ProtoMessage()    {}
func (*PushDoubleLinkedMultipleuuid) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{350}
}

func (m *PushDoubleLinkedMultipleuuid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDoubleLinkedMultipleuuid.Unmarshal(m, b)
}
func (m *PushDoubleLinkedMultipleuuid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDoubleLinkedMultipleuuid.Marshal(b, m, deterministic)
}
func (m *PushDoubleLinkedMultipleuuid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDoubleLinkedMultipleuuid.Merge(m, src)
}
func (m *PushDoubleLinkedMultipleuuid) XXX_Size() int {
	return xxx_messageInfo_PushDoubleLinkedMultipleuuid.Size(m)
}
func (m *PushDoubleLinkedMultipleuuid) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDoubleLinkedMultipleuuid.DiscardUnknown(m)
}

var xxx_messageInfo_PushDoubleLinkedMultipleuuid proto.InternalMessageInfo

func (m *PushDoubleLinkedMultipleuuid) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushDoubleLinkedMultipleuuid) GetMultipleuuidUuid() []int64 {
	if m != nil {
		return m.MultipleuuidUuid
	}
	return nil
}

//疯狂牛牛庄家集合信息推送
type PushCrazyBullMultipleuuid struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	//抢庄倍数最高列表玩家uuid
	MultipleuuidUuid     []int64  `protobuf:"varint,2,rep,packed,name=MultipleuuidUuid,proto3" json:"MultipleuuidUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushCrazyBullMultipleuuid) Reset()         { *m = PushCrazyBullMultipleuuid{} }
func (m *PushCrazyBullMultipleuuid) String() string { return proto.CompactTextString(m) }
func (*PushCrazyBullMultipleuuid) ProtoMessage()    {}
func (*PushCrazyBullMultipleuuid) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{351}
}

func (m *PushCrazyBullMultipleuuid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushCrazyBullMultipleuuid.Unmarshal(m, b)
}
func (m *PushCrazyBullMultipleuuid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushCrazyBullMultipleuuid.Marshal(b, m, deterministic)
}
func (m *PushCrazyBullMultipleuuid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushCrazyBullMultipleuuid.Merge(m, src)
}
func (m *PushCrazyBullMultipleuuid) XXX_Size() int {
	return xxx_messageInfo_PushCrazyBullMultipleuuid.Size(m)
}
func (m *PushCrazyBullMultipleuuid) XXX_DiscardUnknown() {
	xxx_messageInfo_PushCrazyBullMultipleuuid.DiscardUnknown(m)
}

var xxx_messageInfo_PushCrazyBullMultipleuuid proto.InternalMessageInfo

func (m *PushCrazyBullMultipleuuid) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushCrazyBullMultipleuuid) GetMultipleuuidUuid() []int64 {
	if m != nil {
		return m.MultipleuuidUuid
	}
	return nil
}

// 龙虎斗操作请求
type DragonTigerFightDoRequest struct {
	// 想要进行的操作
	DoType DragonTigerFightDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=DragonTigerFightDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DragonTigerFightDoRequest) Reset()         { *m = DragonTigerFightDoRequest{} }
func (m *DragonTigerFightDoRequest) String() string { return proto.CompactTextString(m) }
func (*DragonTigerFightDoRequest) ProtoMessage()    {}
func (*DragonTigerFightDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{352}
}

func (m *DragonTigerFightDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DragonTigerFightDoRequest.Unmarshal(m, b)
}
func (m *DragonTigerFightDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DragonTigerFightDoRequest.Marshal(b, m, deterministic)
}
func (m *DragonTigerFightDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DragonTigerFightDoRequest.Merge(m, src)
}
func (m *DragonTigerFightDoRequest) XXX_Size() int {
	return xxx_messageInfo_DragonTigerFightDoRequest.Size(m)
}
func (m *DragonTigerFightDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DragonTigerFightDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DragonTigerFightDoRequest proto.InternalMessageInfo

func (m *DragonTigerFightDoRequest) GetDoType() DragonTigerFightDoType {
	if m != nil {
		return m.DoType
	}
	return DragonTigerFightDoType_DragonTigerFight_None
}

func (m *DragonTigerFightDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 龙虎每局庄家信息的推送
type PushDragonTigerBankerMessage struct {
	// 之前的庄家 - 如之前之后相同说明庄家未变，同时原因会为容错
	BeforeBanker string `protobuf:"bytes,1,opt,name=BeforeBanker,proto3" json:"BeforeBanker,omitempty"`
	// 之后的庄家
	AfterBanker string `protobuf:"bytes,2,opt,name=AfterBanker,proto3" json:"AfterBanker,omitempty"`
	// 之前庄家被替换的原因
	ReplaceBankerReason KickBankerReason `protobuf:"varint,3,opt,name=ReplaceBankerReason,proto3,enum=KickBankerReason" json:"ReplaceBankerReason,omitempty"`
	// 庄家目前的连庄回合数
	NowRound int64 `protobuf:"varint,4,opt,name=NowRound,proto3" json:"NowRound,omitempty"`
	// 庄家申请列表
	Bankers []string `protobuf:"bytes,5,rep,name=Bankers,proto3" json:"Bankers,omitempty"`
	// 限红，龙虎和
	MaxBetRatio []int64 `protobuf:"varint,6,rep,packed,name=MaxBetRatio,proto3" json:"MaxBetRatio,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,7,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushDragonTigerBankerMessage) Reset()         { *m = PushDragonTigerBankerMessage{} }
func (m *PushDragonTigerBankerMessage) String() string { return proto.CompactTextString(m) }
func (*PushDragonTigerBankerMessage) ProtoMessage()    {}
func (*PushDragonTigerBankerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{353}
}

func (m *PushDragonTigerBankerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDragonTigerBankerMessage.Unmarshal(m, b)
}
func (m *PushDragonTigerBankerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDragonTigerBankerMessage.Marshal(b, m, deterministic)
}
func (m *PushDragonTigerBankerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDragonTigerBankerMessage.Merge(m, src)
}
func (m *PushDragonTigerBankerMessage) XXX_Size() int {
	return xxx_messageInfo_PushDragonTigerBankerMessage.Size(m)
}
func (m *PushDragonTigerBankerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDragonTigerBankerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PushDragonTigerBankerMessage proto.InternalMessageInfo

func (m *PushDragonTigerBankerMessage) GetBeforeBanker() string {
	if m != nil {
		return m.BeforeBanker
	}
	return ""
}

func (m *PushDragonTigerBankerMessage) GetAfterBanker() string {
	if m != nil {
		return m.AfterBanker
	}
	return ""
}

func (m *PushDragonTigerBankerMessage) GetReplaceBankerReason() KickBankerReason {
	if m != nil {
		return m.ReplaceBankerReason
	}
	return KickBankerReason_KickBankerNone
}

func (m *PushDragonTigerBankerMessage) GetNowRound() int64 {
	if m != nil {
		return m.NowRound
	}
	return 0
}

func (m *PushDragonTigerBankerMessage) GetBankers() []string {
	if m != nil {
		return m.Bankers
	}
	return nil
}

func (m *PushDragonTigerBankerMessage) GetMaxBetRatio() []int64 {
	if m != nil {
		return m.MaxBetRatio
	}
	return nil
}

func (m *PushDragonTigerBankerMessage) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 龙虎开牌推送
type PushDragonTigerPoker struct {
	// 房间Id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 龙牌虎牌
	DragonTigerPoker     []*Poker `protobuf:"bytes,2,rep,name=DragonTigerPoker,proto3" json:"DragonTigerPoker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushDragonTigerPoker) Reset()         { *m = PushDragonTigerPoker{} }
func (m *PushDragonTigerPoker) String() string { return proto.CompactTextString(m) }
func (*PushDragonTigerPoker) ProtoMessage()    {}
func (*PushDragonTigerPoker) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{354}
}

func (m *PushDragonTigerPoker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDragonTigerPoker.Unmarshal(m, b)
}
func (m *PushDragonTigerPoker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDragonTigerPoker.Marshal(b, m, deterministic)
}
func (m *PushDragonTigerPoker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDragonTigerPoker.Merge(m, src)
}
func (m *PushDragonTigerPoker) XXX_Size() int {
	return xxx_messageInfo_PushDragonTigerPoker.Size(m)
}
func (m *PushDragonTigerPoker) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDragonTigerPoker.DiscardUnknown(m)
}

var xxx_messageInfo_PushDragonTigerPoker proto.InternalMessageInfo

func (m *PushDragonTigerPoker) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushDragonTigerPoker) GetDragonTigerPoker() []*Poker {
	if m != nil {
		return m.DragonTigerPoker
	}
	return nil
}

// --------------------------------------------------------------------------
// 龙虎斗下注请求
// --------------------------------------------------------------------------
// 龙虎下注申请
type DragonTigerBetRequest struct {
	// 下注的区域
	BetArea DragonTigerCardArea `protobuf:"varint,1,opt,name=BetArea,proto3,enum=DragonTigerCardArea" json:"BetArea,omitempty"`
	// 下注金额（密等）
	BetBalance           int64    `protobuf:"varint,2,opt,name=BetBalance,proto3" json:"BetBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DragonTigerBetRequest) Reset()         { *m = DragonTigerBetRequest{} }
func (m *DragonTigerBetRequest) String() string { return proto.CompactTextString(m) }
func (*DragonTigerBetRequest) ProtoMessage()    {}
func (*DragonTigerBetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{355}
}

func (m *DragonTigerBetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DragonTigerBetRequest.Unmarshal(m, b)
}
func (m *DragonTigerBetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DragonTigerBetRequest.Marshal(b, m, deterministic)
}
func (m *DragonTigerBetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DragonTigerBetRequest.Merge(m, src)
}
func (m *DragonTigerBetRequest) XXX_Size() int {
	return xxx_messageInfo_DragonTigerBetRequest.Size(m)
}
func (m *DragonTigerBetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DragonTigerBetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DragonTigerBetRequest proto.InternalMessageInfo

func (m *DragonTigerBetRequest) GetBetArea() DragonTigerCardArea {
	if m != nil {
		return m.BetArea
	}
	return DragonTigerCardArea_CardAreaNone
}

func (m *DragonTigerBetRequest) GetBetBalance() int64 {
	if m != nil {
		return m.BetBalance
	}
	return 0
}

// 龙虎下注回复
type DragonTigerBetReply struct {
	// 下注是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 房间Id
	RoomId string `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 玩家目前金币数
	PlayerBalance        int64    `protobuf:"varint,3,opt,name=PlayerBalance,proto3" json:"PlayerBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DragonTigerBetReply) Reset()         { *m = DragonTigerBetReply{} }
func (m *DragonTigerBetReply) String() string { return proto.CompactTextString(m) }
func (*DragonTigerBetReply) ProtoMessage()    {}
func (*DragonTigerBetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{356}
}

func (m *DragonTigerBetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DragonTigerBetReply.Unmarshal(m, b)
}
func (m *DragonTigerBetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DragonTigerBetReply.Marshal(b, m, deterministic)
}
func (m *DragonTigerBetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DragonTigerBetReply.Merge(m, src)
}
func (m *DragonTigerBetReply) XXX_Size() int {
	return xxx_messageInfo_DragonTigerBetReply.Size(m)
}
func (m *DragonTigerBetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DragonTigerBetReply.DiscardUnknown(m)
}

var xxx_messageInfo_DragonTigerBetReply proto.InternalMessageInfo

func (m *DragonTigerBetReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *DragonTigerBetReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *DragonTigerBetReply) GetPlayerBalance() int64 {
	if m != nil {
		return m.PlayerBalance
	}
	return 0
}

// 龙虎玩家下注成功推送数组
type PushDragonTigerPlayerBets struct {
	// 推送数组
	PushBets []*PushDragonTigerPlayerBet `protobuf:"bytes,1,rep,name=PushBets,proto3" json:"PushBets,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushDragonTigerPlayerBets) Reset()         { *m = PushDragonTigerPlayerBets{} }
func (m *PushDragonTigerPlayerBets) String() string { return proto.CompactTextString(m) }
func (*PushDragonTigerPlayerBets) ProtoMessage()    {}
func (*PushDragonTigerPlayerBets) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{357}
}

func (m *PushDragonTigerPlayerBets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDragonTigerPlayerBets.Unmarshal(m, b)
}
func (m *PushDragonTigerPlayerBets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDragonTigerPlayerBets.Marshal(b, m, deterministic)
}
func (m *PushDragonTigerPlayerBets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDragonTigerPlayerBets.Merge(m, src)
}
func (m *PushDragonTigerPlayerBets) XXX_Size() int {
	return xxx_messageInfo_PushDragonTigerPlayerBets.Size(m)
}
func (m *PushDragonTigerPlayerBets) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDragonTigerPlayerBets.DiscardUnknown(m)
}

var xxx_messageInfo_PushDragonTigerPlayerBets proto.InternalMessageInfo

func (m *PushDragonTigerPlayerBets) GetPushBets() []*PushDragonTigerPlayerBet {
	if m != nil {
		return m.PushBets
	}
	return nil
}

func (m *PushDragonTigerPlayerBets) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 龙虎玩家下注成功后的推送
type PushDragonTigerPlayerBet struct {
	// 总注金额，龙虎和
	AllBet []int64 `protobuf:"varint,1,rep,packed,name=AllBet,proto3" json:"AllBet,omitempty"`
	// 下注的玩家
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 玩家的投注
	PlayerBets []int64 `protobuf:"varint,3,rep,packed,name=PlayerBets,proto3" json:"PlayerBets,omitempty"`
	// 限红，龙虎和
	MaxBetRatio []int64 `protobuf:"varint,4,rep,packed,name=MaxBetRatio,proto3" json:"MaxBetRatio,omitempty"`
	// 房间id
	RoomId string `protobuf:"bytes,5,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 该玩家目前金币数
	PlayerBalance        int64    `protobuf:"varint,6,opt,name=PlayerBalance,proto3" json:"PlayerBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushDragonTigerPlayerBet) Reset()         { *m = PushDragonTigerPlayerBet{} }
func (m *PushDragonTigerPlayerBet) String() string { return proto.CompactTextString(m) }
func (*PushDragonTigerPlayerBet) ProtoMessage()    {}
func (*PushDragonTigerPlayerBet) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{358}
}

func (m *PushDragonTigerPlayerBet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDragonTigerPlayerBet.Unmarshal(m, b)
}
func (m *PushDragonTigerPlayerBet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDragonTigerPlayerBet.Marshal(b, m, deterministic)
}
func (m *PushDragonTigerPlayerBet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDragonTigerPlayerBet.Merge(m, src)
}
func (m *PushDragonTigerPlayerBet) XXX_Size() int {
	return xxx_messageInfo_PushDragonTigerPlayerBet.Size(m)
}
func (m *PushDragonTigerPlayerBet) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDragonTigerPlayerBet.DiscardUnknown(m)
}

var xxx_messageInfo_PushDragonTigerPlayerBet proto.InternalMessageInfo

func (m *PushDragonTigerPlayerBet) GetAllBet() []int64 {
	if m != nil {
		return m.AllBet
	}
	return nil
}

func (m *PushDragonTigerPlayerBet) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PushDragonTigerPlayerBet) GetPlayerBets() []int64 {
	if m != nil {
		return m.PlayerBets
	}
	return nil
}

func (m *PushDragonTigerPlayerBet) GetMaxBetRatio() []int64 {
	if m != nil {
		return m.MaxBetRatio
	}
	return nil
}

func (m *PushDragonTigerPlayerBet) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushDragonTigerPlayerBet) GetPlayerBalance() int64 {
	if m != nil {
		return m.PlayerBalance
	}
	return 0
}

// --------------------------------------------------------------------------
// 龙虎斗上庄请求
// --------------------------------------------------------------------------
// 龙虎申请上庄申请
type DragonTigerUpBankerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DragonTigerUpBankerRequest) Reset()         { *m = DragonTigerUpBankerRequest{} }
func (m *DragonTigerUpBankerRequest) String() string { return proto.CompactTextString(m) }
func (*DragonTigerUpBankerRequest) ProtoMessage()    {}
func (*DragonTigerUpBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{359}
}

func (m *DragonTigerUpBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DragonTigerUpBankerRequest.Unmarshal(m, b)
}
func (m *DragonTigerUpBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DragonTigerUpBankerRequest.Marshal(b, m, deterministic)
}
func (m *DragonTigerUpBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DragonTigerUpBankerRequest.Merge(m, src)
}
func (m *DragonTigerUpBankerRequest) XXX_Size() int {
	return xxx_messageInfo_DragonTigerUpBankerRequest.Size(m)
}
func (m *DragonTigerUpBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DragonTigerUpBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DragonTigerUpBankerRequest proto.InternalMessageInfo

// 龙虎申请上庄回复
type DragonTigerUpBankerReply struct {
	// 上庄是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 房间Id
	RoomId               string   `protobuf:"bytes,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DragonTigerUpBankerReply) Reset()         { *m = DragonTigerUpBankerReply{} }
func (m *DragonTigerUpBankerReply) String() string { return proto.CompactTextString(m) }
func (*DragonTigerUpBankerReply) ProtoMessage()    {}
func (*DragonTigerUpBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{360}
}

func (m *DragonTigerUpBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DragonTigerUpBankerReply.Unmarshal(m, b)
}
func (m *DragonTigerUpBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DragonTigerUpBankerReply.Marshal(b, m, deterministic)
}
func (m *DragonTigerUpBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DragonTigerUpBankerReply.Merge(m, src)
}
func (m *DragonTigerUpBankerReply) XXX_Size() int {
	return xxx_messageInfo_DragonTigerUpBankerReply.Size(m)
}
func (m *DragonTigerUpBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DragonTigerUpBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_DragonTigerUpBankerReply proto.InternalMessageInfo

func (m *DragonTigerUpBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *DragonTigerUpBankerReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// --------------------------------------------------------------------------
// 龙虎斗下庄请求（庄家下庄|从申请庄家列表退出）
// --------------------------------------------------------------------------
// 龙虎申请下庄申请
type DragonTigerDownBankerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DragonTigerDownBankerRequest) Reset()         { *m = DragonTigerDownBankerRequest{} }
func (m *DragonTigerDownBankerRequest) String() string { return proto.CompactTextString(m) }
func (*DragonTigerDownBankerRequest) ProtoMessage()    {}
func (*DragonTigerDownBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{361}
}

func (m *DragonTigerDownBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DragonTigerDownBankerRequest.Unmarshal(m, b)
}
func (m *DragonTigerDownBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DragonTigerDownBankerRequest.Marshal(b, m, deterministic)
}
func (m *DragonTigerDownBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DragonTigerDownBankerRequest.Merge(m, src)
}
func (m *DragonTigerDownBankerRequest) XXX_Size() int {
	return xxx_messageInfo_DragonTigerDownBankerRequest.Size(m)
}
func (m *DragonTigerDownBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DragonTigerDownBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DragonTigerDownBankerRequest proto.InternalMessageInfo

// 龙虎申请下庄回复
type DragonTigerDownBankerReply struct {
	// 上庄是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 房间Id
	RoomId               string   `protobuf:"bytes,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DragonTigerDownBankerReply) Reset()         { *m = DragonTigerDownBankerReply{} }
func (m *DragonTigerDownBankerReply) String() string { return proto.CompactTextString(m) }
func (*DragonTigerDownBankerReply) ProtoMessage()    {}
func (*DragonTigerDownBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{362}
}

func (m *DragonTigerDownBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DragonTigerDownBankerReply.Unmarshal(m, b)
}
func (m *DragonTigerDownBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DragonTigerDownBankerReply.Marshal(b, m, deterministic)
}
func (m *DragonTigerDownBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DragonTigerDownBankerReply.Merge(m, src)
}
func (m *DragonTigerDownBankerReply) XXX_Size() int {
	return xxx_messageInfo_DragonTigerDownBankerReply.Size(m)
}
func (m *DragonTigerDownBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DragonTigerDownBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_DragonTigerDownBankerReply proto.InternalMessageInfo

func (m *DragonTigerDownBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *DragonTigerDownBankerReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 龙虎上庄列表变动的推送
type PushDragonTigerChangeBankers struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 现在庄家的等待队列
	Bankers              []string `protobuf:"bytes,2,rep,name=Bankers,proto3" json:"Bankers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushDragonTigerChangeBankers) Reset()         { *m = PushDragonTigerChangeBankers{} }
func (m *PushDragonTigerChangeBankers) String() string { return proto.CompactTextString(m) }
func (*PushDragonTigerChangeBankers) ProtoMessage()    {}
func (*PushDragonTigerChangeBankers) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{363}
}

func (m *PushDragonTigerChangeBankers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDragonTigerChangeBankers.Unmarshal(m, b)
}
func (m *PushDragonTigerChangeBankers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDragonTigerChangeBankers.Marshal(b, m, deterministic)
}
func (m *PushDragonTigerChangeBankers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDragonTigerChangeBankers.Merge(m, src)
}
func (m *PushDragonTigerChangeBankers) XXX_Size() int {
	return xxx_messageInfo_PushDragonTigerChangeBankers.Size(m)
}
func (m *PushDragonTigerChangeBankers) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDragonTigerChangeBankers.DiscardUnknown(m)
}

var xxx_messageInfo_PushDragonTigerChangeBankers proto.InternalMessageInfo

func (m *PushDragonTigerChangeBankers) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushDragonTigerChangeBankers) GetBankers() []string {
	if m != nil {
		return m.Bankers
	}
	return nil
}

// 龙虎输赢信息
type DragonTigerWinInfo struct {
	// 胜利的牌区
	WinArea DragonTigerCardArea `protobuf:"varint,1,opt,name=WinArea,proto3,enum=DragonTigerCardArea" json:"WinArea,omitempty"`
	// 获胜的龙虎类型
	Winner DragonTigerType `protobuf:"varint,2,opt,name=Winner,proto3,enum=DragonTigerType" json:"Winner,omitempty"`
	// 龙牌
	DragonPoker *Poker `protobuf:"bytes,3,opt,name=DragonPoker,proto3" json:"DragonPoker,omitempty"`
	// 虎牌
	TigerPoker           *Poker   `protobuf:"bytes,4,opt,name=TigerPoker,proto3" json:"TigerPoker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DragonTigerWinInfo) Reset()         { *m = DragonTigerWinInfo{} }
func (m *DragonTigerWinInfo) String() string { return proto.CompactTextString(m) }
func (*DragonTigerWinInfo) ProtoMessage()    {}
func (*DragonTigerWinInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{364}
}

func (m *DragonTigerWinInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DragonTigerWinInfo.Unmarshal(m, b)
}
func (m *DragonTigerWinInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DragonTigerWinInfo.Marshal(b, m, deterministic)
}
func (m *DragonTigerWinInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DragonTigerWinInfo.Merge(m, src)
}
func (m *DragonTigerWinInfo) XXX_Size() int {
	return xxx_messageInfo_DragonTigerWinInfo.Size(m)
}
func (m *DragonTigerWinInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DragonTigerWinInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DragonTigerWinInfo proto.InternalMessageInfo

func (m *DragonTigerWinInfo) GetWinArea() DragonTigerCardArea {
	if m != nil {
		return m.WinArea
	}
	return DragonTigerCardArea_CardAreaNone
}

func (m *DragonTigerWinInfo) GetWinner() DragonTigerType {
	if m != nil {
		return m.Winner
	}
	return DragonTigerType_TypeNone
}

func (m *DragonTigerWinInfo) GetDragonPoker() *Poker {
	if m != nil {
		return m.DragonPoker
	}
	return nil
}

func (m *DragonTigerWinInfo) GetTigerPoker() *Poker {
	if m != nil {
		return m.TigerPoker
	}
	return nil
}

// 龙虎输赢信息推送
type PushDragonTigerWinInfos struct {
	// 房间Id
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 龙虎输赢情况 近60局(可配置)
	DragonTigerWinInfos  []*DragonTigerWinInfo `protobuf:"bytes,2,rep,name=DragonTigerWinInfos,proto3" json:"DragonTigerWinInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PushDragonTigerWinInfos) Reset()         { *m = PushDragonTigerWinInfos{} }
func (m *PushDragonTigerWinInfos) String() string { return proto.CompactTextString(m) }
func (*PushDragonTigerWinInfos) ProtoMessage()    {}
func (*PushDragonTigerWinInfos) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{365}
}

func (m *PushDragonTigerWinInfos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDragonTigerWinInfos.Unmarshal(m, b)
}
func (m *PushDragonTigerWinInfos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDragonTigerWinInfos.Marshal(b, m, deterministic)
}
func (m *PushDragonTigerWinInfos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDragonTigerWinInfos.Merge(m, src)
}
func (m *PushDragonTigerWinInfos) XXX_Size() int {
	return xxx_messageInfo_PushDragonTigerWinInfos.Size(m)
}
func (m *PushDragonTigerWinInfos) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDragonTigerWinInfos.DiscardUnknown(m)
}

var xxx_messageInfo_PushDragonTigerWinInfos proto.InternalMessageInfo

func (m *PushDragonTigerWinInfos) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushDragonTigerWinInfos) GetDragonTigerWinInfos() []*DragonTigerWinInfo {
	if m != nil {
		return m.DragonTigerWinInfos
	}
	return nil
}

// 龙虎准备阶段初始化推送
type PushDragonTigerReadyInit struct {
	RoomId     string            `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	PlayerInfo []*RoomPlayerInfo `protobuf:"bytes,2,rep,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	// 龙虎总注（玩家下注的总和） - 龙虎和
	DragonTigerAllBet    []int64  `protobuf:"varint,3,rep,packed,name=DragonTigerAllBet,proto3" json:"DragonTigerAllBet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushDragonTigerReadyInit) Reset()         { *m = PushDragonTigerReadyInit{} }
func (m *PushDragonTigerReadyInit) String() string { return proto.CompactTextString(m) }
func (*PushDragonTigerReadyInit) ProtoMessage()    {}
func (*PushDragonTigerReadyInit) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{366}
}

func (m *PushDragonTigerReadyInit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDragonTigerReadyInit.Unmarshal(m, b)
}
func (m *PushDragonTigerReadyInit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDragonTigerReadyInit.Marshal(b, m, deterministic)
}
func (m *PushDragonTigerReadyInit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDragonTigerReadyInit.Merge(m, src)
}
func (m *PushDragonTigerReadyInit) XXX_Size() int {
	return xxx_messageInfo_PushDragonTigerReadyInit.Size(m)
}
func (m *PushDragonTigerReadyInit) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDragonTigerReadyInit.DiscardUnknown(m)
}

var xxx_messageInfo_PushDragonTigerReadyInit proto.InternalMessageInfo

func (m *PushDragonTigerReadyInit) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushDragonTigerReadyInit) GetPlayerInfo() []*RoomPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *PushDragonTigerReadyInit) GetDragonTigerAllBet() []int64 {
	if m != nil {
		return m.DragonTigerAllBet
	}
	return nil
}

// 百家乐准备阶段初始化推送
type PushBaccaratReadyInit struct {
	RoomId     string            `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	PlayerInfo []*RoomPlayerInfo `protobuf:"bytes,2,rep,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	// 百家乐总注（玩家下注的总和）
	BaccaratAllBet       []int64  `protobuf:"varint,3,rep,packed,name=BaccaratAllBet,proto3" json:"BaccaratAllBet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBaccaratReadyInit) Reset()         { *m = PushBaccaratReadyInit{} }
func (m *PushBaccaratReadyInit) String() string { return proto.CompactTextString(m) }
func (*PushBaccaratReadyInit) ProtoMessage()    {}
func (*PushBaccaratReadyInit) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{367}
}

func (m *PushBaccaratReadyInit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBaccaratReadyInit.Unmarshal(m, b)
}
func (m *PushBaccaratReadyInit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBaccaratReadyInit.Marshal(b, m, deterministic)
}
func (m *PushBaccaratReadyInit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBaccaratReadyInit.Merge(m, src)
}
func (m *PushBaccaratReadyInit) XXX_Size() int {
	return xxx_messageInfo_PushBaccaratReadyInit.Size(m)
}
func (m *PushBaccaratReadyInit) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBaccaratReadyInit.DiscardUnknown(m)
}

var xxx_messageInfo_PushBaccaratReadyInit proto.InternalMessageInfo

func (m *PushBaccaratReadyInit) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushBaccaratReadyInit) GetPlayerInfo() []*RoomPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *PushBaccaratReadyInit) GetBaccaratAllBet() []int64 {
	if m != nil {
		return m.BaccaratAllBet
	}
	return nil
}

// 百家乐每局庄家信息的推送
type PushBaccaratBankerMessage struct {
	// 之前的庄家 - 如之前之后相同说明庄家未变，同时原因会为容错
	BeforeBanker string `protobuf:"bytes,1,opt,name=BeforeBanker,proto3" json:"BeforeBanker,omitempty"`
	// 之后的庄家
	AfterBanker string `protobuf:"bytes,2,opt,name=AfterBanker,proto3" json:"AfterBanker,omitempty"`
	// 之前庄家被替换的原因
	ReplaceBankerReason KickBankerReason `protobuf:"varint,3,opt,name=ReplaceBankerReason,proto3,enum=KickBankerReason" json:"ReplaceBankerReason,omitempty"`
	// 庄家目前的连庄回合数
	NowRound int64 `protobuf:"varint,4,opt,name=NowRound,proto3" json:"NowRound,omitempty"`
	// 庄家申请列表
	Bankers []string `protobuf:"bytes,5,rep,name=Bankers,proto3" json:"Bankers,omitempty"`
	// 限庄,闲和
	MaxBetRatio []int64 `protobuf:"varint,6,rep,packed,name=MaxBetRatio,proto3" json:"MaxBetRatio,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,7,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBaccaratBankerMessage) Reset()         { *m = PushBaccaratBankerMessage{} }
func (m *PushBaccaratBankerMessage) String() string { return proto.CompactTextString(m) }
func (*PushBaccaratBankerMessage) ProtoMessage()    {}
func (*PushBaccaratBankerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{368}
}

func (m *PushBaccaratBankerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBaccaratBankerMessage.Unmarshal(m, b)
}
func (m *PushBaccaratBankerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBaccaratBankerMessage.Marshal(b, m, deterministic)
}
func (m *PushBaccaratBankerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBaccaratBankerMessage.Merge(m, src)
}
func (m *PushBaccaratBankerMessage) XXX_Size() int {
	return xxx_messageInfo_PushBaccaratBankerMessage.Size(m)
}
func (m *PushBaccaratBankerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBaccaratBankerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PushBaccaratBankerMessage proto.InternalMessageInfo

func (m *PushBaccaratBankerMessage) GetBeforeBanker() string {
	if m != nil {
		return m.BeforeBanker
	}
	return ""
}

func (m *PushBaccaratBankerMessage) GetAfterBanker() string {
	if m != nil {
		return m.AfterBanker
	}
	return ""
}

func (m *PushBaccaratBankerMessage) GetReplaceBankerReason() KickBankerReason {
	if m != nil {
		return m.ReplaceBankerReason
	}
	return KickBankerReason_KickBankerNone
}

func (m *PushBaccaratBankerMessage) GetNowRound() int64 {
	if m != nil {
		return m.NowRound
	}
	return 0
}

func (m *PushBaccaratBankerMessage) GetBankers() []string {
	if m != nil {
		return m.Bankers
	}
	return nil
}

func (m *PushBaccaratBankerMessage) GetMaxBetRatio() []int64 {
	if m != nil {
		return m.MaxBetRatio
	}
	return nil
}

func (m *PushBaccaratBankerMessage) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 百家乐输赢信息
type BaccaratWinInfo struct {
	// 胜利的牌区
	WinArea BaccaratCardArea `protobuf:"varint,1,opt,name=WinArea,proto3,enum=BaccaratCardArea" json:"WinArea,omitempty"`
	// 获胜的庄闲类型
	Winner BaccaratType `protobuf:"varint,2,opt,name=Winner,proto3,enum=BaccaratType" json:"Winner,omitempty"`
	// 庄牌区
	ZhuangPoker []*Poker `protobuf:"bytes,3,rep,name=ZhuangPoker,proto3" json:"ZhuangPoker,omitempty"`
	// 闲牌区
	XianPoker            []*Poker `protobuf:"bytes,4,rep,name=XianPoker,proto3" json:"XianPoker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaccaratWinInfo) Reset()         { *m = BaccaratWinInfo{} }
func (m *BaccaratWinInfo) String() string { return proto.CompactTextString(m) }
func (*BaccaratWinInfo) ProtoMessage()    {}
func (*BaccaratWinInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{369}
}

func (m *BaccaratWinInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaccaratWinInfo.Unmarshal(m, b)
}
func (m *BaccaratWinInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaccaratWinInfo.Marshal(b, m, deterministic)
}
func (m *BaccaratWinInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaccaratWinInfo.Merge(m, src)
}
func (m *BaccaratWinInfo) XXX_Size() int {
	return xxx_messageInfo_BaccaratWinInfo.Size(m)
}
func (m *BaccaratWinInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BaccaratWinInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BaccaratWinInfo proto.InternalMessageInfo

func (m *BaccaratWinInfo) GetWinArea() BaccaratCardArea {
	if m != nil {
		return m.WinArea
	}
	return BaccaratCardArea_BaccaratAreaNone
}

func (m *BaccaratWinInfo) GetWinner() BaccaratType {
	if m != nil {
		return m.Winner
	}
	return BaccaratType_BaccaratTypeNone
}

func (m *BaccaratWinInfo) GetZhuangPoker() []*Poker {
	if m != nil {
		return m.ZhuangPoker
	}
	return nil
}

func (m *BaccaratWinInfo) GetXianPoker() []*Poker {
	if m != nil {
		return m.XianPoker
	}
	return nil
}

// 百家乐输赢信息推送
type PushBaccaratWinInfos struct {
	// 房间Id
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 百家乐输赢情况 近60局(可配置)
	BaccaratWinInfos     []*BaccaratWinInfo `protobuf:"bytes,2,rep,name=BaccaratWinInfos,proto3" json:"BaccaratWinInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PushBaccaratWinInfos) Reset()         { *m = PushBaccaratWinInfos{} }
func (m *PushBaccaratWinInfos) String() string { return proto.CompactTextString(m) }
func (*PushBaccaratWinInfos) ProtoMessage()    {}
func (*PushBaccaratWinInfos) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{370}
}

func (m *PushBaccaratWinInfos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBaccaratWinInfos.Unmarshal(m, b)
}
func (m *PushBaccaratWinInfos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBaccaratWinInfos.Marshal(b, m, deterministic)
}
func (m *PushBaccaratWinInfos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBaccaratWinInfos.Merge(m, src)
}
func (m *PushBaccaratWinInfos) XXX_Size() int {
	return xxx_messageInfo_PushBaccaratWinInfos.Size(m)
}
func (m *PushBaccaratWinInfos) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBaccaratWinInfos.DiscardUnknown(m)
}

var xxx_messageInfo_PushBaccaratWinInfos proto.InternalMessageInfo

func (m *PushBaccaratWinInfos) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushBaccaratWinInfos) GetBaccaratWinInfos() []*BaccaratWinInfo {
	if m != nil {
		return m.BaccaratWinInfos
	}
	return nil
}

// 百家乐开牌推送
type PushBaccaratPoker struct {
	// 房间Id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 庄牌
	ZhuangPoker []*Poker `protobuf:"bytes,2,rep,name=ZhuangPoker,proto3" json:"ZhuangPoker,omitempty"`
	// 闲牌
	XianPoker            []*Poker `protobuf:"bytes,3,rep,name=XianPoker,proto3" json:"XianPoker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBaccaratPoker) Reset()         { *m = PushBaccaratPoker{} }
func (m *PushBaccaratPoker) String() string { return proto.CompactTextString(m) }
func (*PushBaccaratPoker) ProtoMessage()    {}
func (*PushBaccaratPoker) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{371}
}

func (m *PushBaccaratPoker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBaccaratPoker.Unmarshal(m, b)
}
func (m *PushBaccaratPoker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBaccaratPoker.Marshal(b, m, deterministic)
}
func (m *PushBaccaratPoker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBaccaratPoker.Merge(m, src)
}
func (m *PushBaccaratPoker) XXX_Size() int {
	return xxx_messageInfo_PushBaccaratPoker.Size(m)
}
func (m *PushBaccaratPoker) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBaccaratPoker.DiscardUnknown(m)
}

var xxx_messageInfo_PushBaccaratPoker proto.InternalMessageInfo

func (m *PushBaccaratPoker) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushBaccaratPoker) GetZhuangPoker() []*Poker {
	if m != nil {
		return m.ZhuangPoker
	}
	return nil
}

func (m *PushBaccaratPoker) GetXianPoker() []*Poker {
	if m != nil {
		return m.XianPoker
	}
	return nil
}

// --------------------------------------------------------------------------
// 百家乐下注请求
// --------------------------------------------------------------------------
// 百家乐下注申请
type BaccaratBetRequest struct {
	// 下注的区域
	BetArea BaccaratCardArea `protobuf:"varint,1,opt,name=BetArea,proto3,enum=BaccaratCardArea" json:"BetArea,omitempty"`
	// 下注金额（密等）
	BetBalance           int64    `protobuf:"varint,2,opt,name=BetBalance,proto3" json:"BetBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaccaratBetRequest) Reset()         { *m = BaccaratBetRequest{} }
func (m *BaccaratBetRequest) String() string { return proto.CompactTextString(m) }
func (*BaccaratBetRequest) ProtoMessage()    {}
func (*BaccaratBetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{372}
}

func (m *BaccaratBetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaccaratBetRequest.Unmarshal(m, b)
}
func (m *BaccaratBetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaccaratBetRequest.Marshal(b, m, deterministic)
}
func (m *BaccaratBetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaccaratBetRequest.Merge(m, src)
}
func (m *BaccaratBetRequest) XXX_Size() int {
	return xxx_messageInfo_BaccaratBetRequest.Size(m)
}
func (m *BaccaratBetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BaccaratBetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BaccaratBetRequest proto.InternalMessageInfo

func (m *BaccaratBetRequest) GetBetArea() BaccaratCardArea {
	if m != nil {
		return m.BetArea
	}
	return BaccaratCardArea_BaccaratAreaNone
}

func (m *BaccaratBetRequest) GetBetBalance() int64 {
	if m != nil {
		return m.BetBalance
	}
	return 0
}

// 百家乐下注回复
type BaccaratBetReply struct {
	// 下注是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 房间Id
	RoomId string `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 玩家目前金币数
	PlayerBalance        int64    `protobuf:"varint,3,opt,name=PlayerBalance,proto3" json:"PlayerBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaccaratBetReply) Reset()         { *m = BaccaratBetReply{} }
func (m *BaccaratBetReply) String() string { return proto.CompactTextString(m) }
func (*BaccaratBetReply) ProtoMessage()    {}
func (*BaccaratBetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{373}
}

func (m *BaccaratBetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaccaratBetReply.Unmarshal(m, b)
}
func (m *BaccaratBetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaccaratBetReply.Marshal(b, m, deterministic)
}
func (m *BaccaratBetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaccaratBetReply.Merge(m, src)
}
func (m *BaccaratBetReply) XXX_Size() int {
	return xxx_messageInfo_BaccaratBetReply.Size(m)
}
func (m *BaccaratBetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BaccaratBetReply.DiscardUnknown(m)
}

var xxx_messageInfo_BaccaratBetReply proto.InternalMessageInfo

func (m *BaccaratBetReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *BaccaratBetReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *BaccaratBetReply) GetPlayerBalance() int64 {
	if m != nil {
		return m.PlayerBalance
	}
	return 0
}

// 百家乐玩家下注成功后的推送
type PushBaccaratPlayerBet struct {
	// 总注金额，龙虎和
	AllBet []int64 `protobuf:"varint,1,rep,packed,name=AllBet,proto3" json:"AllBet,omitempty"`
	// 下注的玩家
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 玩家的投注
	PlayerBets []int64 `protobuf:"varint,3,rep,packed,name=PlayerBets,proto3" json:"PlayerBets,omitempty"`
	// 限红，龙虎和
	MaxBetRatio []int64 `protobuf:"varint,4,rep,packed,name=MaxBetRatio,proto3" json:"MaxBetRatio,omitempty"`
	// 房间id
	RoomId string `protobuf:"bytes,5,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 该玩家目前金币数
	PlayerBalance        int64    `protobuf:"varint,6,opt,name=PlayerBalance,proto3" json:"PlayerBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBaccaratPlayerBet) Reset()         { *m = PushBaccaratPlayerBet{} }
func (m *PushBaccaratPlayerBet) String() string { return proto.CompactTextString(m) }
func (*PushBaccaratPlayerBet) ProtoMessage()    {}
func (*PushBaccaratPlayerBet) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{374}
}

func (m *PushBaccaratPlayerBet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBaccaratPlayerBet.Unmarshal(m, b)
}
func (m *PushBaccaratPlayerBet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBaccaratPlayerBet.Marshal(b, m, deterministic)
}
func (m *PushBaccaratPlayerBet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBaccaratPlayerBet.Merge(m, src)
}
func (m *PushBaccaratPlayerBet) XXX_Size() int {
	return xxx_messageInfo_PushBaccaratPlayerBet.Size(m)
}
func (m *PushBaccaratPlayerBet) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBaccaratPlayerBet.DiscardUnknown(m)
}

var xxx_messageInfo_PushBaccaratPlayerBet proto.InternalMessageInfo

func (m *PushBaccaratPlayerBet) GetAllBet() []int64 {
	if m != nil {
		return m.AllBet
	}
	return nil
}

func (m *PushBaccaratPlayerBet) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PushBaccaratPlayerBet) GetPlayerBets() []int64 {
	if m != nil {
		return m.PlayerBets
	}
	return nil
}

func (m *PushBaccaratPlayerBet) GetMaxBetRatio() []int64 {
	if m != nil {
		return m.MaxBetRatio
	}
	return nil
}

func (m *PushBaccaratPlayerBet) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushBaccaratPlayerBet) GetPlayerBalance() int64 {
	if m != nil {
		return m.PlayerBalance
	}
	return 0
}

// --------------------------------------------------------------------------
// 百家乐上庄请求
// --------------------------------------------------------------------------
// 百家乐申请上庄申请
type BaccaratUpBankerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaccaratUpBankerRequest) Reset()         { *m = BaccaratUpBankerRequest{} }
func (m *BaccaratUpBankerRequest) String() string { return proto.CompactTextString(m) }
func (*BaccaratUpBankerRequest) ProtoMessage()    {}
func (*BaccaratUpBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{375}
}

func (m *BaccaratUpBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaccaratUpBankerRequest.Unmarshal(m, b)
}
func (m *BaccaratUpBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaccaratUpBankerRequest.Marshal(b, m, deterministic)
}
func (m *BaccaratUpBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaccaratUpBankerRequest.Merge(m, src)
}
func (m *BaccaratUpBankerRequest) XXX_Size() int {
	return xxx_messageInfo_BaccaratUpBankerRequest.Size(m)
}
func (m *BaccaratUpBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BaccaratUpBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BaccaratUpBankerRequest proto.InternalMessageInfo

// 百家乐申请上庄回复
type BaccaratUpBankerReply struct {
	// 上庄是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 房间Id
	RoomId               string   `protobuf:"bytes,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaccaratUpBankerReply) Reset()         { *m = BaccaratUpBankerReply{} }
func (m *BaccaratUpBankerReply) String() string { return proto.CompactTextString(m) }
func (*BaccaratUpBankerReply) ProtoMessage()    {}
func (*BaccaratUpBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{376}
}

func (m *BaccaratUpBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaccaratUpBankerReply.Unmarshal(m, b)
}
func (m *BaccaratUpBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaccaratUpBankerReply.Marshal(b, m, deterministic)
}
func (m *BaccaratUpBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaccaratUpBankerReply.Merge(m, src)
}
func (m *BaccaratUpBankerReply) XXX_Size() int {
	return xxx_messageInfo_BaccaratUpBankerReply.Size(m)
}
func (m *BaccaratUpBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BaccaratUpBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_BaccaratUpBankerReply proto.InternalMessageInfo

func (m *BaccaratUpBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *BaccaratUpBankerReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// --------------------------------------------------------------------------
// 百家乐下庄请求（庄家下庄|从申请庄家列表退出）
// --------------------------------------------------------------------------
// 百家乐申请下庄申请
type BaccaratDownBankerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaccaratDownBankerRequest) Reset()         { *m = BaccaratDownBankerRequest{} }
func (m *BaccaratDownBankerRequest) String() string { return proto.CompactTextString(m) }
func (*BaccaratDownBankerRequest) ProtoMessage()    {}
func (*BaccaratDownBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{377}
}

func (m *BaccaratDownBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaccaratDownBankerRequest.Unmarshal(m, b)
}
func (m *BaccaratDownBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaccaratDownBankerRequest.Marshal(b, m, deterministic)
}
func (m *BaccaratDownBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaccaratDownBankerRequest.Merge(m, src)
}
func (m *BaccaratDownBankerRequest) XXX_Size() int {
	return xxx_messageInfo_BaccaratDownBankerRequest.Size(m)
}
func (m *BaccaratDownBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BaccaratDownBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BaccaratDownBankerRequest proto.InternalMessageInfo

// 百家乐申请下庄回复
type BaccaratDownBankerReply struct {
	// 上庄是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 房间Id
	RoomId               string   `protobuf:"bytes,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaccaratDownBankerReply) Reset()         { *m = BaccaratDownBankerReply{} }
func (m *BaccaratDownBankerReply) String() string { return proto.CompactTextString(m) }
func (*BaccaratDownBankerReply) ProtoMessage()    {}
func (*BaccaratDownBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{378}
}

func (m *BaccaratDownBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaccaratDownBankerReply.Unmarshal(m, b)
}
func (m *BaccaratDownBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaccaratDownBankerReply.Marshal(b, m, deterministic)
}
func (m *BaccaratDownBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaccaratDownBankerReply.Merge(m, src)
}
func (m *BaccaratDownBankerReply) XXX_Size() int {
	return xxx_messageInfo_BaccaratDownBankerReply.Size(m)
}
func (m *BaccaratDownBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BaccaratDownBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_BaccaratDownBankerReply proto.InternalMessageInfo

func (m *BaccaratDownBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *BaccaratDownBankerReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 百家乐上庄列表变动的推送
type PushBaccaratChangeBankers struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 现在庄家的等待队列
	Bankers              []string `protobuf:"bytes,2,rep,name=Bankers,proto3" json:"Bankers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBaccaratChangeBankers) Reset()         { *m = PushBaccaratChangeBankers{} }
func (m *PushBaccaratChangeBankers) String() string { return proto.CompactTextString(m) }
func (*PushBaccaratChangeBankers) ProtoMessage()    {}
func (*PushBaccaratChangeBankers) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{379}
}

func (m *PushBaccaratChangeBankers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBaccaratChangeBankers.Unmarshal(m, b)
}
func (m *PushBaccaratChangeBankers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBaccaratChangeBankers.Marshal(b, m, deterministic)
}
func (m *PushBaccaratChangeBankers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBaccaratChangeBankers.Merge(m, src)
}
func (m *PushBaccaratChangeBankers) XXX_Size() int {
	return xxx_messageInfo_PushBaccaratChangeBankers.Size(m)
}
func (m *PushBaccaratChangeBankers) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBaccaratChangeBankers.DiscardUnknown(m)
}

var xxx_messageInfo_PushBaccaratChangeBankers proto.InternalMessageInfo

func (m *PushBaccaratChangeBankers) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushBaccaratChangeBankers) GetBankers() []string {
	if m != nil {
		return m.Bankers
	}
	return nil
}

// 百人牛牛操作请求
type HundredBullDoRequest struct {
	// 想要进行的操作
	DoType HundredBullDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=HundredBullDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HundredBullDoRequest) Reset()         { *m = HundredBullDoRequest{} }
func (m *HundredBullDoRequest) String() string { return proto.CompactTextString(m) }
func (*HundredBullDoRequest) ProtoMessage()    {}
func (*HundredBullDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{380}
}

func (m *HundredBullDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullDoRequest.Unmarshal(m, b)
}
func (m *HundredBullDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullDoRequest.Marshal(b, m, deterministic)
}
func (m *HundredBullDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullDoRequest.Merge(m, src)
}
func (m *HundredBullDoRequest) XXX_Size() int {
	return xxx_messageInfo_HundredBullDoRequest.Size(m)
}
func (m *HundredBullDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullDoRequest proto.InternalMessageInfo

func (m *HundredBullDoRequest) GetDoType() HundredBullDoType {
	if m != nil {
		return m.DoType
	}
	return HundredBullDoType_HundredBull_None
}

func (m *HundredBullDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// --------------------------------------------------------------------------
// 百人牛牛推送
// --------------------------------------------------------------------------
// 百人牛牛每局庄家信息的推送
type PushHundredBullBankerMessage struct {
	// 之前的庄家
	BeforeBanker string `protobuf:"bytes,1,opt,name=BeforeBanker,proto3" json:"BeforeBanker,omitempty"`
	// 之后的庄家
	AfterBanker string `protobuf:"bytes,2,opt,name=AfterBanker,proto3" json:"AfterBanker,omitempty"`
	// 之前庄家被替换的原因
	ReplaceBankerReason KickBankerReason `protobuf:"varint,3,opt,name=ReplaceBankerReason,proto3,enum=KickBankerReason" json:"ReplaceBankerReason,omitempty"`
	// 庄家目前的连庄回合数
	NowRound int64 `protobuf:"varint,4,opt,name=NowRound,proto3" json:"NowRound,omitempty"`
	// 庄家申请列表
	Bankers []string `protobuf:"bytes,5,rep,name=Bankers,proto3" json:"Bankers,omitempty"`
	// 限红，天地玄黄X2
	MaxBetRatio []int64 `protobuf:"varint,6,rep,packed,name=MaxBetRatio,proto3" json:"MaxBetRatio,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,7,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushHundredBullBankerMessage) Reset()         { *m = PushHundredBullBankerMessage{} }
func (m *PushHundredBullBankerMessage) String() string { return proto.CompactTextString(m) }
func (*PushHundredBullBankerMessage) ProtoMessage()    {}
func (*PushHundredBullBankerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{381}
}

func (m *PushHundredBullBankerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushHundredBullBankerMessage.Unmarshal(m, b)
}
func (m *PushHundredBullBankerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushHundredBullBankerMessage.Marshal(b, m, deterministic)
}
func (m *PushHundredBullBankerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushHundredBullBankerMessage.Merge(m, src)
}
func (m *PushHundredBullBankerMessage) XXX_Size() int {
	return xxx_messageInfo_PushHundredBullBankerMessage.Size(m)
}
func (m *PushHundredBullBankerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PushHundredBullBankerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PushHundredBullBankerMessage proto.InternalMessageInfo

func (m *PushHundredBullBankerMessage) GetBeforeBanker() string {
	if m != nil {
		return m.BeforeBanker
	}
	return ""
}

func (m *PushHundredBullBankerMessage) GetAfterBanker() string {
	if m != nil {
		return m.AfterBanker
	}
	return ""
}

func (m *PushHundredBullBankerMessage) GetReplaceBankerReason() KickBankerReason {
	if m != nil {
		return m.ReplaceBankerReason
	}
	return KickBankerReason_KickBankerNone
}

func (m *PushHundredBullBankerMessage) GetNowRound() int64 {
	if m != nil {
		return m.NowRound
	}
	return 0
}

func (m *PushHundredBullBankerMessage) GetBankers() []string {
	if m != nil {
		return m.Bankers
	}
	return nil
}

func (m *PushHundredBullBankerMessage) GetMaxBetRatio() []int64 {
	if m != nil {
		return m.MaxBetRatio
	}
	return nil
}

func (m *PushHundredBullBankerMessage) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 百人牛牛单个牌区牌堆
type HundredBullPokerCard struct {
	// 明牌
	PokerPublish *HundredBullPokerPublish `protobuf:"bytes,1,opt,name=PokerPublish,proto3" json:"PokerPublish,omitempty"`
	// 扣牌
	PokerHidden *HundredBullPokerHidden `protobuf:"bytes,2,opt,name=PokerHidden,proto3" json:"PokerHidden,omitempty"`
	// 牌型
	PokerType            CrazyBullPokerType `protobuf:"varint,3,opt,name=PokerType,proto3,enum=CrazyBullPokerType" json:"PokerType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HundredBullPokerCard) Reset()         { *m = HundredBullPokerCard{} }
func (m *HundredBullPokerCard) String() string { return proto.CompactTextString(m) }
func (*HundredBullPokerCard) ProtoMessage()    {}
func (*HundredBullPokerCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{382}
}

func (m *HundredBullPokerCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullPokerCard.Unmarshal(m, b)
}
func (m *HundredBullPokerCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullPokerCard.Marshal(b, m, deterministic)
}
func (m *HundredBullPokerCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullPokerCard.Merge(m, src)
}
func (m *HundredBullPokerCard) XXX_Size() int {
	return xxx_messageInfo_HundredBullPokerCard.Size(m)
}
func (m *HundredBullPokerCard) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullPokerCard.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullPokerCard proto.InternalMessageInfo

func (m *HundredBullPokerCard) GetPokerPublish() *HundredBullPokerPublish {
	if m != nil {
		return m.PokerPublish
	}
	return nil
}

func (m *HundredBullPokerCard) GetPokerHidden() *HundredBullPokerHidden {
	if m != nil {
		return m.PokerHidden
	}
	return nil
}

func (m *HundredBullPokerCard) GetPokerType() CrazyBullPokerType {
	if m != nil {
		return m.PokerType
	}
	return CrazyBullPokerType_CrazyBullCardType_None
}

// 百人牛牛明牌信息
type HundredBullPokerPublish struct {
	PokerList            []*Poker `protobuf:"bytes,1,rep,name=PokerList,proto3" json:"PokerList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HundredBullPokerPublish) Reset()         { *m = HundredBullPokerPublish{} }
func (m *HundredBullPokerPublish) String() string { return proto.CompactTextString(m) }
func (*HundredBullPokerPublish) ProtoMessage()    {}
func (*HundredBullPokerPublish) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{383}
}

func (m *HundredBullPokerPublish) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullPokerPublish.Unmarshal(m, b)
}
func (m *HundredBullPokerPublish) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullPokerPublish.Marshal(b, m, deterministic)
}
func (m *HundredBullPokerPublish) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullPokerPublish.Merge(m, src)
}
func (m *HundredBullPokerPublish) XXX_Size() int {
	return xxx_messageInfo_HundredBullPokerPublish.Size(m)
}
func (m *HundredBullPokerPublish) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullPokerPublish.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullPokerPublish proto.InternalMessageInfo

func (m *HundredBullPokerPublish) GetPokerList() []*Poker {
	if m != nil {
		return m.PokerList
	}
	return nil
}

// 百人牛牛扣牌信息（翻牌）
type HundredBullPokerHidden struct {
	PokerList            []*Poker `protobuf:"bytes,1,rep,name=PokerList,proto3" json:"PokerList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HundredBullPokerHidden) Reset()         { *m = HundredBullPokerHidden{} }
func (m *HundredBullPokerHidden) String() string { return proto.CompactTextString(m) }
func (*HundredBullPokerHidden) ProtoMessage()    {}
func (*HundredBullPokerHidden) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{384}
}

func (m *HundredBullPokerHidden) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullPokerHidden.Unmarshal(m, b)
}
func (m *HundredBullPokerHidden) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullPokerHidden.Marshal(b, m, deterministic)
}
func (m *HundredBullPokerHidden) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullPokerHidden.Merge(m, src)
}
func (m *HundredBullPokerHidden) XXX_Size() int {
	return xxx_messageInfo_HundredBullPokerHidden.Size(m)
}
func (m *HundredBullPokerHidden) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullPokerHidden.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullPokerHidden proto.InternalMessageInfo

func (m *HundredBullPokerHidden) GetPokerList() []*Poker {
	if m != nil {
		return m.PokerList
	}
	return nil
}

// 百人牛牛开牌输赢结果
type HundredBullWinInfo struct {
	// 天地玄黄的输赢
	AllAreaWin []int64 `protobuf:"varint,1,rep,packed,name=AllAreaWin,proto3" json:"AllAreaWin,omitempty"`
	// 天地玄黄的赔率
	AllAreaOdds []int64 `protobuf:"varint,2,rep,packed,name=AllAreaOdds,proto3" json:"AllAreaOdds,omitempty"`
	// 天地玄黄的牌型
	AllAreaType []int64 `protobuf:"varint,3,rep,packed,name=AllAreaType,proto3" json:"AllAreaType,omitempty"`
	// 房间回合数
	RoomRound int64 `protobuf:"varint,4,opt,name=RoomRound,proto3" json:"RoomRound,omitempty"`
	// 当前时间
	Time                 int64    `protobuf:"varint,5,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HundredBullWinInfo) Reset()         { *m = HundredBullWinInfo{} }
func (m *HundredBullWinInfo) String() string { return proto.CompactTextString(m) }
func (*HundredBullWinInfo) ProtoMessage()    {}
func (*HundredBullWinInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{385}
}

func (m *HundredBullWinInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullWinInfo.Unmarshal(m, b)
}
func (m *HundredBullWinInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullWinInfo.Marshal(b, m, deterministic)
}
func (m *HundredBullWinInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullWinInfo.Merge(m, src)
}
func (m *HundredBullWinInfo) XXX_Size() int {
	return xxx_messageInfo_HundredBullWinInfo.Size(m)
}
func (m *HundredBullWinInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullWinInfo.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullWinInfo proto.InternalMessageInfo

func (m *HundredBullWinInfo) GetAllAreaWin() []int64 {
	if m != nil {
		return m.AllAreaWin
	}
	return nil
}

func (m *HundredBullWinInfo) GetAllAreaOdds() []int64 {
	if m != nil {
		return m.AllAreaOdds
	}
	return nil
}

func (m *HundredBullWinInfo) GetAllAreaType() []int64 {
	if m != nil {
		return m.AllAreaType
	}
	return nil
}

func (m *HundredBullWinInfo) GetRoomRound() int64 {
	if m != nil {
		return m.RoomRound
	}
	return 0
}

func (m *HundredBullWinInfo) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

// 百人牛牛定位状态推送
type PushHundredBullLocation struct {
	// 状态变动信息
	RoomStateChange *PushRoomStateChange `protobuf:"bytes,1,opt,name=RoomStateChange,proto3" json:"RoomStateChange,omitempty"`
	// 发牌位置
	Index HundredBullCardArea `protobuf:"varint,2,opt,name=Index,proto3,enum=HundredBullCardArea" json:"Index,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,3,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushHundredBullLocation) Reset()         { *m = PushHundredBullLocation{} }
func (m *PushHundredBullLocation) String() string { return proto.CompactTextString(m) }
func (*PushHundredBullLocation) ProtoMessage()    {}
func (*PushHundredBullLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{386}
}

func (m *PushHundredBullLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushHundredBullLocation.Unmarshal(m, b)
}
func (m *PushHundredBullLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushHundredBullLocation.Marshal(b, m, deterministic)
}
func (m *PushHundredBullLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushHundredBullLocation.Merge(m, src)
}
func (m *PushHundredBullLocation) XXX_Size() int {
	return xxx_messageInfo_PushHundredBullLocation.Size(m)
}
func (m *PushHundredBullLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_PushHundredBullLocation.DiscardUnknown(m)
}

var xxx_messageInfo_PushHundredBullLocation proto.InternalMessageInfo

func (m *PushHundredBullLocation) GetRoomStateChange() *PushRoomStateChange {
	if m != nil {
		return m.RoomStateChange
	}
	return nil
}

func (m *PushHundredBullLocation) GetIndex() HundredBullCardArea {
	if m != nil {
		return m.Index
	}
	return HundredBullCardArea_AreaNone
}

func (m *PushHundredBullLocation) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 百人牛牛发牌状态推送
type PushHundredBullSendPoker struct {
	// 状态变动信息
	RoomStateChange *PushRoomStateChange `protobuf:"bytes,1,opt,name=RoomStateChange,proto3" json:"RoomStateChange,omitempty"`
	// 明牌信息
	PokerList []*HundredBullPokerCard `protobuf:"bytes,2,rep,name=PokerList,proto3" json:"PokerList,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,3,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushHundredBullSendPoker) Reset()         { *m = PushHundredBullSendPoker{} }
func (m *PushHundredBullSendPoker) String() string { return proto.CompactTextString(m) }
func (*PushHundredBullSendPoker) ProtoMessage()    {}
func (*PushHundredBullSendPoker) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{387}
}

func (m *PushHundredBullSendPoker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushHundredBullSendPoker.Unmarshal(m, b)
}
func (m *PushHundredBullSendPoker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushHundredBullSendPoker.Marshal(b, m, deterministic)
}
func (m *PushHundredBullSendPoker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushHundredBullSendPoker.Merge(m, src)
}
func (m *PushHundredBullSendPoker) XXX_Size() int {
	return xxx_messageInfo_PushHundredBullSendPoker.Size(m)
}
func (m *PushHundredBullSendPoker) XXX_DiscardUnknown() {
	xxx_messageInfo_PushHundredBullSendPoker.DiscardUnknown(m)
}

var xxx_messageInfo_PushHundredBullSendPoker proto.InternalMessageInfo

func (m *PushHundredBullSendPoker) GetRoomStateChange() *PushRoomStateChange {
	if m != nil {
		return m.RoomStateChange
	}
	return nil
}

func (m *PushHundredBullSendPoker) GetPokerList() []*HundredBullPokerCard {
	if m != nil {
		return m.PokerList
	}
	return nil
}

func (m *PushHundredBullSendPoker) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 百人牛牛开牌结算状态推送
type PushHundredBullSettle struct {
	// 状态变动信息
	RoomStateChange *PushRoomStateChange `protobuf:"bytes,1,opt,name=RoomStateChange,proto3" json:"RoomStateChange,omitempty"`
	// 开牌结果
	PokerList []*HundredBullPokerCard `protobuf:"bytes,2,rep,name=PokerList,proto3" json:"PokerList,omitempty"`
	// 庄闲输赢结果
	WinInfos *HundredBullWinInfo `protobuf:"bytes,3,opt,name=WinInfos,proto3" json:"WinInfos,omitempty"`
	// 房间中玩家信息
	RoomPlayerInfo []*RoomPlayerInfo `protobuf:"bytes,4,rep,name=RoomPlayerInfo,proto3" json:"RoomPlayerInfo,omitempty"`
	// 房间id
	RoomId string `protobuf:"bytes,5,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 百人场此局庄家输赢
	BankerWinOrLose      int64    `protobuf:"varint,6,opt,name=BankerWinOrLose,proto3" json:"BankerWinOrLose,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushHundredBullSettle) Reset()         { *m = PushHundredBullSettle{} }
func (m *PushHundredBullSettle) String() string { return proto.CompactTextString(m) }
func (*PushHundredBullSettle) ProtoMessage()    {}
func (*PushHundredBullSettle) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{388}
}

func (m *PushHundredBullSettle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushHundredBullSettle.Unmarshal(m, b)
}
func (m *PushHundredBullSettle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushHundredBullSettle.Marshal(b, m, deterministic)
}
func (m *PushHundredBullSettle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushHundredBullSettle.Merge(m, src)
}
func (m *PushHundredBullSettle) XXX_Size() int {
	return xxx_messageInfo_PushHundredBullSettle.Size(m)
}
func (m *PushHundredBullSettle) XXX_DiscardUnknown() {
	xxx_messageInfo_PushHundredBullSettle.DiscardUnknown(m)
}

var xxx_messageInfo_PushHundredBullSettle proto.InternalMessageInfo

func (m *PushHundredBullSettle) GetRoomStateChange() *PushRoomStateChange {
	if m != nil {
		return m.RoomStateChange
	}
	return nil
}

func (m *PushHundredBullSettle) GetPokerList() []*HundredBullPokerCard {
	if m != nil {
		return m.PokerList
	}
	return nil
}

func (m *PushHundredBullSettle) GetWinInfos() *HundredBullWinInfo {
	if m != nil {
		return m.WinInfos
	}
	return nil
}

func (m *PushHundredBullSettle) GetRoomPlayerInfo() []*RoomPlayerInfo {
	if m != nil {
		return m.RoomPlayerInfo
	}
	return nil
}

func (m *PushHundredBullSettle) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushHundredBullSettle) GetBankerWinOrLose() int64 {
	if m != nil {
		return m.BankerWinOrLose
	}
	return 0
}

// 百人牛牛输赢信息推送
type HundredBullWinRecord struct {
	// 房间Id
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 百人牛牛输赢情况 近60局(可配置)
	HundredBullWinInfos  []*HundredBullWinInfo `protobuf:"bytes,2,rep,name=HundredBullWinInfos,proto3" json:"HundredBullWinInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HundredBullWinRecord) Reset()         { *m = HundredBullWinRecord{} }
func (m *HundredBullWinRecord) String() string { return proto.CompactTextString(m) }
func (*HundredBullWinRecord) ProtoMessage()    {}
func (*HundredBullWinRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{389}
}

func (m *HundredBullWinRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullWinRecord.Unmarshal(m, b)
}
func (m *HundredBullWinRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullWinRecord.Marshal(b, m, deterministic)
}
func (m *HundredBullWinRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullWinRecord.Merge(m, src)
}
func (m *HundredBullWinRecord) XXX_Size() int {
	return xxx_messageInfo_HundredBullWinRecord.Size(m)
}
func (m *HundredBullWinRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullWinRecord.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullWinRecord proto.InternalMessageInfo

func (m *HundredBullWinRecord) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *HundredBullWinRecord) GetHundredBullWinInfos() []*HundredBullWinInfo {
	if m != nil {
		return m.HundredBullWinInfos
	}
	return nil
}

// 百人牛牛上庄列表变动的推送
type PushHundredBullChangeBankers struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 现在庄家的等待队列
	Bankers              []string `protobuf:"bytes,2,rep,name=Bankers,proto3" json:"Bankers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushHundredBullChangeBankers) Reset()         { *m = PushHundredBullChangeBankers{} }
func (m *PushHundredBullChangeBankers) String() string { return proto.CompactTextString(m) }
func (*PushHundredBullChangeBankers) ProtoMessage()    {}
func (*PushHundredBullChangeBankers) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{390}
}

func (m *PushHundredBullChangeBankers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushHundredBullChangeBankers.Unmarshal(m, b)
}
func (m *PushHundredBullChangeBankers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushHundredBullChangeBankers.Marshal(b, m, deterministic)
}
func (m *PushHundredBullChangeBankers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushHundredBullChangeBankers.Merge(m, src)
}
func (m *PushHundredBullChangeBankers) XXX_Size() int {
	return xxx_messageInfo_PushHundredBullChangeBankers.Size(m)
}
func (m *PushHundredBullChangeBankers) XXX_DiscardUnknown() {
	xxx_messageInfo_PushHundredBullChangeBankers.DiscardUnknown(m)
}

var xxx_messageInfo_PushHundredBullChangeBankers proto.InternalMessageInfo

func (m *PushHundredBullChangeBankers) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushHundredBullChangeBankers) GetBankers() []string {
	if m != nil {
		return m.Bankers
	}
	return nil
}

// 百人牛牛下注申请
type HundredBullBetRequest struct {
	// 下注的区域
	BetArea HundredBullBetArea `protobuf:"varint,1,opt,name=BetArea,proto3,enum=HundredBullBetArea" json:"BetArea,omitempty"`
	// 下注金额（密等）
	BetBalance           int64    `protobuf:"varint,2,opt,name=BetBalance,proto3" json:"BetBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HundredBullBetRequest) Reset()         { *m = HundredBullBetRequest{} }
func (m *HundredBullBetRequest) String() string { return proto.CompactTextString(m) }
func (*HundredBullBetRequest) ProtoMessage()    {}
func (*HundredBullBetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{391}
}

func (m *HundredBullBetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullBetRequest.Unmarshal(m, b)
}
func (m *HundredBullBetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullBetRequest.Marshal(b, m, deterministic)
}
func (m *HundredBullBetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullBetRequest.Merge(m, src)
}
func (m *HundredBullBetRequest) XXX_Size() int {
	return xxx_messageInfo_HundredBullBetRequest.Size(m)
}
func (m *HundredBullBetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullBetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullBetRequest proto.InternalMessageInfo

func (m *HundredBullBetRequest) GetBetArea() HundredBullBetArea {
	if m != nil {
		return m.BetArea
	}
	return HundredBullBetArea_Sky
}

func (m *HundredBullBetRequest) GetBetBalance() int64 {
	if m != nil {
		return m.BetBalance
	}
	return 0
}

// 百人牛牛下注回复
type HundredBullBetReply struct {
	// 下注是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HundredBullBetReply) Reset()         { *m = HundredBullBetReply{} }
func (m *HundredBullBetReply) String() string { return proto.CompactTextString(m) }
func (*HundredBullBetReply) ProtoMessage()    {}
func (*HundredBullBetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{392}
}

func (m *HundredBullBetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullBetReply.Unmarshal(m, b)
}
func (m *HundredBullBetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullBetReply.Marshal(b, m, deterministic)
}
func (m *HundredBullBetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullBetReply.Merge(m, src)
}
func (m *HundredBullBetReply) XXX_Size() int {
	return xxx_messageInfo_HundredBullBetReply.Size(m)
}
func (m *HundredBullBetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullBetReply.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullBetReply proto.InternalMessageInfo

func (m *HundredBullBetReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *HundredBullBetReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 百人牛牛玩家下注成功后的推送(给其他玩家的推送）
type PushHundredBullPlayerBet struct {
	// 各区域总投注信息
	AllBet []int64 `protobuf:"varint,1,rep,packed,name=AllBet,proto3" json:"AllBet,omitempty"`
	// 下注的玩家id
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 玩家的各区域投注信息
	PlayerBet []int64 `protobuf:"varint,3,rep,packed,name=PlayerBet,proto3" json:"PlayerBet,omitempty"`
	// 限红
	MaxBetRatio []int64 `protobuf:"varint,4,rep,packed,name=MaxBetRatio,proto3" json:"MaxBetRatio,omitempty"`
	// 房间id
	RoomId string `protobuf:"bytes,5,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 玩家下注区域
	BetArea HundredBullBetArea `protobuf:"varint,6,opt,name=BetArea,proto3,enum=HundredBullBetArea" json:"BetArea,omitempty"`
	// 玩家当前下注金额
	CurrentBet int64 `protobuf:"varint,7,opt,name=CurrentBet,proto3" json:"CurrentBet,omitempty"`
	// 玩家下注后余额
	Playerbalance        int64    `protobuf:"varint,8,opt,name=Playerbalance,proto3" json:"Playerbalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushHundredBullPlayerBet) Reset()         { *m = PushHundredBullPlayerBet{} }
func (m *PushHundredBullPlayerBet) String() string { return proto.CompactTextString(m) }
func (*PushHundredBullPlayerBet) ProtoMessage()    {}
func (*PushHundredBullPlayerBet) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{393}
}

func (m *PushHundredBullPlayerBet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushHundredBullPlayerBet.Unmarshal(m, b)
}
func (m *PushHundredBullPlayerBet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushHundredBullPlayerBet.Marshal(b, m, deterministic)
}
func (m *PushHundredBullPlayerBet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushHundredBullPlayerBet.Merge(m, src)
}
func (m *PushHundredBullPlayerBet) XXX_Size() int {
	return xxx_messageInfo_PushHundredBullPlayerBet.Size(m)
}
func (m *PushHundredBullPlayerBet) XXX_DiscardUnknown() {
	xxx_messageInfo_PushHundredBullPlayerBet.DiscardUnknown(m)
}

var xxx_messageInfo_PushHundredBullPlayerBet proto.InternalMessageInfo

func (m *PushHundredBullPlayerBet) GetAllBet() []int64 {
	if m != nil {
		return m.AllBet
	}
	return nil
}

func (m *PushHundredBullPlayerBet) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PushHundredBullPlayerBet) GetPlayerBet() []int64 {
	if m != nil {
		return m.PlayerBet
	}
	return nil
}

func (m *PushHundredBullPlayerBet) GetMaxBetRatio() []int64 {
	if m != nil {
		return m.MaxBetRatio
	}
	return nil
}

func (m *PushHundredBullPlayerBet) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushHundredBullPlayerBet) GetBetArea() HundredBullBetArea {
	if m != nil {
		return m.BetArea
	}
	return HundredBullBetArea_Sky
}

func (m *PushHundredBullPlayerBet) GetCurrentBet() int64 {
	if m != nil {
		return m.CurrentBet
	}
	return 0
}

func (m *PushHundredBullPlayerBet) GetPlayerbalance() int64 {
	if m != nil {
		return m.Playerbalance
	}
	return 0
}

// 百人牛牛玩家下注成功推送数组
type PushHundredBullPlayerBets struct {
	// 消息数组
	PushBets []*PushHundredBullPlayerBet `protobuf:"bytes,1,rep,name=PushBets,proto3" json:"PushBets,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushHundredBullPlayerBets) Reset()         { *m = PushHundredBullPlayerBets{} }
func (m *PushHundredBullPlayerBets) String() string { return proto.CompactTextString(m) }
func (*PushHundredBullPlayerBets) ProtoMessage()    {}
func (*PushHundredBullPlayerBets) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{394}
}

func (m *PushHundredBullPlayerBets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushHundredBullPlayerBets.Unmarshal(m, b)
}
func (m *PushHundredBullPlayerBets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushHundredBullPlayerBets.Marshal(b, m, deterministic)
}
func (m *PushHundredBullPlayerBets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushHundredBullPlayerBets.Merge(m, src)
}
func (m *PushHundredBullPlayerBets) XXX_Size() int {
	return xxx_messageInfo_PushHundredBullPlayerBets.Size(m)
}
func (m *PushHundredBullPlayerBets) XXX_DiscardUnknown() {
	xxx_messageInfo_PushHundredBullPlayerBets.DiscardUnknown(m)
}

var xxx_messageInfo_PushHundredBullPlayerBets proto.InternalMessageInfo

func (m *PushHundredBullPlayerBets) GetPushBets() []*PushHundredBullPlayerBet {
	if m != nil {
		return m.PushBets
	}
	return nil
}

func (m *PushHundredBullPlayerBets) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// --------------------------------------------------------------------------
// 百人牛牛上庄请求
// --------------------------------------------------------------------------
// 百人牛牛申请上庄申请
type HundredBullUpBankerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HundredBullUpBankerRequest) Reset()         { *m = HundredBullUpBankerRequest{} }
func (m *HundredBullUpBankerRequest) String() string { return proto.CompactTextString(m) }
func (*HundredBullUpBankerRequest) ProtoMessage()    {}
func (*HundredBullUpBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{395}
}

func (m *HundredBullUpBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullUpBankerRequest.Unmarshal(m, b)
}
func (m *HundredBullUpBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullUpBankerRequest.Marshal(b, m, deterministic)
}
func (m *HundredBullUpBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullUpBankerRequest.Merge(m, src)
}
func (m *HundredBullUpBankerRequest) XXX_Size() int {
	return xxx_messageInfo_HundredBullUpBankerRequest.Size(m)
}
func (m *HundredBullUpBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullUpBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullUpBankerRequest proto.InternalMessageInfo

// 百人牛牛申请上庄回复
type HundredBullUpBankerReply struct {
	// 上庄是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HundredBullUpBankerReply) Reset()         { *m = HundredBullUpBankerReply{} }
func (m *HundredBullUpBankerReply) String() string { return proto.CompactTextString(m) }
func (*HundredBullUpBankerReply) ProtoMessage()    {}
func (*HundredBullUpBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{396}
}

func (m *HundredBullUpBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullUpBankerReply.Unmarshal(m, b)
}
func (m *HundredBullUpBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullUpBankerReply.Marshal(b, m, deterministic)
}
func (m *HundredBullUpBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullUpBankerReply.Merge(m, src)
}
func (m *HundredBullUpBankerReply) XXX_Size() int {
	return xxx_messageInfo_HundredBullUpBankerReply.Size(m)
}
func (m *HundredBullUpBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullUpBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullUpBankerReply proto.InternalMessageInfo

func (m *HundredBullUpBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// --------------------------------------------------------------------------
// 百人牛牛下庄请求（庄家下庄|从申请庄家列表退出|只能在坐庄前下庄）
// --------------------------------------------------------------------------
// 百人牛牛申请下庄申请
type HundredBullDownBankerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HundredBullDownBankerRequest) Reset()         { *m = HundredBullDownBankerRequest{} }
func (m *HundredBullDownBankerRequest) String() string { return proto.CompactTextString(m) }
func (*HundredBullDownBankerRequest) ProtoMessage()    {}
func (*HundredBullDownBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{397}
}

func (m *HundredBullDownBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullDownBankerRequest.Unmarshal(m, b)
}
func (m *HundredBullDownBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullDownBankerRequest.Marshal(b, m, deterministic)
}
func (m *HundredBullDownBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullDownBankerRequest.Merge(m, src)
}
func (m *HundredBullDownBankerRequest) XXX_Size() int {
	return xxx_messageInfo_HundredBullDownBankerRequest.Size(m)
}
func (m *HundredBullDownBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullDownBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullDownBankerRequest proto.InternalMessageInfo

// 百人牛牛申请下庄回复
type HundredBullDownBankerReply struct {
	// 下庄是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HundredBullDownBankerReply) Reset()         { *m = HundredBullDownBankerReply{} }
func (m *HundredBullDownBankerReply) String() string { return proto.CompactTextString(m) }
func (*HundredBullDownBankerReply) ProtoMessage()    {}
func (*HundredBullDownBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{398}
}

func (m *HundredBullDownBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullDownBankerReply.Unmarshal(m, b)
}
func (m *HundredBullDownBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullDownBankerReply.Marshal(b, m, deterministic)
}
func (m *HundredBullDownBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullDownBankerReply.Merge(m, src)
}
func (m *HundredBullDownBankerReply) XXX_Size() int {
	return xxx_messageInfo_HundredBullDownBankerReply.Size(m)
}
func (m *HundredBullDownBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullDownBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullDownBankerReply proto.InternalMessageInfo

func (m *HundredBullDownBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// --------------------------------------------------------------------------
// 百人牛牛其他请求
// --------------------------------------------------------------------------
// 百人牛牛获取房间历史输赢记录申请
type HundredBullGetRoomWinLogRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HundredBullGetRoomWinLogRequest) Reset()         { *m = HundredBullGetRoomWinLogRequest{} }
func (m *HundredBullGetRoomWinLogRequest) String() string { return proto.CompactTextString(m) }
func (*HundredBullGetRoomWinLogRequest) ProtoMessage()    {}
func (*HundredBullGetRoomWinLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{399}
}

func (m *HundredBullGetRoomWinLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullGetRoomWinLogRequest.Unmarshal(m, b)
}
func (m *HundredBullGetRoomWinLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullGetRoomWinLogRequest.Marshal(b, m, deterministic)
}
func (m *HundredBullGetRoomWinLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullGetRoomWinLogRequest.Merge(m, src)
}
func (m *HundredBullGetRoomWinLogRequest) XXX_Size() int {
	return xxx_messageInfo_HundredBullGetRoomWinLogRequest.Size(m)
}
func (m *HundredBullGetRoomWinLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullGetRoomWinLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullGetRoomWinLogRequest proto.InternalMessageInfo

// 百人牛牛请求获取房间历史输赢记录回复
type HundredBullGetRoomWinLogReply struct {
	// 是否成功
	IsSuccess            bool                  `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	WinRecord            *HundredBullWinRecord `protobuf:"bytes,2,opt,name=WinRecord,proto3" json:"WinRecord,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HundredBullGetRoomWinLogReply) Reset()         { *m = HundredBullGetRoomWinLogReply{} }
func (m *HundredBullGetRoomWinLogReply) String() string { return proto.CompactTextString(m) }
func (*HundredBullGetRoomWinLogReply) ProtoMessage()    {}
func (*HundredBullGetRoomWinLogReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{400}
}

func (m *HundredBullGetRoomWinLogReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullGetRoomWinLogReply.Unmarshal(m, b)
}
func (m *HundredBullGetRoomWinLogReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullGetRoomWinLogReply.Marshal(b, m, deterministic)
}
func (m *HundredBullGetRoomWinLogReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullGetRoomWinLogReply.Merge(m, src)
}
func (m *HundredBullGetRoomWinLogReply) XXX_Size() int {
	return xxx_messageInfo_HundredBullGetRoomWinLogReply.Size(m)
}
func (m *HundredBullGetRoomWinLogReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullGetRoomWinLogReply.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullGetRoomWinLogReply proto.InternalMessageInfo

func (m *HundredBullGetRoomWinLogReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *HundredBullGetRoomWinLogReply) GetWinRecord() *HundredBullWinRecord {
	if m != nil {
		return m.WinRecord
	}
	return nil
}

// 百人牛牛获取房间玩家列表
type HundredBullGetRoomPlayersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HundredBullGetRoomPlayersRequest) Reset()         { *m = HundredBullGetRoomPlayersRequest{} }
func (m *HundredBullGetRoomPlayersRequest) String() string { return proto.CompactTextString(m) }
func (*HundredBullGetRoomPlayersRequest) ProtoMessage()    {}
func (*HundredBullGetRoomPlayersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{401}
}

func (m *HundredBullGetRoomPlayersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullGetRoomPlayersRequest.Unmarshal(m, b)
}
func (m *HundredBullGetRoomPlayersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullGetRoomPlayersRequest.Marshal(b, m, deterministic)
}
func (m *HundredBullGetRoomPlayersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullGetRoomPlayersRequest.Merge(m, src)
}
func (m *HundredBullGetRoomPlayersRequest) XXX_Size() int {
	return xxx_messageInfo_HundredBullGetRoomPlayersRequest.Size(m)
}
func (m *HundredBullGetRoomPlayersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullGetRoomPlayersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullGetRoomPlayersRequest proto.InternalMessageInfo

// 百人牛牛获取房间玩家列表回复
type HundredBullGetRoomPlayersReply struct {
	// 是否成功
	IsSuccess            bool              `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	PlayerInfo           []*RoomPlayerInfo `protobuf:"bytes,2,rep,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HundredBullGetRoomPlayersReply) Reset()         { *m = HundredBullGetRoomPlayersReply{} }
func (m *HundredBullGetRoomPlayersReply) String() string { return proto.CompactTextString(m) }
func (*HundredBullGetRoomPlayersReply) ProtoMessage()    {}
func (*HundredBullGetRoomPlayersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{402}
}

func (m *HundredBullGetRoomPlayersReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HundredBullGetRoomPlayersReply.Unmarshal(m, b)
}
func (m *HundredBullGetRoomPlayersReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HundredBullGetRoomPlayersReply.Marshal(b, m, deterministic)
}
func (m *HundredBullGetRoomPlayersReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HundredBullGetRoomPlayersReply.Merge(m, src)
}
func (m *HundredBullGetRoomPlayersReply) XXX_Size() int {
	return xxx_messageInfo_HundredBullGetRoomPlayersReply.Size(m)
}
func (m *HundredBullGetRoomPlayersReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HundredBullGetRoomPlayersReply.DiscardUnknown(m)
}

var xxx_messageInfo_HundredBullGetRoomPlayersReply proto.InternalMessageInfo

func (m *HundredBullGetRoomPlayersReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *HundredBullGetRoomPlayersReply) GetPlayerInfo() []*RoomPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

// 推筒子操作请求
type PushBobbinDoRequest struct {
	// 想要进行的操作
	DoType PushBobbinDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=PushBobbinDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBobbinDoRequest) Reset()         { *m = PushBobbinDoRequest{} }
func (m *PushBobbinDoRequest) String() string { return proto.CompactTextString(m) }
func (*PushBobbinDoRequest) ProtoMessage()    {}
func (*PushBobbinDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{403}
}

func (m *PushBobbinDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinDoRequest.Unmarshal(m, b)
}
func (m *PushBobbinDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinDoRequest.Marshal(b, m, deterministic)
}
func (m *PushBobbinDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinDoRequest.Merge(m, src)
}
func (m *PushBobbinDoRequest) XXX_Size() int {
	return xxx_messageInfo_PushBobbinDoRequest.Size(m)
}
func (m *PushBobbinDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinDoRequest proto.InternalMessageInfo

func (m *PushBobbinDoRequest) GetDoType() PushBobbinDoType {
	if m != nil {
		return m.DoType
	}
	return PushBobbinDoType_PushBobbin_None
}

func (m *PushBobbinDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// --------------------------------------------------------------------------
// 推筒子推送
// --------------------------------------------------------------------------
// 推筒子每局庄家信息的推送
type PushPushBobbinBankerMessage struct {
	// 之前的庄家
	BeforeBanker string `protobuf:"bytes,1,opt,name=BeforeBanker,proto3" json:"BeforeBanker,omitempty"`
	// 之后的庄家
	AfterBanker string `protobuf:"bytes,2,opt,name=AfterBanker,proto3" json:"AfterBanker,omitempty"`
	// 之前庄家被替换的原因
	ReplaceBankerReason KickBankerReason `protobuf:"varint,3,opt,name=ReplaceBankerReason,proto3,enum=KickBankerReason" json:"ReplaceBankerReason,omitempty"`
	// 庄家目前的连庄回合数
	NowRound int64 `protobuf:"varint,4,opt,name=NowRound,proto3" json:"NowRound,omitempty"`
	// 庄家申请列表
	Bankers []string `protobuf:"bytes,5,rep,name=Bankers,proto3" json:"Bankers,omitempty"`
	// 限红，天地玄黄
	MaxBetRatio []int64 `protobuf:"varint,6,rep,packed,name=MaxBetRatio,proto3" json:"MaxBetRatio,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,7,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPushBobbinBankerMessage) Reset()         { *m = PushPushBobbinBankerMessage{} }
func (m *PushPushBobbinBankerMessage) String() string { return proto.CompactTextString(m) }
func (*PushPushBobbinBankerMessage) ProtoMessage()    {}
func (*PushPushBobbinBankerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{404}
}

func (m *PushPushBobbinBankerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPushBobbinBankerMessage.Unmarshal(m, b)
}
func (m *PushPushBobbinBankerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPushBobbinBankerMessage.Marshal(b, m, deterministic)
}
func (m *PushPushBobbinBankerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPushBobbinBankerMessage.Merge(m, src)
}
func (m *PushPushBobbinBankerMessage) XXX_Size() int {
	return xxx_messageInfo_PushPushBobbinBankerMessage.Size(m)
}
func (m *PushPushBobbinBankerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPushBobbinBankerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PushPushBobbinBankerMessage proto.InternalMessageInfo

func (m *PushPushBobbinBankerMessage) GetBeforeBanker() string {
	if m != nil {
		return m.BeforeBanker
	}
	return ""
}

func (m *PushPushBobbinBankerMessage) GetAfterBanker() string {
	if m != nil {
		return m.AfterBanker
	}
	return ""
}

func (m *PushPushBobbinBankerMessage) GetReplaceBankerReason() KickBankerReason {
	if m != nil {
		return m.ReplaceBankerReason
	}
	return KickBankerReason_KickBankerNone
}

func (m *PushPushBobbinBankerMessage) GetNowRound() int64 {
	if m != nil {
		return m.NowRound
	}
	return 0
}

func (m *PushPushBobbinBankerMessage) GetBankers() []string {
	if m != nil {
		return m.Bankers
	}
	return nil
}

func (m *PushPushBobbinBankerMessage) GetMaxBetRatio() []int64 {
	if m != nil {
		return m.MaxBetRatio
	}
	return nil
}

func (m *PushPushBobbinBankerMessage) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 推筒子单个牌区牌堆
type PushBobbinMahjong struct {
	// 牌
	MahjongList []int64 `protobuf:"varint,1,rep,packed,name=MahjongList,proto3" json:"MahjongList,omitempty"`
	// 牌型
	MahjongType          PushBobbinMahjongType `protobuf:"varint,2,opt,name=MahjongType,proto3,enum=PushBobbinMahjongType" json:"MahjongType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PushBobbinMahjong) Reset()         { *m = PushBobbinMahjong{} }
func (m *PushBobbinMahjong) String() string { return proto.CompactTextString(m) }
func (*PushBobbinMahjong) ProtoMessage()    {}
func (*PushBobbinMahjong) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{405}
}

func (m *PushBobbinMahjong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinMahjong.Unmarshal(m, b)
}
func (m *PushBobbinMahjong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinMahjong.Marshal(b, m, deterministic)
}
func (m *PushBobbinMahjong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinMahjong.Merge(m, src)
}
func (m *PushBobbinMahjong) XXX_Size() int {
	return xxx_messageInfo_PushBobbinMahjong.Size(m)
}
func (m *PushBobbinMahjong) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinMahjong.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinMahjong proto.InternalMessageInfo

func (m *PushBobbinMahjong) GetMahjongList() []int64 {
	if m != nil {
		return m.MahjongList
	}
	return nil
}

func (m *PushBobbinMahjong) GetMahjongType() PushBobbinMahjongType {
	if m != nil {
		return m.MahjongType
	}
	return PushBobbinMahjongType_PushBobbinMahjongType_None
}

// 推筒子开牌输赢结果
type PushBobbinWinInfo struct {
	// 天地玄黄的输赢
	AllAreaWin []int64 `protobuf:"varint,1,rep,packed,name=AllAreaWin,proto3" json:"AllAreaWin,omitempty"`
	// 天地玄黄的赔率
	AllAreaOdds []int64 `protobuf:"varint,2,rep,packed,name=AllAreaOdds,proto3" json:"AllAreaOdds,omitempty"`
	// 天地玄黄的牌型
	AllAreaType []PushBobbinMahjongType `protobuf:"varint,3,rep,packed,name=AllAreaType,proto3,enum=PushBobbinMahjongType" json:"AllAreaType,omitempty"`
	// 房间回合数
	RoomRound int64 `protobuf:"varint,4,opt,name=RoomRound,proto3" json:"RoomRound,omitempty"`
	// 当前时间
	Time                 int64    `protobuf:"varint,5,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBobbinWinInfo) Reset()         { *m = PushBobbinWinInfo{} }
func (m *PushBobbinWinInfo) String() string { return proto.CompactTextString(m) }
func (*PushBobbinWinInfo) ProtoMessage()    {}
func (*PushBobbinWinInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{406}
}

func (m *PushBobbinWinInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinWinInfo.Unmarshal(m, b)
}
func (m *PushBobbinWinInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinWinInfo.Marshal(b, m, deterministic)
}
func (m *PushBobbinWinInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinWinInfo.Merge(m, src)
}
func (m *PushBobbinWinInfo) XXX_Size() int {
	return xxx_messageInfo_PushBobbinWinInfo.Size(m)
}
func (m *PushBobbinWinInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinWinInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinWinInfo proto.InternalMessageInfo

func (m *PushBobbinWinInfo) GetAllAreaWin() []int64 {
	if m != nil {
		return m.AllAreaWin
	}
	return nil
}

func (m *PushBobbinWinInfo) GetAllAreaOdds() []int64 {
	if m != nil {
		return m.AllAreaOdds
	}
	return nil
}

func (m *PushBobbinWinInfo) GetAllAreaType() []PushBobbinMahjongType {
	if m != nil {
		return m.AllAreaType
	}
	return nil
}

func (m *PushBobbinWinInfo) GetRoomRound() int64 {
	if m != nil {
		return m.RoomRound
	}
	return 0
}

func (m *PushBobbinWinInfo) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

// 推筒子定位状态推送
type PushPushBobbinLocation struct {
	// 状态变动信息
	RoomStateChange *PushRoomStateChange `protobuf:"bytes,1,opt,name=RoomStateChange,proto3" json:"RoomStateChange,omitempty"`
	// 发牌位置
	Index PushBobbinCardArea `protobuf:"varint,2,opt,name=Index,proto3,enum=PushBobbinCardArea" json:"Index,omitempty"`
	// 骰子点数
	Dice []int64 `protobuf:"varint,3,rep,packed,name=Dice,proto3" json:"Dice,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,4,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPushBobbinLocation) Reset()         { *m = PushPushBobbinLocation{} }
func (m *PushPushBobbinLocation) String() string { return proto.CompactTextString(m) }
func (*PushPushBobbinLocation) ProtoMessage()    {}
func (*PushPushBobbinLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{407}
}

func (m *PushPushBobbinLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPushBobbinLocation.Unmarshal(m, b)
}
func (m *PushPushBobbinLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPushBobbinLocation.Marshal(b, m, deterministic)
}
func (m *PushPushBobbinLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPushBobbinLocation.Merge(m, src)
}
func (m *PushPushBobbinLocation) XXX_Size() int {
	return xxx_messageInfo_PushPushBobbinLocation.Size(m)
}
func (m *PushPushBobbinLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPushBobbinLocation.DiscardUnknown(m)
}

var xxx_messageInfo_PushPushBobbinLocation proto.InternalMessageInfo

func (m *PushPushBobbinLocation) GetRoomStateChange() *PushRoomStateChange {
	if m != nil {
		return m.RoomStateChange
	}
	return nil
}

func (m *PushPushBobbinLocation) GetIndex() PushBobbinCardArea {
	if m != nil {
		return m.Index
	}
	return PushBobbinCardArea_PushBobbinAreaNone
}

func (m *PushPushBobbinLocation) GetDice() []int64 {
	if m != nil {
		return m.Dice
	}
	return nil
}

func (m *PushPushBobbinLocation) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 推筒子发牌状态推送
type PushPushBobbinSendPoker struct {
	// 状态变动信息
	RoomStateChange *PushRoomStateChange `protobuf:"bytes,1,opt,name=RoomStateChange,proto3" json:"RoomStateChange,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPushBobbinSendPoker) Reset()         { *m = PushPushBobbinSendPoker{} }
func (m *PushPushBobbinSendPoker) String() string { return proto.CompactTextString(m) }
func (*PushPushBobbinSendPoker) ProtoMessage()    {}
func (*PushPushBobbinSendPoker) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{408}
}

func (m *PushPushBobbinSendPoker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPushBobbinSendPoker.Unmarshal(m, b)
}
func (m *PushPushBobbinSendPoker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPushBobbinSendPoker.Marshal(b, m, deterministic)
}
func (m *PushPushBobbinSendPoker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPushBobbinSendPoker.Merge(m, src)
}
func (m *PushPushBobbinSendPoker) XXX_Size() int {
	return xxx_messageInfo_PushPushBobbinSendPoker.Size(m)
}
func (m *PushPushBobbinSendPoker) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPushBobbinSendPoker.DiscardUnknown(m)
}

var xxx_messageInfo_PushPushBobbinSendPoker proto.InternalMessageInfo

func (m *PushPushBobbinSendPoker) GetRoomStateChange() *PushRoomStateChange {
	if m != nil {
		return m.RoomStateChange
	}
	return nil
}

func (m *PushPushBobbinSendPoker) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 推筒子开牌结算状态推送
type PushPushBobbinSettle struct {
	// 状态变动信息
	RoomStateChange *PushRoomStateChange `protobuf:"bytes,1,opt,name=RoomStateChange,proto3" json:"RoomStateChange,omitempty"`
	// 开牌结果
	MahjongList []*PushBobbinMahjong `protobuf:"bytes,2,rep,name=MahjongList,proto3" json:"MahjongList,omitempty"`
	// 庄闲输赢结果
	WinInfos *PushBobbinWinInfo `protobuf:"bytes,3,opt,name=WinInfos,proto3" json:"WinInfos,omitempty"`
	// 房间中玩家信息
	RoomPlayerInfo []*RoomPlayerInfo `protobuf:"bytes,4,rep,name=RoomPlayerInfo,proto3" json:"RoomPlayerInfo,omitempty"`
	// 房间id
	RoomId string `protobuf:"bytes,5,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 百人场此局庄家输赢
	BankerWinOrLose      int64    `protobuf:"varint,6,opt,name=BankerWinOrLose,proto3" json:"BankerWinOrLose,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPushBobbinSettle) Reset()         { *m = PushPushBobbinSettle{} }
func (m *PushPushBobbinSettle) String() string { return proto.CompactTextString(m) }
func (*PushPushBobbinSettle) ProtoMessage()    {}
func (*PushPushBobbinSettle) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{409}
}

func (m *PushPushBobbinSettle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPushBobbinSettle.Unmarshal(m, b)
}
func (m *PushPushBobbinSettle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPushBobbinSettle.Marshal(b, m, deterministic)
}
func (m *PushPushBobbinSettle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPushBobbinSettle.Merge(m, src)
}
func (m *PushPushBobbinSettle) XXX_Size() int {
	return xxx_messageInfo_PushPushBobbinSettle.Size(m)
}
func (m *PushPushBobbinSettle) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPushBobbinSettle.DiscardUnknown(m)
}

var xxx_messageInfo_PushPushBobbinSettle proto.InternalMessageInfo

func (m *PushPushBobbinSettle) GetRoomStateChange() *PushRoomStateChange {
	if m != nil {
		return m.RoomStateChange
	}
	return nil
}

func (m *PushPushBobbinSettle) GetMahjongList() []*PushBobbinMahjong {
	if m != nil {
		return m.MahjongList
	}
	return nil
}

func (m *PushPushBobbinSettle) GetWinInfos() *PushBobbinWinInfo {
	if m != nil {
		return m.WinInfos
	}
	return nil
}

func (m *PushPushBobbinSettle) GetRoomPlayerInfo() []*RoomPlayerInfo {
	if m != nil {
		return m.RoomPlayerInfo
	}
	return nil
}

func (m *PushPushBobbinSettle) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushPushBobbinSettle) GetBankerWinOrLose() int64 {
	if m != nil {
		return m.BankerWinOrLose
	}
	return 0
}

// 推筒子输赢信息推送
type PushBobbinWinRecord struct {
	// 房间Id
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 推筒子输赢情况 近50局
	PushBobbinWinInfos   []*PushBobbinWinInfo `protobuf:"bytes,2,rep,name=PushBobbinWinInfos,proto3" json:"PushBobbinWinInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PushBobbinWinRecord) Reset()         { *m = PushBobbinWinRecord{} }
func (m *PushBobbinWinRecord) String() string { return proto.CompactTextString(m) }
func (*PushBobbinWinRecord) ProtoMessage()    {}
func (*PushBobbinWinRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{410}
}

func (m *PushBobbinWinRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinWinRecord.Unmarshal(m, b)
}
func (m *PushBobbinWinRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinWinRecord.Marshal(b, m, deterministic)
}
func (m *PushBobbinWinRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinWinRecord.Merge(m, src)
}
func (m *PushBobbinWinRecord) XXX_Size() int {
	return xxx_messageInfo_PushBobbinWinRecord.Size(m)
}
func (m *PushBobbinWinRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinWinRecord.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinWinRecord proto.InternalMessageInfo

func (m *PushBobbinWinRecord) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushBobbinWinRecord) GetPushBobbinWinInfos() []*PushBobbinWinInfo {
	if m != nil {
		return m.PushBobbinWinInfos
	}
	return nil
}

// 推筒子上庄列表变动的推送
type PushPushBobbinChangeBankers struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 现在庄家的等待队列
	Bankers              []string `protobuf:"bytes,2,rep,name=Bankers,proto3" json:"Bankers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPushBobbinChangeBankers) Reset()         { *m = PushPushBobbinChangeBankers{} }
func (m *PushPushBobbinChangeBankers) String() string { return proto.CompactTextString(m) }
func (*PushPushBobbinChangeBankers) ProtoMessage()    {}
func (*PushPushBobbinChangeBankers) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{411}
}

func (m *PushPushBobbinChangeBankers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPushBobbinChangeBankers.Unmarshal(m, b)
}
func (m *PushPushBobbinChangeBankers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPushBobbinChangeBankers.Marshal(b, m, deterministic)
}
func (m *PushPushBobbinChangeBankers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPushBobbinChangeBankers.Merge(m, src)
}
func (m *PushPushBobbinChangeBankers) XXX_Size() int {
	return xxx_messageInfo_PushPushBobbinChangeBankers.Size(m)
}
func (m *PushPushBobbinChangeBankers) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPushBobbinChangeBankers.DiscardUnknown(m)
}

var xxx_messageInfo_PushPushBobbinChangeBankers proto.InternalMessageInfo

func (m *PushPushBobbinChangeBankers) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushPushBobbinChangeBankers) GetBankers() []string {
	if m != nil {
		return m.Bankers
	}
	return nil
}

// 推筒子下注申请
type PushBobbinBetRequest struct {
	// 下注的区域
	BetArea PushBobbinBetArea `protobuf:"varint,1,opt,name=BetArea,proto3,enum=PushBobbinBetArea" json:"BetArea,omitempty"`
	// 下注金额
	BetBalance           int64    `protobuf:"varint,2,opt,name=BetBalance,proto3" json:"BetBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBobbinBetRequest) Reset()         { *m = PushBobbinBetRequest{} }
func (m *PushBobbinBetRequest) String() string { return proto.CompactTextString(m) }
func (*PushBobbinBetRequest) ProtoMessage()    {}
func (*PushBobbinBetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{412}
}

func (m *PushBobbinBetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinBetRequest.Unmarshal(m, b)
}
func (m *PushBobbinBetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinBetRequest.Marshal(b, m, deterministic)
}
func (m *PushBobbinBetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinBetRequest.Merge(m, src)
}
func (m *PushBobbinBetRequest) XXX_Size() int {
	return xxx_messageInfo_PushBobbinBetRequest.Size(m)
}
func (m *PushBobbinBetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinBetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinBetRequest proto.InternalMessageInfo

func (m *PushBobbinBetRequest) GetBetArea() PushBobbinBetArea {
	if m != nil {
		return m.BetArea
	}
	return PushBobbinBetArea_PushBobbin_Sky
}

func (m *PushBobbinBetRequest) GetBetBalance() int64 {
	if m != nil {
		return m.BetBalance
	}
	return 0
}

// 推筒子下注回复
type PushBobbinBetReply struct {
	// 下注是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBobbinBetReply) Reset()         { *m = PushBobbinBetReply{} }
func (m *PushBobbinBetReply) String() string { return proto.CompactTextString(m) }
func (*PushBobbinBetReply) ProtoMessage()    {}
func (*PushBobbinBetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{413}
}

func (m *PushBobbinBetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinBetReply.Unmarshal(m, b)
}
func (m *PushBobbinBetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinBetReply.Marshal(b, m, deterministic)
}
func (m *PushBobbinBetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinBetReply.Merge(m, src)
}
func (m *PushBobbinBetReply) XXX_Size() int {
	return xxx_messageInfo_PushBobbinBetReply.Size(m)
}
func (m *PushBobbinBetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinBetReply.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinBetReply proto.InternalMessageInfo

func (m *PushBobbinBetReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *PushBobbinBetReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 推筒子玩家下注成功后的推送(给其他玩家的推送）
type PushPushBobbinPlayerBet struct {
	// 各区域总投注信息
	AllBet []int64 `protobuf:"varint,1,rep,packed,name=AllBet,proto3" json:"AllBet,omitempty"`
	// 下注的玩家id
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 玩家的各区域投注信息
	PlayerBet []int64 `protobuf:"varint,3,rep,packed,name=PlayerBet,proto3" json:"PlayerBet,omitempty"`
	// 限红
	MaxBetRatio []int64 `protobuf:"varint,4,rep,packed,name=MaxBetRatio,proto3" json:"MaxBetRatio,omitempty"`
	// 房间id
	RoomId string `protobuf:"bytes,5,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 玩家下注区域
	BetArea PushBobbinBetArea `protobuf:"varint,6,opt,name=BetArea,proto3,enum=PushBobbinBetArea" json:"BetArea,omitempty"`
	// 玩家当前下注金额
	CurrentBet int64 `protobuf:"varint,7,opt,name=CurrentBet,proto3" json:"CurrentBet,omitempty"`
	// 玩家下注后余额
	PlayerBalance        int64    `protobuf:"varint,8,opt,name=PlayerBalance,proto3" json:"PlayerBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPushBobbinPlayerBet) Reset()         { *m = PushPushBobbinPlayerBet{} }
func (m *PushPushBobbinPlayerBet) String() string { return proto.CompactTextString(m) }
func (*PushPushBobbinPlayerBet) ProtoMessage()    {}
func (*PushPushBobbinPlayerBet) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{414}
}

func (m *PushPushBobbinPlayerBet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPushBobbinPlayerBet.Unmarshal(m, b)
}
func (m *PushPushBobbinPlayerBet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPushBobbinPlayerBet.Marshal(b, m, deterministic)
}
func (m *PushPushBobbinPlayerBet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPushBobbinPlayerBet.Merge(m, src)
}
func (m *PushPushBobbinPlayerBet) XXX_Size() int {
	return xxx_messageInfo_PushPushBobbinPlayerBet.Size(m)
}
func (m *PushPushBobbinPlayerBet) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPushBobbinPlayerBet.DiscardUnknown(m)
}

var xxx_messageInfo_PushPushBobbinPlayerBet proto.InternalMessageInfo

func (m *PushPushBobbinPlayerBet) GetAllBet() []int64 {
	if m != nil {
		return m.AllBet
	}
	return nil
}

func (m *PushPushBobbinPlayerBet) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PushPushBobbinPlayerBet) GetPlayerBet() []int64 {
	if m != nil {
		return m.PlayerBet
	}
	return nil
}

func (m *PushPushBobbinPlayerBet) GetMaxBetRatio() []int64 {
	if m != nil {
		return m.MaxBetRatio
	}
	return nil
}

func (m *PushPushBobbinPlayerBet) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushPushBobbinPlayerBet) GetBetArea() PushBobbinBetArea {
	if m != nil {
		return m.BetArea
	}
	return PushBobbinBetArea_PushBobbin_Sky
}

func (m *PushPushBobbinPlayerBet) GetCurrentBet() int64 {
	if m != nil {
		return m.CurrentBet
	}
	return 0
}

func (m *PushPushBobbinPlayerBet) GetPlayerBalance() int64 {
	if m != nil {
		return m.PlayerBalance
	}
	return 0
}

// 推筒子玩家下注成功推送数组
type PushPushBobbinPlayerBets struct {
	// 消息数组
	PushBets []*PushPushBobbinPlayerBet `protobuf:"bytes,1,rep,name=PushBets,proto3" json:"PushBets,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPushBobbinPlayerBets) Reset()         { *m = PushPushBobbinPlayerBets{} }
func (m *PushPushBobbinPlayerBets) String() string { return proto.CompactTextString(m) }
func (*PushPushBobbinPlayerBets) ProtoMessage()    {}
func (*PushPushBobbinPlayerBets) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{415}
}

func (m *PushPushBobbinPlayerBets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPushBobbinPlayerBets.Unmarshal(m, b)
}
func (m *PushPushBobbinPlayerBets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPushBobbinPlayerBets.Marshal(b, m, deterministic)
}
func (m *PushPushBobbinPlayerBets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPushBobbinPlayerBets.Merge(m, src)
}
func (m *PushPushBobbinPlayerBets) XXX_Size() int {
	return xxx_messageInfo_PushPushBobbinPlayerBets.Size(m)
}
func (m *PushPushBobbinPlayerBets) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPushBobbinPlayerBets.DiscardUnknown(m)
}

var xxx_messageInfo_PushPushBobbinPlayerBets proto.InternalMessageInfo

func (m *PushPushBobbinPlayerBets) GetPushBets() []*PushPushBobbinPlayerBet {
	if m != nil {
		return m.PushBets
	}
	return nil
}

func (m *PushPushBobbinPlayerBets) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// --------------------------------------------------------------------------
// 推筒子上庄请求
// --------------------------------------------------------------------------
// 推筒子申请上庄申请
type PushBobbinUpBankerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBobbinUpBankerRequest) Reset()         { *m = PushBobbinUpBankerRequest{} }
func (m *PushBobbinUpBankerRequest) String() string { return proto.CompactTextString(m) }
func (*PushBobbinUpBankerRequest) ProtoMessage()    {}
func (*PushBobbinUpBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{416}
}

func (m *PushBobbinUpBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinUpBankerRequest.Unmarshal(m, b)
}
func (m *PushBobbinUpBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinUpBankerRequest.Marshal(b, m, deterministic)
}
func (m *PushBobbinUpBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinUpBankerRequest.Merge(m, src)
}
func (m *PushBobbinUpBankerRequest) XXX_Size() int {
	return xxx_messageInfo_PushBobbinUpBankerRequest.Size(m)
}
func (m *PushBobbinUpBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinUpBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinUpBankerRequest proto.InternalMessageInfo

// 推筒子申请上庄回复
type PushBobbinUpBankerReply struct {
	// 上庄是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBobbinUpBankerReply) Reset()         { *m = PushBobbinUpBankerReply{} }
func (m *PushBobbinUpBankerReply) String() string { return proto.CompactTextString(m) }
func (*PushBobbinUpBankerReply) ProtoMessage()    {}
func (*PushBobbinUpBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{417}
}

func (m *PushBobbinUpBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinUpBankerReply.Unmarshal(m, b)
}
func (m *PushBobbinUpBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinUpBankerReply.Marshal(b, m, deterministic)
}
func (m *PushBobbinUpBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinUpBankerReply.Merge(m, src)
}
func (m *PushBobbinUpBankerReply) XXX_Size() int {
	return xxx_messageInfo_PushBobbinUpBankerReply.Size(m)
}
func (m *PushBobbinUpBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinUpBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinUpBankerReply proto.InternalMessageInfo

func (m *PushBobbinUpBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// --------------------------------------------------------------------------
// 推筒子下庄请求（庄家下庄|从申请庄家列表退出|只能在坐庄前下庄）
// --------------------------------------------------------------------------
// 推筒子申请下庄申请
type PushBobbinDownBankerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBobbinDownBankerRequest) Reset()         { *m = PushBobbinDownBankerRequest{} }
func (m *PushBobbinDownBankerRequest) String() string { return proto.CompactTextString(m) }
func (*PushBobbinDownBankerRequest) ProtoMessage()    {}
func (*PushBobbinDownBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{418}
}

func (m *PushBobbinDownBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinDownBankerRequest.Unmarshal(m, b)
}
func (m *PushBobbinDownBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinDownBankerRequest.Marshal(b, m, deterministic)
}
func (m *PushBobbinDownBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinDownBankerRequest.Merge(m, src)
}
func (m *PushBobbinDownBankerRequest) XXX_Size() int {
	return xxx_messageInfo_PushBobbinDownBankerRequest.Size(m)
}
func (m *PushBobbinDownBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinDownBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinDownBankerRequest proto.InternalMessageInfo

// 推筒子申请下庄回复
type PushBobbinDownBankerReply struct {
	// 下庄是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBobbinDownBankerReply) Reset()         { *m = PushBobbinDownBankerReply{} }
func (m *PushBobbinDownBankerReply) String() string { return proto.CompactTextString(m) }
func (*PushBobbinDownBankerReply) ProtoMessage()    {}
func (*PushBobbinDownBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{419}
}

func (m *PushBobbinDownBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinDownBankerReply.Unmarshal(m, b)
}
func (m *PushBobbinDownBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinDownBankerReply.Marshal(b, m, deterministic)
}
func (m *PushBobbinDownBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinDownBankerReply.Merge(m, src)
}
func (m *PushBobbinDownBankerReply) XXX_Size() int {
	return xxx_messageInfo_PushBobbinDownBankerReply.Size(m)
}
func (m *PushBobbinDownBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinDownBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinDownBankerReply proto.InternalMessageInfo

func (m *PushBobbinDownBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// --------------------------------------------------------------------------
// 推筒子其他请求
// --------------------------------------------------------------------------
// 推筒子获取房间历史输赢记录申请
type PushBobbinGetRoomWinLogRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBobbinGetRoomWinLogRequest) Reset()         { *m = PushBobbinGetRoomWinLogRequest{} }
func (m *PushBobbinGetRoomWinLogRequest) String() string { return proto.CompactTextString(m) }
func (*PushBobbinGetRoomWinLogRequest) ProtoMessage()    {}
func (*PushBobbinGetRoomWinLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{420}
}

func (m *PushBobbinGetRoomWinLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinGetRoomWinLogRequest.Unmarshal(m, b)
}
func (m *PushBobbinGetRoomWinLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinGetRoomWinLogRequest.Marshal(b, m, deterministic)
}
func (m *PushBobbinGetRoomWinLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinGetRoomWinLogRequest.Merge(m, src)
}
func (m *PushBobbinGetRoomWinLogRequest) XXX_Size() int {
	return xxx_messageInfo_PushBobbinGetRoomWinLogRequest.Size(m)
}
func (m *PushBobbinGetRoomWinLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinGetRoomWinLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinGetRoomWinLogRequest proto.InternalMessageInfo

// 推筒子请求获取房间历史输赢记录回复
type PushBobbinGetRoomWinLogReply struct {
	// 是否成功
	IsSuccess            bool                 `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	WinRecord            *PushBobbinWinRecord `protobuf:"bytes,2,opt,name=WinRecord,proto3" json:"WinRecord,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PushBobbinGetRoomWinLogReply) Reset()         { *m = PushBobbinGetRoomWinLogReply{} }
func (m *PushBobbinGetRoomWinLogReply) String() string { return proto.CompactTextString(m) }
func (*PushBobbinGetRoomWinLogReply) ProtoMessage()    {}
func (*PushBobbinGetRoomWinLogReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{421}
}

func (m *PushBobbinGetRoomWinLogReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinGetRoomWinLogReply.Unmarshal(m, b)
}
func (m *PushBobbinGetRoomWinLogReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinGetRoomWinLogReply.Marshal(b, m, deterministic)
}
func (m *PushBobbinGetRoomWinLogReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinGetRoomWinLogReply.Merge(m, src)
}
func (m *PushBobbinGetRoomWinLogReply) XXX_Size() int {
	return xxx_messageInfo_PushBobbinGetRoomWinLogReply.Size(m)
}
func (m *PushBobbinGetRoomWinLogReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinGetRoomWinLogReply.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinGetRoomWinLogReply proto.InternalMessageInfo

func (m *PushBobbinGetRoomWinLogReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *PushBobbinGetRoomWinLogReply) GetWinRecord() *PushBobbinWinRecord {
	if m != nil {
		return m.WinRecord
	}
	return nil
}

// 推筒子获取房间玩家列表
type PushBobbinGetRoomPlayersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBobbinGetRoomPlayersRequest) Reset()         { *m = PushBobbinGetRoomPlayersRequest{} }
func (m *PushBobbinGetRoomPlayersRequest) String() string { return proto.CompactTextString(m) }
func (*PushBobbinGetRoomPlayersRequest) ProtoMessage()    {}
func (*PushBobbinGetRoomPlayersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{422}
}

func (m *PushBobbinGetRoomPlayersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinGetRoomPlayersRequest.Unmarshal(m, b)
}
func (m *PushBobbinGetRoomPlayersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinGetRoomPlayersRequest.Marshal(b, m, deterministic)
}
func (m *PushBobbinGetRoomPlayersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinGetRoomPlayersRequest.Merge(m, src)
}
func (m *PushBobbinGetRoomPlayersRequest) XXX_Size() int {
	return xxx_messageInfo_PushBobbinGetRoomPlayersRequest.Size(m)
}
func (m *PushBobbinGetRoomPlayersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinGetRoomPlayersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinGetRoomPlayersRequest proto.InternalMessageInfo

// 推筒子获取房间玩家列表回复
type PushBobbinGetRoomPlayersReply struct {
	// 是否成功
	IsSuccess            bool              `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	PlayerInfo           []*RoomPlayerInfo `protobuf:"bytes,2,rep,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PushBobbinGetRoomPlayersReply) Reset()         { *m = PushBobbinGetRoomPlayersReply{} }
func (m *PushBobbinGetRoomPlayersReply) String() string { return proto.CompactTextString(m) }
func (*PushBobbinGetRoomPlayersReply) ProtoMessage()    {}
func (*PushBobbinGetRoomPlayersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{423}
}

func (m *PushBobbinGetRoomPlayersReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBobbinGetRoomPlayersReply.Unmarshal(m, b)
}
func (m *PushBobbinGetRoomPlayersReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBobbinGetRoomPlayersReply.Marshal(b, m, deterministic)
}
func (m *PushBobbinGetRoomPlayersReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBobbinGetRoomPlayersReply.Merge(m, src)
}
func (m *PushBobbinGetRoomPlayersReply) XXX_Size() int {
	return xxx_messageInfo_PushBobbinGetRoomPlayersReply.Size(m)
}
func (m *PushBobbinGetRoomPlayersReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBobbinGetRoomPlayersReply.DiscardUnknown(m)
}

var xxx_messageInfo_PushBobbinGetRoomPlayersReply proto.InternalMessageInfo

func (m *PushBobbinGetRoomPlayersReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *PushBobbinGetRoomPlayersReply) GetPlayerInfo() []*RoomPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

// 投注样式
type BetPattern struct {
	// 投注的门
	Door int64 `protobuf:"varint,1,opt,name=door,proto3" json:"door,omitempty"`
	// 投注的金额
	Money                int64    `protobuf:"varint,2,opt,name=money,proto3" json:"money,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BetPattern) Reset()         { *m = BetPattern{} }
func (m *BetPattern) String() string { return proto.CompactTextString(m) }
func (*BetPattern) ProtoMessage()    {}
func (*BetPattern) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{424}
}

func (m *BetPattern) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BetPattern.Unmarshal(m, b)
}
func (m *BetPattern) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BetPattern.Marshal(b, m, deterministic)
}
func (m *BetPattern) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BetPattern.Merge(m, src)
}
func (m *BetPattern) XXX_Size() int {
	return xxx_messageInfo_BetPattern.Size(m)
}
func (m *BetPattern) XXX_DiscardUnknown() {
	xxx_messageInfo_BetPattern.DiscardUnknown(m)
}

var xxx_messageInfo_BetPattern proto.InternalMessageInfo

func (m *BetPattern) GetDoor() int64 {
	if m != nil {
		return m.Door
	}
	return 0
}

func (m *BetPattern) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

// 彩票玩家投注
type LotteryPlayerBet struct {
	// 彩票类型
	Type int64 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	// 彩票期号
	Stage string `protobuf:"bytes,2,opt,name=Stage,proto3" json:"Stage,omitempty"`
	// 投注样式
	BetList              []*BetPattern `protobuf:"bytes,3,rep,name=betList,proto3" json:"betList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LotteryPlayerBet) Reset()         { *m = LotteryPlayerBet{} }
func (m *LotteryPlayerBet) String() string { return proto.CompactTextString(m) }
func (*LotteryPlayerBet) ProtoMessage()    {}
func (*LotteryPlayerBet) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{425}
}

func (m *LotteryPlayerBet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LotteryPlayerBet.Unmarshal(m, b)
}
func (m *LotteryPlayerBet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LotteryPlayerBet.Marshal(b, m, deterministic)
}
func (m *LotteryPlayerBet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LotteryPlayerBet.Merge(m, src)
}
func (m *LotteryPlayerBet) XXX_Size() int {
	return xxx_messageInfo_LotteryPlayerBet.Size(m)
}
func (m *LotteryPlayerBet) XXX_DiscardUnknown() {
	xxx_messageInfo_LotteryPlayerBet.DiscardUnknown(m)
}

var xxx_messageInfo_LotteryPlayerBet proto.InternalMessageInfo

func (m *LotteryPlayerBet) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *LotteryPlayerBet) GetStage() string {
	if m != nil {
		return m.Stage
	}
	return ""
}

func (m *LotteryPlayerBet) GetBetList() []*BetPattern {
	if m != nil {
		return m.BetList
	}
	return nil
}

// 俱乐部成员信息协议
type ClubMember struct {
	// 俱乐部成员uuid
	MemberUUID string `protobuf:"bytes,1,opt,name=MemberUUID,proto3" json:"MemberUUID,omitempty"`
	// 会员状态
	Status ClubMemberStatus `protobuf:"varint,2,opt,name=Status,proto3,enum=ClubMemberStatus" json:"Status,omitempty"`
	// 俱乐部成员的身份
	Role ClubRole `protobuf:"varint,3,opt,name=Role,proto3,enum=ClubRole" json:"Role,omitempty"`
	// 申请入会时间
	ApplyTime int64 `protobuf:"varint,4,opt,name=ApplyTime,proto3" json:"ApplyTime,omitempty"`
	// 通过审核进入俱乐部时间，为0表示还没有加入
	JoinTime int64 `protobuf:"varint,5,opt,name=JoinTime,proto3" json:"JoinTime,omitempty"`
	// 离开俱乐部时间，为0表示还没有退出
	LeaveTime int64 `protobuf:"varint,6,opt,name=LeaveTime,proto3" json:"LeaveTime,omitempty"`
	// 代付功能: 设置后能进行创建房间的动作
	CanCreateRoom bool `protobuf:"varint,7,opt,name=CanCreateRoom,proto3" json:"CanCreateRoom,omitempty"`
	//状态改变时间
	StatusChangeTime     int64    `protobuf:"varint,8,opt,name=StatusChangeTime,proto3" json:"StatusChangeTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClubMember) Reset()         { *m = ClubMember{} }
func (m *ClubMember) String() string { return proto.CompactTextString(m) }
func (*ClubMember) ProtoMessage()    {}
func (*ClubMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{426}
}

func (m *ClubMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubMember.Unmarshal(m, b)
}
func (m *ClubMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubMember.Marshal(b, m, deterministic)
}
func (m *ClubMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubMember.Merge(m, src)
}
func (m *ClubMember) XXX_Size() int {
	return xxx_messageInfo_ClubMember.Size(m)
}
func (m *ClubMember) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubMember.DiscardUnknown(m)
}

var xxx_messageInfo_ClubMember proto.InternalMessageInfo

func (m *ClubMember) GetMemberUUID() string {
	if m != nil {
		return m.MemberUUID
	}
	return ""
}

func (m *ClubMember) GetStatus() ClubMemberStatus {
	if m != nil {
		return m.Status
	}
	return ClubMemberStatus_ClubMemberApplyIng
}

func (m *ClubMember) GetRole() ClubRole {
	if m != nil {
		return m.Role
	}
	return ClubRole_ClubRoleMaster
}

func (m *ClubMember) GetApplyTime() int64 {
	if m != nil {
		return m.ApplyTime
	}
	return 0
}

func (m *ClubMember) GetJoinTime() int64 {
	if m != nil {
		return m.JoinTime
	}
	return 0
}

func (m *ClubMember) GetLeaveTime() int64 {
	if m != nil {
		return m.LeaveTime
	}
	return 0
}

func (m *ClubMember) GetCanCreateRoom() bool {
	if m != nil {
		return m.CanCreateRoom
	}
	return false
}

func (m *ClubMember) GetStatusChangeTime() int64 {
	if m != nil {
		return m.StatusChangeTime
	}
	return 0
}

// 客户端需要的房间信息
type ClientClubRoomInfo struct {
	// （游戏类型）
	RoomType GameType `protobuf:"varint,1,opt,name=RoomType,proto3,enum=GameType" json:"RoomType,omitempty"`
	// 房间ID
	RoomID string `protobuf:"bytes,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	// 房间详细信息
	RoomDetail           *RoomInfo `protobuf:"bytes,3,opt,name=RoomDetail,proto3" json:"RoomDetail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ClientClubRoomInfo) Reset()         { *m = ClientClubRoomInfo{} }
func (m *ClientClubRoomInfo) String() string { return proto.CompactTextString(m) }
func (*ClientClubRoomInfo) ProtoMessage()    {}
func (*ClientClubRoomInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{427}
}

func (m *ClientClubRoomInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientClubRoomInfo.Unmarshal(m, b)
}
func (m *ClientClubRoomInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientClubRoomInfo.Marshal(b, m, deterministic)
}
func (m *ClientClubRoomInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientClubRoomInfo.Merge(m, src)
}
func (m *ClientClubRoomInfo) XXX_Size() int {
	return xxx_messageInfo_ClientClubRoomInfo.Size(m)
}
func (m *ClientClubRoomInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientClubRoomInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClientClubRoomInfo proto.InternalMessageInfo

func (m *ClientClubRoomInfo) GetRoomType() GameType {
	if m != nil {
		return m.RoomType
	}
	return GameType_None
}

func (m *ClientClubRoomInfo) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *ClientClubRoomInfo) GetRoomDetail() *RoomInfo {
	if m != nil {
		return m.RoomDetail
	}
	return nil
}

// 俱乐部游戏类型协议
type ClubGameInfo struct {
	Type                 GameType `protobuf:"varint,1,opt,name=Type,proto3,enum=GameType" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClubGameInfo) Reset()         { *m = ClubGameInfo{} }
func (m *ClubGameInfo) String() string { return proto.CompactTextString(m) }
func (*ClubGameInfo) ProtoMessage()    {}
func (*ClubGameInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{428}
}

func (m *ClubGameInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubGameInfo.Unmarshal(m, b)
}
func (m *ClubGameInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubGameInfo.Marshal(b, m, deterministic)
}
func (m *ClubGameInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubGameInfo.Merge(m, src)
}
func (m *ClubGameInfo) XXX_Size() int {
	return xxx_messageInfo_ClubGameInfo.Size(m)
}
func (m *ClubGameInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubGameInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClubGameInfo proto.InternalMessageInfo

func (m *ClubGameInfo) GetType() GameType {
	if m != nil {
		return m.Type
	}
	return GameType_None
}

// 俱乐部设置选项
type ClubSettings struct {
	// 是否需要审核
	NeedCheck bool `protobuf:"varint,1,opt,name=NeedCheck,proto3" json:"NeedCheck,omitempty"`
	// 是否能进入新的游戏
	CanOpenNewGame bool `protobuf:"varint,2,opt,name=CanOpenNewGame,proto3" json:"CanOpenNewGame,omitempty"`
	// 是否保护隐私
	NeedPrivate          bool     `protobuf:"varint,3,opt,name=NeedPrivate,proto3" json:"NeedPrivate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClubSettings) Reset()         { *m = ClubSettings{} }
func (m *ClubSettings) String() string { return proto.CompactTextString(m) }
func (*ClubSettings) ProtoMessage()    {}
func (*ClubSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{429}
}

func (m *ClubSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubSettings.Unmarshal(m, b)
}
func (m *ClubSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubSettings.Marshal(b, m, deterministic)
}
func (m *ClubSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubSettings.Merge(m, src)
}
func (m *ClubSettings) XXX_Size() int {
	return xxx_messageInfo_ClubSettings.Size(m)
}
func (m *ClubSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ClubSettings proto.InternalMessageInfo

func (m *ClubSettings) GetNeedCheck() bool {
	if m != nil {
		return m.NeedCheck
	}
	return false
}

func (m *ClubSettings) GetCanOpenNewGame() bool {
	if m != nil {
		return m.CanOpenNewGame
	}
	return false
}

func (m *ClubSettings) GetNeedPrivate() bool {
	if m != nil {
		return m.NeedPrivate
	}
	return false
}

// 俱乐部信息协议
type ClubInfo struct {
	// 俱乐部UUID，永远不会改变
	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// 俱乐部短位id，也是俱乐部的专属邀请码，用于俱乐部的搜索
	InviteCode string `protobuf:"bytes,2,opt,name=InviteCode,proto3" json:"InviteCode,omitempty"`
	// 俱乐部名称，必须唯一
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	// 俱乐部部长uuid
	MasterUUID string `protobuf:"bytes,4,opt,name=MasterUUID,proto3" json:"MasterUUID,omitempty"`
	// 俱乐部状态
	Status ClubStatus `protobuf:"varint,5,opt,name=Status,proto3,enum=ClubStatus" json:"Status,omitempty"`
	// 俱乐部创建时间
	CreateTime int64 `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	// 俱乐部关闭时间
	CloseTime int64 `protobuf:"varint,7,opt,name=CloseTime,proto3" json:"CloseTime,omitempty"`
	// 俱乐部成员列表
	MemberList []*ClubMember `protobuf:"bytes,8,rep,name=MemberList,proto3" json:"MemberList,omitempty"`
	// 俱乐部房间列表
	RoomList []*RoomCodeInfo `protobuf:"bytes,9,rep,name=RoomList,proto3" json:"RoomList,omitempty"`
	// 俱乐部可以建房的游戏列表(作废)
	GameList []*ClubGameInfo `protobuf:"bytes,10,rep,name=GameList,proto3" json:"GameList,omitempty"`
	// 俱乐部设置
	Settings             *ClubSettings `protobuf:"bytes,11,opt,name=Settings,proto3" json:"Settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ClubInfo) Reset()         { *m = ClubInfo{} }
func (m *ClubInfo) String() string { return proto.CompactTextString(m) }
func (*ClubInfo) ProtoMessage()    {}
func (*ClubInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{430}
}

func (m *ClubInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubInfo.Unmarshal(m, b)
}
func (m *ClubInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubInfo.Marshal(b, m, deterministic)
}
func (m *ClubInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubInfo.Merge(m, src)
}
func (m *ClubInfo) XXX_Size() int {
	return xxx_messageInfo_ClubInfo.Size(m)
}
func (m *ClubInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClubInfo proto.InternalMessageInfo

func (m *ClubInfo) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *ClubInfo) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *ClubInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClubInfo) GetMasterUUID() string {
	if m != nil {
		return m.MasterUUID
	}
	return ""
}

func (m *ClubInfo) GetStatus() ClubStatus {
	if m != nil {
		return m.Status
	}
	return ClubStatus_ClubNone
}

func (m *ClubInfo) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *ClubInfo) GetCloseTime() int64 {
	if m != nil {
		return m.CloseTime
	}
	return 0
}

func (m *ClubInfo) GetMemberList() []*ClubMember {
	if m != nil {
		return m.MemberList
	}
	return nil
}

func (m *ClubInfo) GetRoomList() []*RoomCodeInfo {
	if m != nil {
		return m.RoomList
	}
	return nil
}

func (m *ClubInfo) GetGameList() []*ClubGameInfo {
	if m != nil {
		return m.GameList
	}
	return nil
}

func (m *ClubInfo) GetSettings() *ClubSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// 客户端用于显示数据的会员数据协议
type ClientClubMember struct {
	// 俱乐部相关信息
	ClubMemberInfo *ClubMember `protobuf:"bytes,1,opt,name=ClubMemberInfo,proto3" json:"ClubMemberInfo,omitempty"`
	// 玩家相关信息, 提供昵称等玩家个人信息
	PlayerData *PlayerInfo `protobuf:"bytes,2,opt,name=PlayerData,proto3" json:"PlayerData,omitempty"`
	// 上次该成员登录俱乐部的时间
	LastClubTime         int64    `protobuf:"varint,3,opt,name=LastClubTime,proto3" json:"LastClubTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientClubMember) Reset()         { *m = ClientClubMember{} }
func (m *ClientClubMember) String() string { return proto.CompactTextString(m) }
func (*ClientClubMember) ProtoMessage()    {}
func (*ClientClubMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{431}
}

func (m *ClientClubMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientClubMember.Unmarshal(m, b)
}
func (m *ClientClubMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientClubMember.Marshal(b, m, deterministic)
}
func (m *ClientClubMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientClubMember.Merge(m, src)
}
func (m *ClientClubMember) XXX_Size() int {
	return xxx_messageInfo_ClientClubMember.Size(m)
}
func (m *ClientClubMember) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientClubMember.DiscardUnknown(m)
}

var xxx_messageInfo_ClientClubMember proto.InternalMessageInfo

func (m *ClientClubMember) GetClubMemberInfo() *ClubMember {
	if m != nil {
		return m.ClubMemberInfo
	}
	return nil
}

func (m *ClientClubMember) GetPlayerData() *PlayerInfo {
	if m != nil {
		return m.PlayerData
	}
	return nil
}

func (m *ClientClubMember) GetLastClubTime() int64 {
	if m != nil {
		return m.LastClubTime
	}
	return 0
}

// 客户端请求时的俱乐部信息数据包装协议
type ClientClubInfo struct {
	// 俱乐部UUID，永远不会改变
	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// 俱乐部短位id，也是俱乐部的专属邀请码，用于俱乐部的搜索
	InviteCode string `protobuf:"bytes,2,opt,name=InviteCode,proto3" json:"InviteCode,omitempty"`
	// 俱乐部名称，必须唯一
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	// 俱乐部部长uuid
	MasterUUID string `protobuf:"bytes,4,opt,name=MasterUUID,proto3" json:"MasterUUID,omitempty"`
	// 俱乐部部长uuid
	MasterName string `protobuf:"bytes,5,opt,name=MasterName,proto3" json:"MasterName,omitempty"`
	// 俱乐部状态
	Status ClubStatus `protobuf:"varint,6,opt,name=Status,proto3,enum=ClubStatus" json:"Status,omitempty"`
	// 俱乐部成员列表
	MemberList []*ClientClubMember `protobuf:"bytes,7,rep,name=MemberList,proto3" json:"MemberList,omitempty"`
	// 俱乐部房间列表
	RoomList []*ClientClubRoomInfo `protobuf:"bytes,8,rep,name=RoomList,proto3" json:"RoomList,omitempty"`
	// 俱乐部可以建房的游戏列表(作废)
	GameList []*ClubGameInfo `protobuf:"bytes,9,rep,name=GameList,proto3" json:"GameList,omitempty"`
	// 俱乐部设置
	Settings             *ClubSettings `protobuf:"bytes,10,opt,name=Settings,proto3" json:"Settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ClientClubInfo) Reset()         { *m = ClientClubInfo{} }
func (m *ClientClubInfo) String() string { return proto.CompactTextString(m) }
func (*ClientClubInfo) ProtoMessage()    {}
func (*ClientClubInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{432}
}

func (m *ClientClubInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientClubInfo.Unmarshal(m, b)
}
func (m *ClientClubInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientClubInfo.Marshal(b, m, deterministic)
}
func (m *ClientClubInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientClubInfo.Merge(m, src)
}
func (m *ClientClubInfo) XXX_Size() int {
	return xxx_messageInfo_ClientClubInfo.Size(m)
}
func (m *ClientClubInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientClubInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClientClubInfo proto.InternalMessageInfo

func (m *ClientClubInfo) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *ClientClubInfo) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *ClientClubInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClientClubInfo) GetMasterUUID() string {
	if m != nil {
		return m.MasterUUID
	}
	return ""
}

func (m *ClientClubInfo) GetMasterName() string {
	if m != nil {
		return m.MasterName
	}
	return ""
}

func (m *ClientClubInfo) GetStatus() ClubStatus {
	if m != nil {
		return m.Status
	}
	return ClubStatus_ClubNone
}

func (m *ClientClubInfo) GetMemberList() []*ClientClubMember {
	if m != nil {
		return m.MemberList
	}
	return nil
}

func (m *ClientClubInfo) GetRoomList() []*ClientClubRoomInfo {
	if m != nil {
		return m.RoomList
	}
	return nil
}

func (m *ClientClubInfo) GetGameList() []*ClubGameInfo {
	if m != nil {
		return m.GameList
	}
	return nil
}

func (m *ClientClubInfo) GetSettings() *ClubSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// 请求一个俱乐部的详细信息
type QueryClubInfoRequest struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	//邀请码
	InviteCode           string   `protobuf:"bytes,2,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryClubInfoRequest) Reset()         { *m = QueryClubInfoRequest{} }
func (m *QueryClubInfoRequest) String() string { return proto.CompactTextString(m) }
func (*QueryClubInfoRequest) ProtoMessage()    {}
func (*QueryClubInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{433}
}

func (m *QueryClubInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryClubInfoRequest.Unmarshal(m, b)
}
func (m *QueryClubInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryClubInfoRequest.Marshal(b, m, deterministic)
}
func (m *QueryClubInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryClubInfoRequest.Merge(m, src)
}
func (m *QueryClubInfoRequest) XXX_Size() int {
	return xxx_messageInfo_QueryClubInfoRequest.Size(m)
}
func (m *QueryClubInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryClubInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryClubInfoRequest proto.InternalMessageInfo

func (m *QueryClubInfoRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *QueryClubInfoRequest) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

// 回复一个俱乐部的详细信息
type QueryClubInfoReply struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 俱乐部的信息
	Info                 *ClientClubInfo `protobuf:"bytes,2,opt,name=Info,proto3" json:"Info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *QueryClubInfoReply) Reset()         { *m = QueryClubInfoReply{} }
func (m *QueryClubInfoReply) String() string { return proto.CompactTextString(m) }
func (*QueryClubInfoReply) ProtoMessage()    {}
func (*QueryClubInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{434}
}

func (m *QueryClubInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryClubInfoReply.Unmarshal(m, b)
}
func (m *QueryClubInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryClubInfoReply.Marshal(b, m, deterministic)
}
func (m *QueryClubInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryClubInfoReply.Merge(m, src)
}
func (m *QueryClubInfoReply) XXX_Size() int {
	return xxx_messageInfo_QueryClubInfoReply.Size(m)
}
func (m *QueryClubInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryClubInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_QueryClubInfoReply proto.InternalMessageInfo

func (m *QueryClubInfoReply) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *QueryClubInfoReply) GetInfo() *ClientClubInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

//获取俱乐部列表请求
type GetClubPageListRequest struct {
	PageIndex int32  `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ClubUUID  string `protobuf:"bytes,3,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	//邀请码
	InviteCode string     `protobuf:"bytes,4,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	Status     ClubStatus `protobuf:"varint,5,opt,name=status,proto3,enum=ClubStatus" json:"status,omitempty"`
	//俱乐部名称
	ClubName string `protobuf:"bytes,6,opt,name=clubName,proto3" json:"clubName,omitempty"`
	//部长账号
	MasterAccount string `protobuf:"bytes,7,opt,name=masterAccount,proto3" json:"masterAccount,omitempty"`
	//部长短号
	MasterShortId        string   `protobuf:"bytes,8,opt,name=masterShortId,proto3" json:"masterShortId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClubPageListRequest) Reset()         { *m = GetClubPageListRequest{} }
func (m *GetClubPageListRequest) String() string { return proto.CompactTextString(m) }
func (*GetClubPageListRequest) ProtoMessage()    {}
func (*GetClubPageListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{435}
}

func (m *GetClubPageListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClubPageListRequest.Unmarshal(m, b)
}
func (m *GetClubPageListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClubPageListRequest.Marshal(b, m, deterministic)
}
func (m *GetClubPageListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClubPageListRequest.Merge(m, src)
}
func (m *GetClubPageListRequest) XXX_Size() int {
	return xxx_messageInfo_GetClubPageListRequest.Size(m)
}
func (m *GetClubPageListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClubPageListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetClubPageListRequest proto.InternalMessageInfo

func (m *GetClubPageListRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetClubPageListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetClubPageListRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *GetClubPageListRequest) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *GetClubPageListRequest) GetStatus() ClubStatus {
	if m != nil {
		return m.Status
	}
	return ClubStatus_ClubNone
}

func (m *GetClubPageListRequest) GetClubName() string {
	if m != nil {
		return m.ClubName
	}
	return ""
}

func (m *GetClubPageListRequest) GetMasterAccount() string {
	if m != nil {
		return m.MasterAccount
	}
	return ""
}

func (m *GetClubPageListRequest) GetMasterShortId() string {
	if m != nil {
		return m.MasterShortId
	}
	return ""
}

//获取俱乐部列表回复
type GetClubPageListReply struct {
	PageIndex            int32                    `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32                    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RecordCount          int32                    `protobuf:"varint,3,opt,name=recordCount,proto3" json:"recordCount,omitempty"`
	Data                 []*GetClubPageDataDetail `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetClubPageListReply) Reset()         { *m = GetClubPageListReply{} }
func (m *GetClubPageListReply) String() string { return proto.CompactTextString(m) }
func (*GetClubPageListReply) ProtoMessage()    {}
func (*GetClubPageListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{436}
}

func (m *GetClubPageListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClubPageListReply.Unmarshal(m, b)
}
func (m *GetClubPageListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClubPageListReply.Marshal(b, m, deterministic)
}
func (m *GetClubPageListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClubPageListReply.Merge(m, src)
}
func (m *GetClubPageListReply) XXX_Size() int {
	return xxx_messageInfo_GetClubPageListReply.Size(m)
}
func (m *GetClubPageListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClubPageListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetClubPageListReply proto.InternalMessageInfo

func (m *GetClubPageListReply) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetClubPageListReply) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetClubPageListReply) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *GetClubPageListReply) GetData() []*GetClubPageDataDetail {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetClubPageDataDetail struct {
	// 俱乐部UUID，永远不会改变
	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// 俱乐部短位id，也是俱乐部的专属邀请码，用于俱乐部的搜索
	InviteCode string `protobuf:"bytes,2,opt,name=InviteCode,proto3" json:"InviteCode,omitempty"`
	// 俱乐部名称，必须唯一
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	// 俱乐部部长uuid
	MasterUUID string `protobuf:"bytes,4,opt,name=MasterUUID,proto3" json:"MasterUUID,omitempty"`
	// 俱乐部状态
	Status ClubStatus `protobuf:"varint,5,opt,name=Status,proto3,enum=ClubStatus" json:"Status,omitempty"`
	// 俱乐部创建时间
	CreateTime int64 `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	// 俱乐部关闭时间
	CloseTime int64 `protobuf:"varint,7,opt,name=CloseTime,proto3" json:"CloseTime,omitempty"`
	// 俱乐部成员列表
	MemberList []*ClubMember `protobuf:"bytes,8,rep,name=MemberList,proto3" json:"MemberList,omitempty"`
	// 俱乐部房间列表
	RoomList []*RoomCodeInfo `protobuf:"bytes,9,rep,name=RoomList,proto3" json:"RoomList,omitempty"`
	// 俱乐部可以建房的游戏列表(作废)
	GameList []*ClubGameInfo `protobuf:"bytes,10,rep,name=GameList,proto3" json:"GameList,omitempty"`
	// 俱乐部设置
	Settings             *ClubSettings `protobuf:"bytes,11,opt,name=Settings,proto3" json:"Settings,omitempty"`
	MasterAccount        string        `protobuf:"bytes,12,opt,name=masterAccount,proto3" json:"masterAccount,omitempty"`
	MasterShortId        string        `protobuf:"bytes,13,opt,name=masterShortId,proto3" json:"masterShortId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetClubPageDataDetail) Reset()         { *m = GetClubPageDataDetail{} }
func (m *GetClubPageDataDetail) String() string { return proto.CompactTextString(m) }
func (*GetClubPageDataDetail) ProtoMessage()    {}
func (*GetClubPageDataDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{437}
}

func (m *GetClubPageDataDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClubPageDataDetail.Unmarshal(m, b)
}
func (m *GetClubPageDataDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClubPageDataDetail.Marshal(b, m, deterministic)
}
func (m *GetClubPageDataDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClubPageDataDetail.Merge(m, src)
}
func (m *GetClubPageDataDetail) XXX_Size() int {
	return xxx_messageInfo_GetClubPageDataDetail.Size(m)
}
func (m *GetClubPageDataDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClubPageDataDetail.DiscardUnknown(m)
}

var xxx_messageInfo_GetClubPageDataDetail proto.InternalMessageInfo

func (m *GetClubPageDataDetail) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *GetClubPageDataDetail) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *GetClubPageDataDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetClubPageDataDetail) GetMasterUUID() string {
	if m != nil {
		return m.MasterUUID
	}
	return ""
}

func (m *GetClubPageDataDetail) GetStatus() ClubStatus {
	if m != nil {
		return m.Status
	}
	return ClubStatus_ClubNone
}

func (m *GetClubPageDataDetail) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *GetClubPageDataDetail) GetCloseTime() int64 {
	if m != nil {
		return m.CloseTime
	}
	return 0
}

func (m *GetClubPageDataDetail) GetMemberList() []*ClubMember {
	if m != nil {
		return m.MemberList
	}
	return nil
}

func (m *GetClubPageDataDetail) GetRoomList() []*RoomCodeInfo {
	if m != nil {
		return m.RoomList
	}
	return nil
}

func (m *GetClubPageDataDetail) GetGameList() []*ClubGameInfo {
	if m != nil {
		return m.GameList
	}
	return nil
}

func (m *GetClubPageDataDetail) GetSettings() *ClubSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *GetClubPageDataDetail) GetMasterAccount() string {
	if m != nil {
		return m.MasterAccount
	}
	return ""
}

func (m *GetClubPageDataDetail) GetMasterShortId() string {
	if m != nil {
		return m.MasterShortId
	}
	return ""
}

// 返回"我的俱乐部"列表, 包括我创建的，我申请中的，我已经是会员的
type ListMyClub struct {
	// "我的俱乐部"列表
	MyClubList           []*MyClub `protobuf:"bytes,1,rep,name=MyClubList,proto3" json:"MyClubList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListMyClub) Reset()         { *m = ListMyClub{} }
func (m *ListMyClub) String() string { return proto.CompactTextString(m) }
func (*ListMyClub) ProtoMessage()    {}
func (*ListMyClub) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{438}
}

func (m *ListMyClub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMyClub.Unmarshal(m, b)
}
func (m *ListMyClub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMyClub.Marshal(b, m, deterministic)
}
func (m *ListMyClub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMyClub.Merge(m, src)
}
func (m *ListMyClub) XXX_Size() int {
	return xxx_messageInfo_ListMyClub.Size(m)
}
func (m *ListMyClub) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMyClub.DiscardUnknown(m)
}

var xxx_messageInfo_ListMyClub proto.InternalMessageInfo

func (m *ListMyClub) GetMyClubList() []*MyClub {
	if m != nil {
		return m.MyClubList
	}
	return nil
}

// 创建俱乐部请求协议
type CreateClubRequest struct {
	// 俱乐部名字
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClubRequest) Reset()         { *m = CreateClubRequest{} }
func (m *CreateClubRequest) String() string { return proto.CompactTextString(m) }
func (*CreateClubRequest) ProtoMessage()    {}
func (*CreateClubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{439}
}

func (m *CreateClubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClubRequest.Unmarshal(m, b)
}
func (m *CreateClubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClubRequest.Marshal(b, m, deterministic)
}
func (m *CreateClubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClubRequest.Merge(m, src)
}
func (m *CreateClubRequest) XXX_Size() int {
	return xxx_messageInfo_CreateClubRequest.Size(m)
}
func (m *CreateClubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClubRequest proto.InternalMessageInfo

func (m *CreateClubRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 创建俱乐部响应协议
type CreateClubReply struct {
	// 俱乐部UUID
	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// 俱乐部邀请码, 十位字符串
	InviteCode           string   `protobuf:"bytes,2,opt,name=InviteCode,proto3" json:"InviteCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClubReply) Reset()         { *m = CreateClubReply{} }
func (m *CreateClubReply) String() string { return proto.CompactTextString(m) }
func (*CreateClubReply) ProtoMessage()    {}
func (*CreateClubReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{440}
}

func (m *CreateClubReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClubReply.Unmarshal(m, b)
}
func (m *CreateClubReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClubReply.Marshal(b, m, deterministic)
}
func (m *CreateClubReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClubReply.Merge(m, src)
}
func (m *CreateClubReply) XXX_Size() int {
	return xxx_messageInfo_CreateClubReply.Size(m)
}
func (m *CreateClubReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClubReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClubReply proto.InternalMessageInfo

func (m *CreateClubReply) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *CreateClubReply) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

// 解散俱乐部请求协议
type DismissClubRequest struct {
	// 俱乐部UUID
	UUID                 string   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DismissClubRequest) Reset()         { *m = DismissClubRequest{} }
func (m *DismissClubRequest) String() string { return proto.CompactTextString(m) }
func (*DismissClubRequest) ProtoMessage()    {}
func (*DismissClubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{441}
}

func (m *DismissClubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DismissClubRequest.Unmarshal(m, b)
}
func (m *DismissClubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DismissClubRequest.Marshal(b, m, deterministic)
}
func (m *DismissClubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DismissClubRequest.Merge(m, src)
}
func (m *DismissClubRequest) XXX_Size() int {
	return xxx_messageInfo_DismissClubRequest.Size(m)
}
func (m *DismissClubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DismissClubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DismissClubRequest proto.InternalMessageInfo

func (m *DismissClubRequest) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

// 解散俱乐部响应协议
type DismissClubReply struct {
	// 俱乐部UUID
	UUID                 string   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DismissClubReply) Reset()         { *m = DismissClubReply{} }
func (m *DismissClubReply) String() string { return proto.CompactTextString(m) }
func (*DismissClubReply) ProtoMessage()    {}
func (*DismissClubReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{442}
}

func (m *DismissClubReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DismissClubReply.Unmarshal(m, b)
}
func (m *DismissClubReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DismissClubReply.Marshal(b, m, deterministic)
}
func (m *DismissClubReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DismissClubReply.Merge(m, src)
}
func (m *DismissClubReply) XXX_Size() int {
	return xxx_messageInfo_DismissClubReply.Size(m)
}
func (m *DismissClubReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DismissClubReply.DiscardUnknown(m)
}

var xxx_messageInfo_DismissClubReply proto.InternalMessageInfo

func (m *DismissClubReply) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

// 设置俱乐部的属性的请求协议
type ClubSettingRequest struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 俱乐部设置参数
	Settings             *ClubSettings `protobuf:"bytes,2,opt,name=Settings,proto3" json:"Settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ClubSettingRequest) Reset()         { *m = ClubSettingRequest{} }
func (m *ClubSettingRequest) String() string { return proto.CompactTextString(m) }
func (*ClubSettingRequest) ProtoMessage()    {}
func (*ClubSettingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{443}
}

func (m *ClubSettingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubSettingRequest.Unmarshal(m, b)
}
func (m *ClubSettingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubSettingRequest.Marshal(b, m, deterministic)
}
func (m *ClubSettingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubSettingRequest.Merge(m, src)
}
func (m *ClubSettingRequest) XXX_Size() int {
	return xxx_messageInfo_ClubSettingRequest.Size(m)
}
func (m *ClubSettingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubSettingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClubSettingRequest proto.InternalMessageInfo

func (m *ClubSettingRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *ClubSettingRequest) GetSettings() *ClubSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// 设置俱乐部的属性的响应协议
type ClubSettingReply struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 操作是否成功, 只会在成功时返回
	Success              bool     `protobuf:"varint,2,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClubSettingReply) Reset()         { *m = ClubSettingReply{} }
func (m *ClubSettingReply) String() string { return proto.CompactTextString(m) }
func (*ClubSettingReply) ProtoMessage()    {}
func (*ClubSettingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{444}
}

func (m *ClubSettingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubSettingReply.Unmarshal(m, b)
}
func (m *ClubSettingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubSettingReply.Marshal(b, m, deterministic)
}
func (m *ClubSettingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubSettingReply.Merge(m, src)
}
func (m *ClubSettingReply) XXX_Size() int {
	return xxx_messageInfo_ClubSettingReply.Size(m)
}
func (m *ClubSettingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubSettingReply.DiscardUnknown(m)
}

var xxx_messageInfo_ClubSettingReply proto.InternalMessageInfo

func (m *ClubSettingReply) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *ClubSettingReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// 冻结，解冻一个俱乐部会员的请求协议
type FreezeClubMemberRequest struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 需要操作的会员UUID
	MemberUUID string `protobuf:"bytes,2,opt,name=MemberUUID,proto3" json:"MemberUUID,omitempty"`
	// true表示冻结，false表示解冻
	Freeze               bool     `protobuf:"varint,3,opt,name=Freeze,proto3" json:"Freeze,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FreezeClubMemberRequest) Reset()         { *m = FreezeClubMemberRequest{} }
func (m *FreezeClubMemberRequest) String() string { return proto.CompactTextString(m) }
func (*FreezeClubMemberRequest) ProtoMessage()    {}
func (*FreezeClubMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{445}
}

func (m *FreezeClubMemberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreezeClubMemberRequest.Unmarshal(m, b)
}
func (m *FreezeClubMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreezeClubMemberRequest.Marshal(b, m, deterministic)
}
func (m *FreezeClubMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreezeClubMemberRequest.Merge(m, src)
}
func (m *FreezeClubMemberRequest) XXX_Size() int {
	return xxx_messageInfo_FreezeClubMemberRequest.Size(m)
}
func (m *FreezeClubMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FreezeClubMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FreezeClubMemberRequest proto.InternalMessageInfo

func (m *FreezeClubMemberRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *FreezeClubMemberRequest) GetMemberUUID() string {
	if m != nil {
		return m.MemberUUID
	}
	return ""
}

func (m *FreezeClubMemberRequest) GetFreeze() bool {
	if m != nil {
		return m.Freeze
	}
	return false
}

// 冻结，解冻一个俱乐部会员的响应协议
type FreezeClubMemberReply struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 需要操作的会员UUID
	MemberUUID string `protobuf:"bytes,2,opt,name=MemberUUID,proto3" json:"MemberUUID,omitempty"`
	// true表示冻结状态，false表示解冻状态
	Freeze               bool     `protobuf:"varint,3,opt,name=Freeze,proto3" json:"Freeze,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FreezeClubMemberReply) Reset()         { *m = FreezeClubMemberReply{} }
func (m *FreezeClubMemberReply) String() string { return proto.CompactTextString(m) }
func (*FreezeClubMemberReply) ProtoMessage()    {}
func (*FreezeClubMemberReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{446}
}

func (m *FreezeClubMemberReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreezeClubMemberReply.Unmarshal(m, b)
}
func (m *FreezeClubMemberReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreezeClubMemberReply.Marshal(b, m, deterministic)
}
func (m *FreezeClubMemberReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreezeClubMemberReply.Merge(m, src)
}
func (m *FreezeClubMemberReply) XXX_Size() int {
	return xxx_messageInfo_FreezeClubMemberReply.Size(m)
}
func (m *FreezeClubMemberReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FreezeClubMemberReply.DiscardUnknown(m)
}

var xxx_messageInfo_FreezeClubMemberReply proto.InternalMessageInfo

func (m *FreezeClubMemberReply) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *FreezeClubMemberReply) GetMemberUUID() string {
	if m != nil {
		return m.MemberUUID
	}
	return ""
}

func (m *FreezeClubMemberReply) GetFreeze() bool {
	if m != nil {
		return m.Freeze
	}
	return false
}

// 设置，取消一个俱乐部会员的代付资格的请求协议
type SetClubRoomCreatorRequest struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 需要操作的会员UUID
	MemberUUID string `protobuf:"bytes,2,opt,name=MemberUUID,proto3" json:"MemberUUID,omitempty"`
	// 是否能创建房间，true表示设置为代付，false表示取消代付能力
	CanCreateRoom        bool     `protobuf:"varint,3,opt,name=CanCreateRoom,proto3" json:"CanCreateRoom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetClubRoomCreatorRequest) Reset()         { *m = SetClubRoomCreatorRequest{} }
func (m *SetClubRoomCreatorRequest) String() string { return proto.CompactTextString(m) }
func (*SetClubRoomCreatorRequest) ProtoMessage()    {}
func (*SetClubRoomCreatorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{447}
}

func (m *SetClubRoomCreatorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetClubRoomCreatorRequest.Unmarshal(m, b)
}
func (m *SetClubRoomCreatorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetClubRoomCreatorRequest.Marshal(b, m, deterministic)
}
func (m *SetClubRoomCreatorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetClubRoomCreatorRequest.Merge(m, src)
}
func (m *SetClubRoomCreatorRequest) XXX_Size() int {
	return xxx_messageInfo_SetClubRoomCreatorRequest.Size(m)
}
func (m *SetClubRoomCreatorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetClubRoomCreatorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetClubRoomCreatorRequest proto.InternalMessageInfo

func (m *SetClubRoomCreatorRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *SetClubRoomCreatorRequest) GetMemberUUID() string {
	if m != nil {
		return m.MemberUUID
	}
	return ""
}

func (m *SetClubRoomCreatorRequest) GetCanCreateRoom() bool {
	if m != nil {
		return m.CanCreateRoom
	}
	return false
}

// 设置，取消一个俱乐部会员的代付资格的响应协议
type SetClubRoomCreatorReply struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 需要操作的会员UUID
	MemberUUID string `protobuf:"bytes,2,opt,name=MemberUUID,proto3" json:"MemberUUID,omitempty"`
	// 是否能创建房间，true表示是代付，false表示不是代付
	CanCreateRoom        bool     `protobuf:"varint,3,opt,name=CanCreateRoom,proto3" json:"CanCreateRoom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetClubRoomCreatorReply) Reset()         { *m = SetClubRoomCreatorReply{} }
func (m *SetClubRoomCreatorReply) String() string { return proto.CompactTextString(m) }
func (*SetClubRoomCreatorReply) ProtoMessage()    {}
func (*SetClubRoomCreatorReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{448}
}

func (m *SetClubRoomCreatorReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetClubRoomCreatorReply.Unmarshal(m, b)
}
func (m *SetClubRoomCreatorReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetClubRoomCreatorReply.Marshal(b, m, deterministic)
}
func (m *SetClubRoomCreatorReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetClubRoomCreatorReply.Merge(m, src)
}
func (m *SetClubRoomCreatorReply) XXX_Size() int {
	return xxx_messageInfo_SetClubRoomCreatorReply.Size(m)
}
func (m *SetClubRoomCreatorReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetClubRoomCreatorReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetClubRoomCreatorReply proto.InternalMessageInfo

func (m *SetClubRoomCreatorReply) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *SetClubRoomCreatorReply) GetMemberUUID() string {
	if m != nil {
		return m.MemberUUID
	}
	return ""
}

func (m *SetClubRoomCreatorReply) GetCanCreateRoom() bool {
	if m != nil {
		return m.CanCreateRoom
	}
	return false
}

// 申请加入俱乐部请求协议
type ApplyJoinClubRequest struct {
	// 俱乐部邀请码, 十位字符串
	InviteCode           string   `protobuf:"bytes,1,opt,name=InviteCode,proto3" json:"InviteCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyJoinClubRequest) Reset()         { *m = ApplyJoinClubRequest{} }
func (m *ApplyJoinClubRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyJoinClubRequest) ProtoMessage()    {}
func (*ApplyJoinClubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{449}
}

func (m *ApplyJoinClubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyJoinClubRequest.Unmarshal(m, b)
}
func (m *ApplyJoinClubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyJoinClubRequest.Marshal(b, m, deterministic)
}
func (m *ApplyJoinClubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyJoinClubRequest.Merge(m, src)
}
func (m *ApplyJoinClubRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyJoinClubRequest.Size(m)
}
func (m *ApplyJoinClubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyJoinClubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyJoinClubRequest proto.InternalMessageInfo

func (m *ApplyJoinClubRequest) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

// 对玩家加入俱乐部申请进行处理的请求协议，由于没有单独的申请表管理，需要使用俱乐部UUID来定位操作数据
type HandleJoinClubApplyRequest struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 加入申请的用户UUID列表，数组为空表示同意俱乐部所有申请者为会员
	MemberUUID []string `protobuf:"bytes,2,rep,name=MemberUUID,proto3" json:"MemberUUID,omitempty"`
	// 处理状态, true表示通过, false表示拒绝
	Pass                 bool     `protobuf:"varint,3,opt,name=Pass,proto3" json:"Pass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandleJoinClubApplyRequest) Reset()         { *m = HandleJoinClubApplyRequest{} }
func (m *HandleJoinClubApplyRequest) String() string { return proto.CompactTextString(m) }
func (*HandleJoinClubApplyRequest) ProtoMessage()    {}
func (*HandleJoinClubApplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{450}
}

func (m *HandleJoinClubApplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleJoinClubApplyRequest.Unmarshal(m, b)
}
func (m *HandleJoinClubApplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleJoinClubApplyRequest.Marshal(b, m, deterministic)
}
func (m *HandleJoinClubApplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleJoinClubApplyRequest.Merge(m, src)
}
func (m *HandleJoinClubApplyRequest) XXX_Size() int {
	return xxx_messageInfo_HandleJoinClubApplyRequest.Size(m)
}
func (m *HandleJoinClubApplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleJoinClubApplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandleJoinClubApplyRequest proto.InternalMessageInfo

func (m *HandleJoinClubApplyRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *HandleJoinClubApplyRequest) GetMemberUUID() []string {
	if m != nil {
		return m.MemberUUID
	}
	return nil
}

func (m *HandleJoinClubApplyRequest) GetPass() bool {
	if m != nil {
		return m.Pass
	}
	return false
}

// 对玩家加入俱乐部申请进行处理的响应协议，返回处理后的申请人列表和俱乐部成员列表
type HandleJoinClubApplyReply struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 申请人列表，ClubMemberStatus=ApplyIng
	ApplicantList []*ClientClubMember `protobuf:"bytes,2,rep,name=ApplicantList,proto3" json:"ApplicantList,omitempty"`
	// 成员列表，ClubMemberStatus=MasterAccept
	MemberList           []*ClientClubMember `protobuf:"bytes,3,rep,name=MemberList,proto3" json:"MemberList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *HandleJoinClubApplyReply) Reset()         { *m = HandleJoinClubApplyReply{} }
func (m *HandleJoinClubApplyReply) String() string { return proto.CompactTextString(m) }
func (*HandleJoinClubApplyReply) ProtoMessage()    {}
func (*HandleJoinClubApplyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{451}
}

func (m *HandleJoinClubApplyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleJoinClubApplyReply.Unmarshal(m, b)
}
func (m *HandleJoinClubApplyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleJoinClubApplyReply.Marshal(b, m, deterministic)
}
func (m *HandleJoinClubApplyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleJoinClubApplyReply.Merge(m, src)
}
func (m *HandleJoinClubApplyReply) XXX_Size() int {
	return xxx_messageInfo_HandleJoinClubApplyReply.Size(m)
}
func (m *HandleJoinClubApplyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleJoinClubApplyReply.DiscardUnknown(m)
}

var xxx_messageInfo_HandleJoinClubApplyReply proto.InternalMessageInfo

func (m *HandleJoinClubApplyReply) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *HandleJoinClubApplyReply) GetApplicantList() []*ClientClubMember {
	if m != nil {
		return m.ApplicantList
	}
	return nil
}

func (m *HandleJoinClubApplyReply) GetMemberList() []*ClientClubMember {
	if m != nil {
		return m.MemberList
	}
	return nil
}

// 创建房间的请求协议，不同的游戏调用不同的创建接口
type CreateClubRoomRequest struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 创建的房间类型（游戏类型）
	RoomType GameType `protobuf:"varint,2,opt,name=RoomType,proto3,enum=GameType" json:"RoomType,omitempty"`
	// 创建房间传递的参数
	Config               []*GameConfig `protobuf:"bytes,3,rep,name=Config,proto3" json:"Config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateClubRoomRequest) Reset()         { *m = CreateClubRoomRequest{} }
func (m *CreateClubRoomRequest) String() string { return proto.CompactTextString(m) }
func (*CreateClubRoomRequest) ProtoMessage()    {}
func (*CreateClubRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{452}
}

func (m *CreateClubRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClubRoomRequest.Unmarshal(m, b)
}
func (m *CreateClubRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClubRoomRequest.Marshal(b, m, deterministic)
}
func (m *CreateClubRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClubRoomRequest.Merge(m, src)
}
func (m *CreateClubRoomRequest) XXX_Size() int {
	return xxx_messageInfo_CreateClubRoomRequest.Size(m)
}
func (m *CreateClubRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClubRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClubRoomRequest proto.InternalMessageInfo

func (m *CreateClubRoomRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *CreateClubRoomRequest) GetRoomType() GameType {
	if m != nil {
		return m.RoomType
	}
	return GameType_None
}

func (m *CreateClubRoomRequest) GetConfig() []*GameConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

// 创建房间的响应协议，返回房间的ID
type CreateClubRoomReply struct {
	// 创建好的房间ID
	RoomID               string   `protobuf:"bytes,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClubRoomReply) Reset()         { *m = CreateClubRoomReply{} }
func (m *CreateClubRoomReply) String() string { return proto.CompactTextString(m) }
func (*CreateClubRoomReply) ProtoMessage()    {}
func (*CreateClubRoomReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{453}
}

func (m *CreateClubRoomReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClubRoomReply.Unmarshal(m, b)
}
func (m *CreateClubRoomReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClubRoomReply.Marshal(b, m, deterministic)
}
func (m *CreateClubRoomReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClubRoomReply.Merge(m, src)
}
func (m *CreateClubRoomReply) XXX_Size() int {
	return xxx_messageInfo_CreateClubRoomReply.Size(m)
}
func (m *CreateClubRoomReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClubRoomReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClubRoomReply proto.InternalMessageInfo

func (m *CreateClubRoomReply) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

// 关闭俱乐部房间的请求协议，关闭后需要房间内的玩家结束当前这一局后才能安全关闭
type CloseClubRoomRequest struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 需要关闭的房间ID
	RoomID               string   `protobuf:"bytes,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseClubRoomRequest) Reset()         { *m = CloseClubRoomRequest{} }
func (m *CloseClubRoomRequest) String() string { return proto.CompactTextString(m) }
func (*CloseClubRoomRequest) ProtoMessage()    {}
func (*CloseClubRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{454}
}

func (m *CloseClubRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseClubRoomRequest.Unmarshal(m, b)
}
func (m *CloseClubRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseClubRoomRequest.Marshal(b, m, deterministic)
}
func (m *CloseClubRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseClubRoomRequest.Merge(m, src)
}
func (m *CloseClubRoomRequest) XXX_Size() int {
	return xxx_messageInfo_CloseClubRoomRequest.Size(m)
}
func (m *CloseClubRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseClubRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseClubRoomRequest proto.InternalMessageInfo

func (m *CloseClubRoomRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *CloseClubRoomRequest) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

// 关闭俱乐部房间的响应协议，返回房间的ID
type CloseClubRoomReply struct {
	// 创建好的房间ID
	RoomID               string   `protobuf:"bytes,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseClubRoomReply) Reset()         { *m = CloseClubRoomReply{} }
func (m *CloseClubRoomReply) String() string { return proto.CompactTextString(m) }
func (*CloseClubRoomReply) ProtoMessage()    {}
func (*CloseClubRoomReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{455}
}

func (m *CloseClubRoomReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseClubRoomReply.Unmarshal(m, b)
}
func (m *CloseClubRoomReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseClubRoomReply.Marshal(b, m, deterministic)
}
func (m *CloseClubRoomReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseClubRoomReply.Merge(m, src)
}
func (m *CloseClubRoomReply) XXX_Size() int {
	return xxx_messageInfo_CloseClubRoomReply.Size(m)
}
func (m *CloseClubRoomReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseClubRoomReply.DiscardUnknown(m)
}

var xxx_messageInfo_CloseClubRoomReply proto.InternalMessageInfo

func (m *CloseClubRoomReply) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

// 查询俱乐部成员列表的请求协议
type QueryClubMemberRequest struct {
	// 俱乐部UUID
	ClubUUID             string   `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryClubMemberRequest) Reset()         { *m = QueryClubMemberRequest{} }
func (m *QueryClubMemberRequest) String() string { return proto.CompactTextString(m) }
func (*QueryClubMemberRequest) ProtoMessage()    {}
func (*QueryClubMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{456}
}

func (m *QueryClubMemberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryClubMemberRequest.Unmarshal(m, b)
}
func (m *QueryClubMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryClubMemberRequest.Marshal(b, m, deterministic)
}
func (m *QueryClubMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryClubMemberRequest.Merge(m, src)
}
func (m *QueryClubMemberRequest) XXX_Size() int {
	return xxx_messageInfo_QueryClubMemberRequest.Size(m)
}
func (m *QueryClubMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryClubMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryClubMemberRequest proto.InternalMessageInfo

func (m *QueryClubMemberRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

// 查询俱乐部成员列表的响应协议
type QueryClubMemberReply struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 返回成员列表，ClubMemberStatus=MasterAccept
	MemberList           []*ClientClubMember `protobuf:"bytes,2,rep,name=MemberList,proto3" json:"MemberList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *QueryClubMemberReply) Reset()         { *m = QueryClubMemberReply{} }
func (m *QueryClubMemberReply) String() string { return proto.CompactTextString(m) }
func (*QueryClubMemberReply) ProtoMessage()    {}
func (*QueryClubMemberReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{457}
}

func (m *QueryClubMemberReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryClubMemberReply.Unmarshal(m, b)
}
func (m *QueryClubMemberReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryClubMemberReply.Marshal(b, m, deterministic)
}
func (m *QueryClubMemberReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryClubMemberReply.Merge(m, src)
}
func (m *QueryClubMemberReply) XXX_Size() int {
	return xxx_messageInfo_QueryClubMemberReply.Size(m)
}
func (m *QueryClubMemberReply) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryClubMemberReply.DiscardUnknown(m)
}

var xxx_messageInfo_QueryClubMemberReply proto.InternalMessageInfo

func (m *QueryClubMemberReply) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *QueryClubMemberReply) GetMemberList() []*ClientClubMember {
	if m != nil {
		return m.MemberList
	}
	return nil
}

// 查询俱乐部申请人列表的请求协议
type QueryClubApplicantRequest struct {
	// 俱乐部UUID
	ClubUUID             string   `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryClubApplicantRequest) Reset()         { *m = QueryClubApplicantRequest{} }
func (m *QueryClubApplicantRequest) String() string { return proto.CompactTextString(m) }
func (*QueryClubApplicantRequest) ProtoMessage()    {}
func (*QueryClubApplicantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{458}
}

func (m *QueryClubApplicantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryClubApplicantRequest.Unmarshal(m, b)
}
func (m *QueryClubApplicantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryClubApplicantRequest.Marshal(b, m, deterministic)
}
func (m *QueryClubApplicantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryClubApplicantRequest.Merge(m, src)
}
func (m *QueryClubApplicantRequest) XXX_Size() int {
	return xxx_messageInfo_QueryClubApplicantRequest.Size(m)
}
func (m *QueryClubApplicantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryClubApplicantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryClubApplicantRequest proto.InternalMessageInfo

func (m *QueryClubApplicantRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

// 查询俱乐部申请人列表的响应协议
type QueryClubApplicantReply struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 返回申请人列表，ClubMemberStatus=ApplyIng
	ApplicantList        []*ClientClubMember `protobuf:"bytes,2,rep,name=ApplicantList,proto3" json:"ApplicantList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *QueryClubApplicantReply) Reset()         { *m = QueryClubApplicantReply{} }
func (m *QueryClubApplicantReply) String() string { return proto.CompactTextString(m) }
func (*QueryClubApplicantReply) ProtoMessage()    {}
func (*QueryClubApplicantReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{459}
}

func (m *QueryClubApplicantReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryClubApplicantReply.Unmarshal(m, b)
}
func (m *QueryClubApplicantReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryClubApplicantReply.Marshal(b, m, deterministic)
}
func (m *QueryClubApplicantReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryClubApplicantReply.Merge(m, src)
}
func (m *QueryClubApplicantReply) XXX_Size() int {
	return xxx_messageInfo_QueryClubApplicantReply.Size(m)
}
func (m *QueryClubApplicantReply) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryClubApplicantReply.DiscardUnknown(m)
}

var xxx_messageInfo_QueryClubApplicantReply proto.InternalMessageInfo

func (m *QueryClubApplicantReply) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *QueryClubApplicantReply) GetApplicantList() []*ClientClubMember {
	if m != nil {
		return m.ApplicantList
	}
	return nil
}

// 查询我的俱乐部列表的请求协议
type QueryMyClubRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryMyClubRequest) Reset()         { *m = QueryMyClubRequest{} }
func (m *QueryMyClubRequest) String() string { return proto.CompactTextString(m) }
func (*QueryMyClubRequest) ProtoMessage()    {}
func (*QueryMyClubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{460}
}

func (m *QueryMyClubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryMyClubRequest.Unmarshal(m, b)
}
func (m *QueryMyClubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryMyClubRequest.Marshal(b, m, deterministic)
}
func (m *QueryMyClubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryMyClubRequest.Merge(m, src)
}
func (m *QueryMyClubRequest) XXX_Size() int {
	return xxx_messageInfo_QueryMyClubRequest.Size(m)
}
func (m *QueryMyClubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryMyClubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryMyClubRequest proto.InternalMessageInfo

type QueryUserClubsRequest struct {
	UserUUID             string   `protobuf:"bytes,1,opt,name=userUUID,proto3" json:"userUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryUserClubsRequest) Reset()         { *m = QueryUserClubsRequest{} }
func (m *QueryUserClubsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryUserClubsRequest) ProtoMessage()    {}
func (*QueryUserClubsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{461}
}

func (m *QueryUserClubsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryUserClubsRequest.Unmarshal(m, b)
}
func (m *QueryUserClubsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryUserClubsRequest.Marshal(b, m, deterministic)
}
func (m *QueryUserClubsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryUserClubsRequest.Merge(m, src)
}
func (m *QueryUserClubsRequest) XXX_Size() int {
	return xxx_messageInfo_QueryUserClubsRequest.Size(m)
}
func (m *QueryUserClubsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryUserClubsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryUserClubsRequest proto.InternalMessageInfo

func (m *QueryUserClubsRequest) GetUserUUID() string {
	if m != nil {
		return m.UserUUID
	}
	return ""
}

//根据俱乐部部长id获取名下俱乐部列表
type QueryClubsByMasterIdRequest struct {
	MasterUUID           string   `protobuf:"bytes,1,opt,name=masterUUID,proto3" json:"masterUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryClubsByMasterIdRequest) Reset()         { *m = QueryClubsByMasterIdRequest{} }
func (m *QueryClubsByMasterIdRequest) String() string { return proto.CompactTextString(m) }
func (*QueryClubsByMasterIdRequest) ProtoMessage()    {}
func (*QueryClubsByMasterIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{462}
}

func (m *QueryClubsByMasterIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryClubsByMasterIdRequest.Unmarshal(m, b)
}
func (m *QueryClubsByMasterIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryClubsByMasterIdRequest.Marshal(b, m, deterministic)
}
func (m *QueryClubsByMasterIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryClubsByMasterIdRequest.Merge(m, src)
}
func (m *QueryClubsByMasterIdRequest) XXX_Size() int {
	return xxx_messageInfo_QueryClubsByMasterIdRequest.Size(m)
}
func (m *QueryClubsByMasterIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryClubsByMasterIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryClubsByMasterIdRequest proto.InternalMessageInfo

func (m *QueryClubsByMasterIdRequest) GetMasterUUID() string {
	if m != nil {
		return m.MasterUUID
	}
	return ""
}

type MyClub struct {
	// 俱乐部UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 俱乐部InviteCode
	ClubInviteCode string `protobuf:"bytes,2,opt,name=ClubInviteCode,proto3" json:"ClubInviteCode,omitempty"`
	// 俱乐部名字
	ClubName string `protobuf:"bytes,3,opt,name=ClubName,proto3" json:"ClubName,omitempty"`
	// 俱乐部会长UUID
	ClubMasterUUID string `protobuf:"bytes,4,opt,name=ClubMasterUUID,proto3" json:"ClubMasterUUID,omitempty"`
	// 俱乐部会长ShortID
	ClubMasterShortID string `protobuf:"bytes,5,opt,name=ClubMasterShortID,proto3" json:"ClubMasterShortID,omitempty"`
	// 俱乐部会长名
	ClubMasterName string `protobuf:"bytes,6,opt,name=ClubMasterName,proto3" json:"ClubMasterName,omitempty"`
	// 俱乐部会长头像
	ClubMasterHead string `protobuf:"bytes,7,opt,name=ClubMasterHead,proto3" json:"ClubMasterHead,omitempty"`
	// 身份
	Role ClubRole `protobuf:"varint,8,opt,name=Role,proto3,enum=ClubRole" json:"Role,omitempty"`
	// 已经打开的房间数
	OpenRoomCount int32 `protobuf:"varint,9,opt,name=OpenRoomCount,proto3" json:"OpenRoomCount,omitempty"`
	// 申请人在俱乐部中的状态
	MemberStatus         ClubMemberStatus `protobuf:"varint,10,opt,name=MemberStatus,proto3,enum=ClubMemberStatus" json:"MemberStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MyClub) Reset()         { *m = MyClub{} }
func (m *MyClub) String() string { return proto.CompactTextString(m) }
func (*MyClub) ProtoMessage()    {}
func (*MyClub) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{463}
}

func (m *MyClub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MyClub.Unmarshal(m, b)
}
func (m *MyClub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MyClub.Marshal(b, m, deterministic)
}
func (m *MyClub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MyClub.Merge(m, src)
}
func (m *MyClub) XXX_Size() int {
	return xxx_messageInfo_MyClub.Size(m)
}
func (m *MyClub) XXX_DiscardUnknown() {
	xxx_messageInfo_MyClub.DiscardUnknown(m)
}

var xxx_messageInfo_MyClub proto.InternalMessageInfo

func (m *MyClub) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *MyClub) GetClubInviteCode() string {
	if m != nil {
		return m.ClubInviteCode
	}
	return ""
}

func (m *MyClub) GetClubName() string {
	if m != nil {
		return m.ClubName
	}
	return ""
}

func (m *MyClub) GetClubMasterUUID() string {
	if m != nil {
		return m.ClubMasterUUID
	}
	return ""
}

func (m *MyClub) GetClubMasterShortID() string {
	if m != nil {
		return m.ClubMasterShortID
	}
	return ""
}

func (m *MyClub) GetClubMasterName() string {
	if m != nil {
		return m.ClubMasterName
	}
	return ""
}

func (m *MyClub) GetClubMasterHead() string {
	if m != nil {
		return m.ClubMasterHead
	}
	return ""
}

func (m *MyClub) GetRole() ClubRole {
	if m != nil {
		return m.Role
	}
	return ClubRole_ClubRoleMaster
}

func (m *MyClub) GetOpenRoomCount() int32 {
	if m != nil {
		return m.OpenRoomCount
	}
	return 0
}

func (m *MyClub) GetMemberStatus() ClubMemberStatus {
	if m != nil {
		return m.MemberStatus
	}
	return ClubMemberStatus_ClubMemberApplyIng
}

// 成员退出俱乐部的请求协议
type ClubMemberQuitRequest struct {
	// 俱乐部的UUID，用来表明退出的是哪一个俱乐部
	ClubUUID             string   `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClubMemberQuitRequest) Reset()         { *m = ClubMemberQuitRequest{} }
func (m *ClubMemberQuitRequest) String() string { return proto.CompactTextString(m) }
func (*ClubMemberQuitRequest) ProtoMessage()    {}
func (*ClubMemberQuitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{464}
}

func (m *ClubMemberQuitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubMemberQuitRequest.Unmarshal(m, b)
}
func (m *ClubMemberQuitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubMemberQuitRequest.Marshal(b, m, deterministic)
}
func (m *ClubMemberQuitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubMemberQuitRequest.Merge(m, src)
}
func (m *ClubMemberQuitRequest) XXX_Size() int {
	return xxx_messageInfo_ClubMemberQuitRequest.Size(m)
}
func (m *ClubMemberQuitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubMemberQuitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClubMemberQuitRequest proto.InternalMessageInfo

func (m *ClubMemberQuitRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

// 俱乐部成员确认驱逐的请求协议
type ClubMemberConfirmDropRequest struct {
	// 俱乐部的UUID，用来表明确认的是哪一个俱乐部的驱除指令
	ClubUUID             string   `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClubMemberConfirmDropRequest) Reset()         { *m = ClubMemberConfirmDropRequest{} }
func (m *ClubMemberConfirmDropRequest) String() string { return proto.CompactTextString(m) }
func (*ClubMemberConfirmDropRequest) ProtoMessage()    {}
func (*ClubMemberConfirmDropRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{465}
}

func (m *ClubMemberConfirmDropRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubMemberConfirmDropRequest.Unmarshal(m, b)
}
func (m *ClubMemberConfirmDropRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubMemberConfirmDropRequest.Marshal(b, m, deterministic)
}
func (m *ClubMemberConfirmDropRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubMemberConfirmDropRequest.Merge(m, src)
}
func (m *ClubMemberConfirmDropRequest) XXX_Size() int {
	return xxx_messageInfo_ClubMemberConfirmDropRequest.Size(m)
}
func (m *ClubMemberConfirmDropRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubMemberConfirmDropRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClubMemberConfirmDropRequest proto.InternalMessageInfo

func (m *ClubMemberConfirmDropRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

// 部长将成员请出俱乐部的请求协议
type ClubMasterDropMemberRequest struct {
	// 俱乐部的UUID，用来查找俱乐部
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 需要驱逐的成员UUID
	MemberUUID           string   `protobuf:"bytes,2,opt,name=MemberUUID,proto3" json:"MemberUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClubMasterDropMemberRequest) Reset()         { *m = ClubMasterDropMemberRequest{} }
func (m *ClubMasterDropMemberRequest) String() string { return proto.CompactTextString(m) }
func (*ClubMasterDropMemberRequest) ProtoMessage()    {}
func (*ClubMasterDropMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{466}
}

func (m *ClubMasterDropMemberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubMasterDropMemberRequest.Unmarshal(m, b)
}
func (m *ClubMasterDropMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubMasterDropMemberRequest.Marshal(b, m, deterministic)
}
func (m *ClubMasterDropMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubMasterDropMemberRequest.Merge(m, src)
}
func (m *ClubMasterDropMemberRequest) XXX_Size() int {
	return xxx_messageInfo_ClubMasterDropMemberRequest.Size(m)
}
func (m *ClubMasterDropMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubMasterDropMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClubMasterDropMemberRequest proto.InternalMessageInfo

func (m *ClubMasterDropMemberRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *ClubMasterDropMemberRequest) GetMemberUUID() string {
	if m != nil {
		return m.MemberUUID
	}
	return ""
}

// 部长将成员请出俱乐部的响应协议
type ClubMasterDropMemberReply struct {
	// 返回成员列表，ClubMemberStatus=MasterAccept
	MemberList           []*ClientClubMember `protobuf:"bytes,1,rep,name=MemberList,proto3" json:"MemberList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ClubMasterDropMemberReply) Reset()         { *m = ClubMasterDropMemberReply{} }
func (m *ClubMasterDropMemberReply) String() string { return proto.CompactTextString(m) }
func (*ClubMasterDropMemberReply) ProtoMessage()    {}
func (*ClubMasterDropMemberReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{467}
}

func (m *ClubMasterDropMemberReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubMasterDropMemberReply.Unmarshal(m, b)
}
func (m *ClubMasterDropMemberReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubMasterDropMemberReply.Marshal(b, m, deterministic)
}
func (m *ClubMasterDropMemberReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubMasterDropMemberReply.Merge(m, src)
}
func (m *ClubMasterDropMemberReply) XXX_Size() int {
	return xxx_messageInfo_ClubMasterDropMemberReply.Size(m)
}
func (m *ClubMasterDropMemberReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubMasterDropMemberReply.DiscardUnknown(m)
}

var xxx_messageInfo_ClubMasterDropMemberReply proto.InternalMessageInfo

func (m *ClubMasterDropMemberReply) GetMemberList() []*ClientClubMember {
	if m != nil {
		return m.MemberList
	}
	return nil
}

// 玩家自行放弃申请加入俱乐部的请求协议
type PlayerCancelJoinClubRequest struct {
	// 俱乐部的UUID，用来查找俱乐部
	ClubUUID             string   `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerCancelJoinClubRequest) Reset()         { *m = PlayerCancelJoinClubRequest{} }
func (m *PlayerCancelJoinClubRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerCancelJoinClubRequest) ProtoMessage()    {}
func (*PlayerCancelJoinClubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{468}
}

func (m *PlayerCancelJoinClubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerCancelJoinClubRequest.Unmarshal(m, b)
}
func (m *PlayerCancelJoinClubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerCancelJoinClubRequest.Marshal(b, m, deterministic)
}
func (m *PlayerCancelJoinClubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerCancelJoinClubRequest.Merge(m, src)
}
func (m *PlayerCancelJoinClubRequest) XXX_Size() int {
	return xxx_messageInfo_PlayerCancelJoinClubRequest.Size(m)
}
func (m *PlayerCancelJoinClubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerCancelJoinClubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerCancelJoinClubRequest proto.InternalMessageInfo

func (m *PlayerCancelJoinClubRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

// 放弃申请创建俱乐部的请求协议
type PlayerCancelCreateClubRequest struct {
	// 俱乐部的UUID，用来查找俱乐部
	ClubUUID             string   `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerCancelCreateClubRequest) Reset()         { *m = PlayerCancelCreateClubRequest{} }
func (m *PlayerCancelCreateClubRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerCancelCreateClubRequest) ProtoMessage()    {}
func (*PlayerCancelCreateClubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{469}
}

func (m *PlayerCancelCreateClubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerCancelCreateClubRequest.Unmarshal(m, b)
}
func (m *PlayerCancelCreateClubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerCancelCreateClubRequest.Marshal(b, m, deterministic)
}
func (m *PlayerCancelCreateClubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerCancelCreateClubRequest.Merge(m, src)
}
func (m *PlayerCancelCreateClubRequest) XXX_Size() int {
	return xxx_messageInfo_PlayerCancelCreateClubRequest.Size(m)
}
func (m *PlayerCancelCreateClubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerCancelCreateClubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerCancelCreateClubRequest proto.InternalMessageInfo

func (m *PlayerCancelCreateClubRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

// 部长发布俱乐部通告的请求协议
type PublishClubNoticeRequest struct {
	// 俱乐部的UUID，用来查找俱乐部
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 公告字符串
	Notice               string   `protobuf:"bytes,2,opt,name=Notice,proto3" json:"Notice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishClubNoticeRequest) Reset()         { *m = PublishClubNoticeRequest{} }
func (m *PublishClubNoticeRequest) String() string { return proto.CompactTextString(m) }
func (*PublishClubNoticeRequest) ProtoMessage()    {}
func (*PublishClubNoticeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{470}
}

func (m *PublishClubNoticeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishClubNoticeRequest.Unmarshal(m, b)
}
func (m *PublishClubNoticeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishClubNoticeRequest.Marshal(b, m, deterministic)
}
func (m *PublishClubNoticeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishClubNoticeRequest.Merge(m, src)
}
func (m *PublishClubNoticeRequest) XXX_Size() int {
	return xxx_messageInfo_PublishClubNoticeRequest.Size(m)
}
func (m *PublishClubNoticeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishClubNoticeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishClubNoticeRequest proto.InternalMessageInfo

func (m *PublishClubNoticeRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *PublishClubNoticeRequest) GetNotice() string {
	if m != nil {
		return m.Notice
	}
	return ""
}

// 部长查询所有俱乐部通告的请求协议
type ListClubNoticeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListClubNoticeRequest) Reset()         { *m = ListClubNoticeRequest{} }
func (m *ListClubNoticeRequest) String() string { return proto.CompactTextString(m) }
func (*ListClubNoticeRequest) ProtoMessage()    {}
func (*ListClubNoticeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{471}
}

func (m *ListClubNoticeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClubNoticeRequest.Unmarshal(m, b)
}
func (m *ListClubNoticeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClubNoticeRequest.Marshal(b, m, deterministic)
}
func (m *ListClubNoticeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClubNoticeRequest.Merge(m, src)
}
func (m *ListClubNoticeRequest) XXX_Size() int {
	return xxx_messageInfo_ListClubNoticeRequest.Size(m)
}
func (m *ListClubNoticeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClubNoticeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListClubNoticeRequest proto.InternalMessageInfo

type ClubNotice struct {
	// 俱乐部的UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 俱乐部名字
	ClubName string `protobuf:"bytes,2,opt,name=ClubName,proto3" json:"ClubName,omitempty"`
	// 该俱乐部的公告字符串
	Notice               string   `protobuf:"bytes,3,opt,name=Notice,proto3" json:"Notice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClubNotice) Reset()         { *m = ClubNotice{} }
func (m *ClubNotice) String() string { return proto.CompactTextString(m) }
func (*ClubNotice) ProtoMessage()    {}
func (*ClubNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{472}
}

func (m *ClubNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubNotice.Unmarshal(m, b)
}
func (m *ClubNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubNotice.Marshal(b, m, deterministic)
}
func (m *ClubNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubNotice.Merge(m, src)
}
func (m *ClubNotice) XXX_Size() int {
	return xxx_messageInfo_ClubNotice.Size(m)
}
func (m *ClubNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubNotice.DiscardUnknown(m)
}

var xxx_messageInfo_ClubNotice proto.InternalMessageInfo

func (m *ClubNotice) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *ClubNotice) GetClubName() string {
	if m != nil {
		return m.ClubName
	}
	return ""
}

func (m *ClubNotice) GetNotice() string {
	if m != nil {
		return m.Notice
	}
	return ""
}

// 列表所有俱乐部通告协议
type ListClubNotice struct {
	// 公告列表
	NoticeList           []*ClubNotice `protobuf:"bytes,1,rep,name=NoticeList,proto3" json:"NoticeList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListClubNotice) Reset()         { *m = ListClubNotice{} }
func (m *ListClubNotice) String() string { return proto.CompactTextString(m) }
func (*ListClubNotice) ProtoMessage()    {}
func (*ListClubNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{473}
}

func (m *ListClubNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClubNotice.Unmarshal(m, b)
}
func (m *ListClubNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClubNotice.Marshal(b, m, deterministic)
}
func (m *ListClubNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClubNotice.Merge(m, src)
}
func (m *ListClubNotice) XXX_Size() int {
	return xxx_messageInfo_ListClubNotice.Size(m)
}
func (m *ListClubNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClubNotice.DiscardUnknown(m)
}

var xxx_messageInfo_ListClubNotice proto.InternalMessageInfo

func (m *ListClubNotice) GetNoticeList() []*ClubNotice {
	if m != nil {
		return m.NoticeList
	}
	return nil
}

// 会员获得俱乐部通告的请求协议
type ClubMemberQueryNoticeRequest struct {
	// 俱乐部的UUID
	ClubUUID             string   `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClubMemberQueryNoticeRequest) Reset()         { *m = ClubMemberQueryNoticeRequest{} }
func (m *ClubMemberQueryNoticeRequest) String() string { return proto.CompactTextString(m) }
func (*ClubMemberQueryNoticeRequest) ProtoMessage()    {}
func (*ClubMemberQueryNoticeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{474}
}

func (m *ClubMemberQueryNoticeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubMemberQueryNoticeRequest.Unmarshal(m, b)
}
func (m *ClubMemberQueryNoticeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubMemberQueryNoticeRequest.Marshal(b, m, deterministic)
}
func (m *ClubMemberQueryNoticeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubMemberQueryNoticeRequest.Merge(m, src)
}
func (m *ClubMemberQueryNoticeRequest) XXX_Size() int {
	return xxx_messageInfo_ClubMemberQueryNoticeRequest.Size(m)
}
func (m *ClubMemberQueryNoticeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubMemberQueryNoticeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClubMemberQueryNoticeRequest proto.InternalMessageInfo

func (m *ClubMemberQueryNoticeRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

// 会员获得俱乐部通告的响应协议
type ClubMemberQueryNoticeReply struct {
	// 公告字符串
	Notice               *ClubNotice `protobuf:"bytes,1,opt,name=Notice,proto3" json:"Notice,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ClubMemberQueryNoticeReply) Reset()         { *m = ClubMemberQueryNoticeReply{} }
func (m *ClubMemberQueryNoticeReply) String() string { return proto.CompactTextString(m) }
func (*ClubMemberQueryNoticeReply) ProtoMessage()    {}
func (*ClubMemberQueryNoticeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{475}
}

func (m *ClubMemberQueryNoticeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubMemberQueryNoticeReply.Unmarshal(m, b)
}
func (m *ClubMemberQueryNoticeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubMemberQueryNoticeReply.Marshal(b, m, deterministic)
}
func (m *ClubMemberQueryNoticeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubMemberQueryNoticeReply.Merge(m, src)
}
func (m *ClubMemberQueryNoticeReply) XXX_Size() int {
	return xxx_messageInfo_ClubMemberQueryNoticeReply.Size(m)
}
func (m *ClubMemberQueryNoticeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubMemberQueryNoticeReply.DiscardUnknown(m)
}

var xxx_messageInfo_ClubMemberQueryNoticeReply proto.InternalMessageInfo

func (m *ClubMemberQueryNoticeReply) GetNotice() *ClubNotice {
	if m != nil {
		return m.Notice
	}
	return nil
}

// 部长设置管理员的请求协议
type ClubMasterSetManagerRequest struct {
	// 俱乐部的UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 会员的UUID
	MemberUUID string `protobuf:"bytes,2,opt,name=MemberUUID,proto3" json:"MemberUUID,omitempty"`
	// true 表示设置为管理员，false 表示取消其管理员身份
	SetAsManager         bool     `protobuf:"varint,3,opt,name=SetAsManager,proto3" json:"SetAsManager,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClubMasterSetManagerRequest) Reset()         { *m = ClubMasterSetManagerRequest{} }
func (m *ClubMasterSetManagerRequest) String() string { return proto.CompactTextString(m) }
func (*ClubMasterSetManagerRequest) ProtoMessage()    {}
func (*ClubMasterSetManagerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{476}
}

func (m *ClubMasterSetManagerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubMasterSetManagerRequest.Unmarshal(m, b)
}
func (m *ClubMasterSetManagerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubMasterSetManagerRequest.Marshal(b, m, deterministic)
}
func (m *ClubMasterSetManagerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubMasterSetManagerRequest.Merge(m, src)
}
func (m *ClubMasterSetManagerRequest) XXX_Size() int {
	return xxx_messageInfo_ClubMasterSetManagerRequest.Size(m)
}
func (m *ClubMasterSetManagerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubMasterSetManagerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClubMasterSetManagerRequest proto.InternalMessageInfo

func (m *ClubMasterSetManagerRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *ClubMasterSetManagerRequest) GetMemberUUID() string {
	if m != nil {
		return m.MemberUUID
	}
	return ""
}

func (m *ClubMasterSetManagerRequest) GetSetAsManager() bool {
	if m != nil {
		return m.SetAsManager
	}
	return false
}

// 显示联盟列表的请求协议
type ClientLeaguePanelRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientLeaguePanelRequest) Reset()         { *m = ClientLeaguePanelRequest{} }
func (m *ClientLeaguePanelRequest) String() string { return proto.CompactTextString(m) }
func (*ClientLeaguePanelRequest) ProtoMessage()    {}
func (*ClientLeaguePanelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{477}
}

func (m *ClientLeaguePanelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientLeaguePanelRequest.Unmarshal(m, b)
}
func (m *ClientLeaguePanelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientLeaguePanelRequest.Marshal(b, m, deterministic)
}
func (m *ClientLeaguePanelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientLeaguePanelRequest.Merge(m, src)
}
func (m *ClientLeaguePanelRequest) XXX_Size() int {
	return xxx_messageInfo_ClientLeaguePanelRequest.Size(m)
}
func (m *ClientLeaguePanelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientLeaguePanelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientLeaguePanelRequest proto.InternalMessageInfo

// 客户端联盟信息
type ClientLeague struct {
	// 联盟UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 联盟名字
	LeagueName string `protobuf:"bytes,2,opt,name=leagueName,proto3" json:"leagueName,omitempty"`
	// 盟主UUID
	MasterUUID string `protobuf:"bytes,3,opt,name=masterUUID,proto3" json:"masterUUID,omitempty"`
	// 盟主名字
	MasterName string `protobuf:"bytes,4,opt,name=masterName,proto3" json:"masterName,omitempty"`
	// 我的身份
	MyRole LeagueMemberRole `protobuf:"varint,5,opt,name=myRole,proto3,enum=LeagueMemberRole" json:"myRole,omitempty"`
	// 已开桌数
	TableCount           int32    `protobuf:"varint,6,opt,name=tableCount,proto3" json:"tableCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientLeague) Reset()         { *m = ClientLeague{} }
func (m *ClientLeague) String() string { return proto.CompactTextString(m) }
func (*ClientLeague) ProtoMessage()    {}
func (*ClientLeague) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{478}
}

func (m *ClientLeague) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientLeague.Unmarshal(m, b)
}
func (m *ClientLeague) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientLeague.Marshal(b, m, deterministic)
}
func (m *ClientLeague) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientLeague.Merge(m, src)
}
func (m *ClientLeague) XXX_Size() int {
	return xxx_messageInfo_ClientLeague.Size(m)
}
func (m *ClientLeague) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientLeague.DiscardUnknown(m)
}

var xxx_messageInfo_ClientLeague proto.InternalMessageInfo

func (m *ClientLeague) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *ClientLeague) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ClientLeague) GetMasterUUID() string {
	if m != nil {
		return m.MasterUUID
	}
	return ""
}

func (m *ClientLeague) GetMasterName() string {
	if m != nil {
		return m.MasterName
	}
	return ""
}

func (m *ClientLeague) GetMyRole() LeagueMemberRole {
	if m != nil {
		return m.MyRole
	}
	return LeagueMemberRole_LeagueNone
}

func (m *ClientLeague) GetTableCount() int32 {
	if m != nil {
		return m.TableCount
	}
	return 0
}

// 显示联盟列表的响应协议
type ClientLeaguePanelReply struct {
	// 有效的联盟个数
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// 联盟信息列表
	Leagues              []*ClientLeague `protobuf:"bytes,2,rep,name=leagues,proto3" json:"leagues,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ClientLeaguePanelReply) Reset()         { *m = ClientLeaguePanelReply{} }
func (m *ClientLeaguePanelReply) String() string { return proto.CompactTextString(m) }
func (*ClientLeaguePanelReply) ProtoMessage()    {}
func (*ClientLeaguePanelReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{479}
}

func (m *ClientLeaguePanelReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientLeaguePanelReply.Unmarshal(m, b)
}
func (m *ClientLeaguePanelReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientLeaguePanelReply.Marshal(b, m, deterministic)
}
func (m *ClientLeaguePanelReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientLeaguePanelReply.Merge(m, src)
}
func (m *ClientLeaguePanelReply) XXX_Size() int {
	return xxx_messageInfo_ClientLeaguePanelReply.Size(m)
}
func (m *ClientLeaguePanelReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientLeaguePanelReply.DiscardUnknown(m)
}

var xxx_messageInfo_ClientLeaguePanelReply proto.InternalMessageInfo

func (m *ClientLeaguePanelReply) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ClientLeaguePanelReply) GetLeagues() []*ClientLeague {
	if m != nil {
		return m.Leagues
	}
	return nil
}

// 显示联盟房间的请求协议
type ShowLeagueRoomRequest struct {
	// 联盟UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 游戏类型
	GameType GameType `protobuf:"varint,2,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 显示的页
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// 每页显示数目
	Count                int32    `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowLeagueRoomRequest) Reset()         { *m = ShowLeagueRoomRequest{} }
func (m *ShowLeagueRoomRequest) String() string { return proto.CompactTextString(m) }
func (*ShowLeagueRoomRequest) ProtoMessage()    {}
func (*ShowLeagueRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{480}
}

func (m *ShowLeagueRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowLeagueRoomRequest.Unmarshal(m, b)
}
func (m *ShowLeagueRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowLeagueRoomRequest.Marshal(b, m, deterministic)
}
func (m *ShowLeagueRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowLeagueRoomRequest.Merge(m, src)
}
func (m *ShowLeagueRoomRequest) XXX_Size() int {
	return xxx_messageInfo_ShowLeagueRoomRequest.Size(m)
}
func (m *ShowLeagueRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowLeagueRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShowLeagueRoomRequest proto.InternalMessageInfo

func (m *ShowLeagueRoomRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *ShowLeagueRoomRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *ShowLeagueRoomRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ShowLeagueRoomRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// 显示联盟房间的响应协议
type ShowLeagueRoomReply struct {
	// 联盟UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 游戏类型
	GameType GameType `protobuf:"varint,2,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 显示的页
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// 当前页显示房间数
	Count int32 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	// 当前类型的房间总数
	TotalCount           int32    `protobuf:"varint,5,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowLeagueRoomReply) Reset()         { *m = ShowLeagueRoomReply{} }
func (m *ShowLeagueRoomReply) String() string { return proto.CompactTextString(m) }
func (*ShowLeagueRoomReply) ProtoMessage()    {}
func (*ShowLeagueRoomReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{481}
}

func (m *ShowLeagueRoomReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowLeagueRoomReply.Unmarshal(m, b)
}
func (m *ShowLeagueRoomReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowLeagueRoomReply.Marshal(b, m, deterministic)
}
func (m *ShowLeagueRoomReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowLeagueRoomReply.Merge(m, src)
}
func (m *ShowLeagueRoomReply) XXX_Size() int {
	return xxx_messageInfo_ShowLeagueRoomReply.Size(m)
}
func (m *ShowLeagueRoomReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowLeagueRoomReply.DiscardUnknown(m)
}

var xxx_messageInfo_ShowLeagueRoomReply proto.InternalMessageInfo

func (m *ShowLeagueRoomReply) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *ShowLeagueRoomReply) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *ShowLeagueRoomReply) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ShowLeagueRoomReply) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ShowLeagueRoomReply) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

// 用户进出俱乐部大厅接口的请求协议
type EnterClubLobbyRequest struct {
	// 俱乐部的UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// true为进入操作，false为退出操作
	IsEnter              bool     `protobuf:"varint,2,opt,name=isEnter,proto3" json:"isEnter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnterClubLobbyRequest) Reset()         { *m = EnterClubLobbyRequest{} }
func (m *EnterClubLobbyRequest) String() string { return proto.CompactTextString(m) }
func (*EnterClubLobbyRequest) ProtoMessage()    {}
func (*EnterClubLobbyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{482}
}

func (m *EnterClubLobbyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnterClubLobbyRequest.Unmarshal(m, b)
}
func (m *EnterClubLobbyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnterClubLobbyRequest.Marshal(b, m, deterministic)
}
func (m *EnterClubLobbyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnterClubLobbyRequest.Merge(m, src)
}
func (m *EnterClubLobbyRequest) XXX_Size() int {
	return xxx_messageInfo_EnterClubLobbyRequest.Size(m)
}
func (m *EnterClubLobbyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnterClubLobbyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnterClubLobbyRequest proto.InternalMessageInfo

func (m *EnterClubLobbyRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *EnterClubLobbyRequest) GetIsEnter() bool {
	if m != nil {
		return m.IsEnter
	}
	return false
}

// 用户进出俱乐部大厅接口的返回协议
type EnterClubLobbyReply struct {
	// 俱乐部的UUID
	ClubUUID string `protobuf:"bytes,1,opt,name=ClubUUID,proto3" json:"ClubUUID,omitempty"`
	// 大厅中的玩家人数
	LobbyPlayerCount     int32    `protobuf:"varint,2,opt,name=lobbyPlayerCount,proto3" json:"lobbyPlayerCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnterClubLobbyReply) Reset()         { *m = EnterClubLobbyReply{} }
func (m *EnterClubLobbyReply) String() string { return proto.CompactTextString(m) }
func (*EnterClubLobbyReply) ProtoMessage()    {}
func (*EnterClubLobbyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{483}
}

func (m *EnterClubLobbyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnterClubLobbyReply.Unmarshal(m, b)
}
func (m *EnterClubLobbyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnterClubLobbyReply.Marshal(b, m, deterministic)
}
func (m *EnterClubLobbyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnterClubLobbyReply.Merge(m, src)
}
func (m *EnterClubLobbyReply) XXX_Size() int {
	return xxx_messageInfo_EnterClubLobbyReply.Size(m)
}
func (m *EnterClubLobbyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EnterClubLobbyReply.DiscardUnknown(m)
}

var xxx_messageInfo_EnterClubLobbyReply proto.InternalMessageInfo

func (m *EnterClubLobbyReply) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *EnterClubLobbyReply) GetLobbyPlayerCount() int32 {
	if m != nil {
		return m.LobbyPlayerCount
	}
	return 0
}

// 联盟通用设置
type LeagueSettings struct {
	// 是否需要审核
	NeedCheck bool `protobuf:"varint,1,opt,name=NeedCheck,proto3" json:"NeedCheck,omitempty"`
	// 是否打烊
	IsClose bool `protobuf:"varint,2,opt,name=IsClose,proto3" json:"IsClose,omitempty"`
	// 是否保护隐私
	NeedPrivate          bool     `protobuf:"varint,3,opt,name=NeedPrivate,proto3" json:"NeedPrivate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeagueSettings) Reset()         { *m = LeagueSettings{} }
func (m *LeagueSettings) String() string { return proto.CompactTextString(m) }
func (*LeagueSettings) ProtoMessage()    {}
func (*LeagueSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{484}
}

func (m *LeagueSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueSettings.Unmarshal(m, b)
}
func (m *LeagueSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueSettings.Marshal(b, m, deterministic)
}
func (m *LeagueSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueSettings.Merge(m, src)
}
func (m *LeagueSettings) XXX_Size() int {
	return xxx_messageInfo_LeagueSettings.Size(m)
}
func (m *LeagueSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueSettings.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueSettings proto.InternalMessageInfo

func (m *LeagueSettings) GetNeedCheck() bool {
	if m != nil {
		return m.NeedCheck
	}
	return false
}

func (m *LeagueSettings) GetIsClose() bool {
	if m != nil {
		return m.IsClose
	}
	return false
}

func (m *LeagueSettings) GetNeedPrivate() bool {
	if m != nil {
		return m.NeedPrivate
	}
	return false
}

// 联盟基础信息
type LeagueInfo struct {
	// 联盟UUID，永远不会改变
	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// 联盟邀请码
	InviteCode string `protobuf:"bytes,2,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	// 联盟名称，必须唯一
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 盟主uuid
	MasterUUID string `protobuf:"bytes,4,opt,name=masterUUID,proto3" json:"masterUUID,omitempty"`
	// 联盟状态
	Status LeagueStatus `protobuf:"varint,5,opt,name=Status,proto3,enum=LeagueStatus" json:"Status,omitempty"`
	// 联盟创建时间
	CreateTime int64 `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 联盟状态改变时间
	StatusChangeTime int64 `protobuf:"varint,7,opt,name=statusChangeTime,proto3" json:"statusChangeTime,omitempty"`
	//更新时间
	LastUpdateTime int64 `protobuf:"varint,8,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime,omitempty"`
	// 俱乐部详情
	Details              *LeagueDetail `protobuf:"bytes,9,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LeagueInfo) Reset()         { *m = LeagueInfo{} }
func (m *LeagueInfo) String() string { return proto.CompactTextString(m) }
func (*LeagueInfo) ProtoMessage()    {}
func (*LeagueInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{485}
}

func (m *LeagueInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueInfo.Unmarshal(m, b)
}
func (m *LeagueInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueInfo.Marshal(b, m, deterministic)
}
func (m *LeagueInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueInfo.Merge(m, src)
}
func (m *LeagueInfo) XXX_Size() int {
	return xxx_messageInfo_LeagueInfo.Size(m)
}
func (m *LeagueInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueInfo proto.InternalMessageInfo

func (m *LeagueInfo) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *LeagueInfo) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *LeagueInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LeagueInfo) GetMasterUUID() string {
	if m != nil {
		return m.MasterUUID
	}
	return ""
}

func (m *LeagueInfo) GetStatus() LeagueStatus {
	if m != nil {
		return m.Status
	}
	return LeagueStatus_LeagueApplyIng
}

func (m *LeagueInfo) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *LeagueInfo) GetStatusChangeTime() int64 {
	if m != nil {
		return m.StatusChangeTime
	}
	return 0
}

func (m *LeagueInfo) GetLastUpdateTime() int64 {
	if m != nil {
		return m.LastUpdateTime
	}
	return 0
}

func (m *LeagueInfo) GetDetails() *LeagueDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

// 联盟详情
type LeagueDetail struct {
	//联盟设置
	Settings *LeagueSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	//俱乐部列表
	Clubs []*LeagueClubInfo `protobuf:"bytes,2,rep,name=clubs,proto3" json:"clubs,omitempty"`
	//联盟抽水设置
	CommissionSettings []*LeagueCommissionSetting `protobuf:"bytes,3,rep,name=commissionSettings,proto3" json:"commissionSettings,omitempty"`
	//申请列表
	JoinRequests []*JoinLeagueRequestInfo `protobuf:"bytes,4,rep,name=joinRequests,proto3" json:"joinRequests,omitempty"`
	//房间列表
	Rooms                []*RoomCodeInfo `protobuf:"bytes,5,rep,name=rooms,proto3" json:"rooms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LeagueDetail) Reset()         { *m = LeagueDetail{} }
func (m *LeagueDetail) String() string { return proto.CompactTextString(m) }
func (*LeagueDetail) ProtoMessage()    {}
func (*LeagueDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{486}
}

func (m *LeagueDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueDetail.Unmarshal(m, b)
}
func (m *LeagueDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueDetail.Marshal(b, m, deterministic)
}
func (m *LeagueDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueDetail.Merge(m, src)
}
func (m *LeagueDetail) XXX_Size() int {
	return xxx_messageInfo_LeagueDetail.Size(m)
}
func (m *LeagueDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueDetail.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueDetail proto.InternalMessageInfo

func (m *LeagueDetail) GetSettings() *LeagueSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *LeagueDetail) GetClubs() []*LeagueClubInfo {
	if m != nil {
		return m.Clubs
	}
	return nil
}

func (m *LeagueDetail) GetCommissionSettings() []*LeagueCommissionSetting {
	if m != nil {
		return m.CommissionSettings
	}
	return nil
}

func (m *LeagueDetail) GetJoinRequests() []*JoinLeagueRequestInfo {
	if m != nil {
		return m.JoinRequests
	}
	return nil
}

func (m *LeagueDetail) GetRooms() []*RoomCodeInfo {
	if m != nil {
		return m.Rooms
	}
	return nil
}

//联盟抽水设置
type LeagueCommissionSetting struct {
	//游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	//抽水比例（百分比）
	Commission int64 `protobuf:"varint,2,opt,name=commission,proto3" json:"commission,omitempty"`
	//最后更新时间
	LastUpdateTime       int64    `protobuf:"varint,3,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeagueCommissionSetting) Reset()         { *m = LeagueCommissionSetting{} }
func (m *LeagueCommissionSetting) String() string { return proto.CompactTextString(m) }
func (*LeagueCommissionSetting) ProtoMessage()    {}
func (*LeagueCommissionSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{487}
}

func (m *LeagueCommissionSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueCommissionSetting.Unmarshal(m, b)
}
func (m *LeagueCommissionSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueCommissionSetting.Marshal(b, m, deterministic)
}
func (m *LeagueCommissionSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueCommissionSetting.Merge(m, src)
}
func (m *LeagueCommissionSetting) XXX_Size() int {
	return xxx_messageInfo_LeagueCommissionSetting.Size(m)
}
func (m *LeagueCommissionSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueCommissionSetting.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueCommissionSetting proto.InternalMessageInfo

func (m *LeagueCommissionSetting) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *LeagueCommissionSetting) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *LeagueCommissionSetting) GetLastUpdateTime() int64 {
	if m != nil {
		return m.LastUpdateTime
	}
	return 0
}

//联盟俱乐部信息
type LeagueClubInfo struct {
	//俱乐部ID
	ClubUUID string `protobuf:"bytes,1,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	//部长ID
	MasterUUID string `protobuf:"bytes,2,opt,name=masterUUID,proto3" json:"masterUUID,omitempty"`
	//俱乐部状态
	Status LeagueClubStatus `protobuf:"varint,3,opt,name=status,proto3,enum=LeagueClubStatus" json:"status,omitempty"`
	//申请时间
	RequestTime int64 `protobuf:"varint,4,opt,name=requestTime,proto3" json:"requestTime,omitempty"`
	//状态改变时间
	StatusChangeTime int64 `protobuf:"varint,5,opt,name=statusChangeTime,proto3" json:"statusChangeTime,omitempty"`
	//俱乐部对应的联盟邀请玛
	InviteCode string `protobuf:"bytes,6,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	//邀请人UUID（邀请的俱乐部部长id或联盟长ID）
	InviterUUID string `protobuf:"bytes,7,opt,name=inviterUUID,proto3" json:"inviterUUID,omitempty"`
	//邀请人shortID
	InviterShortId string `protobuf:"bytes,8,opt,name=inviterShortId,proto3" json:"inviterShortId,omitempty"`
	//分成比例
	Proportion           int64    `protobuf:"varint,9,opt,name=proportion,proto3" json:"proportion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeagueClubInfo) Reset()         { *m = LeagueClubInfo{} }
func (m *LeagueClubInfo) String() string { return proto.CompactTextString(m) }
func (*LeagueClubInfo) ProtoMessage()    {}
func (*LeagueClubInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{488}
}

func (m *LeagueClubInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueClubInfo.Unmarshal(m, b)
}
func (m *LeagueClubInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueClubInfo.Marshal(b, m, deterministic)
}
func (m *LeagueClubInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueClubInfo.Merge(m, src)
}
func (m *LeagueClubInfo) XXX_Size() int {
	return xxx_messageInfo_LeagueClubInfo.Size(m)
}
func (m *LeagueClubInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueClubInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueClubInfo proto.InternalMessageInfo

func (m *LeagueClubInfo) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *LeagueClubInfo) GetMasterUUID() string {
	if m != nil {
		return m.MasterUUID
	}
	return ""
}

func (m *LeagueClubInfo) GetStatus() LeagueClubStatus {
	if m != nil {
		return m.Status
	}
	return LeagueClubStatus_LeagueClubNone
}

func (m *LeagueClubInfo) GetRequestTime() int64 {
	if m != nil {
		return m.RequestTime
	}
	return 0
}

func (m *LeagueClubInfo) GetStatusChangeTime() int64 {
	if m != nil {
		return m.StatusChangeTime
	}
	return 0
}

func (m *LeagueClubInfo) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *LeagueClubInfo) GetInviterUUID() string {
	if m != nil {
		return m.InviterUUID
	}
	return ""
}

func (m *LeagueClubInfo) GetInviterShortId() string {
	if m != nil {
		return m.InviterShortId
	}
	return ""
}

func (m *LeagueClubInfo) GetProportion() int64 {
	if m != nil {
		return m.Proportion
	}
	return 0
}

type LeagueDoRequest struct {
	// 想要进行的操作
	DoType LeagueDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=LeagueDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeagueDoRequest) Reset()         { *m = LeagueDoRequest{} }
func (m *LeagueDoRequest) String() string { return proto.CompactTextString(m) }
func (*LeagueDoRequest) ProtoMessage()    {}
func (*LeagueDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{489}
}

func (m *LeagueDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueDoRequest.Unmarshal(m, b)
}
func (m *LeagueDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueDoRequest.Marshal(b, m, deterministic)
}
func (m *LeagueDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueDoRequest.Merge(m, src)
}
func (m *LeagueDoRequest) XXX_Size() int {
	return xxx_messageInfo_LeagueDoRequest.Size(m)
}
func (m *LeagueDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueDoRequest proto.InternalMessageInfo

func (m *LeagueDoRequest) GetDoType() LeagueDoType {
	if m != nil {
		return m.DoType
	}
	return LeagueDoType_LeagueDo_None
}

func (m *LeagueDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 返回联盟列表
type ListMyLeague struct {
	// 联盟信息
	LeagueInfo           []string `protobuf:"bytes,1,rep,name=leagueInfo,proto3" json:"leagueInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMyLeague) Reset()         { *m = ListMyLeague{} }
func (m *ListMyLeague) String() string { return proto.CompactTextString(m) }
func (*ListMyLeague) ProtoMessage()    {}
func (*ListMyLeague) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{490}
}

func (m *ListMyLeague) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMyLeague.Unmarshal(m, b)
}
func (m *ListMyLeague) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMyLeague.Marshal(b, m, deterministic)
}
func (m *ListMyLeague) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMyLeague.Merge(m, src)
}
func (m *ListMyLeague) XXX_Size() int {
	return xxx_messageInfo_ListMyLeague.Size(m)
}
func (m *ListMyLeague) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMyLeague.DiscardUnknown(m)
}

var xxx_messageInfo_ListMyLeague proto.InternalMessageInfo

func (m *ListMyLeague) GetLeagueInfo() []string {
	if m != nil {
		return m.LeagueInfo
	}
	return nil
}

//创建联盟到数据库请求
type InsertLeague2MysqlRequest struct {
	Data                 *LeagueInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *InsertLeague2MysqlRequest) Reset()         { *m = InsertLeague2MysqlRequest{} }
func (m *InsertLeague2MysqlRequest) String() string { return proto.CompactTextString(m) }
func (*InsertLeague2MysqlRequest) ProtoMessage()    {}
func (*InsertLeague2MysqlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{491}
}

func (m *InsertLeague2MysqlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertLeague2MysqlRequest.Unmarshal(m, b)
}
func (m *InsertLeague2MysqlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertLeague2MysqlRequest.Marshal(b, m, deterministic)
}
func (m *InsertLeague2MysqlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertLeague2MysqlRequest.Merge(m, src)
}
func (m *InsertLeague2MysqlRequest) XXX_Size() int {
	return xxx_messageInfo_InsertLeague2MysqlRequest.Size(m)
}
func (m *InsertLeague2MysqlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertLeague2MysqlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertLeague2MysqlRequest proto.InternalMessageInfo

func (m *InsertLeague2MysqlRequest) GetData() *LeagueInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

//从数据库中获取联盟信息
type GetLeagueFromMysqlRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeagueFromMysqlRequest) Reset()         { *m = GetLeagueFromMysqlRequest{} }
func (m *GetLeagueFromMysqlRequest) String() string { return proto.CompactTextString(m) }
func (*GetLeagueFromMysqlRequest) ProtoMessage()    {}
func (*GetLeagueFromMysqlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{492}
}

func (m *GetLeagueFromMysqlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueFromMysqlRequest.Unmarshal(m, b)
}
func (m *GetLeagueFromMysqlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueFromMysqlRequest.Marshal(b, m, deterministic)
}
func (m *GetLeagueFromMysqlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueFromMysqlRequest.Merge(m, src)
}
func (m *GetLeagueFromMysqlRequest) XXX_Size() int {
	return xxx_messageInfo_GetLeagueFromMysqlRequest.Size(m)
}
func (m *GetLeagueFromMysqlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueFromMysqlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueFromMysqlRequest proto.InternalMessageInfo

func (m *GetLeagueFromMysqlRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

// 创建联盟 - 请求
type CreateLeagueRequest struct {
	// 联盟名字
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLeagueRequest) Reset()         { *m = CreateLeagueRequest{} }
func (m *CreateLeagueRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLeagueRequest) ProtoMessage()    {}
func (*CreateLeagueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{493}
}

func (m *CreateLeagueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLeagueRequest.Unmarshal(m, b)
}
func (m *CreateLeagueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLeagueRequest.Marshal(b, m, deterministic)
}
func (m *CreateLeagueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLeagueRequest.Merge(m, src)
}
func (m *CreateLeagueRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLeagueRequest.Size(m)
}
func (m *CreateLeagueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLeagueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLeagueRequest proto.InternalMessageInfo

func (m *CreateLeagueRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 创建联盟 - 响应
type CreateLeagueReply struct {
	// 联盟UUID
	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// 联盟邀请码, 十位字符串
	InviteCode           string   `protobuf:"bytes,2,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLeagueReply) Reset()         { *m = CreateLeagueReply{} }
func (m *CreateLeagueReply) String() string { return proto.CompactTextString(m) }
func (*CreateLeagueReply) ProtoMessage()    {}
func (*CreateLeagueReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{494}
}

func (m *CreateLeagueReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLeagueReply.Unmarshal(m, b)
}
func (m *CreateLeagueReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLeagueReply.Marshal(b, m, deterministic)
}
func (m *CreateLeagueReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLeagueReply.Merge(m, src)
}
func (m *CreateLeagueReply) XXX_Size() int {
	return xxx_messageInfo_CreateLeagueReply.Size(m)
}
func (m *CreateLeagueReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLeagueReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLeagueReply proto.InternalMessageInfo

func (m *CreateLeagueReply) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *CreateLeagueReply) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

//加入联盟申请信息
type JoinLeagueRequestInfo struct {
	//请求ID
	RequestID string `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	//联盟ID
	LeagueUUID string `protobuf:"bytes,2,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	//邀请人id
	InviterUUID string `protobuf:"bytes,3,opt,name=inviterUUID,proto3" json:"inviterUUID,omitempty"`
	//请求人ID
	RequestPlayerID string                  `protobuf:"bytes,4,opt,name=requestPlayerID,proto3" json:"requestPlayerID,omitempty"`
	Status          JoinLeagueRequestStatus `protobuf:"varint,5,opt,name=status,proto3,enum=JoinLeagueRequestStatus" json:"status,omitempty"`
	//请求时间
	RequestTime int64 `protobuf:"varint,6,opt,name=requestTime,proto3" json:"requestTime,omitempty"`
	//状态改变时间
	StatusChangeTime int64 `protobuf:"varint,7,opt,name=statusChangeTime,proto3" json:"statusChangeTime,omitempty"`
	//申请的俱乐部ID
	ClubUUID string `protobuf:"bytes,8,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	//俱乐部名称
	ClubName string `protobuf:"bytes,9,opt,name=clubName,proto3" json:"clubName,omitempty"`
	//俱乐部部长名称
	ClubMasterName string `protobuf:"bytes,10,opt,name=clubMasterName,proto3" json:"clubMasterName,omitempty"`
	//俱乐部部长shortID
	ClubMasterShortId string `protobuf:"bytes,11,opt,name=clubMasterShortId,proto3" json:"clubMasterShortId,omitempty"`
	//俱乐部邀请码
	ClubInviteCode string `protobuf:"bytes,12,opt,name=clubInviteCode,proto3" json:"clubInviteCode,omitempty"`
	//俱乐部部长头像
	HeadImgUrl string `protobuf:"bytes,13,opt,name=headImgUrl,proto3" json:"headImgUrl,omitempty"`
	//邀请人姓名
	InviterName string `protobuf:"bytes,14,opt,name=inviterName,proto3" json:"inviterName,omitempty"`
	//邀请人shortId
	InviterShortId       string   `protobuf:"bytes,15,opt,name=inviterShortId,proto3" json:"inviterShortId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinLeagueRequestInfo) Reset()         { *m = JoinLeagueRequestInfo{} }
func (m *JoinLeagueRequestInfo) String() string { return proto.CompactTextString(m) }
func (*JoinLeagueRequestInfo) ProtoMessage()    {}
func (*JoinLeagueRequestInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{495}
}

func (m *JoinLeagueRequestInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinLeagueRequestInfo.Unmarshal(m, b)
}
func (m *JoinLeagueRequestInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinLeagueRequestInfo.Marshal(b, m, deterministic)
}
func (m *JoinLeagueRequestInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinLeagueRequestInfo.Merge(m, src)
}
func (m *JoinLeagueRequestInfo) XXX_Size() int {
	return xxx_messageInfo_JoinLeagueRequestInfo.Size(m)
}
func (m *JoinLeagueRequestInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinLeagueRequestInfo.DiscardUnknown(m)
}

var xxx_messageInfo_JoinLeagueRequestInfo proto.InternalMessageInfo

func (m *JoinLeagueRequestInfo) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func (m *JoinLeagueRequestInfo) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *JoinLeagueRequestInfo) GetInviterUUID() string {
	if m != nil {
		return m.InviterUUID
	}
	return ""
}

func (m *JoinLeagueRequestInfo) GetRequestPlayerID() string {
	if m != nil {
		return m.RequestPlayerID
	}
	return ""
}

func (m *JoinLeagueRequestInfo) GetStatus() JoinLeagueRequestStatus {
	if m != nil {
		return m.Status
	}
	return JoinLeagueRequestStatus_JoinLeagueRequestStatus_ApplyIng
}

func (m *JoinLeagueRequestInfo) GetRequestTime() int64 {
	if m != nil {
		return m.RequestTime
	}
	return 0
}

func (m *JoinLeagueRequestInfo) GetStatusChangeTime() int64 {
	if m != nil {
		return m.StatusChangeTime
	}
	return 0
}

func (m *JoinLeagueRequestInfo) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *JoinLeagueRequestInfo) GetClubName() string {
	if m != nil {
		return m.ClubName
	}
	return ""
}

func (m *JoinLeagueRequestInfo) GetClubMasterName() string {
	if m != nil {
		return m.ClubMasterName
	}
	return ""
}

func (m *JoinLeagueRequestInfo) GetClubMasterShortId() string {
	if m != nil {
		return m.ClubMasterShortId
	}
	return ""
}

func (m *JoinLeagueRequestInfo) GetClubInviteCode() string {
	if m != nil {
		return m.ClubInviteCode
	}
	return ""
}

func (m *JoinLeagueRequestInfo) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *JoinLeagueRequestInfo) GetInviterName() string {
	if m != nil {
		return m.InviterName
	}
	return ""
}

func (m *JoinLeagueRequestInfo) GetInviterShortId() string {
	if m != nil {
		return m.InviterShortId
	}
	return ""
}

// 处理联盟加入申请 - 请求
type HandleLeagueApplyRequest struct {
	// 联盟UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 加入的申请ID列表
	ApplyID []string `protobuf:"bytes,2,rep,name=applyID,proto3" json:"applyID,omitempty"`
	// 处理状态, true表示通过, false表示拒绝
	Pass                 bool     `protobuf:"varint,3,opt,name=pass,proto3" json:"pass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandleLeagueApplyRequest) Reset()         { *m = HandleLeagueApplyRequest{} }
func (m *HandleLeagueApplyRequest) String() string { return proto.CompactTextString(m) }
func (*HandleLeagueApplyRequest) ProtoMessage()    {}
func (*HandleLeagueApplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{496}
}

func (m *HandleLeagueApplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleLeagueApplyRequest.Unmarshal(m, b)
}
func (m *HandleLeagueApplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleLeagueApplyRequest.Marshal(b, m, deterministic)
}
func (m *HandleLeagueApplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleLeagueApplyRequest.Merge(m, src)
}
func (m *HandleLeagueApplyRequest) XXX_Size() int {
	return xxx_messageInfo_HandleLeagueApplyRequest.Size(m)
}
func (m *HandleLeagueApplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleLeagueApplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandleLeagueApplyRequest proto.InternalMessageInfo

func (m *HandleLeagueApplyRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *HandleLeagueApplyRequest) GetApplyID() []string {
	if m != nil {
		return m.ApplyID
	}
	return nil
}

func (m *HandleLeagueApplyRequest) GetPass() bool {
	if m != nil {
		return m.Pass
	}
	return false
}

// 处理联盟加入申请 - 响应
type HandleLeagueApplyReply struct {
	// 联盟UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 处理状态, true表示通过, false表示拒绝
	Pass bool `protobuf:"varint,2,opt,name=pass,proto3" json:"pass,omitempty"`
	//待处理的条数
	HandleRequestCount int32 `protobuf:"varint,3,opt,name=handleRequestCount,proto3" json:"handleRequestCount,omitempty"`
	//处理成功的
	SuccessedCount       int32    `protobuf:"varint,4,opt,name=successedCount,proto3" json:"successedCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandleLeagueApplyReply) Reset()         { *m = HandleLeagueApplyReply{} }
func (m *HandleLeagueApplyReply) String() string { return proto.CompactTextString(m) }
func (*HandleLeagueApplyReply) ProtoMessage()    {}
func (*HandleLeagueApplyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{497}
}

func (m *HandleLeagueApplyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleLeagueApplyReply.Unmarshal(m, b)
}
func (m *HandleLeagueApplyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleLeagueApplyReply.Marshal(b, m, deterministic)
}
func (m *HandleLeagueApplyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleLeagueApplyReply.Merge(m, src)
}
func (m *HandleLeagueApplyReply) XXX_Size() int {
	return xxx_messageInfo_HandleLeagueApplyReply.Size(m)
}
func (m *HandleLeagueApplyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleLeagueApplyReply.DiscardUnknown(m)
}

var xxx_messageInfo_HandleLeagueApplyReply proto.InternalMessageInfo

func (m *HandleLeagueApplyReply) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *HandleLeagueApplyReply) GetPass() bool {
	if m != nil {
		return m.Pass
	}
	return false
}

func (m *HandleLeagueApplyReply) GetHandleRequestCount() int32 {
	if m != nil {
		return m.HandleRequestCount
	}
	return 0
}

func (m *HandleLeagueApplyReply) GetSuccessedCount() int32 {
	if m != nil {
		return m.SuccessedCount
	}
	return 0
}

// 盟主设置管理员的请求协议
type SetManagerRequest struct {
	// 联盟的UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 会员的UUID
	MemberUUID string `protobuf:"bytes,2,opt,name=memberUUID,proto3" json:"memberUUID,omitempty"`
	// true 表示设置为管理员，false 表示取消其管理员身份
	SetAsManager         bool     `protobuf:"varint,3,opt,name=setAsManager,proto3" json:"setAsManager,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetManagerRequest) Reset()         { *m = SetManagerRequest{} }
func (m *SetManagerRequest) String() string { return proto.CompactTextString(m) }
func (*SetManagerRequest) ProtoMessage()    {}
func (*SetManagerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{498}
}

func (m *SetManagerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetManagerRequest.Unmarshal(m, b)
}
func (m *SetManagerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetManagerRequest.Marshal(b, m, deterministic)
}
func (m *SetManagerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetManagerRequest.Merge(m, src)
}
func (m *SetManagerRequest) XXX_Size() int {
	return xxx_messageInfo_SetManagerRequest.Size(m)
}
func (m *SetManagerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetManagerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetManagerRequest proto.InternalMessageInfo

func (m *SetManagerRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *SetManagerRequest) GetMemberUUID() string {
	if m != nil {
		return m.MemberUUID
	}
	return ""
}

func (m *SetManagerRequest) GetSetAsManager() bool {
	if m != nil {
		return m.SetAsManager
	}
	return false
}

// 盟主设置管理员的响应协议
type SetManagerReply struct {
	MemberInfo           *LeagueMemberAllInfo `protobuf:"bytes,1,opt,name=memberInfo,proto3" json:"memberInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SetManagerReply) Reset()         { *m = SetManagerReply{} }
func (m *SetManagerReply) String() string { return proto.CompactTextString(m) }
func (*SetManagerReply) ProtoMessage()    {}
func (*SetManagerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{499}
}

func (m *SetManagerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetManagerReply.Unmarshal(m, b)
}
func (m *SetManagerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetManagerReply.Marshal(b, m, deterministic)
}
func (m *SetManagerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetManagerReply.Merge(m, src)
}
func (m *SetManagerReply) XXX_Size() int {
	return xxx_messageInfo_SetManagerReply.Size(m)
}
func (m *SetManagerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetManagerReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetManagerReply proto.InternalMessageInfo

func (m *SetManagerReply) GetMemberInfo() *LeagueMemberAllInfo {
	if m != nil {
		return m.MemberInfo
	}
	return nil
}

//联盟长冻结玩家请求协议
type FreezeLeagueMemberRequest struct {
	// 联盟的UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 会员的UUID
	MemberUUID string `protobuf:"bytes,2,opt,name=memberUUID,proto3" json:"memberUUID,omitempty"`
	//true 表示冻结，false表示取消冻结
	IsFreeze             bool     `protobuf:"varint,3,opt,name=isFreeze,proto3" json:"isFreeze,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FreezeLeagueMemberRequest) Reset()         { *m = FreezeLeagueMemberRequest{} }
func (m *FreezeLeagueMemberRequest) String() string { return proto.CompactTextString(m) }
func (*FreezeLeagueMemberRequest) ProtoMessage()    {}
func (*FreezeLeagueMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{500}
}

func (m *FreezeLeagueMemberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreezeLeagueMemberRequest.Unmarshal(m, b)
}
func (m *FreezeLeagueMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreezeLeagueMemberRequest.Marshal(b, m, deterministic)
}
func (m *FreezeLeagueMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreezeLeagueMemberRequest.Merge(m, src)
}
func (m *FreezeLeagueMemberRequest) XXX_Size() int {
	return xxx_messageInfo_FreezeLeagueMemberRequest.Size(m)
}
func (m *FreezeLeagueMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FreezeLeagueMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FreezeLeagueMemberRequest proto.InternalMessageInfo

func (m *FreezeLeagueMemberRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *FreezeLeagueMemberRequest) GetMemberUUID() string {
	if m != nil {
		return m.MemberUUID
	}
	return ""
}

func (m *FreezeLeagueMemberRequest) GetIsFreeze() bool {
	if m != nil {
		return m.IsFreeze
	}
	return false
}

//联盟长冻结玩家请求回复
type FreezeLeagueMemberReply struct {
	MemberInfo           *LeagueMemberAllInfo `protobuf:"bytes,1,opt,name=memberInfo,proto3" json:"memberInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FreezeLeagueMemberReply) Reset()         { *m = FreezeLeagueMemberReply{} }
func (m *FreezeLeagueMemberReply) String() string { return proto.CompactTextString(m) }
func (*FreezeLeagueMemberReply) ProtoMessage()    {}
func (*FreezeLeagueMemberReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{501}
}

func (m *FreezeLeagueMemberReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreezeLeagueMemberReply.Unmarshal(m, b)
}
func (m *FreezeLeagueMemberReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreezeLeagueMemberReply.Marshal(b, m, deterministic)
}
func (m *FreezeLeagueMemberReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreezeLeagueMemberReply.Merge(m, src)
}
func (m *FreezeLeagueMemberReply) XXX_Size() int {
	return xxx_messageInfo_FreezeLeagueMemberReply.Size(m)
}
func (m *FreezeLeagueMemberReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FreezeLeagueMemberReply.DiscardUnknown(m)
}

var xxx_messageInfo_FreezeLeagueMemberReply proto.InternalMessageInfo

func (m *FreezeLeagueMemberReply) GetMemberInfo() *LeagueMemberAllInfo {
	if m != nil {
		return m.MemberInfo
	}
	return nil
}

// 申请加入联盟 - 请求
type JoinLeagueApplyRequest struct {
	// 联盟邀请码, 7位数字
	InviteCode string `protobuf:"bytes,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	// 合作者想要加入的所有俱乐部UUID列表
	ClubUUID             []string `protobuf:"bytes,2,rep,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinLeagueApplyRequest) Reset()         { *m = JoinLeagueApplyRequest{} }
func (m *JoinLeagueApplyRequest) String() string { return proto.CompactTextString(m) }
func (*JoinLeagueApplyRequest) ProtoMessage()    {}
func (*JoinLeagueApplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{502}
}

func (m *JoinLeagueApplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinLeagueApplyRequest.Unmarshal(m, b)
}
func (m *JoinLeagueApplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinLeagueApplyRequest.Marshal(b, m, deterministic)
}
func (m *JoinLeagueApplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinLeagueApplyRequest.Merge(m, src)
}
func (m *JoinLeagueApplyRequest) XXX_Size() int {
	return xxx_messageInfo_JoinLeagueApplyRequest.Size(m)
}
func (m *JoinLeagueApplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinLeagueApplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinLeagueApplyRequest proto.InternalMessageInfo

func (m *JoinLeagueApplyRequest) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *JoinLeagueApplyRequest) GetClubUUID() []string {
	if m != nil {
		return m.ClubUUID
	}
	return nil
}

// 申请加入联盟 - 请求
type JoinLeagueApplyReply struct {
	// 申请ID
	ApplyID              int32    `protobuf:"varint,1,opt,name=applyID,proto3" json:"applyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinLeagueApplyReply) Reset()         { *m = JoinLeagueApplyReply{} }
func (m *JoinLeagueApplyReply) String() string { return proto.CompactTextString(m) }
func (*JoinLeagueApplyReply) ProtoMessage()    {}
func (*JoinLeagueApplyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{503}
}

func (m *JoinLeagueApplyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinLeagueApplyReply.Unmarshal(m, b)
}
func (m *JoinLeagueApplyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinLeagueApplyReply.Marshal(b, m, deterministic)
}
func (m *JoinLeagueApplyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinLeagueApplyReply.Merge(m, src)
}
func (m *JoinLeagueApplyReply) XXX_Size() int {
	return xxx_messageInfo_JoinLeagueApplyReply.Size(m)
}
func (m *JoinLeagueApplyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinLeagueApplyReply.DiscardUnknown(m)
}

var xxx_messageInfo_JoinLeagueApplyReply proto.InternalMessageInfo

func (m *JoinLeagueApplyReply) GetApplyID() int32 {
	if m != nil {
		return m.ApplyID
	}
	return 0
}

// 创建联盟游戏房间: 请求协议
type CreateLeagueRoomRequest struct {
	// 联盟UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 创建的房间类型（游戏类型）
	RoomType GameType `protobuf:"varint,2,opt,name=roomType,proto3,enum=GameType" json:"roomType,omitempty"`
	// 创建房间传递的参数
	Config               []*GameConfig `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateLeagueRoomRequest) Reset()         { *m = CreateLeagueRoomRequest{} }
func (m *CreateLeagueRoomRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLeagueRoomRequest) ProtoMessage()    {}
func (*CreateLeagueRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{504}
}

func (m *CreateLeagueRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLeagueRoomRequest.Unmarshal(m, b)
}
func (m *CreateLeagueRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLeagueRoomRequest.Marshal(b, m, deterministic)
}
func (m *CreateLeagueRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLeagueRoomRequest.Merge(m, src)
}
func (m *CreateLeagueRoomRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLeagueRoomRequest.Size(m)
}
func (m *CreateLeagueRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLeagueRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLeagueRoomRequest proto.InternalMessageInfo

func (m *CreateLeagueRoomRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *CreateLeagueRoomRequest) GetRoomType() GameType {
	if m != nil {
		return m.RoomType
	}
	return GameType_None
}

func (m *CreateLeagueRoomRequest) GetConfig() []*GameConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

// 创建联盟游戏房间: 响应协议
type CreateLeagueRoomReply struct {
	// 创建好的房间ID
	RoomID               string   `protobuf:"bytes,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLeagueRoomReply) Reset()         { *m = CreateLeagueRoomReply{} }
func (m *CreateLeagueRoomReply) String() string { return proto.CompactTextString(m) }
func (*CreateLeagueRoomReply) ProtoMessage()    {}
func (*CreateLeagueRoomReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{505}
}

func (m *CreateLeagueRoomReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLeagueRoomReply.Unmarshal(m, b)
}
func (m *CreateLeagueRoomReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLeagueRoomReply.Marshal(b, m, deterministic)
}
func (m *CreateLeagueRoomReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLeagueRoomReply.Merge(m, src)
}
func (m *CreateLeagueRoomReply) XXX_Size() int {
	return xxx_messageInfo_CreateLeagueRoomReply.Size(m)
}
func (m *CreateLeagueRoomReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLeagueRoomReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLeagueRoomReply proto.InternalMessageInfo

func (m *CreateLeagueRoomReply) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

// 获取联盟信息
type GetLeagueInfoRequest struct {
	LeagueUUID           string   `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeagueInfoRequest) Reset()         { *m = GetLeagueInfoRequest{} }
func (m *GetLeagueInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetLeagueInfoRequest) ProtoMessage()    {}
func (*GetLeagueInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{506}
}

func (m *GetLeagueInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueInfoRequest.Unmarshal(m, b)
}
func (m *GetLeagueInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetLeagueInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueInfoRequest.Merge(m, src)
}
func (m *GetLeagueInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetLeagueInfoRequest.Size(m)
}
func (m *GetLeagueInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueInfoRequest proto.InternalMessageInfo

func (m *GetLeagueInfoRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

//大联盟前段显示信息
type LeagueShowDetail struct {
	// 联盟UUID，永远不会改变
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 联盟邀请码
	InviteCode string `protobuf:"bytes,2,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	// 联盟名称，必须唯一
	LeagueName string `protobuf:"bytes,3,opt,name=leagueName,proto3" json:"leagueName,omitempty"`
	// 盟主uuid
	MasterUUID string `protobuf:"bytes,4,opt,name=masterUUID,proto3" json:"masterUUID,omitempty"`
	// 联盟状态
	Status LeagueStatus `protobuf:"varint,5,opt,name=Status,proto3,enum=LeagueStatus" json:"Status,omitempty"`
	// 联盟创建时间
	CreateTime int64 `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 联盟状态改变时间
	StatusChangeTime int64 `protobuf:"varint,7,opt,name=statusChangeTime,proto3" json:"statusChangeTime,omitempty"`
	//更新时间
	LastUpdateTime int64 `protobuf:"varint,8,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime,omitempty"`
	//联盟长shortId
	MasterShortId string `protobuf:"bytes,9,opt,name=masterShortId,proto3" json:"masterShortId,omitempty"`
	//联盟长account
	MasterAccount    string `protobuf:"bytes,10,opt,name=masterAccount,proto3" json:"masterAccount,omitempty"`
	MasterName       string `protobuf:"bytes,11,opt,name=masterName,proto3" json:"masterName,omitempty"`
	MasterHeadImgUrl string `protobuf:"bytes,12,opt,name=masterHeadImgUrl,proto3" json:"masterHeadImgUrl,omitempty"`
	//成员数
	MemberCount int32 `protobuf:"varint,13,opt,name=memberCount,proto3" json:"memberCount,omitempty"`
	//房间数
	RoomCount int32 `protobuf:"varint,14,opt,name=roomCount,proto3" json:"roomCount,omitempty"`
	//当前请求玩家在联盟里的角色
	MemberRole int32 `protobuf:"varint,15,opt,name=memberRole,proto3" json:"memberRole,omitempty"`
	//金豆数
	Bean int64 `protobuf:"varint,16,opt,name=bean,proto3" json:"bean,omitempty"`
	//联盟设置
	Settings *LeagueSettings `protobuf:"bytes,17,opt,name=settings,proto3" json:"settings,omitempty"`
	//抽水设置
	CommissionSettings   []*LeagueCommissionSetting `protobuf:"bytes,18,rep,name=commissionSettings,proto3" json:"commissionSettings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *LeagueShowDetail) Reset()         { *m = LeagueShowDetail{} }
func (m *LeagueShowDetail) String() string { return proto.CompactTextString(m) }
func (*LeagueShowDetail) ProtoMessage()    {}
func (*LeagueShowDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{507}
}

func (m *LeagueShowDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueShowDetail.Unmarshal(m, b)
}
func (m *LeagueShowDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueShowDetail.Marshal(b, m, deterministic)
}
func (m *LeagueShowDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueShowDetail.Merge(m, src)
}
func (m *LeagueShowDetail) XXX_Size() int {
	return xxx_messageInfo_LeagueShowDetail.Size(m)
}
func (m *LeagueShowDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueShowDetail.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueShowDetail proto.InternalMessageInfo

func (m *LeagueShowDetail) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *LeagueShowDetail) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *LeagueShowDetail) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *LeagueShowDetail) GetMasterUUID() string {
	if m != nil {
		return m.MasterUUID
	}
	return ""
}

func (m *LeagueShowDetail) GetStatus() LeagueStatus {
	if m != nil {
		return m.Status
	}
	return LeagueStatus_LeagueApplyIng
}

func (m *LeagueShowDetail) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *LeagueShowDetail) GetStatusChangeTime() int64 {
	if m != nil {
		return m.StatusChangeTime
	}
	return 0
}

func (m *LeagueShowDetail) GetLastUpdateTime() int64 {
	if m != nil {
		return m.LastUpdateTime
	}
	return 0
}

func (m *LeagueShowDetail) GetMasterShortId() string {
	if m != nil {
		return m.MasterShortId
	}
	return ""
}

func (m *LeagueShowDetail) GetMasterAccount() string {
	if m != nil {
		return m.MasterAccount
	}
	return ""
}

func (m *LeagueShowDetail) GetMasterName() string {
	if m != nil {
		return m.MasterName
	}
	return ""
}

func (m *LeagueShowDetail) GetMasterHeadImgUrl() string {
	if m != nil {
		return m.MasterHeadImgUrl
	}
	return ""
}

func (m *LeagueShowDetail) GetMemberCount() int32 {
	if m != nil {
		return m.MemberCount
	}
	return 0
}

func (m *LeagueShowDetail) GetRoomCount() int32 {
	if m != nil {
		return m.RoomCount
	}
	return 0
}

func (m *LeagueShowDetail) GetMemberRole() int32 {
	if m != nil {
		return m.MemberRole
	}
	return 0
}

func (m *LeagueShowDetail) GetBean() int64 {
	if m != nil {
		return m.Bean
	}
	return 0
}

func (m *LeagueShowDetail) GetSettings() *LeagueSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *LeagueShowDetail) GetCommissionSettings() []*LeagueCommissionSetting {
	if m != nil {
		return m.CommissionSettings
	}
	return nil
}

type GetLeagueInfoReply struct {
	// 俱乐部详情
	Details              *LeagueShowDetail `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetLeagueInfoReply) Reset()         { *m = GetLeagueInfoReply{} }
func (m *GetLeagueInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetLeagueInfoReply) ProtoMessage()    {}
func (*GetLeagueInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{508}
}

func (m *GetLeagueInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueInfoReply.Unmarshal(m, b)
}
func (m *GetLeagueInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueInfoReply.Marshal(b, m, deterministic)
}
func (m *GetLeagueInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueInfoReply.Merge(m, src)
}
func (m *GetLeagueInfoReply) XXX_Size() int {
	return xxx_messageInfo_GetLeagueInfoReply.Size(m)
}
func (m *GetLeagueInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueInfoReply proto.InternalMessageInfo

func (m *GetLeagueInfoReply) GetDetails() *LeagueShowDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

//根据邀请码获取联盟信息和能加入的俱乐部
type GetLeagueInfoByInviteRequest struct {
	InviteCode           string   `protobuf:"bytes,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeagueInfoByInviteRequest) Reset()         { *m = GetLeagueInfoByInviteRequest{} }
func (m *GetLeagueInfoByInviteRequest) String() string { return proto.CompactTextString(m) }
func (*GetLeagueInfoByInviteRequest) ProtoMessage()    {}
func (*GetLeagueInfoByInviteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{509}
}

func (m *GetLeagueInfoByInviteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueInfoByInviteRequest.Unmarshal(m, b)
}
func (m *GetLeagueInfoByInviteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueInfoByInviteRequest.Marshal(b, m, deterministic)
}
func (m *GetLeagueInfoByInviteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueInfoByInviteRequest.Merge(m, src)
}
func (m *GetLeagueInfoByInviteRequest) XXX_Size() int {
	return xxx_messageInfo_GetLeagueInfoByInviteRequest.Size(m)
}
func (m *GetLeagueInfoByInviteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueInfoByInviteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueInfoByInviteRequest proto.InternalMessageInfo

func (m *GetLeagueInfoByInviteRequest) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

//根据邀请码获取联盟信息和能加入的俱乐部
type GetLeagueInfoByInviteReply struct {
	// 俱乐部详情
	LeagueInfo *LeagueShowDetail `protobuf:"bytes,1,opt,name=leagueInfo,proto3" json:"leagueInfo,omitempty"`
	//能加入的俱乐部列表
	ClubList             []*MyClub `protobuf:"bytes,2,rep,name=clubList,proto3" json:"clubList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetLeagueInfoByInviteReply) Reset()         { *m = GetLeagueInfoByInviteReply{} }
func (m *GetLeagueInfoByInviteReply) String() string { return proto.CompactTextString(m) }
func (*GetLeagueInfoByInviteReply) ProtoMessage()    {}
func (*GetLeagueInfoByInviteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{510}
}

func (m *GetLeagueInfoByInviteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueInfoByInviteReply.Unmarshal(m, b)
}
func (m *GetLeagueInfoByInviteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueInfoByInviteReply.Marshal(b, m, deterministic)
}
func (m *GetLeagueInfoByInviteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueInfoByInviteReply.Merge(m, src)
}
func (m *GetLeagueInfoByInviteReply) XXX_Size() int {
	return xxx_messageInfo_GetLeagueInfoByInviteReply.Size(m)
}
func (m *GetLeagueInfoByInviteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueInfoByInviteReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueInfoByInviteReply proto.InternalMessageInfo

func (m *GetLeagueInfoByInviteReply) GetLeagueInfo() *LeagueShowDetail {
	if m != nil {
		return m.LeagueInfo
	}
	return nil
}

func (m *GetLeagueInfoByInviteReply) GetClubList() []*MyClub {
	if m != nil {
		return m.ClubList
	}
	return nil
}

//获取我邀请的俱乐部部长
type GetMySubClubMasterRequst struct {
	LeagueUUID           string   `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMySubClubMasterRequst) Reset()         { *m = GetMySubClubMasterRequst{} }
func (m *GetMySubClubMasterRequst) String() string { return proto.CompactTextString(m) }
func (*GetMySubClubMasterRequst) ProtoMessage()    {}
func (*GetMySubClubMasterRequst) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{511}
}

func (m *GetMySubClubMasterRequst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMySubClubMasterRequst.Unmarshal(m, b)
}
func (m *GetMySubClubMasterRequst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMySubClubMasterRequst.Marshal(b, m, deterministic)
}
func (m *GetMySubClubMasterRequst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMySubClubMasterRequst.Merge(m, src)
}
func (m *GetMySubClubMasterRequst) XXX_Size() int {
	return xxx_messageInfo_GetMySubClubMasterRequst.Size(m)
}
func (m *GetMySubClubMasterRequst) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMySubClubMasterRequst.DiscardUnknown(m)
}

var xxx_messageInfo_GetMySubClubMasterRequst proto.InternalMessageInfo

func (m *GetMySubClubMasterRequst) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

//获取我邀请的俱乐部部长
type GetMySubClubMasterReply struct {
	MasterList           []*LeagueMemberAllInfo `protobuf:"bytes,1,rep,name=masterList,proto3" json:"masterList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetMySubClubMasterReply) Reset()         { *m = GetMySubClubMasterReply{} }
func (m *GetMySubClubMasterReply) String() string { return proto.CompactTextString(m) }
func (*GetMySubClubMasterReply) ProtoMessage()    {}
func (*GetMySubClubMasterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{512}
}

func (m *GetMySubClubMasterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMySubClubMasterReply.Unmarshal(m, b)
}
func (m *GetMySubClubMasterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMySubClubMasterReply.Marshal(b, m, deterministic)
}
func (m *GetMySubClubMasterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMySubClubMasterReply.Merge(m, src)
}
func (m *GetMySubClubMasterReply) XXX_Size() int {
	return xxx_messageInfo_GetMySubClubMasterReply.Size(m)
}
func (m *GetMySubClubMasterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMySubClubMasterReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetMySubClubMasterReply proto.InternalMessageInfo

func (m *GetMySubClubMasterReply) GetMasterList() []*LeagueMemberAllInfo {
	if m != nil {
		return m.MasterList
	}
	return nil
}

//更新联盟设置
type UpdateLeagueSettingRequest struct {
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	//联盟设置
	Settings             *LeagueSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateLeagueSettingRequest) Reset()         { *m = UpdateLeagueSettingRequest{} }
func (m *UpdateLeagueSettingRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateLeagueSettingRequest) ProtoMessage()    {}
func (*UpdateLeagueSettingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{513}
}

func (m *UpdateLeagueSettingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLeagueSettingRequest.Unmarshal(m, b)
}
func (m *UpdateLeagueSettingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLeagueSettingRequest.Marshal(b, m, deterministic)
}
func (m *UpdateLeagueSettingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLeagueSettingRequest.Merge(m, src)
}
func (m *UpdateLeagueSettingRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateLeagueSettingRequest.Size(m)
}
func (m *UpdateLeagueSettingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLeagueSettingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLeagueSettingRequest proto.InternalMessageInfo

func (m *UpdateLeagueSettingRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *UpdateLeagueSettingRequest) GetSettings() *LeagueSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

//更新联盟回复
type UpdateLeagueSettingReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateLeagueSettingReply) Reset()         { *m = UpdateLeagueSettingReply{} }
func (m *UpdateLeagueSettingReply) String() string { return proto.CompactTextString(m) }
func (*UpdateLeagueSettingReply) ProtoMessage()    {}
func (*UpdateLeagueSettingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{514}
}

func (m *UpdateLeagueSettingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLeagueSettingReply.Unmarshal(m, b)
}
func (m *UpdateLeagueSettingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLeagueSettingReply.Marshal(b, m, deterministic)
}
func (m *UpdateLeagueSettingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLeagueSettingReply.Merge(m, src)
}
func (m *UpdateLeagueSettingReply) XXX_Size() int {
	return xxx_messageInfo_UpdateLeagueSettingReply.Size(m)
}
func (m *UpdateLeagueSettingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLeagueSettingReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLeagueSettingReply proto.InternalMessageInfo

//解散联盟请求
type DissolveLeagueRequest struct {
	LeagueUUID           string   `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DissolveLeagueRequest) Reset()         { *m = DissolveLeagueRequest{} }
func (m *DissolveLeagueRequest) String() string { return proto.CompactTextString(m) }
func (*DissolveLeagueRequest) ProtoMessage()    {}
func (*DissolveLeagueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{515}
}

func (m *DissolveLeagueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DissolveLeagueRequest.Unmarshal(m, b)
}
func (m *DissolveLeagueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DissolveLeagueRequest.Marshal(b, m, deterministic)
}
func (m *DissolveLeagueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DissolveLeagueRequest.Merge(m, src)
}
func (m *DissolveLeagueRequest) XXX_Size() int {
	return xxx_messageInfo_DissolveLeagueRequest.Size(m)
}
func (m *DissolveLeagueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DissolveLeagueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DissolveLeagueRequest proto.InternalMessageInfo

func (m *DissolveLeagueRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

//解散联盟回复
type DissolveLeagueReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DissolveLeagueReply) Reset()         { *m = DissolveLeagueReply{} }
func (m *DissolveLeagueReply) String() string { return proto.CompactTextString(m) }
func (*DissolveLeagueReply) ProtoMessage()    {}
func (*DissolveLeagueReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{516}
}

func (m *DissolveLeagueReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DissolveLeagueReply.Unmarshal(m, b)
}
func (m *DissolveLeagueReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DissolveLeagueReply.Marshal(b, m, deterministic)
}
func (m *DissolveLeagueReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DissolveLeagueReply.Merge(m, src)
}
func (m *DissolveLeagueReply) XXX_Size() int {
	return xxx_messageInfo_DissolveLeagueReply.Size(m)
}
func (m *DissolveLeagueReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DissolveLeagueReply.DiscardUnknown(m)
}

var xxx_messageInfo_DissolveLeagueReply proto.InternalMessageInfo

//设置抽水比例请求
type SetLeagueGameCommissionRequest struct {
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	//抽水设置
	Settings             []*LeagueCommissionSetting `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SetLeagueGameCommissionRequest) Reset()         { *m = SetLeagueGameCommissionRequest{} }
func (m *SetLeagueGameCommissionRequest) String() string { return proto.CompactTextString(m) }
func (*SetLeagueGameCommissionRequest) ProtoMessage()    {}
func (*SetLeagueGameCommissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{517}
}

func (m *SetLeagueGameCommissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetLeagueGameCommissionRequest.Unmarshal(m, b)
}
func (m *SetLeagueGameCommissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetLeagueGameCommissionRequest.Marshal(b, m, deterministic)
}
func (m *SetLeagueGameCommissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetLeagueGameCommissionRequest.Merge(m, src)
}
func (m *SetLeagueGameCommissionRequest) XXX_Size() int {
	return xxx_messageInfo_SetLeagueGameCommissionRequest.Size(m)
}
func (m *SetLeagueGameCommissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetLeagueGameCommissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetLeagueGameCommissionRequest proto.InternalMessageInfo

func (m *SetLeagueGameCommissionRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *SetLeagueGameCommissionRequest) GetSettings() []*LeagueCommissionSetting {
	if m != nil {
		return m.Settings
	}
	return nil
}

//设置抽水比例回复
type SetLeagueGameCommissionReply struct {
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	//抽水设置
	Settings             []*LeagueCommissionSetting `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SetLeagueGameCommissionReply) Reset()         { *m = SetLeagueGameCommissionReply{} }
func (m *SetLeagueGameCommissionReply) String() string { return proto.CompactTextString(m) }
func (*SetLeagueGameCommissionReply) ProtoMessage()    {}
func (*SetLeagueGameCommissionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{518}
}

func (m *SetLeagueGameCommissionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetLeagueGameCommissionReply.Unmarshal(m, b)
}
func (m *SetLeagueGameCommissionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetLeagueGameCommissionReply.Marshal(b, m, deterministic)
}
func (m *SetLeagueGameCommissionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetLeagueGameCommissionReply.Merge(m, src)
}
func (m *SetLeagueGameCommissionReply) XXX_Size() int {
	return xxx_messageInfo_SetLeagueGameCommissionReply.Size(m)
}
func (m *SetLeagueGameCommissionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetLeagueGameCommissionReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetLeagueGameCommissionReply proto.InternalMessageInfo

func (m *SetLeagueGameCommissionReply) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *SetLeagueGameCommissionReply) GetSettings() []*LeagueCommissionSetting {
	if m != nil {
		return m.Settings
	}
	return nil
}

//根据游戏类型获取抽水比例
type GetLeagueGameCommissionRequest struct {
	LeagueUUID           string   `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	GameType             GameType `protobuf:"varint,2,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeagueGameCommissionRequest) Reset()         { *m = GetLeagueGameCommissionRequest{} }
func (m *GetLeagueGameCommissionRequest) String() string { return proto.CompactTextString(m) }
func (*GetLeagueGameCommissionRequest) ProtoMessage()    {}
func (*GetLeagueGameCommissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{519}
}

func (m *GetLeagueGameCommissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueGameCommissionRequest.Unmarshal(m, b)
}
func (m *GetLeagueGameCommissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueGameCommissionRequest.Marshal(b, m, deterministic)
}
func (m *GetLeagueGameCommissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueGameCommissionRequest.Merge(m, src)
}
func (m *GetLeagueGameCommissionRequest) XXX_Size() int {
	return xxx_messageInfo_GetLeagueGameCommissionRequest.Size(m)
}
func (m *GetLeagueGameCommissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueGameCommissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueGameCommissionRequest proto.InternalMessageInfo

func (m *GetLeagueGameCommissionRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *GetLeagueGameCommissionRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

//根据游戏类型获取抽水比例
type GetLeagueGameCommissionReply struct {
	LeagueUUID           string                   `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	CommissionInfo       *LeagueCommissionSetting `protobuf:"bytes,2,opt,name=commissionInfo,proto3" json:"commissionInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetLeagueGameCommissionReply) Reset()         { *m = GetLeagueGameCommissionReply{} }
func (m *GetLeagueGameCommissionReply) String() string { return proto.CompactTextString(m) }
func (*GetLeagueGameCommissionReply) ProtoMessage()    {}
func (*GetLeagueGameCommissionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{520}
}

func (m *GetLeagueGameCommissionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueGameCommissionReply.Unmarshal(m, b)
}
func (m *GetLeagueGameCommissionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueGameCommissionReply.Marshal(b, m, deterministic)
}
func (m *GetLeagueGameCommissionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueGameCommissionReply.Merge(m, src)
}
func (m *GetLeagueGameCommissionReply) XXX_Size() int {
	return xxx_messageInfo_GetLeagueGameCommissionReply.Size(m)
}
func (m *GetLeagueGameCommissionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueGameCommissionReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueGameCommissionReply proto.InternalMessageInfo

func (m *GetLeagueGameCommissionReply) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *GetLeagueGameCommissionReply) GetCommissionInfo() *LeagueCommissionSetting {
	if m != nil {
		return m.CommissionInfo
	}
	return nil
}

// 金豆赠送: 请求协议
type GiveBeanRequest struct {
	// 联盟UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 接收者UUID
	ReceiverUUID string `protobuf:"bytes,2,opt,name=receiverUUID,proto3" json:"receiverUUID,omitempty"`
	// 赠送金豆数量
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GiveBeanRequest) Reset()         { *m = GiveBeanRequest{} }
func (m *GiveBeanRequest) String() string { return proto.CompactTextString(m) }
func (*GiveBeanRequest) ProtoMessage()    {}
func (*GiveBeanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{521}
}

func (m *GiveBeanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GiveBeanRequest.Unmarshal(m, b)
}
func (m *GiveBeanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GiveBeanRequest.Marshal(b, m, deterministic)
}
func (m *GiveBeanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GiveBeanRequest.Merge(m, src)
}
func (m *GiveBeanRequest) XXX_Size() int {
	return xxx_messageInfo_GiveBeanRequest.Size(m)
}
func (m *GiveBeanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GiveBeanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GiveBeanRequest proto.InternalMessageInfo

func (m *GiveBeanRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *GiveBeanRequest) GetReceiverUUID() string {
	if m != nil {
		return m.ReceiverUUID
	}
	return ""
}

func (m *GiveBeanRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// 金豆赠送: 响应协议
type GiveBeanReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GiveBeanReply) Reset()         { *m = GiveBeanReply{} }
func (m *GiveBeanReply) String() string { return proto.CompactTextString(m) }
func (*GiveBeanReply) ProtoMessage()    {}
func (*GiveBeanReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{522}
}

func (m *GiveBeanReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GiveBeanReply.Unmarshal(m, b)
}
func (m *GiveBeanReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GiveBeanReply.Marshal(b, m, deterministic)
}
func (m *GiveBeanReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GiveBeanReply.Merge(m, src)
}
func (m *GiveBeanReply) XXX_Size() int {
	return xxx_messageInfo_GiveBeanReply.Size(m)
}
func (m *GiveBeanReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GiveBeanReply.DiscardUnknown(m)
}

var xxx_messageInfo_GiveBeanReply proto.InternalMessageInfo

//退出联盟请求
type QuitLeagueRequest struct {
	// 联盟UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	//俱乐部ID
	ClubUUID             string   `protobuf:"bytes,2,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuitLeagueRequest) Reset()         { *m = QuitLeagueRequest{} }
func (m *QuitLeagueRequest) String() string { return proto.CompactTextString(m) }
func (*QuitLeagueRequest) ProtoMessage()    {}
func (*QuitLeagueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{523}
}

func (m *QuitLeagueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuitLeagueRequest.Unmarshal(m, b)
}
func (m *QuitLeagueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuitLeagueRequest.Marshal(b, m, deterministic)
}
func (m *QuitLeagueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuitLeagueRequest.Merge(m, src)
}
func (m *QuitLeagueRequest) XXX_Size() int {
	return xxx_messageInfo_QuitLeagueRequest.Size(m)
}
func (m *QuitLeagueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QuitLeagueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QuitLeagueRequest proto.InternalMessageInfo

func (m *QuitLeagueRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *QuitLeagueRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

//退出联盟回复
type QuitLeagueReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuitLeagueReply) Reset()         { *m = QuitLeagueReply{} }
func (m *QuitLeagueReply) String() string { return proto.CompactTextString(m) }
func (*QuitLeagueReply) ProtoMessage()    {}
func (*QuitLeagueReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{524}
}

func (m *QuitLeagueReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuitLeagueReply.Unmarshal(m, b)
}
func (m *QuitLeagueReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuitLeagueReply.Marshal(b, m, deterministic)
}
func (m *QuitLeagueReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuitLeagueReply.Merge(m, src)
}
func (m *QuitLeagueReply) XXX_Size() int {
	return xxx_messageInfo_QuitLeagueReply.Size(m)
}
func (m *QuitLeagueReply) XXX_DiscardUnknown() {
	xxx_messageInfo_QuitLeagueReply.DiscardUnknown(m)
}

var xxx_messageInfo_QuitLeagueReply proto.InternalMessageInfo

//设置代理请求
type SetAgentRequest struct {
	// 联盟UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	//玩家UUID
	PlayerUUID string `protobuf:"bytes,2,opt,name=playerUUID,proto3" json:"playerUUID,omitempty"`
	//是否取消设置
	Cancel               bool     `protobuf:"varint,3,opt,name=cancel,proto3" json:"cancel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAgentRequest) Reset()         { *m = SetAgentRequest{} }
func (m *SetAgentRequest) String() string { return proto.CompactTextString(m) }
func (*SetAgentRequest) ProtoMessage()    {}
func (*SetAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{525}
}

func (m *SetAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAgentRequest.Unmarshal(m, b)
}
func (m *SetAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAgentRequest.Marshal(b, m, deterministic)
}
func (m *SetAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAgentRequest.Merge(m, src)
}
func (m *SetAgentRequest) XXX_Size() int {
	return xxx_messageInfo_SetAgentRequest.Size(m)
}
func (m *SetAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetAgentRequest proto.InternalMessageInfo

func (m *SetAgentRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *SetAgentRequest) GetPlayerUUID() string {
	if m != nil {
		return m.PlayerUUID
	}
	return ""
}

func (m *SetAgentRequest) GetCancel() bool {
	if m != nil {
		return m.Cancel
	}
	return false
}

//设置代理回复
type SetAgentReply struct {
	MemberInfo           *LeagueMemberAllInfo `protobuf:"bytes,1,opt,name=memberInfo,proto3" json:"memberInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SetAgentReply) Reset()         { *m = SetAgentReply{} }
func (m *SetAgentReply) String() string { return proto.CompactTextString(m) }
func (*SetAgentReply) ProtoMessage()    {}
func (*SetAgentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{526}
}

func (m *SetAgentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAgentReply.Unmarshal(m, b)
}
func (m *SetAgentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAgentReply.Marshal(b, m, deterministic)
}
func (m *SetAgentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAgentReply.Merge(m, src)
}
func (m *SetAgentReply) XXX_Size() int {
	return xxx_messageInfo_SetAgentReply.Size(m)
}
func (m *SetAgentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAgentReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetAgentReply proto.InternalMessageInfo

func (m *SetAgentReply) GetMemberInfo() *LeagueMemberAllInfo {
	if m != nil {
		return m.MemberInfo
	}
	return nil
}

//设置代理分成请求
type SetAgentProfitRateRequest struct {
	// 联盟UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	//代理UUID
	AgentUUID string `protobuf:"bytes,2,opt,name=agentUUID,proto3" json:"agentUUID,omitempty"`
	//分成比（百分比）
	ProfitRate           int64    `protobuf:"varint,3,opt,name=profitRate,proto3" json:"profitRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAgentProfitRateRequest) Reset()         { *m = SetAgentProfitRateRequest{} }
func (m *SetAgentProfitRateRequest) String() string { return proto.CompactTextString(m) }
func (*SetAgentProfitRateRequest) ProtoMessage()    {}
func (*SetAgentProfitRateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{527}
}

func (m *SetAgentProfitRateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAgentProfitRateRequest.Unmarshal(m, b)
}
func (m *SetAgentProfitRateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAgentProfitRateRequest.Marshal(b, m, deterministic)
}
func (m *SetAgentProfitRateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAgentProfitRateRequest.Merge(m, src)
}
func (m *SetAgentProfitRateRequest) XXX_Size() int {
	return xxx_messageInfo_SetAgentProfitRateRequest.Size(m)
}
func (m *SetAgentProfitRateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAgentProfitRateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetAgentProfitRateRequest proto.InternalMessageInfo

func (m *SetAgentProfitRateRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *SetAgentProfitRateRequest) GetAgentUUID() string {
	if m != nil {
		return m.AgentUUID
	}
	return ""
}

func (m *SetAgentProfitRateRequest) GetProfitRate() int64 {
	if m != nil {
		return m.ProfitRate
	}
	return 0
}

//设置代理回复
type SetAgentProfitRateReply struct {
	// 联盟UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	//代理UUID
	AgentUUID string `protobuf:"bytes,2,opt,name=agentUUID,proto3" json:"agentUUID,omitempty"`
	//分成比（百分比）
	ProfitRate           int64    `protobuf:"varint,3,opt,name=profitRate,proto3" json:"profitRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAgentProfitRateReply) Reset()         { *m = SetAgentProfitRateReply{} }
func (m *SetAgentProfitRateReply) String() string { return proto.CompactTextString(m) }
func (*SetAgentProfitRateReply) ProtoMessage()    {}
func (*SetAgentProfitRateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{528}
}

func (m *SetAgentProfitRateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAgentProfitRateReply.Unmarshal(m, b)
}
func (m *SetAgentProfitRateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAgentProfitRateReply.Marshal(b, m, deterministic)
}
func (m *SetAgentProfitRateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAgentProfitRateReply.Merge(m, src)
}
func (m *SetAgentProfitRateReply) XXX_Size() int {
	return xxx_messageInfo_SetAgentProfitRateReply.Size(m)
}
func (m *SetAgentProfitRateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAgentProfitRateReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetAgentProfitRateReply proto.InternalMessageInfo

func (m *SetAgentProfitRateReply) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *SetAgentProfitRateReply) GetAgentUUID() string {
	if m != nil {
		return m.AgentUUID
	}
	return ""
}

func (m *SetAgentProfitRateReply) GetProfitRate() int64 {
	if m != nil {
		return m.ProfitRate
	}
	return 0
}

//解散联盟房间请求
type DissolveLeagueRoomRequest struct {
	// 联盟UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	//房间UUID
	RoomUUID             string   `protobuf:"bytes,2,opt,name=roomUUID,proto3" json:"roomUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DissolveLeagueRoomRequest) Reset()         { *m = DissolveLeagueRoomRequest{} }
func (m *DissolveLeagueRoomRequest) String() string { return proto.CompactTextString(m) }
func (*DissolveLeagueRoomRequest) ProtoMessage()    {}
func (*DissolveLeagueRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{529}
}

func (m *DissolveLeagueRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DissolveLeagueRoomRequest.Unmarshal(m, b)
}
func (m *DissolveLeagueRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DissolveLeagueRoomRequest.Marshal(b, m, deterministic)
}
func (m *DissolveLeagueRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DissolveLeagueRoomRequest.Merge(m, src)
}
func (m *DissolveLeagueRoomRequest) XXX_Size() int {
	return xxx_messageInfo_DissolveLeagueRoomRequest.Size(m)
}
func (m *DissolveLeagueRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DissolveLeagueRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DissolveLeagueRoomRequest proto.InternalMessageInfo

func (m *DissolveLeagueRoomRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *DissolveLeagueRoomRequest) GetRoomUUID() string {
	if m != nil {
		return m.RoomUUID
	}
	return ""
}

//解散联盟房间回复
type DissolveLeagueRoomReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DissolveLeagueRoomReply) Reset()         { *m = DissolveLeagueRoomReply{} }
func (m *DissolveLeagueRoomReply) String() string { return proto.CompactTextString(m) }
func (*DissolveLeagueRoomReply) ProtoMessage()    {}
func (*DissolveLeagueRoomReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{530}
}

func (m *DissolveLeagueRoomReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DissolveLeagueRoomReply.Unmarshal(m, b)
}
func (m *DissolveLeagueRoomReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DissolveLeagueRoomReply.Marshal(b, m, deterministic)
}
func (m *DissolveLeagueRoomReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DissolveLeagueRoomReply.Merge(m, src)
}
func (m *DissolveLeagueRoomReply) XXX_Size() int {
	return xxx_messageInfo_DissolveLeagueRoomReply.Size(m)
}
func (m *DissolveLeagueRoomReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DissolveLeagueRoomReply.DiscardUnknown(m)
}

var xxx_messageInfo_DissolveLeagueRoomReply proto.InternalMessageInfo

//获取联盟房间列表请求
type GetLeagueRoomListRequest struct {
	// 联盟UUID
	LeagueUUID           string   `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeagueRoomListRequest) Reset()         { *m = GetLeagueRoomListRequest{} }
func (m *GetLeagueRoomListRequest) String() string { return proto.CompactTextString(m) }
func (*GetLeagueRoomListRequest) ProtoMessage()    {}
func (*GetLeagueRoomListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{531}
}

func (m *GetLeagueRoomListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueRoomListRequest.Unmarshal(m, b)
}
func (m *GetLeagueRoomListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueRoomListRequest.Marshal(b, m, deterministic)
}
func (m *GetLeagueRoomListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueRoomListRequest.Merge(m, src)
}
func (m *GetLeagueRoomListRequest) XXX_Size() int {
	return xxx_messageInfo_GetLeagueRoomListRequest.Size(m)
}
func (m *GetLeagueRoomListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueRoomListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueRoomListRequest proto.InternalMessageInfo

func (m *GetLeagueRoomListRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

//获取联盟房间列表回复
type GetLeagueRoomListReply struct {
	Rooms                []*RoomInfo `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetLeagueRoomListReply) Reset()         { *m = GetLeagueRoomListReply{} }
func (m *GetLeagueRoomListReply) String() string { return proto.CompactTextString(m) }
func (*GetLeagueRoomListReply) ProtoMessage()    {}
func (*GetLeagueRoomListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{532}
}

func (m *GetLeagueRoomListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueRoomListReply.Unmarshal(m, b)
}
func (m *GetLeagueRoomListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueRoomListReply.Marshal(b, m, deterministic)
}
func (m *GetLeagueRoomListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueRoomListReply.Merge(m, src)
}
func (m *GetLeagueRoomListReply) XXX_Size() int {
	return xxx_messageInfo_GetLeagueRoomListReply.Size(m)
}
func (m *GetLeagueRoomListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueRoomListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueRoomListReply proto.InternalMessageInfo

func (m *GetLeagueRoomListReply) GetRooms() []*RoomInfo {
	if m != nil {
		return m.Rooms
	}
	return nil
}

//获取我的联盟列表请求
type GetMyLeagueListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMyLeagueListRequest) Reset()         { *m = GetMyLeagueListRequest{} }
func (m *GetMyLeagueListRequest) String() string { return proto.CompactTextString(m) }
func (*GetMyLeagueListRequest) ProtoMessage()    {}
func (*GetMyLeagueListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{533}
}

func (m *GetMyLeagueListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMyLeagueListRequest.Unmarshal(m, b)
}
func (m *GetMyLeagueListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMyLeagueListRequest.Marshal(b, m, deterministic)
}
func (m *GetMyLeagueListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMyLeagueListRequest.Merge(m, src)
}
func (m *GetMyLeagueListRequest) XXX_Size() int {
	return xxx_messageInfo_GetMyLeagueListRequest.Size(m)
}
func (m *GetMyLeagueListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMyLeagueListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMyLeagueListRequest proto.InternalMessageInfo

//获取我的联盟列表回复
type GetMyLeagueListReply struct {
	//联盟列表
	LeagueList           []*LeagueShowDetail `protobuf:"bytes,1,rep,name=leagueList,proto3" json:"leagueList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetMyLeagueListReply) Reset()         { *m = GetMyLeagueListReply{} }
func (m *GetMyLeagueListReply) String() string { return proto.CompactTextString(m) }
func (*GetMyLeagueListReply) ProtoMessage()    {}
func (*GetMyLeagueListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{534}
}

func (m *GetMyLeagueListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMyLeagueListReply.Unmarshal(m, b)
}
func (m *GetMyLeagueListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMyLeagueListReply.Marshal(b, m, deterministic)
}
func (m *GetMyLeagueListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMyLeagueListReply.Merge(m, src)
}
func (m *GetMyLeagueListReply) XXX_Size() int {
	return xxx_messageInfo_GetMyLeagueListReply.Size(m)
}
func (m *GetMyLeagueListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMyLeagueListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetMyLeagueListReply proto.InternalMessageInfo

func (m *GetMyLeagueListReply) GetLeagueList() []*LeagueShowDetail {
	if m != nil {
		return m.LeagueList
	}
	return nil
}

//俱乐部成员变动通知请求
type ClubMemberChangeNoticeRequest struct {
	//玩家ID
	UserUUID string `protobuf:"bytes,1,opt,name=userUUID,proto3" json:"userUUID,omitempty"`
	//俱乐部ID
	ClubUUID string `protobuf:"bytes,2,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	//变动类型
	NoticeType ClubMemberChangeNoticeType `protobuf:"varint,3,opt,name=noticeType,proto3,enum=ClubMemberChangeNoticeType" json:"noticeType,omitempty"`
	//俱乐部成员id
	ClubMemberUUIDs      []string `protobuf:"bytes,4,rep,name=clubMemberUUIDs,proto3" json:"clubMemberUUIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClubMemberChangeNoticeRequest) Reset()         { *m = ClubMemberChangeNoticeRequest{} }
func (m *ClubMemberChangeNoticeRequest) String() string { return proto.CompactTextString(m) }
func (*ClubMemberChangeNoticeRequest) ProtoMessage()    {}
func (*ClubMemberChangeNoticeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{535}
}

func (m *ClubMemberChangeNoticeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubMemberChangeNoticeRequest.Unmarshal(m, b)
}
func (m *ClubMemberChangeNoticeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubMemberChangeNoticeRequest.Marshal(b, m, deterministic)
}
func (m *ClubMemberChangeNoticeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubMemberChangeNoticeRequest.Merge(m, src)
}
func (m *ClubMemberChangeNoticeRequest) XXX_Size() int {
	return xxx_messageInfo_ClubMemberChangeNoticeRequest.Size(m)
}
func (m *ClubMemberChangeNoticeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubMemberChangeNoticeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClubMemberChangeNoticeRequest proto.InternalMessageInfo

func (m *ClubMemberChangeNoticeRequest) GetUserUUID() string {
	if m != nil {
		return m.UserUUID
	}
	return ""
}

func (m *ClubMemberChangeNoticeRequest) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *ClubMemberChangeNoticeRequest) GetNoticeType() ClubMemberChangeNoticeType {
	if m != nil {
		return m.NoticeType
	}
	return ClubMemberChangeNoticeType_ClubMemberChangeNoticeType_None
}

func (m *ClubMemberChangeNoticeRequest) GetClubMemberUUIDs() []string {
	if m != nil {
		return m.ClubMemberUUIDs
	}
	return nil
}

//俱乐部成员变动通知回复
type ClubMemberChangeNoticeReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClubMemberChangeNoticeReply) Reset()         { *m = ClubMemberChangeNoticeReply{} }
func (m *ClubMemberChangeNoticeReply) String() string { return proto.CompactTextString(m) }
func (*ClubMemberChangeNoticeReply) ProtoMessage()    {}
func (*ClubMemberChangeNoticeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{536}
}

func (m *ClubMemberChangeNoticeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClubMemberChangeNoticeReply.Unmarshal(m, b)
}
func (m *ClubMemberChangeNoticeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClubMemberChangeNoticeReply.Marshal(b, m, deterministic)
}
func (m *ClubMemberChangeNoticeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClubMemberChangeNoticeReply.Merge(m, src)
}
func (m *ClubMemberChangeNoticeReply) XXX_Size() int {
	return xxx_messageInfo_ClubMemberChangeNoticeReply.Size(m)
}
func (m *ClubMemberChangeNoticeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ClubMemberChangeNoticeReply.DiscardUnknown(m)
}

var xxx_messageInfo_ClubMemberChangeNoticeReply proto.InternalMessageInfo

//获取请求加入联盟申请列表请求
type GetJoinLeagueRequestListRequest struct {
	LeagueUUID           string   `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJoinLeagueRequestListRequest) Reset()         { *m = GetJoinLeagueRequestListRequest{} }
func (m *GetJoinLeagueRequestListRequest) String() string { return proto.CompactTextString(m) }
func (*GetJoinLeagueRequestListRequest) ProtoMessage()    {}
func (*GetJoinLeagueRequestListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{537}
}

func (m *GetJoinLeagueRequestListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJoinLeagueRequestListRequest.Unmarshal(m, b)
}
func (m *GetJoinLeagueRequestListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJoinLeagueRequestListRequest.Marshal(b, m, deterministic)
}
func (m *GetJoinLeagueRequestListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJoinLeagueRequestListRequest.Merge(m, src)
}
func (m *GetJoinLeagueRequestListRequest) XXX_Size() int {
	return xxx_messageInfo_GetJoinLeagueRequestListRequest.Size(m)
}
func (m *GetJoinLeagueRequestListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJoinLeagueRequestListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetJoinLeagueRequestListRequest proto.InternalMessageInfo

func (m *GetJoinLeagueRequestListRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

//获取请求加入联盟申请列表回复
type GetJoinLeagueRequestListReply struct {
	//申请列表
	JoinRequests         []*JoinLeagueRequestInfo `protobuf:"bytes,1,rep,name=joinRequests,proto3" json:"joinRequests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetJoinLeagueRequestListReply) Reset()         { *m = GetJoinLeagueRequestListReply{} }
func (m *GetJoinLeagueRequestListReply) String() string { return proto.CompactTextString(m) }
func (*GetJoinLeagueRequestListReply) ProtoMessage()    {}
func (*GetJoinLeagueRequestListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{538}
}

func (m *GetJoinLeagueRequestListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJoinLeagueRequestListReply.Unmarshal(m, b)
}
func (m *GetJoinLeagueRequestListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJoinLeagueRequestListReply.Marshal(b, m, deterministic)
}
func (m *GetJoinLeagueRequestListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJoinLeagueRequestListReply.Merge(m, src)
}
func (m *GetJoinLeagueRequestListReply) XXX_Size() int {
	return xxx_messageInfo_GetJoinLeagueRequestListReply.Size(m)
}
func (m *GetJoinLeagueRequestListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJoinLeagueRequestListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetJoinLeagueRequestListReply proto.InternalMessageInfo

func (m *GetJoinLeagueRequestListReply) GetJoinRequests() []*JoinLeagueRequestInfo {
	if m != nil {
		return m.JoinRequests
	}
	return nil
}

//获取联盟成员列表请求
type GetLeagueMembersRequest struct {
	PageIndex            int32    `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	LeagueUUID           string   `protobuf:"bytes,3,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	ShortId              string   `protobuf:"bytes,4,opt,name=shortId,proto3" json:"shortId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeagueMembersRequest) Reset()         { *m = GetLeagueMembersRequest{} }
func (m *GetLeagueMembersRequest) String() string { return proto.CompactTextString(m) }
func (*GetLeagueMembersRequest) ProtoMessage()    {}
func (*GetLeagueMembersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{539}
}

func (m *GetLeagueMembersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueMembersRequest.Unmarshal(m, b)
}
func (m *GetLeagueMembersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueMembersRequest.Marshal(b, m, deterministic)
}
func (m *GetLeagueMembersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueMembersRequest.Merge(m, src)
}
func (m *GetLeagueMembersRequest) XXX_Size() int {
	return xxx_messageInfo_GetLeagueMembersRequest.Size(m)
}
func (m *GetLeagueMembersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueMembersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueMembersRequest proto.InternalMessageInfo

func (m *GetLeagueMembersRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetLeagueMembersRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetLeagueMembersRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *GetLeagueMembersRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

//获取联盟成员请求回复
type GetLeagueMembersReply struct {
	PageIndex            int32                  `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RecordCount          int32                  `protobuf:"varint,3,opt,name=recordCount,proto3" json:"recordCount,omitempty"`
	Data                 []*LeagueMemberAllInfo `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetLeagueMembersReply) Reset()         { *m = GetLeagueMembersReply{} }
func (m *GetLeagueMembersReply) String() string { return proto.CompactTextString(m) }
func (*GetLeagueMembersReply) ProtoMessage()    {}
func (*GetLeagueMembersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{540}
}

func (m *GetLeagueMembersReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueMembersReply.Unmarshal(m, b)
}
func (m *GetLeagueMembersReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueMembersReply.Marshal(b, m, deterministic)
}
func (m *GetLeagueMembersReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueMembersReply.Merge(m, src)
}
func (m *GetLeagueMembersReply) XXX_Size() int {
	return xxx_messageInfo_GetLeagueMembersReply.Size(m)
}
func (m *GetLeagueMembersReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueMembersReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueMembersReply proto.InternalMessageInfo

func (m *GetLeagueMembersReply) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetLeagueMembersReply) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetLeagueMembersReply) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *GetLeagueMembersReply) GetData() []*LeagueMemberAllInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

//联盟成员详情
type LeagueMemberAllInfo struct {
	MemberUUID       string             `protobuf:"bytes,1,opt,name=memberUUID,proto3" json:"memberUUID,omitempty"`
	Role             int32              `protobuf:"varint,2,opt,name=role,proto3" json:"role,omitempty"`
	Status           LeagueMemberStatus `protobuf:"varint,3,opt,name=status,proto3,enum=LeagueMemberStatus" json:"status,omitempty"`
	JoinTime         int64              `protobuf:"varint,4,opt,name=joinTime,proto3" json:"joinTime,omitempty"`
	StatusChangeTime int64              `protobuf:"varint,5,opt,name=statusChangeTime,proto3" json:"statusChangeTime,omitempty"`
	Bean             int64              `protobuf:"varint,6,opt,name=bean,proto3" json:"bean,omitempty"`
	LastPlayTime     int64              `protobuf:"varint,7,opt,name=lastPlayTime,proto3" json:"lastPlayTime,omitempty"`
	//所属俱乐部ID，如果在联盟下具有多个俱乐部，则此id为最早加入联盟的id
	ClubUUID string `protobuf:"bytes,8,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	//上级成员ID
	ParentMemberId string `protobuf:"bytes,9,opt,name=parentMemberId,proto3" json:"parentMemberId,omitempty"`
	//代理分成
	ProfitRate int64  `protobuf:"varint,10,opt,name=profitRate,proto3" json:"profitRate,omitempty"`
	ShortId    string `protobuf:"bytes,11,opt,name=shortId,proto3" json:"shortId,omitempty"`
	Account    string `protobuf:"bytes,12,opt,name=account,proto3" json:"account,omitempty"`
	Name       string `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	HeadImgUrl string `protobuf:"bytes,14,opt,name=headImgUrl,proto3" json:"headImgUrl,omitempty"`
	//俱乐部名称
	ClubName string `protobuf:"bytes,15,opt,name=clubName,proto3" json:"clubName,omitempty"`
	//俱乐部部长名称
	ClubMasterName string `protobuf:"bytes,16,opt,name=clubMasterName,proto3" json:"clubMasterName,omitempty"`
	//俱乐部部长shortID
	ClubMasterShortId string `protobuf:"bytes,17,opt,name=clubMasterShortId,proto3" json:"clubMasterShortId,omitempty"`
	//俱乐部邀请码
	ClubInviteCode string `protobuf:"bytes,18,opt,name=clubInviteCode,proto3" json:"clubInviteCode,omitempty"`
	//下级成员数
	SubMemberCount int32 `protobuf:"varint,19,opt,name=subMemberCount,proto3" json:"subMemberCount,omitempty"`
	//联盟邀请码
	InviteCode string `protobuf:"bytes,20,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	//最后登录时间
	LastLoginTime int64 `protobuf:"varint,21,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	//上级成员Short ID
	ParentMemberShortId  string   `protobuf:"bytes,22,opt,name=parentMemberShortId,proto3" json:"parentMemberShortId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeagueMemberAllInfo) Reset()         { *m = LeagueMemberAllInfo{} }
func (m *LeagueMemberAllInfo) String() string { return proto.CompactTextString(m) }
func (*LeagueMemberAllInfo) ProtoMessage()    {}
func (*LeagueMemberAllInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{541}
}

func (m *LeagueMemberAllInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueMemberAllInfo.Unmarshal(m, b)
}
func (m *LeagueMemberAllInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueMemberAllInfo.Marshal(b, m, deterministic)
}
func (m *LeagueMemberAllInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueMemberAllInfo.Merge(m, src)
}
func (m *LeagueMemberAllInfo) XXX_Size() int {
	return xxx_messageInfo_LeagueMemberAllInfo.Size(m)
}
func (m *LeagueMemberAllInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueMemberAllInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueMemberAllInfo proto.InternalMessageInfo

func (m *LeagueMemberAllInfo) GetMemberUUID() string {
	if m != nil {
		return m.MemberUUID
	}
	return ""
}

func (m *LeagueMemberAllInfo) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *LeagueMemberAllInfo) GetStatus() LeagueMemberStatus {
	if m != nil {
		return m.Status
	}
	return LeagueMemberStatus_LeagueMemberApplicant
}

func (m *LeagueMemberAllInfo) GetJoinTime() int64 {
	if m != nil {
		return m.JoinTime
	}
	return 0
}

func (m *LeagueMemberAllInfo) GetStatusChangeTime() int64 {
	if m != nil {
		return m.StatusChangeTime
	}
	return 0
}

func (m *LeagueMemberAllInfo) GetBean() int64 {
	if m != nil {
		return m.Bean
	}
	return 0
}

func (m *LeagueMemberAllInfo) GetLastPlayTime() int64 {
	if m != nil {
		return m.LastPlayTime
	}
	return 0
}

func (m *LeagueMemberAllInfo) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *LeagueMemberAllInfo) GetParentMemberId() string {
	if m != nil {
		return m.ParentMemberId
	}
	return ""
}

func (m *LeagueMemberAllInfo) GetProfitRate() int64 {
	if m != nil {
		return m.ProfitRate
	}
	return 0
}

func (m *LeagueMemberAllInfo) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *LeagueMemberAllInfo) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *LeagueMemberAllInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LeagueMemberAllInfo) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *LeagueMemberAllInfo) GetClubName() string {
	if m != nil {
		return m.ClubName
	}
	return ""
}

func (m *LeagueMemberAllInfo) GetClubMasterName() string {
	if m != nil {
		return m.ClubMasterName
	}
	return ""
}

func (m *LeagueMemberAllInfo) GetClubMasterShortId() string {
	if m != nil {
		return m.ClubMasterShortId
	}
	return ""
}

func (m *LeagueMemberAllInfo) GetClubInviteCode() string {
	if m != nil {
		return m.ClubInviteCode
	}
	return ""
}

func (m *LeagueMemberAllInfo) GetSubMemberCount() int32 {
	if m != nil {
		return m.SubMemberCount
	}
	return 0
}

func (m *LeagueMemberAllInfo) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *LeagueMemberAllInfo) GetLastLoginTime() int64 {
	if m != nil {
		return m.LastLoginTime
	}
	return 0
}

func (m *LeagueMemberAllInfo) GetParentMemberShortId() string {
	if m != nil {
		return m.ParentMemberShortId
	}
	return ""
}

//联盟抽水通知消息
type LeagueCommissionNotice struct {
	//联盟id
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	//用户id
	UserId   string   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	GameType GameType `protobuf:"varint,3,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	//抽水金额
	Commission           int64    `protobuf:"varint,4,opt,name=commission,proto3" json:"commission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeagueCommissionNotice) Reset()         { *m = LeagueCommissionNotice{} }
func (m *LeagueCommissionNotice) String() string { return proto.CompactTextString(m) }
func (*LeagueCommissionNotice) ProtoMessage()    {}
func (*LeagueCommissionNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{542}
}

func (m *LeagueCommissionNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueCommissionNotice.Unmarshal(m, b)
}
func (m *LeagueCommissionNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueCommissionNotice.Marshal(b, m, deterministic)
}
func (m *LeagueCommissionNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueCommissionNotice.Merge(m, src)
}
func (m *LeagueCommissionNotice) XXX_Size() int {
	return xxx_messageInfo_LeagueCommissionNotice.Size(m)
}
func (m *LeagueCommissionNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueCommissionNotice.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueCommissionNotice proto.InternalMessageInfo

func (m *LeagueCommissionNotice) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *LeagueCommissionNotice) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *LeagueCommissionNotice) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *LeagueCommissionNotice) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

//联盟代理抽水信息
type LeagueAgentCommissionInfo struct {
	//累计收益
	CumulativeCommission int64 `protobuf:"varint,1,opt,name=cumulativeCommission,proto3" json:"cumulativeCommission,omitempty"`
	//未领取收益
	UncollectedCommission int64 `protobuf:"varint,2,opt,name=uncollectedCommission,proto3" json:"uncollectedCommission,omitempty"`
	//最后领取时间
	LastCollectTime      int64    `protobuf:"varint,3,opt,name=lastCollectTime,proto3" json:"lastCollectTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeagueAgentCommissionInfo) Reset()         { *m = LeagueAgentCommissionInfo{} }
func (m *LeagueAgentCommissionInfo) String() string { return proto.CompactTextString(m) }
func (*LeagueAgentCommissionInfo) ProtoMessage()    {}
func (*LeagueAgentCommissionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{543}
}

func (m *LeagueAgentCommissionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueAgentCommissionInfo.Unmarshal(m, b)
}
func (m *LeagueAgentCommissionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueAgentCommissionInfo.Marshal(b, m, deterministic)
}
func (m *LeagueAgentCommissionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueAgentCommissionInfo.Merge(m, src)
}
func (m *LeagueAgentCommissionInfo) XXX_Size() int {
	return xxx_messageInfo_LeagueAgentCommissionInfo.Size(m)
}
func (m *LeagueAgentCommissionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueAgentCommissionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueAgentCommissionInfo proto.InternalMessageInfo

func (m *LeagueAgentCommissionInfo) GetCumulativeCommission() int64 {
	if m != nil {
		return m.CumulativeCommission
	}
	return 0
}

func (m *LeagueAgentCommissionInfo) GetUncollectedCommission() int64 {
	if m != nil {
		return m.UncollectedCommission
	}
	return 0
}

func (m *LeagueAgentCommissionInfo) GetLastCollectTime() int64 {
	if m != nil {
		return m.LastCollectTime
	}
	return 0
}

//联盟代理收益报表
type LeagueAgentCommissionReport struct {
	LeagueUUID     string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	UserID         string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Account        string `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	UserName       string `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	ShortId        string `protobuf:"bytes,5,opt,name=shortId,proto3" json:"shortId,omitempty"`
	ParentId       string `protobuf:"bytes,6,opt,name=parentId,proto3" json:"parentId,omitempty"`
	ClubUUID       string `protobuf:"bytes,7,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	ClubName       string `protobuf:"bytes,8,opt,name=clubName,proto3" json:"clubName,omitempty"`
	ClubInviteCode string `protobuf:"bytes,9,opt,name=clubInviteCode,proto3" json:"clubInviteCode,omitempty"`
	//分成比例
	ProfitRate int64 `protobuf:"varint,10,opt,name=profitRate,proto3" json:"profitRate,omitempty"`
	//抽水金额
	Commission int64 `protobuf:"varint,11,opt,name=commission,proto3" json:"commission,omitempty"`
	//分成金额
	Profit int64 `protobuf:"varint,12,opt,name=profit,proto3" json:"profit,omitempty"`
	//创建时间
	CreateTime int64 `protobuf:"varint,13,opt,name=createTime,proto3" json:"createTime,omitempty"`
	//佣金来源用户
	SourceUserId string `protobuf:"bytes,14,opt,name=sourceUserId,proto3" json:"sourceUserId,omitempty"`
	//结算时间
	SettleTime           int64    `protobuf:"varint,15,opt,name=settleTime,proto3" json:"settleTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeagueAgentCommissionReport) Reset()         { *m = LeagueAgentCommissionReport{} }
func (m *LeagueAgentCommissionReport) String() string { return proto.CompactTextString(m) }
func (*LeagueAgentCommissionReport) ProtoMessage()    {}
func (*LeagueAgentCommissionReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{544}
}

func (m *LeagueAgentCommissionReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueAgentCommissionReport.Unmarshal(m, b)
}
func (m *LeagueAgentCommissionReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueAgentCommissionReport.Marshal(b, m, deterministic)
}
func (m *LeagueAgentCommissionReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueAgentCommissionReport.Merge(m, src)
}
func (m *LeagueAgentCommissionReport) XXX_Size() int {
	return xxx_messageInfo_LeagueAgentCommissionReport.Size(m)
}
func (m *LeagueAgentCommissionReport) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueAgentCommissionReport.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueAgentCommissionReport proto.InternalMessageInfo

func (m *LeagueAgentCommissionReport) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *LeagueAgentCommissionReport) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *LeagueAgentCommissionReport) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *LeagueAgentCommissionReport) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *LeagueAgentCommissionReport) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *LeagueAgentCommissionReport) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *LeagueAgentCommissionReport) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *LeagueAgentCommissionReport) GetClubName() string {
	if m != nil {
		return m.ClubName
	}
	return ""
}

func (m *LeagueAgentCommissionReport) GetClubInviteCode() string {
	if m != nil {
		return m.ClubInviteCode
	}
	return ""
}

func (m *LeagueAgentCommissionReport) GetProfitRate() int64 {
	if m != nil {
		return m.ProfitRate
	}
	return 0
}

func (m *LeagueAgentCommissionReport) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *LeagueAgentCommissionReport) GetProfit() int64 {
	if m != nil {
		return m.Profit
	}
	return 0
}

func (m *LeagueAgentCommissionReport) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *LeagueAgentCommissionReport) GetSourceUserId() string {
	if m != nil {
		return m.SourceUserId
	}
	return ""
}

func (m *LeagueAgentCommissionReport) GetSettleTime() int64 {
	if m != nil {
		return m.SettleTime
	}
	return 0
}

//获取自己联盟代理抽水信息
type GetLeagueAgentCommissionInfoRequest struct {
	LeagueUUID           string   `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeagueAgentCommissionInfoRequest) Reset()         { *m = GetLeagueAgentCommissionInfoRequest{} }
func (m *GetLeagueAgentCommissionInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetLeagueAgentCommissionInfoRequest) ProtoMessage()    {}
func (*GetLeagueAgentCommissionInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{545}
}

func (m *GetLeagueAgentCommissionInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueAgentCommissionInfoRequest.Unmarshal(m, b)
}
func (m *GetLeagueAgentCommissionInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueAgentCommissionInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetLeagueAgentCommissionInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueAgentCommissionInfoRequest.Merge(m, src)
}
func (m *GetLeagueAgentCommissionInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetLeagueAgentCommissionInfoRequest.Size(m)
}
func (m *GetLeagueAgentCommissionInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueAgentCommissionInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueAgentCommissionInfoRequest proto.InternalMessageInfo

func (m *GetLeagueAgentCommissionInfoRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

//获取联盟下级代理佣金收益
type GetLeagueSubAgentCommissionRequest struct {
	//联盟ID
	LeagueUUID           string   `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	StartTime            int64    `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64    `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeagueSubAgentCommissionRequest) Reset()         { *m = GetLeagueSubAgentCommissionRequest{} }
func (m *GetLeagueSubAgentCommissionRequest) String() string { return proto.CompactTextString(m) }
func (*GetLeagueSubAgentCommissionRequest) ProtoMessage()    {}
func (*GetLeagueSubAgentCommissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{546}
}

func (m *GetLeagueSubAgentCommissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueSubAgentCommissionRequest.Unmarshal(m, b)
}
func (m *GetLeagueSubAgentCommissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueSubAgentCommissionRequest.Marshal(b, m, deterministic)
}
func (m *GetLeagueSubAgentCommissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueSubAgentCommissionRequest.Merge(m, src)
}
func (m *GetLeagueSubAgentCommissionRequest) XXX_Size() int {
	return xxx_messageInfo_GetLeagueSubAgentCommissionRequest.Size(m)
}
func (m *GetLeagueSubAgentCommissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueSubAgentCommissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueSubAgentCommissionRequest proto.InternalMessageInfo

func (m *GetLeagueSubAgentCommissionRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *GetLeagueSubAgentCommissionRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GetLeagueSubAgentCommissionRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

//获取联盟下级代理佣金收益
type GetLeagueSubAgentCommissionReply struct {
	LeagueUUID           string                            `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	StartTime            int64                             `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64                             `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Data                 []*LeagueSubAgentCommissionDetail `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *GetLeagueSubAgentCommissionReply) Reset()         { *m = GetLeagueSubAgentCommissionReply{} }
func (m *GetLeagueSubAgentCommissionReply) String() string { return proto.CompactTextString(m) }
func (*GetLeagueSubAgentCommissionReply) ProtoMessage()    {}
func (*GetLeagueSubAgentCommissionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{547}
}

func (m *GetLeagueSubAgentCommissionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueSubAgentCommissionReply.Unmarshal(m, b)
}
func (m *GetLeagueSubAgentCommissionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueSubAgentCommissionReply.Marshal(b, m, deterministic)
}
func (m *GetLeagueSubAgentCommissionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueSubAgentCommissionReply.Merge(m, src)
}
func (m *GetLeagueSubAgentCommissionReply) XXX_Size() int {
	return xxx_messageInfo_GetLeagueSubAgentCommissionReply.Size(m)
}
func (m *GetLeagueSubAgentCommissionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueSubAgentCommissionReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueSubAgentCommissionReply proto.InternalMessageInfo

func (m *GetLeagueSubAgentCommissionReply) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *GetLeagueSubAgentCommissionReply) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GetLeagueSubAgentCommissionReply) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *GetLeagueSubAgentCommissionReply) GetData() []*LeagueSubAgentCommissionDetail {
	if m != nil {
		return m.Data
	}
	return nil
}

//联盟下级代理佣金收益详情
type LeagueSubAgentCommissionDetail struct {
	MemberUUID string `protobuf:"bytes,1,opt,name=memberUUID,proto3" json:"memberUUID,omitempty"`
	//所属俱乐部ID，如果在联盟下具有多个俱乐部，则此id为最早加入联盟的id
	ClubUUID string `protobuf:"bytes,2,opt,name=clubUUID,proto3" json:"clubUUID,omitempty"`
	//上级成员ID
	ParentMemberId string `protobuf:"bytes,3,opt,name=parentMemberId,proto3" json:"parentMemberId,omitempty"`
	//代理分成
	ProfitRate int64  `protobuf:"varint,4,opt,name=profitRate,proto3" json:"profitRate,omitempty"`
	ShortId    string `protobuf:"bytes,5,opt,name=shortId,proto3" json:"shortId,omitempty"`
	Account    string `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`
	Name       string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	HeadImgUrl string `protobuf:"bytes,8,opt,name=headImgUrl,proto3" json:"headImgUrl,omitempty"`
	//俱乐部名称
	ClubName string `protobuf:"bytes,9,opt,name=clubName,proto3" json:"clubName,omitempty"`
	//俱乐部邀请码
	ClubInviteCode string `protobuf:"bytes,10,opt,name=clubInviteCode,proto3" json:"clubInviteCode,omitempty"`
	//抽水金额
	Commission int64 `protobuf:"varint,11,opt,name=commission,proto3" json:"commission,omitempty"`
	//当前用户分得佣金
	Profit int64 `protobuf:"varint,12,opt,name=profit,proto3" json:"profit,omitempty"`
	//上级分得佣金
	ParentProfit int64 `protobuf:"varint,13,opt,name=parentProfit,proto3" json:"parentProfit,omitempty"`
	//日期
	DateTime             int64    `protobuf:"varint,14,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeagueSubAgentCommissionDetail) Reset()         { *m = LeagueSubAgentCommissionDetail{} }
func (m *LeagueSubAgentCommissionDetail) String() string { return proto.CompactTextString(m) }
func (*LeagueSubAgentCommissionDetail) ProtoMessage()    {}
func (*LeagueSubAgentCommissionDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{548}
}

func (m *LeagueSubAgentCommissionDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueSubAgentCommissionDetail.Unmarshal(m, b)
}
func (m *LeagueSubAgentCommissionDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueSubAgentCommissionDetail.Marshal(b, m, deterministic)
}
func (m *LeagueSubAgentCommissionDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueSubAgentCommissionDetail.Merge(m, src)
}
func (m *LeagueSubAgentCommissionDetail) XXX_Size() int {
	return xxx_messageInfo_LeagueSubAgentCommissionDetail.Size(m)
}
func (m *LeagueSubAgentCommissionDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueSubAgentCommissionDetail.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueSubAgentCommissionDetail proto.InternalMessageInfo

func (m *LeagueSubAgentCommissionDetail) GetMemberUUID() string {
	if m != nil {
		return m.MemberUUID
	}
	return ""
}

func (m *LeagueSubAgentCommissionDetail) GetClubUUID() string {
	if m != nil {
		return m.ClubUUID
	}
	return ""
}

func (m *LeagueSubAgentCommissionDetail) GetParentMemberId() string {
	if m != nil {
		return m.ParentMemberId
	}
	return ""
}

func (m *LeagueSubAgentCommissionDetail) GetProfitRate() int64 {
	if m != nil {
		return m.ProfitRate
	}
	return 0
}

func (m *LeagueSubAgentCommissionDetail) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *LeagueSubAgentCommissionDetail) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *LeagueSubAgentCommissionDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LeagueSubAgentCommissionDetail) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *LeagueSubAgentCommissionDetail) GetClubName() string {
	if m != nil {
		return m.ClubName
	}
	return ""
}

func (m *LeagueSubAgentCommissionDetail) GetClubInviteCode() string {
	if m != nil {
		return m.ClubInviteCode
	}
	return ""
}

func (m *LeagueSubAgentCommissionDetail) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *LeagueSubAgentCommissionDetail) GetProfit() int64 {
	if m != nil {
		return m.Profit
	}
	return 0
}

func (m *LeagueSubAgentCommissionDetail) GetParentProfit() int64 {
	if m != nil {
		return m.ParentProfit
	}
	return 0
}

func (m *LeagueSubAgentCommissionDetail) GetDateTime() int64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

//获取个人在联盟中的基本信息
type GetSelfInfoOfLeagueRequest struct {
	LeagueUUID           string   `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSelfInfoOfLeagueRequest) Reset()         { *m = GetSelfInfoOfLeagueRequest{} }
func (m *GetSelfInfoOfLeagueRequest) String() string { return proto.CompactTextString(m) }
func (*GetSelfInfoOfLeagueRequest) ProtoMessage()    {}
func (*GetSelfInfoOfLeagueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{549}
}

func (m *GetSelfInfoOfLeagueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSelfInfoOfLeagueRequest.Unmarshal(m, b)
}
func (m *GetSelfInfoOfLeagueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSelfInfoOfLeagueRequest.Marshal(b, m, deterministic)
}
func (m *GetSelfInfoOfLeagueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSelfInfoOfLeagueRequest.Merge(m, src)
}
func (m *GetSelfInfoOfLeagueRequest) XXX_Size() int {
	return xxx_messageInfo_GetSelfInfoOfLeagueRequest.Size(m)
}
func (m *GetSelfInfoOfLeagueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSelfInfoOfLeagueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSelfInfoOfLeagueRequest proto.InternalMessageInfo

func (m *GetSelfInfoOfLeagueRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

//获取个人在联盟中的基本信息
type GetSelfInfoOfLeagueReply struct {
	Detail               *LeagueMemberAllInfo `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetSelfInfoOfLeagueReply) Reset()         { *m = GetSelfInfoOfLeagueReply{} }
func (m *GetSelfInfoOfLeagueReply) String() string { return proto.CompactTextString(m) }
func (*GetSelfInfoOfLeagueReply) ProtoMessage()    {}
func (*GetSelfInfoOfLeagueReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{550}
}

func (m *GetSelfInfoOfLeagueReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSelfInfoOfLeagueReply.Unmarshal(m, b)
}
func (m *GetSelfInfoOfLeagueReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSelfInfoOfLeagueReply.Marshal(b, m, deterministic)
}
func (m *GetSelfInfoOfLeagueReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSelfInfoOfLeagueReply.Merge(m, src)
}
func (m *GetSelfInfoOfLeagueReply) XXX_Size() int {
	return xxx_messageInfo_GetSelfInfoOfLeagueReply.Size(m)
}
func (m *GetSelfInfoOfLeagueReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSelfInfoOfLeagueReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetSelfInfoOfLeagueReply proto.InternalMessageInfo

func (m *GetSelfInfoOfLeagueReply) GetDetail() *LeagueMemberAllInfo {
	if m != nil {
		return m.Detail
	}
	return nil
}

//获取我的分佣金额
type GetLeagueAgentCommissionRequest struct {
	LeagueUUID           string   `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeagueAgentCommissionRequest) Reset()         { *m = GetLeagueAgentCommissionRequest{} }
func (m *GetLeagueAgentCommissionRequest) String() string { return proto.CompactTextString(m) }
func (*GetLeagueAgentCommissionRequest) ProtoMessage()    {}
func (*GetLeagueAgentCommissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{551}
}

func (m *GetLeagueAgentCommissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueAgentCommissionRequest.Unmarshal(m, b)
}
func (m *GetLeagueAgentCommissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueAgentCommissionRequest.Marshal(b, m, deterministic)
}
func (m *GetLeagueAgentCommissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueAgentCommissionRequest.Merge(m, src)
}
func (m *GetLeagueAgentCommissionRequest) XXX_Size() int {
	return xxx_messageInfo_GetLeagueAgentCommissionRequest.Size(m)
}
func (m *GetLeagueAgentCommissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueAgentCommissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueAgentCommissionRequest proto.InternalMessageInfo

func (m *GetLeagueAgentCommissionRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

//获取我的分佣金额
type GetLeagueAgentCommissionReply struct {
	Detail               *LeagueAgentCommissionInfo `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetLeagueAgentCommissionReply) Reset()         { *m = GetLeagueAgentCommissionReply{} }
func (m *GetLeagueAgentCommissionReply) String() string { return proto.CompactTextString(m) }
func (*GetLeagueAgentCommissionReply) ProtoMessage()    {}
func (*GetLeagueAgentCommissionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{552}
}

func (m *GetLeagueAgentCommissionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeagueAgentCommissionReply.Unmarshal(m, b)
}
func (m *GetLeagueAgentCommissionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeagueAgentCommissionReply.Marshal(b, m, deterministic)
}
func (m *GetLeagueAgentCommissionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeagueAgentCommissionReply.Merge(m, src)
}
func (m *GetLeagueAgentCommissionReply) XXX_Size() int {
	return xxx_messageInfo_GetLeagueAgentCommissionReply.Size(m)
}
func (m *GetLeagueAgentCommissionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeagueAgentCommissionReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeagueAgentCommissionReply proto.InternalMessageInfo

func (m *GetLeagueAgentCommissionReply) GetDetail() *LeagueAgentCommissionInfo {
	if m != nil {
		return m.Detail
	}
	return nil
}

//领取我的分佣金额
type ReceiveLeagueAgentCommissionRequest struct {
	LeagueUUID           string   `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiveLeagueAgentCommissionRequest) Reset()         { *m = ReceiveLeagueAgentCommissionRequest{} }
func (m *ReceiveLeagueAgentCommissionRequest) String() string { return proto.CompactTextString(m) }
func (*ReceiveLeagueAgentCommissionRequest) ProtoMessage()    {}
func (*ReceiveLeagueAgentCommissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{553}
}

func (m *ReceiveLeagueAgentCommissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiveLeagueAgentCommissionRequest.Unmarshal(m, b)
}
func (m *ReceiveLeagueAgentCommissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiveLeagueAgentCommissionRequest.Marshal(b, m, deterministic)
}
func (m *ReceiveLeagueAgentCommissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveLeagueAgentCommissionRequest.Merge(m, src)
}
func (m *ReceiveLeagueAgentCommissionRequest) XXX_Size() int {
	return xxx_messageInfo_ReceiveLeagueAgentCommissionRequest.Size(m)
}
func (m *ReceiveLeagueAgentCommissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveLeagueAgentCommissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveLeagueAgentCommissionRequest proto.InternalMessageInfo

func (m *ReceiveLeagueAgentCommissionRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

//领取我的分佣金额
type ReceiveLeagueAgentCommissionReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiveLeagueAgentCommissionReply) Reset()         { *m = ReceiveLeagueAgentCommissionReply{} }
func (m *ReceiveLeagueAgentCommissionReply) String() string { return proto.CompactTextString(m) }
func (*ReceiveLeagueAgentCommissionReply) ProtoMessage()    {}
func (*ReceiveLeagueAgentCommissionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{554}
}

func (m *ReceiveLeagueAgentCommissionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiveLeagueAgentCommissionReply.Unmarshal(m, b)
}
func (m *ReceiveLeagueAgentCommissionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiveLeagueAgentCommissionReply.Marshal(b, m, deterministic)
}
func (m *ReceiveLeagueAgentCommissionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveLeagueAgentCommissionReply.Merge(m, src)
}
func (m *ReceiveLeagueAgentCommissionReply) XXX_Size() int {
	return xxx_messageInfo_ReceiveLeagueAgentCommissionReply.Size(m)
}
func (m *ReceiveLeagueAgentCommissionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveLeagueAgentCommissionReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveLeagueAgentCommissionReply proto.InternalMessageInfo

//联盟金豆变动通知
type LeagueBeanChangeNotice struct {
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	//变动的金豆数
	ChangeBean int64 `protobuf:"varint,2,opt,name=changeBean,proto3" json:"changeBean,omitempty"`
	//变动后的金豆数
	ResultBean           int64    `protobuf:"varint,3,opt,name=resultBean,proto3" json:"resultBean,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeagueBeanChangeNotice) Reset()         { *m = LeagueBeanChangeNotice{} }
func (m *LeagueBeanChangeNotice) String() string { return proto.CompactTextString(m) }
func (*LeagueBeanChangeNotice) ProtoMessage()    {}
func (*LeagueBeanChangeNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{555}
}

func (m *LeagueBeanChangeNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueBeanChangeNotice.Unmarshal(m, b)
}
func (m *LeagueBeanChangeNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueBeanChangeNotice.Marshal(b, m, deterministic)
}
func (m *LeagueBeanChangeNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueBeanChangeNotice.Merge(m, src)
}
func (m *LeagueBeanChangeNotice) XXX_Size() int {
	return xxx_messageInfo_LeagueBeanChangeNotice.Size(m)
}
func (m *LeagueBeanChangeNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueBeanChangeNotice.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueBeanChangeNotice proto.InternalMessageInfo

func (m *LeagueBeanChangeNotice) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *LeagueBeanChangeNotice) GetChangeBean() int64 {
	if m != nil {
		return m.ChangeBean
	}
	return 0
}

func (m *LeagueBeanChangeNotice) GetResultBean() int64 {
	if m != nil {
		return m.ResultBean
	}
	return 0
}

// 用户进出联盟大厅接口的请求协议
type EnterLeagueLobbyRequest struct {
	// 联盟的UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// true为进入操作，false为退出操作
	IsEnter              bool     `protobuf:"varint,2,opt,name=isEnter,proto3" json:"isEnter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnterLeagueLobbyRequest) Reset()         { *m = EnterLeagueLobbyRequest{} }
func (m *EnterLeagueLobbyRequest) String() string { return proto.CompactTextString(m) }
func (*EnterLeagueLobbyRequest) ProtoMessage()    {}
func (*EnterLeagueLobbyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{556}
}

func (m *EnterLeagueLobbyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnterLeagueLobbyRequest.Unmarshal(m, b)
}
func (m *EnterLeagueLobbyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnterLeagueLobbyRequest.Marshal(b, m, deterministic)
}
func (m *EnterLeagueLobbyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnterLeagueLobbyRequest.Merge(m, src)
}
func (m *EnterLeagueLobbyRequest) XXX_Size() int {
	return xxx_messageInfo_EnterLeagueLobbyRequest.Size(m)
}
func (m *EnterLeagueLobbyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnterLeagueLobbyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnterLeagueLobbyRequest proto.InternalMessageInfo

func (m *EnterLeagueLobbyRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *EnterLeagueLobbyRequest) GetIsEnter() bool {
	if m != nil {
		return m.IsEnter
	}
	return false
}

// 用户进出联盟大厅接口的返回协议
type EnterLeagueLobbyReply struct {
	// 联盟的UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 大厅中的玩家人数
	LobbyPlayerCount     int32    `protobuf:"varint,2,opt,name=lobbyPlayerCount,proto3" json:"lobbyPlayerCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnterLeagueLobbyReply) Reset()         { *m = EnterLeagueLobbyReply{} }
func (m *EnterLeagueLobbyReply) String() string { return proto.CompactTextString(m) }
func (*EnterLeagueLobbyReply) ProtoMessage()    {}
func (*EnterLeagueLobbyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{557}
}

func (m *EnterLeagueLobbyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnterLeagueLobbyReply.Unmarshal(m, b)
}
func (m *EnterLeagueLobbyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnterLeagueLobbyReply.Marshal(b, m, deterministic)
}
func (m *EnterLeagueLobbyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnterLeagueLobbyReply.Merge(m, src)
}
func (m *EnterLeagueLobbyReply) XXX_Size() int {
	return xxx_messageInfo_EnterLeagueLobbyReply.Size(m)
}
func (m *EnterLeagueLobbyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EnterLeagueLobbyReply.DiscardUnknown(m)
}

var xxx_messageInfo_EnterLeagueLobbyReply proto.InternalMessageInfo

func (m *EnterLeagueLobbyReply) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *EnterLeagueLobbyReply) GetLobbyPlayerCount() int32 {
	if m != nil {
		return m.LobbyPlayerCount
	}
	return 0
}

// 查询金豆赠送日志的请求协议
type QueryBeanLogRequest struct {
	// 联盟的UUID
	LeagueUUID string `protobuf:"bytes,1,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	// 用户的UUID，如果是查赠与记录，表示受赠人UUID; 如果是查获取记录，表示赠送人UUID
	PlayerUUID string `protobuf:"bytes,2,opt,name=playerUUID,proto3" json:"playerUUID,omitempty"`
	// 日志类型数组
	LogType              []int32  `protobuf:"varint,3,rep,packed,name=logType,proto3" json:"logType,omitempty"`
	Page                 int32    `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Count                int32    `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryBeanLogRequest) Reset()         { *m = QueryBeanLogRequest{} }
func (m *QueryBeanLogRequest) String() string { return proto.CompactTextString(m) }
func (*QueryBeanLogRequest) ProtoMessage()    {}
func (*QueryBeanLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{558}
}

func (m *QueryBeanLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryBeanLogRequest.Unmarshal(m, b)
}
func (m *QueryBeanLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryBeanLogRequest.Marshal(b, m, deterministic)
}
func (m *QueryBeanLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBeanLogRequest.Merge(m, src)
}
func (m *QueryBeanLogRequest) XXX_Size() int {
	return xxx_messageInfo_QueryBeanLogRequest.Size(m)
}
func (m *QueryBeanLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBeanLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBeanLogRequest proto.InternalMessageInfo

func (m *QueryBeanLogRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *QueryBeanLogRequest) GetPlayerUUID() string {
	if m != nil {
		return m.PlayerUUID
	}
	return ""
}

func (m *QueryBeanLogRequest) GetLogType() []int32 {
	if m != nil {
		return m.LogType
	}
	return nil
}

func (m *QueryBeanLogRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *QueryBeanLogRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// 查询金豆赠送日志的响应协议
type QueryBeanLogReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryBeanLogReply) Reset()         { *m = QueryBeanLogReply{} }
func (m *QueryBeanLogReply) String() string { return proto.CompactTextString(m) }
func (*QueryBeanLogReply) ProtoMessage()    {}
func (*QueryBeanLogReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{559}
}

func (m *QueryBeanLogReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryBeanLogReply.Unmarshal(m, b)
}
func (m *QueryBeanLogReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryBeanLogReply.Marshal(b, m, deterministic)
}
func (m *QueryBeanLogReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBeanLogReply.Merge(m, src)
}
func (m *QueryBeanLogReply) XXX_Size() int {
	return xxx_messageInfo_QueryBeanLogReply.Size(m)
}
func (m *QueryBeanLogReply) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBeanLogReply.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBeanLogReply proto.InternalMessageInfo

// 诈金花操作请求
type JinhuaDoRequest struct {
	// 想要进行的操作
	DoType JinhuaDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=JinhuaDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JinhuaDoRequest) Reset()         { *m = JinhuaDoRequest{} }
func (m *JinhuaDoRequest) String() string { return proto.CompactTextString(m) }
func (*JinhuaDoRequest) ProtoMessage()    {}
func (*JinhuaDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{560}
}

func (m *JinhuaDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JinhuaDoRequest.Unmarshal(m, b)
}
func (m *JinhuaDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JinhuaDoRequest.Marshal(b, m, deterministic)
}
func (m *JinhuaDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JinhuaDoRequest.Merge(m, src)
}
func (m *JinhuaDoRequest) XXX_Size() int {
	return xxx_messageInfo_JinhuaDoRequest.Size(m)
}
func (m *JinhuaDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JinhuaDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JinhuaDoRequest proto.InternalMessageInfo

func (m *JinhuaDoRequest) GetDoType() JinhuaDoType {
	if m != nil {
		return m.DoType
	}
	return JinhuaDoType_JinhuaDo_None
}

func (m *JinhuaDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

//比较诈金花牌型
type CompareJinhuaPokerType struct {
	//牌型
	JinhuaPokerType JinhuaPokerType `protobuf:"varint,1,opt,name=jinhuaPokerType,proto3,enum=JinhuaPokerType" json:"jinhuaPokerType,omitempty"`
	//牌型得分
	PokerScore float32 `protobuf:"fixed32,2,opt,name=PokerScore,proto3" json:"PokerScore,omitempty"`
	//最大牌值
	MaxPokerNum          PokerNum `protobuf:"varint,3,opt,name=MaxPokerNum,proto3,enum=PokerNum" json:"MaxPokerNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompareJinhuaPokerType) Reset()         { *m = CompareJinhuaPokerType{} }
func (m *CompareJinhuaPokerType) String() string { return proto.CompactTextString(m) }
func (*CompareJinhuaPokerType) ProtoMessage()    {}
func (*CompareJinhuaPokerType) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{561}
}

func (m *CompareJinhuaPokerType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompareJinhuaPokerType.Unmarshal(m, b)
}
func (m *CompareJinhuaPokerType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompareJinhuaPokerType.Marshal(b, m, deterministic)
}
func (m *CompareJinhuaPokerType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompareJinhuaPokerType.Merge(m, src)
}
func (m *CompareJinhuaPokerType) XXX_Size() int {
	return xxx_messageInfo_CompareJinhuaPokerType.Size(m)
}
func (m *CompareJinhuaPokerType) XXX_DiscardUnknown() {
	xxx_messageInfo_CompareJinhuaPokerType.DiscardUnknown(m)
}

var xxx_messageInfo_CompareJinhuaPokerType proto.InternalMessageInfo

func (m *CompareJinhuaPokerType) GetJinhuaPokerType() JinhuaPokerType {
	if m != nil {
		return m.JinhuaPokerType
	}
	return JinhuaPokerType_JinhuaCardType_None
}

func (m *CompareJinhuaPokerType) GetPokerScore() float32 {
	if m != nil {
		return m.PokerScore
	}
	return 0
}

func (m *CompareJinhuaPokerType) GetMaxPokerNum() PokerNum {
	if m != nil {
		return m.MaxPokerNum
	}
	return PokerNum_PokerNumNone
}

// 诈金花加注、跟注、根到底、看牌、放弃、比牌、全压等操作
type JinhuaOperateRequest struct {
	OperateType JinhuaOperateType `protobuf:"varint,1,opt,name=operateType,proto3,enum=JinhuaOperateType" json:"operateType,omitempty"`
	//和谁比牌
	CompareUuid string `protobuf:"bytes,2,opt,name=CompareUuid,proto3" json:"CompareUuid,omitempty"`
	//加注多少
	RaiseType JinhuaRaiseType `protobuf:"varint,3,opt,name=RaiseType,proto3,enum=JinhuaRaiseType" json:"RaiseType,omitempty"`
	//是否搓牌
	RubbingCards         bool     `protobuf:"varint,4,opt,name=RubbingCards,proto3" json:"RubbingCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JinhuaOperateRequest) Reset()         { *m = JinhuaOperateRequest{} }
func (m *JinhuaOperateRequest) String() string { return proto.CompactTextString(m) }
func (*JinhuaOperateRequest) ProtoMessage()    {}
func (*JinhuaOperateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{562}
}

func (m *JinhuaOperateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JinhuaOperateRequest.Unmarshal(m, b)
}
func (m *JinhuaOperateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JinhuaOperateRequest.Marshal(b, m, deterministic)
}
func (m *JinhuaOperateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JinhuaOperateRequest.Merge(m, src)
}
func (m *JinhuaOperateRequest) XXX_Size() int {
	return xxx_messageInfo_JinhuaOperateRequest.Size(m)
}
func (m *JinhuaOperateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JinhuaOperateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JinhuaOperateRequest proto.InternalMessageInfo

func (m *JinhuaOperateRequest) GetOperateType() JinhuaOperateType {
	if m != nil {
		return m.OperateType
	}
	return JinhuaOperateType_JinhuaOperateType_None
}

func (m *JinhuaOperateRequest) GetCompareUuid() string {
	if m != nil {
		return m.CompareUuid
	}
	return ""
}

func (m *JinhuaOperateRequest) GetRaiseType() JinhuaRaiseType {
	if m != nil {
		return m.RaiseType
	}
	return JinhuaRaiseType_JinhuaRaiseType_None
}

func (m *JinhuaOperateRequest) GetRubbingCards() bool {
	if m != nil {
		return m.RubbingCards
	}
	return false
}

//玩家操作的回复
type JinhuaOperateReply struct {
	OperateType JinhuaOperateType `protobuf:"varint,1,opt,name=operateType,proto3,enum=JinhuaOperateType" json:"operateType,omitempty"`
	//当前操作玩家uuid
	DoUuid               string   `protobuf:"bytes,2,opt,name=doUuid,proto3" json:"doUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JinhuaOperateReply) Reset()         { *m = JinhuaOperateReply{} }
func (m *JinhuaOperateReply) String() string { return proto.CompactTextString(m) }
func (*JinhuaOperateReply) ProtoMessage()    {}
func (*JinhuaOperateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{563}
}

func (m *JinhuaOperateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JinhuaOperateReply.Unmarshal(m, b)
}
func (m *JinhuaOperateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JinhuaOperateReply.Marshal(b, m, deterministic)
}
func (m *JinhuaOperateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JinhuaOperateReply.Merge(m, src)
}
func (m *JinhuaOperateReply) XXX_Size() int {
	return xxx_messageInfo_JinhuaOperateReply.Size(m)
}
func (m *JinhuaOperateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_JinhuaOperateReply.DiscardUnknown(m)
}

var xxx_messageInfo_JinhuaOperateReply proto.InternalMessageInfo

func (m *JinhuaOperateReply) GetOperateType() JinhuaOperateType {
	if m != nil {
		return m.OperateType
	}
	return JinhuaOperateType_JinhuaOperateType_None
}

func (m *JinhuaOperateReply) GetDoUuid() string {
	if m != nil {
		return m.DoUuid
	}
	return ""
}

// 诈金花加注、跟注、根到底、看牌、放弃、比牌、全压等操作
type JinhuaOperateBroadcast struct {
	OperateType JinhuaOperateType `protobuf:"varint,1,opt,name=operateType,proto3,enum=JinhuaOperateType" json:"operateType,omitempty"`
	//当前操作玩家uuid
	DoUuid string `protobuf:"bytes,2,opt,name=doUuid,proto3" json:"doUuid,omitempty"`
	// 当前操作的玩家的索引
	DoIndex int32 `protobuf:"varint,3,opt,name=doIndex,proto3" json:"doIndex,omitempty"`
	//当前底注
	CurrentAntes int64 `protobuf:"varint,4,opt,name=currentAntes,proto3" json:"currentAntes,omitempty"`
	//玩家下注值
	PlayerBets int64 `protobuf:"varint,5,opt,name=playerBets,proto3" json:"playerBets,omitempty"`
	//玩家总下注
	PlayerTotalBets int64 `protobuf:"varint,6,opt,name=playerTotalBets,proto3" json:"playerTotalBets,omitempty"`
	//玩家总消耗（总下注+抽水（目前暂时无抽水））
	PlayerTotalConsumption int64 `protobuf:"varint,7,opt,name=playerTotalConsumption,proto3" json:"playerTotalConsumption,omitempty"`
	//当前能加注级别
	CurrentRaiseType JinhuaRaiseType `protobuf:"varint,8,opt,name=currentRaiseType,proto3,enum=JinhuaRaiseType" json:"currentRaiseType,omitempty"`
	// 玩家手上的扑克牌
	Pokers []*Poker `protobuf:"bytes,9,rep,name=pokers,proto3" json:"pokers,omitempty"`
	//牌型
	PokerType JinhuaPokerType `protobuf:"varint,10,opt,name=pokerType,proto3,enum=JinhuaPokerType" json:"pokerType,omitempty"`
	//房间id
	RoomId string `protobuf:"bytes,11,opt,name=roomId,proto3" json:"roomId,omitempty"`
	//当前房间奖池
	RoomJackpot int64 `protobuf:"varint,12,opt,name=roomJackpot,proto3" json:"roomJackpot,omitempty"`
	//当前操作玩家圈数
	CurrentPlayerCallRound uint32 `protobuf:"varint,13,opt,name=currentPlayerCallRound,proto3" json:"currentPlayerCallRound,omitempty"`
	//是否搓牌
	RubbingCards         bool     `protobuf:"varint,14,opt,name=RubbingCards,proto3" json:"RubbingCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JinhuaOperateBroadcast) Reset()         { *m = JinhuaOperateBroadcast{} }
func (m *JinhuaOperateBroadcast) String() string { return proto.CompactTextString(m) }
func (*JinhuaOperateBroadcast) ProtoMessage()    {}
func (*JinhuaOperateBroadcast) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{564}
}

func (m *JinhuaOperateBroadcast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JinhuaOperateBroadcast.Unmarshal(m, b)
}
func (m *JinhuaOperateBroadcast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JinhuaOperateBroadcast.Marshal(b, m, deterministic)
}
func (m *JinhuaOperateBroadcast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JinhuaOperateBroadcast.Merge(m, src)
}
func (m *JinhuaOperateBroadcast) XXX_Size() int {
	return xxx_messageInfo_JinhuaOperateBroadcast.Size(m)
}
func (m *JinhuaOperateBroadcast) XXX_DiscardUnknown() {
	xxx_messageInfo_JinhuaOperateBroadcast.DiscardUnknown(m)
}

var xxx_messageInfo_JinhuaOperateBroadcast proto.InternalMessageInfo

func (m *JinhuaOperateBroadcast) GetOperateType() JinhuaOperateType {
	if m != nil {
		return m.OperateType
	}
	return JinhuaOperateType_JinhuaOperateType_None
}

func (m *JinhuaOperateBroadcast) GetDoUuid() string {
	if m != nil {
		return m.DoUuid
	}
	return ""
}

func (m *JinhuaOperateBroadcast) GetDoIndex() int32 {
	if m != nil {
		return m.DoIndex
	}
	return 0
}

func (m *JinhuaOperateBroadcast) GetCurrentAntes() int64 {
	if m != nil {
		return m.CurrentAntes
	}
	return 0
}

func (m *JinhuaOperateBroadcast) GetPlayerBets() int64 {
	if m != nil {
		return m.PlayerBets
	}
	return 0
}

func (m *JinhuaOperateBroadcast) GetPlayerTotalBets() int64 {
	if m != nil {
		return m.PlayerTotalBets
	}
	return 0
}

func (m *JinhuaOperateBroadcast) GetPlayerTotalConsumption() int64 {
	if m != nil {
		return m.PlayerTotalConsumption
	}
	return 0
}

func (m *JinhuaOperateBroadcast) GetCurrentRaiseType() JinhuaRaiseType {
	if m != nil {
		return m.CurrentRaiseType
	}
	return JinhuaRaiseType_JinhuaRaiseType_None
}

func (m *JinhuaOperateBroadcast) GetPokers() []*Poker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

func (m *JinhuaOperateBroadcast) GetPokerType() JinhuaPokerType {
	if m != nil {
		return m.PokerType
	}
	return JinhuaPokerType_JinhuaCardType_None
}

func (m *JinhuaOperateBroadcast) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *JinhuaOperateBroadcast) GetRoomJackpot() int64 {
	if m != nil {
		return m.RoomJackpot
	}
	return 0
}

func (m *JinhuaOperateBroadcast) GetCurrentPlayerCallRound() uint32 {
	if m != nil {
		return m.CurrentPlayerCallRound
	}
	return 0
}

func (m *JinhuaOperateBroadcast) GetRubbingCards() bool {
	if m != nil {
		return m.RubbingCards
	}
	return false
}

//玩家比牌结果推送
type PushJinhuaCompareResult struct {
	//赢家id
	WinnerUuids []string `protobuf:"bytes,1,rep,name=winnerUuids,proto3" json:"winnerUuids,omitempty"`
	//赢家索引
	LoserUuids []string `protobuf:"bytes,2,rep,name=loserUuids,proto3" json:"loserUuids,omitempty"`
	RoomId     string   `protobuf:"bytes,3,opt,name=roomId,proto3" json:"roomId,omitempty"`
	//当前操作玩家uuid
	DoUuid string `protobuf:"bytes,4,opt,name=doUuid,proto3" json:"doUuid,omitempty"`
	// 当前操作的玩家的索引
	DoIndex int32 `protobuf:"varint,5,opt,name=doIndex,proto3" json:"doIndex,omitempty"`
	//当前底注
	CurrentAntes int64 `protobuf:"varint,6,opt,name=currentAntes,proto3" json:"currentAntes,omitempty"`
	//玩家下注值
	PlayerBets int64 `protobuf:"varint,7,opt,name=playerBets,proto3" json:"playerBets,omitempty"`
	//玩家总下注
	PlayerTotalBets int64 `protobuf:"varint,8,opt,name=playerTotalBets,proto3" json:"playerTotalBets,omitempty"`
	//玩家总消耗（总下注+抽水（目前暂时无抽水））
	PlayerTotalConsumption int64 `protobuf:"varint,9,opt,name=playerTotalConsumption,proto3" json:"playerTotalConsumption,omitempty"`
	//当前房间奖池
	RoomJackpot int64 `protobuf:"varint,10,opt,name=roomJackpot,proto3" json:"roomJackpot,omitempty"`
	//当前操作玩家圈数
	CurrentPlayerCallRound uint32 `protobuf:"varint,11,opt,name=currentPlayerCallRound,proto3" json:"currentPlayerCallRound,omitempty"`
	//是否是孤注一掷
	IsLastThrow          bool     `protobuf:"varint,12,opt,name=isLastThrow,proto3" json:"isLastThrow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushJinhuaCompareResult) Reset()         { *m = PushJinhuaCompareResult{} }
func (m *PushJinhuaCompareResult) String() string { return proto.CompactTextString(m) }
func (*PushJinhuaCompareResult) ProtoMessage()    {}
func (*PushJinhuaCompareResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{565}
}

func (m *PushJinhuaCompareResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushJinhuaCompareResult.Unmarshal(m, b)
}
func (m *PushJinhuaCompareResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushJinhuaCompareResult.Marshal(b, m, deterministic)
}
func (m *PushJinhuaCompareResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushJinhuaCompareResult.Merge(m, src)
}
func (m *PushJinhuaCompareResult) XXX_Size() int {
	return xxx_messageInfo_PushJinhuaCompareResult.Size(m)
}
func (m *PushJinhuaCompareResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PushJinhuaCompareResult.DiscardUnknown(m)
}

var xxx_messageInfo_PushJinhuaCompareResult proto.InternalMessageInfo

func (m *PushJinhuaCompareResult) GetWinnerUuids() []string {
	if m != nil {
		return m.WinnerUuids
	}
	return nil
}

func (m *PushJinhuaCompareResult) GetLoserUuids() []string {
	if m != nil {
		return m.LoserUuids
	}
	return nil
}

func (m *PushJinhuaCompareResult) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushJinhuaCompareResult) GetDoUuid() string {
	if m != nil {
		return m.DoUuid
	}
	return ""
}

func (m *PushJinhuaCompareResult) GetDoIndex() int32 {
	if m != nil {
		return m.DoIndex
	}
	return 0
}

func (m *PushJinhuaCompareResult) GetCurrentAntes() int64 {
	if m != nil {
		return m.CurrentAntes
	}
	return 0
}

func (m *PushJinhuaCompareResult) GetPlayerBets() int64 {
	if m != nil {
		return m.PlayerBets
	}
	return 0
}

func (m *PushJinhuaCompareResult) GetPlayerTotalBets() int64 {
	if m != nil {
		return m.PlayerTotalBets
	}
	return 0
}

func (m *PushJinhuaCompareResult) GetPlayerTotalConsumption() int64 {
	if m != nil {
		return m.PlayerTotalConsumption
	}
	return 0
}

func (m *PushJinhuaCompareResult) GetRoomJackpot() int64 {
	if m != nil {
		return m.RoomJackpot
	}
	return 0
}

func (m *PushJinhuaCompareResult) GetCurrentPlayerCallRound() uint32 {
	if m != nil {
		return m.CurrentPlayerCallRound
	}
	return 0
}

func (m *PushJinhuaCompareResult) GetIsLastThrow() bool {
	if m != nil {
		return m.IsLastThrow
	}
	return false
}

// 诈金花在房间中的信息
type JinhuaInRoom struct {
	// 最后一次出牌的玩家的 uuid
	LastPlayerUuid string `protobuf:"bytes,1,opt,name=lastPlayerUuid,proto3" json:"lastPlayerUuid,omitempty"`
	// 当前应该出牌的玩家 uuid
	CurPlayerUuid string `protobuf:"bytes,2,opt,name=curPlayerUuid,proto3" json:"curPlayerUuid,omitempty"`
	// 将房间标记为运行状态; 第一次进入玩耍组件时标记;这样第 n 次进入玩家组件时,可以根据此值做一些逻辑操作
	Running bool `protobuf:"varint,3,opt,name=running,proto3" json:"running,omitempty"`
	// 下个用户可以做的操作
	CanOperateTypes []JinhuaOperateType `protobuf:"varint,4,rep,packed,name=canOperateTypes,proto3,enum=JinhuaOperateType" json:"canOperateTypes,omitempty"`
	// 是否结束, 如果结束,就是 true
	JinhuaGameOver bool `protobuf:"varint,5,opt,name=jinhuaGameOver,proto3" json:"jinhuaGameOver,omitempty"`
	// 出局玩家
	OutPlayerUuids []string `protobuf:"bytes,6,rep,name=outPlayerUuids,proto3" json:"outPlayerUuids,omitempty"`
	//上次赢家
	LastWinnerUuid string `protobuf:"bytes,7,opt,name=lastWinnerUuid,proto3" json:"lastWinnerUuid,omitempty"`
	//当前底注
	CurrentAntes int64 `protobuf:"varint,8,opt,name=currentAntes,proto3" json:"currentAntes,omitempty"`
	//奖池
	Jackpot int64 `protobuf:"varint,9,opt,name=jackpot,proto3" json:"jackpot,omitempty"`
	//当前加注等级
	CurrentRaiseType JinhuaRaiseType `protobuf:"varint,10,opt,name=currentRaiseType,proto3,enum=JinhuaRaiseType" json:"currentRaiseType,omitempty"`
	//all in 序列
	AllInUuidSequence []string `protobuf:"bytes,11,rep,name=allInUuidSequence,proto3" json:"allInUuidSequence,omitempty"`
	//炸金花模式
	JinhuaMode JinhuaMode `protobuf:"varint,12,opt,name=jinhuaMode,proto3,enum=JinhuaMode" json:"jinhuaMode,omitempty"`
	//庄家类型
	BankerType JinhuaBankerType `protobuf:"varint,13,opt,name=bankerType,proto3,enum=JinhuaBankerType" json:"bankerType,omitempty"`
	//最大轮数
	MaxRound int32 `protobuf:"varint,14,opt,name=maxRound,proto3" json:"maxRound,omitempty"`
	//每个玩家的轮数
	PlayerRounds []int32 `protobuf:"varint,15,rep,packed,name=playerRounds,proto3" json:"playerRounds,omitempty"`
	//炸金花加注等级对应的值
	RaiseValue []int32 `protobuf:"varint,16,rep,packed,name=raiseValue,proto3" json:"raiseValue,omitempty"`
	//等待类型
	WaitType JinhuaWaitOperateType `protobuf:"varint,17,opt,name=waitType,proto3,enum=JinhuaWaitOperateType" json:"waitType,omitempty"`
	//上一家操作类型
	LastPlayerOperateType JinhuaOperateType `protobuf:"varint,18,opt,name=lastPlayerOperateType,proto3,enum=JinhuaOperateType" json:"lastPlayerOperateType,omitempty"`
	//当前玩家是否已操作
	CurrentPlayerOperated bool     `protobuf:"varint,19,opt,name=currentPlayerOperated,proto3" json:"currentPlayerOperated,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *JinhuaInRoom) Reset()         { *m = JinhuaInRoom{} }
func (m *JinhuaInRoom) String() string { return proto.CompactTextString(m) }
func (*JinhuaInRoom) ProtoMessage()    {}
func (*JinhuaInRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{566}
}

func (m *JinhuaInRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JinhuaInRoom.Unmarshal(m, b)
}
func (m *JinhuaInRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JinhuaInRoom.Marshal(b, m, deterministic)
}
func (m *JinhuaInRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JinhuaInRoom.Merge(m, src)
}
func (m *JinhuaInRoom) XXX_Size() int {
	return xxx_messageInfo_JinhuaInRoom.Size(m)
}
func (m *JinhuaInRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_JinhuaInRoom.DiscardUnknown(m)
}

var xxx_messageInfo_JinhuaInRoom proto.InternalMessageInfo

func (m *JinhuaInRoom) GetLastPlayerUuid() string {
	if m != nil {
		return m.LastPlayerUuid
	}
	return ""
}

func (m *JinhuaInRoom) GetCurPlayerUuid() string {
	if m != nil {
		return m.CurPlayerUuid
	}
	return ""
}

func (m *JinhuaInRoom) GetRunning() bool {
	if m != nil {
		return m.Running
	}
	return false
}

func (m *JinhuaInRoom) GetCanOperateTypes() []JinhuaOperateType {
	if m != nil {
		return m.CanOperateTypes
	}
	return nil
}

func (m *JinhuaInRoom) GetJinhuaGameOver() bool {
	if m != nil {
		return m.JinhuaGameOver
	}
	return false
}

func (m *JinhuaInRoom) GetOutPlayerUuids() []string {
	if m != nil {
		return m.OutPlayerUuids
	}
	return nil
}

func (m *JinhuaInRoom) GetLastWinnerUuid() string {
	if m != nil {
		return m.LastWinnerUuid
	}
	return ""
}

func (m *JinhuaInRoom) GetCurrentAntes() int64 {
	if m != nil {
		return m.CurrentAntes
	}
	return 0
}

func (m *JinhuaInRoom) GetJackpot() int64 {
	if m != nil {
		return m.Jackpot
	}
	return 0
}

func (m *JinhuaInRoom) GetCurrentRaiseType() JinhuaRaiseType {
	if m != nil {
		return m.CurrentRaiseType
	}
	return JinhuaRaiseType_JinhuaRaiseType_None
}

func (m *JinhuaInRoom) GetAllInUuidSequence() []string {
	if m != nil {
		return m.AllInUuidSequence
	}
	return nil
}

func (m *JinhuaInRoom) GetJinhuaMode() JinhuaMode {
	if m != nil {
		return m.JinhuaMode
	}
	return JinhuaMode_JinhuaMode_None
}

func (m *JinhuaInRoom) GetBankerType() JinhuaBankerType {
	if m != nil {
		return m.BankerType
	}
	return JinhuaBankerType_JinhuaBankerType_None
}

func (m *JinhuaInRoom) GetMaxRound() int32 {
	if m != nil {
		return m.MaxRound
	}
	return 0
}

func (m *JinhuaInRoom) GetPlayerRounds() []int32 {
	if m != nil {
		return m.PlayerRounds
	}
	return nil
}

func (m *JinhuaInRoom) GetRaiseValue() []int32 {
	if m != nil {
		return m.RaiseValue
	}
	return nil
}

func (m *JinhuaInRoom) GetWaitType() JinhuaWaitOperateType {
	if m != nil {
		return m.WaitType
	}
	return JinhuaWaitOperateType_JinhuaWaitOperateType_None
}

func (m *JinhuaInRoom) GetLastPlayerOperateType() JinhuaOperateType {
	if m != nil {
		return m.LastPlayerOperateType
	}
	return JinhuaOperateType_JinhuaOperateType_None
}

func (m *JinhuaInRoom) GetCurrentPlayerOperated() bool {
	if m != nil {
		return m.CurrentPlayerOperated
	}
	return false
}

// 炸金花, 服务器通知某玩家操作
type PushPlayerJinhuaReqOperate struct {
	// roomInfo 中的 doIndex
	DoIndex int32 `protobuf:"varint,1,opt,name=doIndex,proto3" json:"doIndex,omitempty"`
	// 可以操作的类型
	CanOperateType []JinhuaOperateType `protobuf:"varint,2,rep,packed,name=canOperateType,proto3,enum=JinhuaOperateType" json:"canOperateType,omitempty"`
	EndTime        int64               `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,4,opt,name=roomId,proto3" json:"roomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPlayerJinhuaReqOperate) Reset()         { *m = PushPlayerJinhuaReqOperate{} }
func (m *PushPlayerJinhuaReqOperate) String() string { return proto.CompactTextString(m) }
func (*PushPlayerJinhuaReqOperate) ProtoMessage()    {}
func (*PushPlayerJinhuaReqOperate) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{567}
}

func (m *PushPlayerJinhuaReqOperate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushPlayerJinhuaReqOperate.Unmarshal(m, b)
}
func (m *PushPlayerJinhuaReqOperate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushPlayerJinhuaReqOperate.Marshal(b, m, deterministic)
}
func (m *PushPlayerJinhuaReqOperate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPlayerJinhuaReqOperate.Merge(m, src)
}
func (m *PushPlayerJinhuaReqOperate) XXX_Size() int {
	return xxx_messageInfo_PushPlayerJinhuaReqOperate.Size(m)
}
func (m *PushPlayerJinhuaReqOperate) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPlayerJinhuaReqOperate.DiscardUnknown(m)
}

var xxx_messageInfo_PushPlayerJinhuaReqOperate proto.InternalMessageInfo

func (m *PushPlayerJinhuaReqOperate) GetDoIndex() int32 {
	if m != nil {
		return m.DoIndex
	}
	return 0
}

func (m *PushPlayerJinhuaReqOperate) GetCanOperateType() []JinhuaOperateType {
	if m != nil {
		return m.CanOperateType
	}
	return nil
}

func (m *PushPlayerJinhuaReqOperate) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *PushPlayerJinhuaReqOperate) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 机器人行为的配置，所有的机器人行为的配置都定义在这里，用不到的不用就行
type RobotActionConfig struct {
	// 行为配置的uuid
	ActionUuid string `protobuf:"bytes,1,opt,name=actionUuid,proto3" json:"actionUuid,omitempty"`
	// 配置名称，用来说明配置用途
	ActionName string `protobuf:"bytes,2,opt,name=actionName,proto3" json:"actionName,omitempty"`
	// 行为的类型
	ActionType RobotAction `protobuf:"varint,3,opt,name=actionType,proto3,enum=RobotAction" json:"actionType,omitempty"`
	// 最少金额，低于这个金额才会触发充值
	// [3]
	MinNum int64 `protobuf:"varint,4,opt,name=minNum,proto3" json:"minNum,omitempty"`
	// 最小充值金额
	// [3]
	MinRechargeNum int64 `protobuf:"varint,5,opt,name=minRechargeNum,proto3" json:"minRechargeNum,omitempty"`
	// 最大充值金额
	// [3]
	MaxRechargeNum int64 `protobuf:"varint,6,opt,name=maxRechargeNum,proto3" json:"maxRechargeNum,omitempty"`
	// 上线间隔，与上次离线时间间隔多少秒
	// [1]
	LoginInterval int64 `protobuf:"varint,7,opt,name=loginInterval,proto3" json:"loginInterval,omitempty"`
	// 进入房间时，房间中的机器人不得多于多少人
	// [101,121,131]
	JoinRoomRobotLimit int32 `protobuf:"varint,8,opt,name=joinRoomRobotLimit,proto3" json:"joinRoomRobotLimit,omitempty"`
	// 可以进入的房间的场次
	// [101,121,131]
	JoinRoomScenes []int32 `protobuf:"varint,9,rep,packed,name=joinRoomScenes,proto3" json:"joinRoomScenes,omitempty"`
	// 可以进入的房间的场次的权重,数组元素应该和场次的元素数量一样多
	// [101,121,131]
	JoinRoomScenesWeight []int32 `protobuf:"varint,10,rep,packed,name=joinRoomScenesWeight,proto3" json:"joinRoomScenesWeight,omitempty"`
	// 最少玩耍局数
	// [103,123,133]
	MinPlayNum int32 `protobuf:"varint,11,opt,name=minPlayNum,proto3" json:"minPlayNum,omitempty"`
	// 最大玩耍局数
	// [103,123,133]
	MaxPlayNum int32 `protobuf:"varint,12,opt,name=maxPlayNum,proto3" json:"maxPlayNum,omitempty"`
	// 每局结束玩耍行为的概率
	// [103,123,133]
	PlayEndPre int32 `protobuf:"varint,13,opt,name=playEndPre,proto3" json:"playEndPre,omitempty"`
	// 机器人低于多少钱结束行为
	// [123,124,133,134]
	MinBalance int64 `protobuf:"varint,14,opt,name=MinBalance,proto3" json:"MinBalance,omitempty"`
	// 机器人下庄的几率单位%
	// [124,134]
	RobotDownBankRatio int32 `protobuf:"varint,15,opt,name=RobotDownBankRatio,proto3" json:"RobotDownBankRatio,omitempty"`
	// 庄家申请列表在多少以下时，机器人可以上庄
	// [124,134]
	BanksLength int64 `protobuf:"varint,16,opt,name=BanksLength,proto3" json:"BanksLength,omitempty"`
	// 机器人最后下注的局数，-以此是否在当前局数下过注(不可配)
	// []
	LastBetNum int32 `protobuf:"varint,17,opt,name=LastBetNum,proto3" json:"LastBetNum,omitempty"`
	// 机器人同一局重复下注的概率，单位%
	// [123,133]
	RepeatBet int32 `protobuf:"varint,18,opt,name=RepeatBet,proto3" json:"RepeatBet,omitempty"`
	// 机器人投注龙虎和的权重
	// [123]
	DragonTigerBets []int32 `protobuf:"varint,19,rep,packed,name=DragonTigerBets,proto3" json:"DragonTigerBets,omitempty"`
	// 机器人投注对应龙虎下注金额的权重（请与龙虎游戏配置的下注筹码对应分配）
	// [123]
	DragonTigerBetMoneyWeight []int32 `protobuf:"varint,20,rep,packed,name=DragonTigerBetMoneyWeight,proto3" json:"DragonTigerBetMoneyWeight,omitempty"`
	// 机器人投注红黑幸运的权重
	// [133]
	RedBlackBets []int32 `protobuf:"varint,21,rep,packed,name=RedBlackBets,proto3" json:"RedBlackBets,omitempty"`
	// 机器人投注对应红黑下注金额的权重（请与龙虎游戏配置的下注筹码对应分配）
	// [133]
	RedBlackBetMoneyWeight []int32 `protobuf:"varint,22,rep,packed,name=RedBlackBetMoneyWeight,proto3" json:"RedBlackBetMoneyWeight,omitempty"`
	// 机器人投注百家乐的权重
	// [143]
	BaccaratBets []int32 `protobuf:"varint,23,rep,packed,name=BaccaratBets,proto3" json:"BaccaratBets,omitempty"`
	// 机器人投注对应百家乐下注金额的权重（请与百家乐游戏配置的下注筹码对应分配）
	// [143]
	BaccaratBetMoneyWeight []int32 `protobuf:"varint,24,rep,packed,name=BaccaratBetMoneyWeight,proto3" json:"BaccaratBetMoneyWeight,omitempty"`
	// 机器人投注推筒子的权重
	// [143]
	PushBobbinBets []int32 `protobuf:"varint,25,rep,packed,name=PushBobbinBets,proto3" json:"PushBobbinBets,omitempty"`
	// 机器人投注对应推筒子下注金额的权重（请与推筒子游戏配置的下注筹码对应分配）
	// [143]
	PushBobbinBetMoneyWeight []int32 `protobuf:"varint,26,rep,packed,name=PushBobbinBetMoneyWeight,proto3" json:"PushBobbinBetMoneyWeight,omitempty"`
	// 机器人投注百人牛牛的权重
	// [143]
	HundredBullBets []int32 `protobuf:"varint,27,rep,packed,name=HundredBullBets,proto3" json:"HundredBullBets,omitempty"`
	// 机器人投注对应百人牛牛下注金额的权重（请与百人牛牛游戏配置的下注筹码对应分配）
	// [143]
	HundredBullBetMoneyWeight []int32  `protobuf:"varint,28,rep,packed,name=HundredBullBetMoneyWeight,proto3" json:"HundredBullBetMoneyWeight,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *RobotActionConfig) Reset()         { *m = RobotActionConfig{} }
func (m *RobotActionConfig) String() string { return proto.CompactTextString(m) }
func (*RobotActionConfig) ProtoMessage()    {}
func (*RobotActionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{568}
}

func (m *RobotActionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotActionConfig.Unmarshal(m, b)
}
func (m *RobotActionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotActionConfig.Marshal(b, m, deterministic)
}
func (m *RobotActionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotActionConfig.Merge(m, src)
}
func (m *RobotActionConfig) XXX_Size() int {
	return xxx_messageInfo_RobotActionConfig.Size(m)
}
func (m *RobotActionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotActionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RobotActionConfig proto.InternalMessageInfo

func (m *RobotActionConfig) GetActionUuid() string {
	if m != nil {
		return m.ActionUuid
	}
	return ""
}

func (m *RobotActionConfig) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *RobotActionConfig) GetActionType() RobotAction {
	if m != nil {
		return m.ActionType
	}
	return RobotAction_RobotAction_None
}

func (m *RobotActionConfig) GetMinNum() int64 {
	if m != nil {
		return m.MinNum
	}
	return 0
}

func (m *RobotActionConfig) GetMinRechargeNum() int64 {
	if m != nil {
		return m.MinRechargeNum
	}
	return 0
}

func (m *RobotActionConfig) GetMaxRechargeNum() int64 {
	if m != nil {
		return m.MaxRechargeNum
	}
	return 0
}

func (m *RobotActionConfig) GetLoginInterval() int64 {
	if m != nil {
		return m.LoginInterval
	}
	return 0
}

func (m *RobotActionConfig) GetJoinRoomRobotLimit() int32 {
	if m != nil {
		return m.JoinRoomRobotLimit
	}
	return 0
}

func (m *RobotActionConfig) GetJoinRoomScenes() []int32 {
	if m != nil {
		return m.JoinRoomScenes
	}
	return nil
}

func (m *RobotActionConfig) GetJoinRoomScenesWeight() []int32 {
	if m != nil {
		return m.JoinRoomScenesWeight
	}
	return nil
}

func (m *RobotActionConfig) GetMinPlayNum() int32 {
	if m != nil {
		return m.MinPlayNum
	}
	return 0
}

func (m *RobotActionConfig) GetMaxPlayNum() int32 {
	if m != nil {
		return m.MaxPlayNum
	}
	return 0
}

func (m *RobotActionConfig) GetPlayEndPre() int32 {
	if m != nil {
		return m.PlayEndPre
	}
	return 0
}

func (m *RobotActionConfig) GetMinBalance() int64 {
	if m != nil {
		return m.MinBalance
	}
	return 0
}

func (m *RobotActionConfig) GetRobotDownBankRatio() int32 {
	if m != nil {
		return m.RobotDownBankRatio
	}
	return 0
}

func (m *RobotActionConfig) GetBanksLength() int64 {
	if m != nil {
		return m.BanksLength
	}
	return 0
}

func (m *RobotActionConfig) GetLastBetNum() int32 {
	if m != nil {
		return m.LastBetNum
	}
	return 0
}

func (m *RobotActionConfig) GetRepeatBet() int32 {
	if m != nil {
		return m.RepeatBet
	}
	return 0
}

func (m *RobotActionConfig) GetDragonTigerBets() []int32 {
	if m != nil {
		return m.DragonTigerBets
	}
	return nil
}

func (m *RobotActionConfig) GetDragonTigerBetMoneyWeight() []int32 {
	if m != nil {
		return m.DragonTigerBetMoneyWeight
	}
	return nil
}

func (m *RobotActionConfig) GetRedBlackBets() []int32 {
	if m != nil {
		return m.RedBlackBets
	}
	return nil
}

func (m *RobotActionConfig) GetRedBlackBetMoneyWeight() []int32 {
	if m != nil {
		return m.RedBlackBetMoneyWeight
	}
	return nil
}

func (m *RobotActionConfig) GetBaccaratBets() []int32 {
	if m != nil {
		return m.BaccaratBets
	}
	return nil
}

func (m *RobotActionConfig) GetBaccaratBetMoneyWeight() []int32 {
	if m != nil {
		return m.BaccaratBetMoneyWeight
	}
	return nil
}

func (m *RobotActionConfig) GetPushBobbinBets() []int32 {
	if m != nil {
		return m.PushBobbinBets
	}
	return nil
}

func (m *RobotActionConfig) GetPushBobbinBetMoneyWeight() []int32 {
	if m != nil {
		return m.PushBobbinBetMoneyWeight
	}
	return nil
}

func (m *RobotActionConfig) GetHundredBullBets() []int32 {
	if m != nil {
		return m.HundredBullBets
	}
	return nil
}

func (m *RobotActionConfig) GetHundredBullBetMoneyWeight() []int32 {
	if m != nil {
		return m.HundredBullBetMoneyWeight
	}
	return nil
}

// 机器人行为组配置，包含了一系列机器人行为配置
type RobotActionGroupConfig struct {
	// 行为组配置的uuid
	ActionGroupUuid string `protobuf:"bytes,1,opt,name=actionGroupUuid,proto3" json:"actionGroupUuid,omitempty"`
	// 配置名称，用来说明配置用途
	ActionGroupName string `protobuf:"bytes,2,opt,name=actionGroupName,proto3" json:"actionGroupName,omitempty"`
	// 行为组中的行为,行为组是有序的，行为将被依次执行
	ActionConfigsUuid []string `protobuf:"bytes,3,rep,name=actionConfigsUuid,proto3" json:"actionConfigsUuid,omitempty"`
	// 该行为组中机器人的数量
	RobotNum             int32    `protobuf:"varint,4,opt,name=robotNum,proto3" json:"robotNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobotActionGroupConfig) Reset()         { *m = RobotActionGroupConfig{} }
func (m *RobotActionGroupConfig) String() string { return proto.CompactTextString(m) }
func (*RobotActionGroupConfig) ProtoMessage()    {}
func (*RobotActionGroupConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{569}
}

func (m *RobotActionGroupConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotActionGroupConfig.Unmarshal(m, b)
}
func (m *RobotActionGroupConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotActionGroupConfig.Marshal(b, m, deterministic)
}
func (m *RobotActionGroupConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotActionGroupConfig.Merge(m, src)
}
func (m *RobotActionGroupConfig) XXX_Size() int {
	return xxx_messageInfo_RobotActionGroupConfig.Size(m)
}
func (m *RobotActionGroupConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotActionGroupConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RobotActionGroupConfig proto.InternalMessageInfo

func (m *RobotActionGroupConfig) GetActionGroupUuid() string {
	if m != nil {
		return m.ActionGroupUuid
	}
	return ""
}

func (m *RobotActionGroupConfig) GetActionGroupName() string {
	if m != nil {
		return m.ActionGroupName
	}
	return ""
}

func (m *RobotActionGroupConfig) GetActionConfigsUuid() []string {
	if m != nil {
		return m.ActionConfigsUuid
	}
	return nil
}

func (m *RobotActionGroupConfig) GetRobotNum() int32 {
	if m != nil {
		return m.RobotNum
	}
	return 0
}

// 玩家信息的机器人扩展信息
type RobotPlayerExtroInfo struct {
	// 机器人所在的行为组uuid
	ActionGroupUuid string `protobuf:"bytes,1,opt,name=actionGroupUuid,proto3" json:"actionGroupUuid,omitempty"`
	// 机器人当前的行为uuid
	CurActionUuid string `protobuf:"bytes,2,opt,name=curActionUuid,proto3" json:"curActionUuid,omitempty"`
	// 机器人是否被标记为下岗
	IsLaidOff bool `protobuf:"varint,3,opt,name=isLaidOff,proto3" json:"isLaidOff,omitempty"`
	// 机器人行为连续发生错误的次数
	ErrNum int32 `protobuf:"varint,4,opt,name=errNum,proto3" json:"errNum,omitempty"`
	// 机器人上次上线时间
	LastOnLineTime int64 `protobuf:"varint,5,opt,name=lastOnLineTime,proto3" json:"lastOnLineTime,omitempty"`
	// 机器人上次离线时间
	LastOffLineTime      int64    `protobuf:"varint,6,opt,name=lastOffLineTime,proto3" json:"lastOffLineTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobotPlayerExtroInfo) Reset()         { *m = RobotPlayerExtroInfo{} }
func (m *RobotPlayerExtroInfo) String() string { return proto.CompactTextString(m) }
func (*RobotPlayerExtroInfo) ProtoMessage()    {}
func (*RobotPlayerExtroInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{570}
}

func (m *RobotPlayerExtroInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotPlayerExtroInfo.Unmarshal(m, b)
}
func (m *RobotPlayerExtroInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotPlayerExtroInfo.Marshal(b, m, deterministic)
}
func (m *RobotPlayerExtroInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotPlayerExtroInfo.Merge(m, src)
}
func (m *RobotPlayerExtroInfo) XXX_Size() int {
	return xxx_messageInfo_RobotPlayerExtroInfo.Size(m)
}
func (m *RobotPlayerExtroInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotPlayerExtroInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RobotPlayerExtroInfo proto.InternalMessageInfo

func (m *RobotPlayerExtroInfo) GetActionGroupUuid() string {
	if m != nil {
		return m.ActionGroupUuid
	}
	return ""
}

func (m *RobotPlayerExtroInfo) GetCurActionUuid() string {
	if m != nil {
		return m.CurActionUuid
	}
	return ""
}

func (m *RobotPlayerExtroInfo) GetIsLaidOff() bool {
	if m != nil {
		return m.IsLaidOff
	}
	return false
}

func (m *RobotPlayerExtroInfo) GetErrNum() int32 {
	if m != nil {
		return m.ErrNum
	}
	return 0
}

func (m *RobotPlayerExtroInfo) GetLastOnLineTime() int64 {
	if m != nil {
		return m.LastOnLineTime
	}
	return 0
}

func (m *RobotPlayerExtroInfo) GetLastOffLineTime() int64 {
	if m != nil {
		return m.LastOffLineTime
	}
	return 0
}

// 机器人行为组信息
type RobotActionGroupInfo struct {
	// 行为组配置的uuid,也是此行为组的uuid
	ActionGroupUuid string `protobuf:"bytes,1,opt,name=actionGroupUuid,proto3" json:"actionGroupUuid,omitempty"`
	// 该行为组的机器人id
	RobotUuid            []string `protobuf:"bytes,2,rep,name=robotUuid,proto3" json:"robotUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobotActionGroupInfo) Reset()         { *m = RobotActionGroupInfo{} }
func (m *RobotActionGroupInfo) String() string { return proto.CompactTextString(m) }
func (*RobotActionGroupInfo) ProtoMessage()    {}
func (*RobotActionGroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{571}
}

func (m *RobotActionGroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotActionGroupInfo.Unmarshal(m, b)
}
func (m *RobotActionGroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotActionGroupInfo.Marshal(b, m, deterministic)
}
func (m *RobotActionGroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotActionGroupInfo.Merge(m, src)
}
func (m *RobotActionGroupInfo) XXX_Size() int {
	return xxx_messageInfo_RobotActionGroupInfo.Size(m)
}
func (m *RobotActionGroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotActionGroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RobotActionGroupInfo proto.InternalMessageInfo

func (m *RobotActionGroupInfo) GetActionGroupUuid() string {
	if m != nil {
		return m.ActionGroupUuid
	}
	return ""
}

func (m *RobotActionGroupInfo) GetRobotUuid() []string {
	if m != nil {
		return m.RobotUuid
	}
	return nil
}

// 机器人管理信息
type RobotManagerInfo struct {
	// 空闲状态的机器人id
	FreeRobot []string `protobuf:"bytes,1,rep,name=freeRobot,proto3" json:"freeRobot,omitempty"`
	// 行为组中的机器人
	ActionRobot          []*RobotActionGroupInfo `protobuf:"bytes,2,rep,name=actionRobot,proto3" json:"actionRobot,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RobotManagerInfo) Reset()         { *m = RobotManagerInfo{} }
func (m *RobotManagerInfo) String() string { return proto.CompactTextString(m) }
func (*RobotManagerInfo) ProtoMessage()    {}
func (*RobotManagerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{572}
}

func (m *RobotManagerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotManagerInfo.Unmarshal(m, b)
}
func (m *RobotManagerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotManagerInfo.Marshal(b, m, deterministic)
}
func (m *RobotManagerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotManagerInfo.Merge(m, src)
}
func (m *RobotManagerInfo) XXX_Size() int {
	return xxx_messageInfo_RobotManagerInfo.Size(m)
}
func (m *RobotManagerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotManagerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RobotManagerInfo proto.InternalMessageInfo

func (m *RobotManagerInfo) GetFreeRobot() []string {
	if m != nil {
		return m.FreeRobot
	}
	return nil
}

func (m *RobotManagerInfo) GetActionRobot() []*RobotActionGroupInfo {
	if m != nil {
		return m.ActionRobot
	}
	return nil
}

//获取机器人行为配置申请
type GetRobotActionConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRobotActionConfigRequest) Reset()         { *m = GetRobotActionConfigRequest{} }
func (m *GetRobotActionConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetRobotActionConfigRequest) ProtoMessage()    {}
func (*GetRobotActionConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{573}
}

func (m *GetRobotActionConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRobotActionConfigRequest.Unmarshal(m, b)
}
func (m *GetRobotActionConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRobotActionConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetRobotActionConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRobotActionConfigRequest.Merge(m, src)
}
func (m *GetRobotActionConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetRobotActionConfigRequest.Size(m)
}
func (m *GetRobotActionConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRobotActionConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRobotActionConfigRequest proto.InternalMessageInfo

//获取机器人行为配置回复
type GetRobotActionConfigReply struct {
	RobotActions         []*RobotActionConfig `protobuf:"bytes,1,rep,name=robotActions,proto3" json:"robotActions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetRobotActionConfigReply) Reset()         { *m = GetRobotActionConfigReply{} }
func (m *GetRobotActionConfigReply) String() string { return proto.CompactTextString(m) }
func (*GetRobotActionConfigReply) ProtoMessage()    {}
func (*GetRobotActionConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{574}
}

func (m *GetRobotActionConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRobotActionConfigReply.Unmarshal(m, b)
}
func (m *GetRobotActionConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRobotActionConfigReply.Marshal(b, m, deterministic)
}
func (m *GetRobotActionConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRobotActionConfigReply.Merge(m, src)
}
func (m *GetRobotActionConfigReply) XXX_Size() int {
	return xxx_messageInfo_GetRobotActionConfigReply.Size(m)
}
func (m *GetRobotActionConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRobotActionConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRobotActionConfigReply proto.InternalMessageInfo

func (m *GetRobotActionConfigReply) GetRobotActions() []*RobotActionConfig {
	if m != nil {
		return m.RobotActions
	}
	return nil
}

//修改机器人行为配置申请
type UpdateRobotActionConfigRequest struct {
	RobotActions         *RobotActionConfig `protobuf:"bytes,1,opt,name=robotActions,proto3" json:"robotActions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UpdateRobotActionConfigRequest) Reset()         { *m = UpdateRobotActionConfigRequest{} }
func (m *UpdateRobotActionConfigRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRobotActionConfigRequest) ProtoMessage()    {}
func (*UpdateRobotActionConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{575}
}

func (m *UpdateRobotActionConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRobotActionConfigRequest.Unmarshal(m, b)
}
func (m *UpdateRobotActionConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRobotActionConfigRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRobotActionConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRobotActionConfigRequest.Merge(m, src)
}
func (m *UpdateRobotActionConfigRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRobotActionConfigRequest.Size(m)
}
func (m *UpdateRobotActionConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRobotActionConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRobotActionConfigRequest proto.InternalMessageInfo

func (m *UpdateRobotActionConfigRequest) GetRobotActions() *RobotActionConfig {
	if m != nil {
		return m.RobotActions
	}
	return nil
}

//修改机器人行为配置回复
type UpdateRobotActionConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRobotActionConfigReply) Reset()         { *m = UpdateRobotActionConfigReply{} }
func (m *UpdateRobotActionConfigReply) String() string { return proto.CompactTextString(m) }
func (*UpdateRobotActionConfigReply) ProtoMessage()    {}
func (*UpdateRobotActionConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{576}
}

func (m *UpdateRobotActionConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRobotActionConfigReply.Unmarshal(m, b)
}
func (m *UpdateRobotActionConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRobotActionConfigReply.Marshal(b, m, deterministic)
}
func (m *UpdateRobotActionConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRobotActionConfigReply.Merge(m, src)
}
func (m *UpdateRobotActionConfigReply) XXX_Size() int {
	return xxx_messageInfo_UpdateRobotActionConfigReply.Size(m)
}
func (m *UpdateRobotActionConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRobotActionConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRobotActionConfigReply proto.InternalMessageInfo

//新增机器人行为配置申请
type InsertRobotActionConfigRequest struct {
	RobotActions         *RobotActionConfig `protobuf:"bytes,1,opt,name=robotActions,proto3" json:"robotActions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *InsertRobotActionConfigRequest) Reset()         { *m = InsertRobotActionConfigRequest{} }
func (m *InsertRobotActionConfigRequest) String() string { return proto.CompactTextString(m) }
func (*InsertRobotActionConfigRequest) ProtoMessage()    {}
func (*InsertRobotActionConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{577}
}

func (m *InsertRobotActionConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertRobotActionConfigRequest.Unmarshal(m, b)
}
func (m *InsertRobotActionConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertRobotActionConfigRequest.Marshal(b, m, deterministic)
}
func (m *InsertRobotActionConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertRobotActionConfigRequest.Merge(m, src)
}
func (m *InsertRobotActionConfigRequest) XXX_Size() int {
	return xxx_messageInfo_InsertRobotActionConfigRequest.Size(m)
}
func (m *InsertRobotActionConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertRobotActionConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertRobotActionConfigRequest proto.InternalMessageInfo

func (m *InsertRobotActionConfigRequest) GetRobotActions() *RobotActionConfig {
	if m != nil {
		return m.RobotActions
	}
	return nil
}

//新增机器人行为配置回复
type InsertRobotActionConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertRobotActionConfigReply) Reset()         { *m = InsertRobotActionConfigReply{} }
func (m *InsertRobotActionConfigReply) String() string { return proto.CompactTextString(m) }
func (*InsertRobotActionConfigReply) ProtoMessage()    {}
func (*InsertRobotActionConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{578}
}

func (m *InsertRobotActionConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertRobotActionConfigReply.Unmarshal(m, b)
}
func (m *InsertRobotActionConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertRobotActionConfigReply.Marshal(b, m, deterministic)
}
func (m *InsertRobotActionConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertRobotActionConfigReply.Merge(m, src)
}
func (m *InsertRobotActionConfigReply) XXX_Size() int {
	return xxx_messageInfo_InsertRobotActionConfigReply.Size(m)
}
func (m *InsertRobotActionConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertRobotActionConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_InsertRobotActionConfigReply proto.InternalMessageInfo

//获取机器人行为组配置申请
type GetRobotActionGroupConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRobotActionGroupConfigRequest) Reset()         { *m = GetRobotActionGroupConfigRequest{} }
func (m *GetRobotActionGroupConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetRobotActionGroupConfigRequest) ProtoMessage()    {}
func (*GetRobotActionGroupConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{579}
}

func (m *GetRobotActionGroupConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRobotActionGroupConfigRequest.Unmarshal(m, b)
}
func (m *GetRobotActionGroupConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRobotActionGroupConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetRobotActionGroupConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRobotActionGroupConfigRequest.Merge(m, src)
}
func (m *GetRobotActionGroupConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetRobotActionGroupConfigRequest.Size(m)
}
func (m *GetRobotActionGroupConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRobotActionGroupConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRobotActionGroupConfigRequest proto.InternalMessageInfo

//获取机器人行为组配置回复
type GetRobotActionGroupConfigReply struct {
	RobotActionGroup     []*RobotActionGroupConfig `protobuf:"bytes,1,rep,name=robotActionGroup,proto3" json:"robotActionGroup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetRobotActionGroupConfigReply) Reset()         { *m = GetRobotActionGroupConfigReply{} }
func (m *GetRobotActionGroupConfigReply) String() string { return proto.CompactTextString(m) }
func (*GetRobotActionGroupConfigReply) ProtoMessage()    {}
func (*GetRobotActionGroupConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{580}
}

func (m *GetRobotActionGroupConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRobotActionGroupConfigReply.Unmarshal(m, b)
}
func (m *GetRobotActionGroupConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRobotActionGroupConfigReply.Marshal(b, m, deterministic)
}
func (m *GetRobotActionGroupConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRobotActionGroupConfigReply.Merge(m, src)
}
func (m *GetRobotActionGroupConfigReply) XXX_Size() int {
	return xxx_messageInfo_GetRobotActionGroupConfigReply.Size(m)
}
func (m *GetRobotActionGroupConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRobotActionGroupConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRobotActionGroupConfigReply proto.InternalMessageInfo

func (m *GetRobotActionGroupConfigReply) GetRobotActionGroup() []*RobotActionGroupConfig {
	if m != nil {
		return m.RobotActionGroup
	}
	return nil
}

//修改机器人行为组配置申请
type UpdateRobotActionGroupConfigRequest struct {
	RobotActionGroup     *RobotActionGroupConfig `protobuf:"bytes,1,opt,name=robotActionGroup,proto3" json:"robotActionGroup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *UpdateRobotActionGroupConfigRequest) Reset()         { *m = UpdateRobotActionGroupConfigRequest{} }
func (m *UpdateRobotActionGroupConfigRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRobotActionGroupConfigRequest) ProtoMessage()    {}
func (*UpdateRobotActionGroupConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{581}
}

func (m *UpdateRobotActionGroupConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRobotActionGroupConfigRequest.Unmarshal(m, b)
}
func (m *UpdateRobotActionGroupConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRobotActionGroupConfigRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRobotActionGroupConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRobotActionGroupConfigRequest.Merge(m, src)
}
func (m *UpdateRobotActionGroupConfigRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRobotActionGroupConfigRequest.Size(m)
}
func (m *UpdateRobotActionGroupConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRobotActionGroupConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRobotActionGroupConfigRequest proto.InternalMessageInfo

func (m *UpdateRobotActionGroupConfigRequest) GetRobotActionGroup() *RobotActionGroupConfig {
	if m != nil {
		return m.RobotActionGroup
	}
	return nil
}

//修改机器人行为组配置回复
type UpdateRobotActionGroupConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRobotActionGroupConfigReply) Reset()         { *m = UpdateRobotActionGroupConfigReply{} }
func (m *UpdateRobotActionGroupConfigReply) String() string { return proto.CompactTextString(m) }
func (*UpdateRobotActionGroupConfigReply) ProtoMessage()    {}
func (*UpdateRobotActionGroupConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{582}
}

func (m *UpdateRobotActionGroupConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRobotActionGroupConfigReply.Unmarshal(m, b)
}
func (m *UpdateRobotActionGroupConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRobotActionGroupConfigReply.Marshal(b, m, deterministic)
}
func (m *UpdateRobotActionGroupConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRobotActionGroupConfigReply.Merge(m, src)
}
func (m *UpdateRobotActionGroupConfigReply) XXX_Size() int {
	return xxx_messageInfo_UpdateRobotActionGroupConfigReply.Size(m)
}
func (m *UpdateRobotActionGroupConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRobotActionGroupConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRobotActionGroupConfigReply proto.InternalMessageInfo

//新增机器人行为组配置申请
type InsertRobotActionGroupConfigRequest struct {
	RobotActionGroup     *RobotActionGroupConfig `protobuf:"bytes,1,opt,name=robotActionGroup,proto3" json:"robotActionGroup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *InsertRobotActionGroupConfigRequest) Reset()         { *m = InsertRobotActionGroupConfigRequest{} }
func (m *InsertRobotActionGroupConfigRequest) String() string { return proto.CompactTextString(m) }
func (*InsertRobotActionGroupConfigRequest) ProtoMessage()    {}
func (*InsertRobotActionGroupConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{583}
}

func (m *InsertRobotActionGroupConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertRobotActionGroupConfigRequest.Unmarshal(m, b)
}
func (m *InsertRobotActionGroupConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertRobotActionGroupConfigRequest.Marshal(b, m, deterministic)
}
func (m *InsertRobotActionGroupConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertRobotActionGroupConfigRequest.Merge(m, src)
}
func (m *InsertRobotActionGroupConfigRequest) XXX_Size() int {
	return xxx_messageInfo_InsertRobotActionGroupConfigRequest.Size(m)
}
func (m *InsertRobotActionGroupConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertRobotActionGroupConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertRobotActionGroupConfigRequest proto.InternalMessageInfo

func (m *InsertRobotActionGroupConfigRequest) GetRobotActionGroup() *RobotActionGroupConfig {
	if m != nil {
		return m.RobotActionGroup
	}
	return nil
}

//新增机器人行为组配置回复
type InsertRobotActionGroupConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertRobotActionGroupConfigReply) Reset()         { *m = InsertRobotActionGroupConfigReply{} }
func (m *InsertRobotActionGroupConfigReply) String() string { return proto.CompactTextString(m) }
func (*InsertRobotActionGroupConfigReply) ProtoMessage()    {}
func (*InsertRobotActionGroupConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{584}
}

func (m *InsertRobotActionGroupConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertRobotActionGroupConfigReply.Unmarshal(m, b)
}
func (m *InsertRobotActionGroupConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertRobotActionGroupConfigReply.Marshal(b, m, deterministic)
}
func (m *InsertRobotActionGroupConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertRobotActionGroupConfigReply.Merge(m, src)
}
func (m *InsertRobotActionGroupConfigReply) XXX_Size() int {
	return xxx_messageInfo_InsertRobotActionGroupConfigReply.Size(m)
}
func (m *InsertRobotActionGroupConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertRobotActionGroupConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_InsertRobotActionGroupConfigReply proto.InternalMessageInfo

// 获得机器人管理器配置的请求
type GetRobotManagerConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRobotManagerConfigRequest) Reset()         { *m = GetRobotManagerConfigRequest{} }
func (m *GetRobotManagerConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetRobotManagerConfigRequest) ProtoMessage()    {}
func (*GetRobotManagerConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{585}
}

func (m *GetRobotManagerConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRobotManagerConfigRequest.Unmarshal(m, b)
}
func (m *GetRobotManagerConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRobotManagerConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetRobotManagerConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRobotManagerConfigRequest.Merge(m, src)
}
func (m *GetRobotManagerConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetRobotManagerConfigRequest.Size(m)
}
func (m *GetRobotManagerConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRobotManagerConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRobotManagerConfigRequest proto.InternalMessageInfo

// 获得机器人管理器配置的返回
type GetRobotManagerConfigReply struct {
	// 总共的机器人数量
	PrepareNum int32 `protobuf:"varint,1,opt,name=prepareNum,proto3" json:"prepareNum,omitempty"`
	// 开放的机器人行为
	OpenActions          []RobotAction `protobuf:"varint,2,rep,packed,name=openActions,proto3,enum=RobotAction" json:"openActions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetRobotManagerConfigReply) Reset()         { *m = GetRobotManagerConfigReply{} }
func (m *GetRobotManagerConfigReply) String() string { return proto.CompactTextString(m) }
func (*GetRobotManagerConfigReply) ProtoMessage()    {}
func (*GetRobotManagerConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{586}
}

func (m *GetRobotManagerConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRobotManagerConfigReply.Unmarshal(m, b)
}
func (m *GetRobotManagerConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRobotManagerConfigReply.Marshal(b, m, deterministic)
}
func (m *GetRobotManagerConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRobotManagerConfigReply.Merge(m, src)
}
func (m *GetRobotManagerConfigReply) XXX_Size() int {
	return xxx_messageInfo_GetRobotManagerConfigReply.Size(m)
}
func (m *GetRobotManagerConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRobotManagerConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRobotManagerConfigReply proto.InternalMessageInfo

func (m *GetRobotManagerConfigReply) GetPrepareNum() int32 {
	if m != nil {
		return m.PrepareNum
	}
	return 0
}

func (m *GetRobotManagerConfigReply) GetOpenActions() []RobotAction {
	if m != nil {
		return m.OpenActions
	}
	return nil
}

// 获取机器人列表请求
type GetRobotListRequest struct {
	// 行为组配置的uuid,目前只支持通过行为组id来查询
	// 返回某个行为组的机器人列表
	// 为空则拉去空闲中的机器人
	ActionGroupUuid string `protobuf:"bytes,1,opt,name=actionGroupUuid,proto3" json:"actionGroupUuid,omitempty"`
	// 查询的页数，不传时默认拉取第一页
	PageNum int32 `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	// 每页展示的机器人数量
	OnePageRobotNum      int32    `protobuf:"varint,3,opt,name=onePageRobotNum,proto3" json:"onePageRobotNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRobotListRequest) Reset()         { *m = GetRobotListRequest{} }
func (m *GetRobotListRequest) String() string { return proto.CompactTextString(m) }
func (*GetRobotListRequest) ProtoMessage()    {}
func (*GetRobotListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{587}
}

func (m *GetRobotListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRobotListRequest.Unmarshal(m, b)
}
func (m *GetRobotListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRobotListRequest.Marshal(b, m, deterministic)
}
func (m *GetRobotListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRobotListRequest.Merge(m, src)
}
func (m *GetRobotListRequest) XXX_Size() int {
	return xxx_messageInfo_GetRobotListRequest.Size(m)
}
func (m *GetRobotListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRobotListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRobotListRequest proto.InternalMessageInfo

func (m *GetRobotListRequest) GetActionGroupUuid() string {
	if m != nil {
		return m.ActionGroupUuid
	}
	return ""
}

func (m *GetRobotListRequest) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *GetRobotListRequest) GetOnePageRobotNum() int32 {
	if m != nil {
		return m.OnePageRobotNum
	}
	return 0
}

// 获取机器人列表回执
type GetRobotListReply struct {
	// 返回的机器人信息
	Infos []*PlayerInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	// 这个分类下的机器人总量
	AllRobotNum          int32    `protobuf:"varint,2,opt,name=allRobotNum,proto3" json:"allRobotNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRobotListReply) Reset()         { *m = GetRobotListReply{} }
func (m *GetRobotListReply) String() string { return proto.CompactTextString(m) }
func (*GetRobotListReply) ProtoMessage()    {}
func (*GetRobotListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{588}
}

func (m *GetRobotListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRobotListReply.Unmarshal(m, b)
}
func (m *GetRobotListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRobotListReply.Marshal(b, m, deterministic)
}
func (m *GetRobotListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRobotListReply.Merge(m, src)
}
func (m *GetRobotListReply) XXX_Size() int {
	return xxx_messageInfo_GetRobotListReply.Size(m)
}
func (m *GetRobotListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRobotListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRobotListReply proto.InternalMessageInfo

func (m *GetRobotListReply) GetInfos() []*PlayerInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *GetRobotListReply) GetAllRobotNum() int32 {
	if m != nil {
		return m.AllRobotNum
	}
	return 0
}

//报表消息
type ReportMessage struct {
	//报表类型
	ReportType ReportType `protobuf:"varint,1,opt,name=reportType,proto3,enum=ReportType" json:"reportType,omitempty"`
	//报表内容
	ReportContent        *any.Any `protobuf:"bytes,2,opt,name=reportContent,proto3" json:"reportContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportMessage) Reset()         { *m = ReportMessage{} }
func (m *ReportMessage) String() string { return proto.CompactTextString(m) }
func (*ReportMessage) ProtoMessage()    {}
func (*ReportMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{589}
}

func (m *ReportMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportMessage.Unmarshal(m, b)
}
func (m *ReportMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportMessage.Marshal(b, m, deterministic)
}
func (m *ReportMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportMessage.Merge(m, src)
}
func (m *ReportMessage) XXX_Size() int {
	return xxx_messageInfo_ReportMessage.Size(m)
}
func (m *ReportMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ReportMessage proto.InternalMessageInfo

func (m *ReportMessage) GetReportType() ReportType {
	if m != nil {
		return m.ReportType
	}
	return ReportType_ReportType_None
}

func (m *ReportMessage) GetReportContent() *any.Any {
	if m != nil {
		return m.ReportContent
	}
	return nil
}

//游戏记录扩展数据
type GameRecordExtendData struct {
	//玩家手中的牌
	Pokers          []*Poker        `protobuf:"bytes,1,rep,name=pokers,proto3" json:"pokers,omitempty"`
	JinhuaPokerType JinhuaPokerType `protobuf:"varint,2,opt,name=jinhuaPokerType,proto3,enum=JinhuaPokerType" json:"jinhuaPokerType,omitempty"`
	// 龙虎相关 6-10
	// 龙牌与虎牌 0龙1虎
	DragonTigerPoker []*Poker `protobuf:"bytes,6,rep,name=DragonTigerPoker,proto3" json:"DragonTigerPoker,omitempty"`
	// 龙虎胜利的区域
	WinArea DragonTigerCardArea `protobuf:"varint,7,opt,name=WinArea,proto3,enum=DragonTigerCardArea" json:"WinArea,omitempty"`
	// 百人场此局庄家Uuid
	BankerUuid string `protobuf:"bytes,8,opt,name=BankerUuid,proto3" json:"BankerUuid,omitempty"`
	// 百人场此局庄家输赢
	BankerWinOrLose int64 `protobuf:"varint,9,opt,name=BankerWinOrLose,proto3" json:"BankerWinOrLose,omitempty"`
	// 百人场此局庄家shortId
	BankerShortId string `protobuf:"bytes,10,opt,name=BankerShortId,proto3" json:"BankerShortId,omitempty"`
	// 百人牛牛相关输赢记录 11-20
	// 开牌结果
	HundredBullPokerList []*HundredBullPokerCard `protobuf:"bytes,11,rep,name=HundredBullPokerList,proto3" json:"HundredBullPokerList,omitempty"`
	// 庄闲输赢结果
	HundredBullWinInfos *HundredBullWinInfo `protobuf:"bytes,12,opt,name=HundredBullWinInfos,proto3" json:"HundredBullWinInfos,omitempty"`
	// 玩家各区总注
	PlayerAllBet []int64 `protobuf:"varint,13,rep,packed,name=PlayerAllBet,proto3" json:"PlayerAllBet,omitempty"`
	//疯狂牛牛牌型
	CrazyBullPokerType CrazyBullPokerType `protobuf:"varint,14,opt,name=CrazyBullPokerType,proto3,enum=CrazyBullPokerType" json:"CrazyBullPokerType,omitempty"`
	// 红黑相关 21-30
	// 红牌与黑牌-比较牌型
	RedBlackPokerType []*CompareRedBlackPoker `protobuf:"bytes,21,rep,name=RedBlackPokerType,proto3" json:"RedBlackPokerType,omitempty"`
	// 红黑胜利区域
	RedBlackWinArea RedBlackCardArea `protobuf:"varint,22,opt,name=RedBlackWinArea,proto3,enum=RedBlackCardArea" json:"RedBlackWinArea,omitempty"`
	// 百家乐闲
	XianPoker []*Poker `protobuf:"bytes,23,rep,name=XianPoker,proto3" json:"XianPoker,omitempty"`
	// 百家乐胜利的区域
	BaccaratWinArea BaccaratCardArea `protobuf:"varint,24,opt,name=BaccaratWinArea,proto3,enum=BaccaratCardArea" json:"BaccaratWinArea,omitempty"`
	// 百家乐庄
	ZhuangPoker []*Poker `protobuf:"bytes,25,rep,name=ZhuangPoker,proto3" json:"ZhuangPoker,omitempty"`
	// 推筒子牌型
	PushBobbinMahjongList []*PushBobbinMahjong `protobuf:"bytes,26,rep,name=PushBobbinMahjongList,proto3" json:"PushBobbinMahjongList,omitempty"`
	// 推筒子输赢信息
	PushBobbinWinInfos *PushBobbinWinInfo `protobuf:"bytes,27,opt,name=PushBobbinWinInfos,proto3" json:"PushBobbinWinInfos,omitempty"`
	// 每局的结算信息，房卡场有多局，金币场有1局
	AllSettleInfo []*SettleInfo `protobuf:"bytes,28,rep,name=allSettleInfo,proto3" json:"allSettleInfo,omitempty"`
	// 麻将当前局庄家下标
	BankerIndex          int64    `protobuf:"varint,29,opt,name=bankerIndex,proto3" json:"bankerIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameRecordExtendData) Reset()         { *m = GameRecordExtendData{} }
func (m *GameRecordExtendData) String() string { return proto.CompactTextString(m) }
func (*GameRecordExtendData) ProtoMessage()    {}
func (*GameRecordExtendData) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{590}
}

func (m *GameRecordExtendData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameRecordExtendData.Unmarshal(m, b)
}
func (m *GameRecordExtendData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameRecordExtendData.Marshal(b, m, deterministic)
}
func (m *GameRecordExtendData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameRecordExtendData.Merge(m, src)
}
func (m *GameRecordExtendData) XXX_Size() int {
	return xxx_messageInfo_GameRecordExtendData.Size(m)
}
func (m *GameRecordExtendData) XXX_DiscardUnknown() {
	xxx_messageInfo_GameRecordExtendData.DiscardUnknown(m)
}

var xxx_messageInfo_GameRecordExtendData proto.InternalMessageInfo

func (m *GameRecordExtendData) GetPokers() []*Poker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

func (m *GameRecordExtendData) GetJinhuaPokerType() JinhuaPokerType {
	if m != nil {
		return m.JinhuaPokerType
	}
	return JinhuaPokerType_JinhuaCardType_None
}

func (m *GameRecordExtendData) GetDragonTigerPoker() []*Poker {
	if m != nil {
		return m.DragonTigerPoker
	}
	return nil
}

func (m *GameRecordExtendData) GetWinArea() DragonTigerCardArea {
	if m != nil {
		return m.WinArea
	}
	return DragonTigerCardArea_CardAreaNone
}

func (m *GameRecordExtendData) GetBankerUuid() string {
	if m != nil {
		return m.BankerUuid
	}
	return ""
}

func (m *GameRecordExtendData) GetBankerWinOrLose() int64 {
	if m != nil {
		return m.BankerWinOrLose
	}
	return 0
}

func (m *GameRecordExtendData) GetBankerShortId() string {
	if m != nil {
		return m.BankerShortId
	}
	return ""
}

func (m *GameRecordExtendData) GetHundredBullPokerList() []*HundredBullPokerCard {
	if m != nil {
		return m.HundredBullPokerList
	}
	return nil
}

func (m *GameRecordExtendData) GetHundredBullWinInfos() *HundredBullWinInfo {
	if m != nil {
		return m.HundredBullWinInfos
	}
	return nil
}

func (m *GameRecordExtendData) GetPlayerAllBet() []int64 {
	if m != nil {
		return m.PlayerAllBet
	}
	return nil
}

func (m *GameRecordExtendData) GetCrazyBullPokerType() CrazyBullPokerType {
	if m != nil {
		return m.CrazyBullPokerType
	}
	return CrazyBullPokerType_CrazyBullCardType_None
}

func (m *GameRecordExtendData) GetRedBlackPokerType() []*CompareRedBlackPoker {
	if m != nil {
		return m.RedBlackPokerType
	}
	return nil
}

func (m *GameRecordExtendData) GetRedBlackWinArea() RedBlackCardArea {
	if m != nil {
		return m.RedBlackWinArea
	}
	return RedBlackCardArea_RedBlackCardArea_None
}

func (m *GameRecordExtendData) GetXianPoker() []*Poker {
	if m != nil {
		return m.XianPoker
	}
	return nil
}

func (m *GameRecordExtendData) GetBaccaratWinArea() BaccaratCardArea {
	if m != nil {
		return m.BaccaratWinArea
	}
	return BaccaratCardArea_BaccaratAreaNone
}

func (m *GameRecordExtendData) GetZhuangPoker() []*Poker {
	if m != nil {
		return m.ZhuangPoker
	}
	return nil
}

func (m *GameRecordExtendData) GetPushBobbinMahjongList() []*PushBobbinMahjong {
	if m != nil {
		return m.PushBobbinMahjongList
	}
	return nil
}

func (m *GameRecordExtendData) GetPushBobbinWinInfos() *PushBobbinWinInfo {
	if m != nil {
		return m.PushBobbinWinInfos
	}
	return nil
}

func (m *GameRecordExtendData) GetAllSettleInfo() []*SettleInfo {
	if m != nil {
		return m.AllSettleInfo
	}
	return nil
}

func (m *GameRecordExtendData) GetBankerIndex() int64 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

//游戏记录报表
type GameRecordReport struct {
	//游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	//游戏场次
	GameScene int32 `protobuf:"varint,2,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	//游戏模式
	GameMode      GameMode `protobuf:"varint,3,opt,name=gameMode,proto3,enum=GameMode" json:"gameMode,omitempty"`
	PlayerUuid    string   `protobuf:"bytes,4,opt,name=playerUuid,proto3" json:"playerUuid,omitempty"`
	PlayerShortId string   `protobuf:"bytes,5,opt,name=playerShortId,proto3" json:"playerShortId,omitempty"`
	PlayerAccount string   `protobuf:"bytes,6,opt,name=playerAccount,proto3" json:"playerAccount,omitempty"`
	//开始时间
	StartTime int64 `protobuf:"varint,7,opt,name=startTime,proto3" json:"startTime,omitempty"`
	//结算时间
	SettleTime int64 `protobuf:"varint,8,opt,name=settleTime,proto3" json:"settleTime,omitempty"`
	//下注前金额
	BeforeBalance int64 `protobuf:"varint,9,opt,name=beforeBalance,proto3" json:"beforeBalance,omitempty"`
	//总下注
	TotalBet int64 `protobuf:"varint,10,opt,name=totalBet,proto3" json:"totalBet,omitempty"`
	//总输赢
	WinOrLose int64 `protobuf:"varint,11,opt,name=winOrLose,proto3" json:"winOrLose,omitempty"`
	//结算后金额
	SettleBalance int64 `protobuf:"varint,12,opt,name=settleBalance,proto3" json:"settleBalance,omitempty"`
	//游戏记录扩展字段
	ExtendData *GameRecordExtendData `protobuf:"bytes,13,opt,name=extendData,proto3" json:"extendData,omitempty"`
	//自动Id
	AutoId int64 `protobuf:"varint,14,opt,name=autoId,proto3" json:"autoId,omitempty"`
	//房间类型
	RoomType RoomType `protobuf:"varint,15,opt,name=roomType,proto3,enum=RoomType" json:"roomType,omitempty"`
	//  房间Id
	RoomId string `protobuf:"bytes,16,opt,name=roomId,proto3" json:"roomId,omitempty"`
	//对局Id
	RoundId string `protobuf:"bytes,17,opt,name=roundId,proto3" json:"roundId,omitempty"`
	//抽水
	Commission int64 `protobuf:"varint,18,opt,name=commission,proto3" json:"commission,omitempty"`
	//奖池抽水
	JackpotCommission    int64    `protobuf:"varint,19,opt,name=jackpotCommission,proto3" json:"jackpotCommission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameRecordReport) Reset()         { *m = GameRecordReport{} }
func (m *GameRecordReport) String() string { return proto.CompactTextString(m) }
func (*GameRecordReport) ProtoMessage()    {}
func (*GameRecordReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{591}
}

func (m *GameRecordReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameRecordReport.Unmarshal(m, b)
}
func (m *GameRecordReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameRecordReport.Marshal(b, m, deterministic)
}
func (m *GameRecordReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameRecordReport.Merge(m, src)
}
func (m *GameRecordReport) XXX_Size() int {
	return xxx_messageInfo_GameRecordReport.Size(m)
}
func (m *GameRecordReport) XXX_DiscardUnknown() {
	xxx_messageInfo_GameRecordReport.DiscardUnknown(m)
}

var xxx_messageInfo_GameRecordReport proto.InternalMessageInfo

func (m *GameRecordReport) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GameRecordReport) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *GameRecordReport) GetGameMode() GameMode {
	if m != nil {
		return m.GameMode
	}
	return GameMode_GameMode_None
}

func (m *GameRecordReport) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *GameRecordReport) GetPlayerShortId() string {
	if m != nil {
		return m.PlayerShortId
	}
	return ""
}

func (m *GameRecordReport) GetPlayerAccount() string {
	if m != nil {
		return m.PlayerAccount
	}
	return ""
}

func (m *GameRecordReport) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GameRecordReport) GetSettleTime() int64 {
	if m != nil {
		return m.SettleTime
	}
	return 0
}

func (m *GameRecordReport) GetBeforeBalance() int64 {
	if m != nil {
		return m.BeforeBalance
	}
	return 0
}

func (m *GameRecordReport) GetTotalBet() int64 {
	if m != nil {
		return m.TotalBet
	}
	return 0
}

func (m *GameRecordReport) GetWinOrLose() int64 {
	if m != nil {
		return m.WinOrLose
	}
	return 0
}

func (m *GameRecordReport) GetSettleBalance() int64 {
	if m != nil {
		return m.SettleBalance
	}
	return 0
}

func (m *GameRecordReport) GetExtendData() *GameRecordExtendData {
	if m != nil {
		return m.ExtendData
	}
	return nil
}

func (m *GameRecordReport) GetAutoId() int64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *GameRecordReport) GetRoomType() RoomType {
	if m != nil {
		return m.RoomType
	}
	return RoomType_RoomType_None
}

func (m *GameRecordReport) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *GameRecordReport) GetRoundId() string {
	if m != nil {
		return m.RoundId
	}
	return ""
}

func (m *GameRecordReport) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *GameRecordReport) GetJackpotCommission() int64 {
	if m != nil {
		return m.JackpotCommission
	}
	return 0
}

//余额变动记录
type BalanceChangeRecordReport struct {
	PlayerUuid    string `protobuf:"bytes,1,opt,name=playerUuid,proto3" json:"playerUuid,omitempty"`
	PlayerShortId string `protobuf:"bytes,2,opt,name=playerShortId,proto3" json:"playerShortId,omitempty"`
	PlayerAccount string `protobuf:"bytes,3,opt,name=playerAccount,proto3" json:"playerAccount,omitempty"`
	//变动时间
	ChangeTime int64 `protobuf:"varint,4,opt,name=changeTime,proto3" json:"changeTime,omitempty"`
	//金额变动类型
	ChangeReason ResourceChangeReason `protobuf:"varint,5,opt,name=changeReason,proto3,enum=ResourceChangeReason" json:"changeReason,omitempty"`
	//变动前余额
	BeforeBalance int64 `protobuf:"varint,6,opt,name=beforeBalance,proto3" json:"beforeBalance,omitempty"`
	//变动金额
	ChangeAmount int64 `protobuf:"varint,7,opt,name=changeAmount,proto3" json:"changeAmount,omitempty"`
	//变动后余额
	FinalBalance         int64    `protobuf:"varint,8,opt,name=finalBalance,proto3" json:"finalBalance,omitempty"`
	AutoId               int64    `protobuf:"varint,9,opt,name=autoId,proto3" json:"autoId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BalanceChangeRecordReport) Reset()         { *m = BalanceChangeRecordReport{} }
func (m *BalanceChangeRecordReport) String() string { return proto.CompactTextString(m) }
func (*BalanceChangeRecordReport) ProtoMessage()    {}
func (*BalanceChangeRecordReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{592}
}

func (m *BalanceChangeRecordReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceChangeRecordReport.Unmarshal(m, b)
}
func (m *BalanceChangeRecordReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceChangeRecordReport.Marshal(b, m, deterministic)
}
func (m *BalanceChangeRecordReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceChangeRecordReport.Merge(m, src)
}
func (m *BalanceChangeRecordReport) XXX_Size() int {
	return xxx_messageInfo_BalanceChangeRecordReport.Size(m)
}
func (m *BalanceChangeRecordReport) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceChangeRecordReport.DiscardUnknown(m)
}

var xxx_messageInfo_BalanceChangeRecordReport proto.InternalMessageInfo

func (m *BalanceChangeRecordReport) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *BalanceChangeRecordReport) GetPlayerShortId() string {
	if m != nil {
		return m.PlayerShortId
	}
	return ""
}

func (m *BalanceChangeRecordReport) GetPlayerAccount() string {
	if m != nil {
		return m.PlayerAccount
	}
	return ""
}

func (m *BalanceChangeRecordReport) GetChangeTime() int64 {
	if m != nil {
		return m.ChangeTime
	}
	return 0
}

func (m *BalanceChangeRecordReport) GetChangeReason() ResourceChangeReason {
	if m != nil {
		return m.ChangeReason
	}
	return ResourceChangeReason_ReasonNone
}

func (m *BalanceChangeRecordReport) GetBeforeBalance() int64 {
	if m != nil {
		return m.BeforeBalance
	}
	return 0
}

func (m *BalanceChangeRecordReport) GetChangeAmount() int64 {
	if m != nil {
		return m.ChangeAmount
	}
	return 0
}

func (m *BalanceChangeRecordReport) GetFinalBalance() int64 {
	if m != nil {
		return m.FinalBalance
	}
	return 0
}

func (m *BalanceChangeRecordReport) GetAutoId() int64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

//业绩变动记录
type AchievementChangeRecordReport struct {
	FromUuid    string `protobuf:"bytes,1,opt,name=fromUuid,proto3" json:"fromUuid,omitempty"`
	FromShortId string `protobuf:"bytes,2,opt,name=fromShortId,proto3" json:"fromShortId,omitempty"`
	FromAccount string `protobuf:"bytes,3,opt,name=fromAccount,proto3" json:"fromAccount,omitempty"`
	ToUuid      string `protobuf:"bytes,4,opt,name=toUuid,proto3" json:"toUuid,omitempty"`
	ToShortId   string `protobuf:"bytes,5,opt,name=toShortId,proto3" json:"toShortId,omitempty"`
	ToAccount   string `protobuf:"bytes,6,opt,name=toAccount,proto3" json:"toAccount,omitempty"`
	//变动时间
	ChangeTime int64 `protobuf:"varint,7,opt,name=changeTime,proto3" json:"changeTime,omitempty"`
	//金额变动类型
	ChangeReason ResourceChangeReason `protobuf:"varint,8,opt,name=changeReason,proto3,enum=ResourceChangeReason" json:"changeReason,omitempty"`
	//变动金额
	ChangeAmount int64 `protobuf:"varint,9,opt,name=changeAmount,proto3" json:"changeAmount,omitempty"`
	AutoId       int64 `protobuf:"varint,10,opt,name=autoId,proto3" json:"autoId,omitempty"`
	// 业绩类型
	Type                 AchievementType `protobuf:"varint,11,opt,name=type,proto3,enum=AchievementType" json:"type,omitempty"`
	FromName             string          `protobuf:"bytes,12,opt,name=fromName,proto3" json:"fromName,omitempty"`
	FromHeadImgUrl       string          `protobuf:"bytes,13,opt,name=fromHeadImgUrl,proto3" json:"fromHeadImgUrl,omitempty"`
	ToName               string          `protobuf:"bytes,14,opt,name=toName,proto3" json:"toName,omitempty"`
	ToHeadImgUrl         string          `protobuf:"bytes,15,opt,name=toHeadImgUrl,proto3" json:"toHeadImgUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AchievementChangeRecordReport) Reset()         { *m = AchievementChangeRecordReport{} }
func (m *AchievementChangeRecordReport) String() string { return proto.CompactTextString(m) }
func (*AchievementChangeRecordReport) ProtoMessage()    {}
func (*AchievementChangeRecordReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{593}
}

func (m *AchievementChangeRecordReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AchievementChangeRecordReport.Unmarshal(m, b)
}
func (m *AchievementChangeRecordReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AchievementChangeRecordReport.Marshal(b, m, deterministic)
}
func (m *AchievementChangeRecordReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AchievementChangeRecordReport.Merge(m, src)
}
func (m *AchievementChangeRecordReport) XXX_Size() int {
	return xxx_messageInfo_AchievementChangeRecordReport.Size(m)
}
func (m *AchievementChangeRecordReport) XXX_DiscardUnknown() {
	xxx_messageInfo_AchievementChangeRecordReport.DiscardUnknown(m)
}

var xxx_messageInfo_AchievementChangeRecordReport proto.InternalMessageInfo

func (m *AchievementChangeRecordReport) GetFromUuid() string {
	if m != nil {
		return m.FromUuid
	}
	return ""
}

func (m *AchievementChangeRecordReport) GetFromShortId() string {
	if m != nil {
		return m.FromShortId
	}
	return ""
}

func (m *AchievementChangeRecordReport) GetFromAccount() string {
	if m != nil {
		return m.FromAccount
	}
	return ""
}

func (m *AchievementChangeRecordReport) GetToUuid() string {
	if m != nil {
		return m.ToUuid
	}
	return ""
}

func (m *AchievementChangeRecordReport) GetToShortId() string {
	if m != nil {
		return m.ToShortId
	}
	return ""
}

func (m *AchievementChangeRecordReport) GetToAccount() string {
	if m != nil {
		return m.ToAccount
	}
	return ""
}

func (m *AchievementChangeRecordReport) GetChangeTime() int64 {
	if m != nil {
		return m.ChangeTime
	}
	return 0
}

func (m *AchievementChangeRecordReport) GetChangeReason() ResourceChangeReason {
	if m != nil {
		return m.ChangeReason
	}
	return ResourceChangeReason_ReasonNone
}

func (m *AchievementChangeRecordReport) GetChangeAmount() int64 {
	if m != nil {
		return m.ChangeAmount
	}
	return 0
}

func (m *AchievementChangeRecordReport) GetAutoId() int64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *AchievementChangeRecordReport) GetType() AchievementType {
	if m != nil {
		return m.Type
	}
	return AchievementType_AchievementType_None
}

func (m *AchievementChangeRecordReport) GetFromName() string {
	if m != nil {
		return m.FromName
	}
	return ""
}

func (m *AchievementChangeRecordReport) GetFromHeadImgUrl() string {
	if m != nil {
		return m.FromHeadImgUrl
	}
	return ""
}

func (m *AchievementChangeRecordReport) GetToName() string {
	if m != nil {
		return m.ToName
	}
	return ""
}

func (m *AchievementChangeRecordReport) GetToHeadImgUrl() string {
	if m != nil {
		return m.ToHeadImgUrl
	}
	return ""
}

//佣金提取记录
type GetCommissionRecordReport struct {
	PlayerUuid    string `protobuf:"bytes,1,opt,name=playerUuid,proto3" json:"playerUuid,omitempty"`
	PlayerShortId string `protobuf:"bytes,2,opt,name=playerShortId,proto3" json:"playerShortId,omitempty"`
	PlayerAccount string `protobuf:"bytes,3,opt,name=playerAccount,proto3" json:"playerAccount,omitempty"`
	//获取时间
	GetTime int64 `protobuf:"varint,4,opt,name=getTime,proto3" json:"getTime,omitempty"`
	//获取类型
	GetType GetCommissionType `protobuf:"varint,5,opt,name=getType,proto3,enum=GetCommissionType" json:"getType,omitempty"`
	//获取金额
	GetAmount            int64    `protobuf:"varint,6,opt,name=getAmount,proto3" json:"getAmount,omitempty"`
	AutoId               int64    `protobuf:"varint,7,opt,name=autoId,proto3" json:"autoId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommissionRecordReport) Reset()         { *m = GetCommissionRecordReport{} }
func (m *GetCommissionRecordReport) String() string { return proto.CompactTextString(m) }
func (*GetCommissionRecordReport) ProtoMessage()    {}
func (*GetCommissionRecordReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{594}
}

func (m *GetCommissionRecordReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommissionRecordReport.Unmarshal(m, b)
}
func (m *GetCommissionRecordReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommissionRecordReport.Marshal(b, m, deterministic)
}
func (m *GetCommissionRecordReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommissionRecordReport.Merge(m, src)
}
func (m *GetCommissionRecordReport) XXX_Size() int {
	return xxx_messageInfo_GetCommissionRecordReport.Size(m)
}
func (m *GetCommissionRecordReport) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommissionRecordReport.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommissionRecordReport proto.InternalMessageInfo

func (m *GetCommissionRecordReport) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *GetCommissionRecordReport) GetPlayerShortId() string {
	if m != nil {
		return m.PlayerShortId
	}
	return ""
}

func (m *GetCommissionRecordReport) GetPlayerAccount() string {
	if m != nil {
		return m.PlayerAccount
	}
	return ""
}

func (m *GetCommissionRecordReport) GetGetTime() int64 {
	if m != nil {
		return m.GetTime
	}
	return 0
}

func (m *GetCommissionRecordReport) GetGetType() GetCommissionType {
	if m != nil {
		return m.GetType
	}
	return GetCommissionType_GetCommissionType_None
}

func (m *GetCommissionRecordReport) GetGetAmount() int64 {
	if m != nil {
		return m.GetAmount
	}
	return 0
}

func (m *GetCommissionRecordReport) GetAutoId() int64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

// 金豆变动记录
type BeanChangeRecordReport struct {
	// 赠送ID
	GiveID string `protobuf:"bytes,1,opt,name=giveID,proto3" json:"giveID,omitempty"`
	//
	LeagueUUID string `protobuf:"bytes,2,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	//金豆变动人角色
	PlayerRole Roles `protobuf:"varint,3,opt,name=playerRole,proto3,enum=Roles" json:"playerRole,omitempty"`
	//金豆变动人UUID
	PlayerUUID string `protobuf:"bytes,4,opt,name=playerUUID,proto3" json:"playerUUID,omitempty"`
	//金豆变动人shortID
	PlayerShortID string `protobuf:"bytes,5,opt,name=playerShortID,proto3" json:"playerShortID,omitempty"`
	//金豆变动人account
	PlayerAccount string `protobuf:"bytes,6,opt,name=playerAccount,proto3" json:"playerAccount,omitempty"`
	//金豆变动人Name
	PlayerName string `protobuf:"bytes,7,opt,name=playerName,proto3" json:"playerName,omitempty"`
	// 金豆变动人
	PlayerHeadImgUrl     string `protobuf:"bytes,8,opt,name=playerHeadImgUrl,proto3" json:"playerHeadImgUrl,omitempty"`
	PlayerSex            int32  `protobuf:"varint,9,opt,name=playerSex,proto3" json:"playerSex,omitempty"`
	DestPlayerUUID       string `protobuf:"bytes,10,opt,name=destPlayerUUID,proto3" json:"destPlayerUUID,omitempty"`
	DestPlayerShortID    string `protobuf:"bytes,11,opt,name=destPlayerShortID,proto3" json:"destPlayerShortID,omitempty"`
	DestPlayerAccount    string `protobuf:"bytes,12,opt,name=destPlayerAccount,proto3" json:"destPlayerAccount,omitempty"`
	DestPlayerHeadImgUrl string `protobuf:"bytes,13,opt,name=destPlayerHeadImgUrl,proto3" json:"destPlayerHeadImgUrl,omitempty"`
	DestPlayerName       string `protobuf:"bytes,14,opt,name=destPlayerName,proto3" json:"destPlayerName,omitempty"`
	DestPlayerSex        int32  `protobuf:"varint,15,opt,name=destPlayerSex,proto3" json:"destPlayerSex,omitempty"`
	// 变动时间
	ChangeTime int64 `protobuf:"varint,16,opt,name=changeTime,proto3" json:"changeTime,omitempty"`
	// 变动金额
	ChangeData int64 `protobuf:"varint,17,opt,name=changeData,proto3" json:"changeData,omitempty"`
	// 变动前余额
	BeforeData int64 `protobuf:"varint,18,opt,name=beforeData,proto3" json:"beforeData,omitempty"`
	// 变动后余额
	FinalData int64 `protobuf:"varint,19,opt,name=finalData,proto3" json:"finalData,omitempty"`
	// 自增ID
	AutoId int64 `protobuf:"varint,20,opt,name=autoId,proto3" json:"autoId,omitempty"`
	// 金豆改变的原因
	ChangeReason         BeanChangeReason `protobuf:"varint,21,opt,name=changeReason,proto3,enum=BeanChangeReason" json:"changeReason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BeanChangeRecordReport) Reset()         { *m = BeanChangeRecordReport{} }
func (m *BeanChangeRecordReport) String() string { return proto.CompactTextString(m) }
func (*BeanChangeRecordReport) ProtoMessage()    {}
func (*BeanChangeRecordReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{595}
}

func (m *BeanChangeRecordReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeanChangeRecordReport.Unmarshal(m, b)
}
func (m *BeanChangeRecordReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeanChangeRecordReport.Marshal(b, m, deterministic)
}
func (m *BeanChangeRecordReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeanChangeRecordReport.Merge(m, src)
}
func (m *BeanChangeRecordReport) XXX_Size() int {
	return xxx_messageInfo_BeanChangeRecordReport.Size(m)
}
func (m *BeanChangeRecordReport) XXX_DiscardUnknown() {
	xxx_messageInfo_BeanChangeRecordReport.DiscardUnknown(m)
}

var xxx_messageInfo_BeanChangeRecordReport proto.InternalMessageInfo

func (m *BeanChangeRecordReport) GetGiveID() string {
	if m != nil {
		return m.GiveID
	}
	return ""
}

func (m *BeanChangeRecordReport) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *BeanChangeRecordReport) GetPlayerRole() Roles {
	if m != nil {
		return m.PlayerRole
	}
	return Roles_Error
}

func (m *BeanChangeRecordReport) GetPlayerUUID() string {
	if m != nil {
		return m.PlayerUUID
	}
	return ""
}

func (m *BeanChangeRecordReport) GetPlayerShortID() string {
	if m != nil {
		return m.PlayerShortID
	}
	return ""
}

func (m *BeanChangeRecordReport) GetPlayerAccount() string {
	if m != nil {
		return m.PlayerAccount
	}
	return ""
}

func (m *BeanChangeRecordReport) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *BeanChangeRecordReport) GetPlayerHeadImgUrl() string {
	if m != nil {
		return m.PlayerHeadImgUrl
	}
	return ""
}

func (m *BeanChangeRecordReport) GetPlayerSex() int32 {
	if m != nil {
		return m.PlayerSex
	}
	return 0
}

func (m *BeanChangeRecordReport) GetDestPlayerUUID() string {
	if m != nil {
		return m.DestPlayerUUID
	}
	return ""
}

func (m *BeanChangeRecordReport) GetDestPlayerShortID() string {
	if m != nil {
		return m.DestPlayerShortID
	}
	return ""
}

func (m *BeanChangeRecordReport) GetDestPlayerAccount() string {
	if m != nil {
		return m.DestPlayerAccount
	}
	return ""
}

func (m *BeanChangeRecordReport) GetDestPlayerHeadImgUrl() string {
	if m != nil {
		return m.DestPlayerHeadImgUrl
	}
	return ""
}

func (m *BeanChangeRecordReport) GetDestPlayerName() string {
	if m != nil {
		return m.DestPlayerName
	}
	return ""
}

func (m *BeanChangeRecordReport) GetDestPlayerSex() int32 {
	if m != nil {
		return m.DestPlayerSex
	}
	return 0
}

func (m *BeanChangeRecordReport) GetChangeTime() int64 {
	if m != nil {
		return m.ChangeTime
	}
	return 0
}

func (m *BeanChangeRecordReport) GetChangeData() int64 {
	if m != nil {
		return m.ChangeData
	}
	return 0
}

func (m *BeanChangeRecordReport) GetBeforeData() int64 {
	if m != nil {
		return m.BeforeData
	}
	return 0
}

func (m *BeanChangeRecordReport) GetFinalData() int64 {
	if m != nil {
		return m.FinalData
	}
	return 0
}

func (m *BeanChangeRecordReport) GetAutoId() int64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *BeanChangeRecordReport) GetChangeReason() BeanChangeReason {
	if m != nil {
		return m.ChangeReason
	}
	return BeanChangeReason_BeanChangeReason_None
}

// 奖池记录报表
type BonusRecordReport struct {
	// 自增id
	AutoId int64 `protobuf:"varint,1,opt,name=autoId,proto3" json:"autoId,omitempty"`
	// 游戏类型
	GameType GameType `protobuf:"varint,2,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 游戏场次
	GameScene int32 `protobuf:"varint,3,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	// 生产时间
	ChangeTime int64 `protobuf:"varint,4,opt,name=changeTime,proto3" json:"changeTime,omitempty"`
	// 奖池变动前金额
	BeforeBonusChangeNum int64 `protobuf:"varint,5,opt,name=beforeBonusChangeNum,proto3" json:"beforeBonusChangeNum,omitempty"`
	// 奖池变动金额 正加负减
	BonusChangeNum int64 `protobuf:"varint,6,opt,name=bonusChangeNum,proto3" json:"bonusChangeNum,omitempty"`
	// 奖池变动后金额
	AfterBonusChangeNum int64 `protobuf:"varint,7,opt,name=afterBonusChangeNum,proto3" json:"afterBonusChangeNum,omitempty"`
	// 奖池变动原因
	ChangeReason ResourceChangeReason `protobuf:"varint,8,opt,name=changeReason,proto3,enum=ResourceChangeReason" json:"changeReason,omitempty"`
	// 奖池名
	BonusName string `protobuf:"bytes,9,opt,name=BonusName,proto3" json:"BonusName,omitempty"`
	// 系统奖池变动前金额
	BeforeSystemBonus int64 `protobuf:"varint,10,opt,name=beforeSystemBonus,proto3" json:"beforeSystemBonus,omitempty"`
	// 系统奖池变动金额
	ChangeSystemBonus int64 `protobuf:"varint,11,opt,name=changeSystemBonus,proto3" json:"changeSystemBonus,omitempty"`
	// 系统奖池变动后金额
	AfterSystemBonus int64 `protobuf:"varint,12,opt,name=afterSystemBonus,proto3" json:"afterSystemBonus,omitempty"`
	// 系统奖池抽层比例
	SystemRatio int64 `protobuf:"varint,13,opt,name=systemRatio,proto3" json:"systemRatio,omitempty"`
	// 玩家uuid
	Uuid string `protobuf:"bytes,14,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 玩家shortId
	ShortId string `protobuf:"bytes,15,opt,name=shortId,proto3" json:"shortId,omitempty"`
	// 玩家奖池获取到的金额
	BonusReward          int64    `protobuf:"varint,16,opt,name=BonusReward,proto3" json:"BonusReward,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BonusRecordReport) Reset()         { *m = BonusRecordReport{} }
func (m *BonusRecordReport) String() string { return proto.CompactTextString(m) }
func (*BonusRecordReport) ProtoMessage()    {}
func (*BonusRecordReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{596}
}

func (m *BonusRecordReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BonusRecordReport.Unmarshal(m, b)
}
func (m *BonusRecordReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BonusRecordReport.Marshal(b, m, deterministic)
}
func (m *BonusRecordReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BonusRecordReport.Merge(m, src)
}
func (m *BonusRecordReport) XXX_Size() int {
	return xxx_messageInfo_BonusRecordReport.Size(m)
}
func (m *BonusRecordReport) XXX_DiscardUnknown() {
	xxx_messageInfo_BonusRecordReport.DiscardUnknown(m)
}

var xxx_messageInfo_BonusRecordReport proto.InternalMessageInfo

func (m *BonusRecordReport) GetAutoId() int64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *BonusRecordReport) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *BonusRecordReport) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *BonusRecordReport) GetChangeTime() int64 {
	if m != nil {
		return m.ChangeTime
	}
	return 0
}

func (m *BonusRecordReport) GetBeforeBonusChangeNum() int64 {
	if m != nil {
		return m.BeforeBonusChangeNum
	}
	return 0
}

func (m *BonusRecordReport) GetBonusChangeNum() int64 {
	if m != nil {
		return m.BonusChangeNum
	}
	return 0
}

func (m *BonusRecordReport) GetAfterBonusChangeNum() int64 {
	if m != nil {
		return m.AfterBonusChangeNum
	}
	return 0
}

func (m *BonusRecordReport) GetChangeReason() ResourceChangeReason {
	if m != nil {
		return m.ChangeReason
	}
	return ResourceChangeReason_ReasonNone
}

func (m *BonusRecordReport) GetBonusName() string {
	if m != nil {
		return m.BonusName
	}
	return ""
}

func (m *BonusRecordReport) GetBeforeSystemBonus() int64 {
	if m != nil {
		return m.BeforeSystemBonus
	}
	return 0
}

func (m *BonusRecordReport) GetChangeSystemBonus() int64 {
	if m != nil {
		return m.ChangeSystemBonus
	}
	return 0
}

func (m *BonusRecordReport) GetAfterSystemBonus() int64 {
	if m != nil {
		return m.AfterSystemBonus
	}
	return 0
}

func (m *BonusRecordReport) GetSystemRatio() int64 {
	if m != nil {
		return m.SystemRatio
	}
	return 0
}

func (m *BonusRecordReport) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *BonusRecordReport) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *BonusRecordReport) GetBonusReward() int64 {
	if m != nil {
		return m.BonusReward
	}
	return 0
}

// 获取奖池变动记录分页列表
type GetBonusChangeRecordPageListRequest struct {
	// 查询的页数
	PageIndex int32 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	// 每页的大小
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	// 开始记录的时间
	Start int64 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	// 结算记录的时间
	End int64 `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	// 短位id查询
	ShortId string `protobuf:"bytes,5,opt,name=shortId,proto3" json:"shortId,omitempty"`
	// 用户uuid查询
	PlayerUUID string `protobuf:"bytes,6,opt,name=playerUUID,proto3" json:"playerUUID,omitempty"`
	// 游戏类型
	GameType GameType `protobuf:"varint,7,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 游戏场次
	GameScene            int32    `protobuf:"varint,8,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBonusChangeRecordPageListRequest) Reset()         { *m = GetBonusChangeRecordPageListRequest{} }
func (m *GetBonusChangeRecordPageListRequest) String() string { return proto.CompactTextString(m) }
func (*GetBonusChangeRecordPageListRequest) ProtoMessage()    {}
func (*GetBonusChangeRecordPageListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{597}
}

func (m *GetBonusChangeRecordPageListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBonusChangeRecordPageListRequest.Unmarshal(m, b)
}
func (m *GetBonusChangeRecordPageListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBonusChangeRecordPageListRequest.Marshal(b, m, deterministic)
}
func (m *GetBonusChangeRecordPageListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBonusChangeRecordPageListRequest.Merge(m, src)
}
func (m *GetBonusChangeRecordPageListRequest) XXX_Size() int {
	return xxx_messageInfo_GetBonusChangeRecordPageListRequest.Size(m)
}
func (m *GetBonusChangeRecordPageListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBonusChangeRecordPageListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBonusChangeRecordPageListRequest proto.InternalMessageInfo

func (m *GetBonusChangeRecordPageListRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetBonusChangeRecordPageListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetBonusChangeRecordPageListRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetBonusChangeRecordPageListRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetBonusChangeRecordPageListRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *GetBonusChangeRecordPageListRequest) GetPlayerUUID() string {
	if m != nil {
		return m.PlayerUUID
	}
	return ""
}

func (m *GetBonusChangeRecordPageListRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GetBonusChangeRecordPageListRequest) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

//获取奖池变动记录分页列表回复
type GetBonusChangeRecordPageListReply struct {
	PageIndex            int32                `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32                `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RecordCount          int32                `protobuf:"varint,3,opt,name=recordCount,proto3" json:"recordCount,omitempty"`
	Data                 []*BonusRecordReport `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetBonusChangeRecordPageListReply) Reset()         { *m = GetBonusChangeRecordPageListReply{} }
func (m *GetBonusChangeRecordPageListReply) String() string { return proto.CompactTextString(m) }
func (*GetBonusChangeRecordPageListReply) ProtoMessage()    {}
func (*GetBonusChangeRecordPageListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{598}
}

func (m *GetBonusChangeRecordPageListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBonusChangeRecordPageListReply.Unmarshal(m, b)
}
func (m *GetBonusChangeRecordPageListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBonusChangeRecordPageListReply.Marshal(b, m, deterministic)
}
func (m *GetBonusChangeRecordPageListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBonusChangeRecordPageListReply.Merge(m, src)
}
func (m *GetBonusChangeRecordPageListReply) XXX_Size() int {
	return xxx_messageInfo_GetBonusChangeRecordPageListReply.Size(m)
}
func (m *GetBonusChangeRecordPageListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBonusChangeRecordPageListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetBonusChangeRecordPageListReply proto.InternalMessageInfo

func (m *GetBonusChangeRecordPageListReply) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetBonusChangeRecordPageListReply) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetBonusChangeRecordPageListReply) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *GetBonusChangeRecordPageListReply) GetData() []*BonusRecordReport {
	if m != nil {
		return m.Data
	}
	return nil
}

//获取联盟金豆变动记录分页列表
type GetBeanChangeRecordPageListRequest struct {
	// 查询的页数
	PageIndex int32 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	// 每页的大小
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	// 开始记录的时间
	Start int64 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	// 结算记录的时间
	End        int64  `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	Account    string `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	ShortId    string `protobuf:"bytes,6,opt,name=shortId,proto3" json:"shortId,omitempty"`
	PlayerUUID string `protobuf:"bytes,7,opt,name=playerUUID,proto3" json:"playerUUID,omitempty"`
	//联盟ID
	LeagueUUID string `protobuf:"bytes,8,opt,name=leagueUUID,proto3" json:"leagueUUID,omitempty"`
	//金豆变动原因
	ChangeReason         BeanChangeReason `protobuf:"varint,9,opt,name=changeReason,proto3,enum=BeanChangeReason" json:"changeReason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetBeanChangeRecordPageListRequest) Reset()         { *m = GetBeanChangeRecordPageListRequest{} }
func (m *GetBeanChangeRecordPageListRequest) String() string { return proto.CompactTextString(m) }
func (*GetBeanChangeRecordPageListRequest) ProtoMessage()    {}
func (*GetBeanChangeRecordPageListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{599}
}

func (m *GetBeanChangeRecordPageListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBeanChangeRecordPageListRequest.Unmarshal(m, b)
}
func (m *GetBeanChangeRecordPageListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBeanChangeRecordPageListRequest.Marshal(b, m, deterministic)
}
func (m *GetBeanChangeRecordPageListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBeanChangeRecordPageListRequest.Merge(m, src)
}
func (m *GetBeanChangeRecordPageListRequest) XXX_Size() int {
	return xxx_messageInfo_GetBeanChangeRecordPageListRequest.Size(m)
}
func (m *GetBeanChangeRecordPageListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBeanChangeRecordPageListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBeanChangeRecordPageListRequest proto.InternalMessageInfo

func (m *GetBeanChangeRecordPageListRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetBeanChangeRecordPageListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetBeanChangeRecordPageListRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetBeanChangeRecordPageListRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetBeanChangeRecordPageListRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *GetBeanChangeRecordPageListRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *GetBeanChangeRecordPageListRequest) GetPlayerUUID() string {
	if m != nil {
		return m.PlayerUUID
	}
	return ""
}

func (m *GetBeanChangeRecordPageListRequest) GetLeagueUUID() string {
	if m != nil {
		return m.LeagueUUID
	}
	return ""
}

func (m *GetBeanChangeRecordPageListRequest) GetChangeReason() BeanChangeReason {
	if m != nil {
		return m.ChangeReason
	}
	return BeanChangeReason_BeanChangeReason_None
}

//获取联盟金豆变动记录分页列表回复
type GetBeanChangeRecordPageListReply struct {
	PageIndex            int32                     `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32                     `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RecordCount          int32                     `protobuf:"varint,3,opt,name=recordCount,proto3" json:"recordCount,omitempty"`
	Data                 []*BeanChangeRecordReport `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetBeanChangeRecordPageListReply) Reset()         { *m = GetBeanChangeRecordPageListReply{} }
func (m *GetBeanChangeRecordPageListReply) String() string { return proto.CompactTextString(m) }
func (*GetBeanChangeRecordPageListReply) ProtoMessage()    {}
func (*GetBeanChangeRecordPageListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{600}
}

func (m *GetBeanChangeRecordPageListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBeanChangeRecordPageListReply.Unmarshal(m, b)
}
func (m *GetBeanChangeRecordPageListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBeanChangeRecordPageListReply.Marshal(b, m, deterministic)
}
func (m *GetBeanChangeRecordPageListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBeanChangeRecordPageListReply.Merge(m, src)
}
func (m *GetBeanChangeRecordPageListReply) XXX_Size() int {
	return xxx_messageInfo_GetBeanChangeRecordPageListReply.Size(m)
}
func (m *GetBeanChangeRecordPageListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBeanChangeRecordPageListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetBeanChangeRecordPageListReply proto.InternalMessageInfo

func (m *GetBeanChangeRecordPageListReply) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetBeanChangeRecordPageListReply) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetBeanChangeRecordPageListReply) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *GetBeanChangeRecordPageListReply) GetData() []*BeanChangeRecordReport {
	if m != nil {
		return m.Data
	}
	return nil
}

// 金币/房卡赠送记录
type GiveAwayRecordReport struct {
	// 我的uuid
	PlayerUUID string `protobuf:"bytes,1,opt,name=playerUUID,proto3" json:"playerUUID,omitempty"`
	// 我的shortId
	PlayerShortID string `protobuf:"bytes,2,opt,name=playerShortID,proto3" json:"playerShortID,omitempty"`
	// 我的头像
	PlayerHeadImgUrl string `protobuf:"bytes,3,opt,name=playerHeadImgUrl,proto3" json:"playerHeadImgUrl,omitempty"`
	// 我的性别
	PlayerSex int32 `protobuf:"varint,4,opt,name=playerSex,proto3" json:"playerSex,omitempty"`
	// 我的名字
	PlayerName string `protobuf:"bytes,5,opt,name=playerName,proto3" json:"playerName,omitempty"`
	// 另外方uuid
	DestPlayerUUID string `protobuf:"bytes,6,opt,name=destPlayerUUID,proto3" json:"destPlayerUUID,omitempty"`
	// 另外方shortId
	DestPlayerShortID string `protobuf:"bytes,7,opt,name=destPlayerShortID,proto3" json:"destPlayerShortID,omitempty"`
	// 另外方头像
	DestPlayerHeadImgUrl string `protobuf:"bytes,8,opt,name=destPlayerHeadImgUrl,proto3" json:"destPlayerHeadImgUrl,omitempty"`
	// 另外方性别
	DestPlayerSex int32 `protobuf:"varint,9,opt,name=destPlayerSex,proto3" json:"destPlayerSex,omitempty"`
	// 另外方名字
	DestPlayerName string `protobuf:"bytes,10,opt,name=destPlayerName,proto3" json:"destPlayerName,omitempty"`
	// 赠送时间
	ChangeTime int64 `protobuf:"varint,11,opt,name=changeTime,proto3" json:"changeTime,omitempty"`
	// 赠送金额
	ChangeData int64 `protobuf:"varint,12,opt,name=changeData,proto3" json:"changeData,omitempty"`
	// 变动前余额 - 赠送者
	BeforeData int64 `protobuf:"varint,13,opt,name=beforeData,proto3" json:"beforeData,omitempty"`
	// 变动后余额 - 赠送者
	FinalData int64 `protobuf:"varint,14,opt,name=finalData,proto3" json:"finalData,omitempty"`
	// 赠送ID
	GiveID string `protobuf:"bytes,15,opt,name=giveID,proto3" json:"giveID,omitempty"`
	// 自增ID
	AutoId int64 `protobuf:"varint,16,opt,name=autoId,proto3" json:"autoId,omitempty"`
	// 我的身份
	PlayerIdentity AgentSubIdentity `protobuf:"varint,17,opt,name=playerIdentity,proto3,enum=AgentSubIdentity" json:"playerIdentity,omitempty"`
	// 另外方的身份
	DestPlayerIdentity AgentSubIdentity `protobuf:"varint,18,opt,name=destPlayerIdentity,proto3,enum=AgentSubIdentity" json:"destPlayerIdentity,omitempty"`
	// 赠送的原因
	GiveAwayReason       ResourceChangeReason `protobuf:"varint,19,opt,name=giveAwayReason,proto3,enum=ResourceChangeReason" json:"giveAwayReason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GiveAwayRecordReport) Reset()         { *m = GiveAwayRecordReport{} }
func (m *GiveAwayRecordReport) String() string { return proto.CompactTextString(m) }
func (*GiveAwayRecordReport) ProtoMessage()    {}
func (*GiveAwayRecordReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{601}
}

func (m *GiveAwayRecordReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GiveAwayRecordReport.Unmarshal(m, b)
}
func (m *GiveAwayRecordReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GiveAwayRecordReport.Marshal(b, m, deterministic)
}
func (m *GiveAwayRecordReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GiveAwayRecordReport.Merge(m, src)
}
func (m *GiveAwayRecordReport) XXX_Size() int {
	return xxx_messageInfo_GiveAwayRecordReport.Size(m)
}
func (m *GiveAwayRecordReport) XXX_DiscardUnknown() {
	xxx_messageInfo_GiveAwayRecordReport.DiscardUnknown(m)
}

var xxx_messageInfo_GiveAwayRecordReport proto.InternalMessageInfo

func (m *GiveAwayRecordReport) GetPlayerUUID() string {
	if m != nil {
		return m.PlayerUUID
	}
	return ""
}

func (m *GiveAwayRecordReport) GetPlayerShortID() string {
	if m != nil {
		return m.PlayerShortID
	}
	return ""
}

func (m *GiveAwayRecordReport) GetPlayerHeadImgUrl() string {
	if m != nil {
		return m.PlayerHeadImgUrl
	}
	return ""
}

func (m *GiveAwayRecordReport) GetPlayerSex() int32 {
	if m != nil {
		return m.PlayerSex
	}
	return 0
}

func (m *GiveAwayRecordReport) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *GiveAwayRecordReport) GetDestPlayerUUID() string {
	if m != nil {
		return m.DestPlayerUUID
	}
	return ""
}

func (m *GiveAwayRecordReport) GetDestPlayerShortID() string {
	if m != nil {
		return m.DestPlayerShortID
	}
	return ""
}

func (m *GiveAwayRecordReport) GetDestPlayerHeadImgUrl() string {
	if m != nil {
		return m.DestPlayerHeadImgUrl
	}
	return ""
}

func (m *GiveAwayRecordReport) GetDestPlayerSex() int32 {
	if m != nil {
		return m.DestPlayerSex
	}
	return 0
}

func (m *GiveAwayRecordReport) GetDestPlayerName() string {
	if m != nil {
		return m.DestPlayerName
	}
	return ""
}

func (m *GiveAwayRecordReport) GetChangeTime() int64 {
	if m != nil {
		return m.ChangeTime
	}
	return 0
}

func (m *GiveAwayRecordReport) GetChangeData() int64 {
	if m != nil {
		return m.ChangeData
	}
	return 0
}

func (m *GiveAwayRecordReport) GetBeforeData() int64 {
	if m != nil {
		return m.BeforeData
	}
	return 0
}

func (m *GiveAwayRecordReport) GetFinalData() int64 {
	if m != nil {
		return m.FinalData
	}
	return 0
}

func (m *GiveAwayRecordReport) GetGiveID() string {
	if m != nil {
		return m.GiveID
	}
	return ""
}

func (m *GiveAwayRecordReport) GetAutoId() int64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *GiveAwayRecordReport) GetPlayerIdentity() AgentSubIdentity {
	if m != nil {
		return m.PlayerIdentity
	}
	return AgentSubIdentity_AgentSubIdentity_Agent
}

func (m *GiveAwayRecordReport) GetDestPlayerIdentity() AgentSubIdentity {
	if m != nil {
		return m.DestPlayerIdentity
	}
	return AgentSubIdentity_AgentSubIdentity_Agent
}

func (m *GiveAwayRecordReport) GetGiveAwayReason() ResourceChangeReason {
	if m != nil {
		return m.GiveAwayReason
	}
	return ResourceChangeReason_ReasonNone
}

//获取分表请求
type GetSplitTablesRequest struct {
	StartTimestamp       int64    `protobuf:"varint,1,opt,name=startTimestamp,proto3" json:"startTimestamp,omitempty"`
	EndTimestamp         int64    `protobuf:"varint,2,opt,name=endTimestamp,proto3" json:"endTimestamp,omitempty"`
	TableName            string   `protobuf:"bytes,3,opt,name=tableName,proto3" json:"tableName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSplitTablesRequest) Reset()         { *m = GetSplitTablesRequest{} }
func (m *GetSplitTablesRequest) String() string { return proto.CompactTextString(m) }
func (*GetSplitTablesRequest) ProtoMessage()    {}
func (*GetSplitTablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{602}
}

func (m *GetSplitTablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSplitTablesRequest.Unmarshal(m, b)
}
func (m *GetSplitTablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSplitTablesRequest.Marshal(b, m, deterministic)
}
func (m *GetSplitTablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSplitTablesRequest.Merge(m, src)
}
func (m *GetSplitTablesRequest) XXX_Size() int {
	return xxx_messageInfo_GetSplitTablesRequest.Size(m)
}
func (m *GetSplitTablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSplitTablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSplitTablesRequest proto.InternalMessageInfo

func (m *GetSplitTablesRequest) GetStartTimestamp() int64 {
	if m != nil {
		return m.StartTimestamp
	}
	return 0
}

func (m *GetSplitTablesRequest) GetEndTimestamp() int64 {
	if m != nil {
		return m.EndTimestamp
	}
	return 0
}

func (m *GetSplitTablesRequest) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

///获取分表回复
type GetSplitTablesReply struct {
	TableNames           []string `protobuf:"bytes,1,rep,name=tableNames,proto3" json:"tableNames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSplitTablesReply) Reset()         { *m = GetSplitTablesReply{} }
func (m *GetSplitTablesReply) String() string { return proto.CompactTextString(m) }
func (*GetSplitTablesReply) ProtoMessage()    {}
func (*GetSplitTablesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{603}
}

func (m *GetSplitTablesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSplitTablesReply.Unmarshal(m, b)
}
func (m *GetSplitTablesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSplitTablesReply.Marshal(b, m, deterministic)
}
func (m *GetSplitTablesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSplitTablesReply.Merge(m, src)
}
func (m *GetSplitTablesReply) XXX_Size() int {
	return xxx_messageInfo_GetSplitTablesReply.Size(m)
}
func (m *GetSplitTablesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSplitTablesReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetSplitTablesReply proto.InternalMessageInfo

func (m *GetSplitTablesReply) GetTableNames() []string {
	if m != nil {
		return m.TableNames
	}
	return nil
}

//获取游戏记录分页列表
type GetGameRecordPageListRequest struct {
	// 查询的页数
	PageIndex int32 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	// 每页的大小
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	// 开始记录的时间
	Start int64 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	// 结算记录的时间
	End     int64  `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	Account string `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	ShortId string `protobuf:"bytes,6,opt,name=shortId,proto3" json:"shortId,omitempty"`
	// 游戏类型
	GameType GameType `protobuf:"varint,7,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	//游戏模式
	GameMode GameMode `protobuf:"varint,8,opt,name=gameMode,proto3,enum=GameMode" json:"gameMode,omitempty"`
	// 房间类型
	RoomType             RoomType `protobuf:"varint,9,opt,name=roomType,proto3,enum=RoomType" json:"roomType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGameRecordPageListRequest) Reset()         { *m = GetGameRecordPageListRequest{} }
func (m *GetGameRecordPageListRequest) String() string { return proto.CompactTextString(m) }
func (*GetGameRecordPageListRequest) ProtoMessage()    {}
func (*GetGameRecordPageListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{604}
}

func (m *GetGameRecordPageListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGameRecordPageListRequest.Unmarshal(m, b)
}
func (m *GetGameRecordPageListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGameRecordPageListRequest.Marshal(b, m, deterministic)
}
func (m *GetGameRecordPageListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGameRecordPageListRequest.Merge(m, src)
}
func (m *GetGameRecordPageListRequest) XXX_Size() int {
	return xxx_messageInfo_GetGameRecordPageListRequest.Size(m)
}
func (m *GetGameRecordPageListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGameRecordPageListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGameRecordPageListRequest proto.InternalMessageInfo

func (m *GetGameRecordPageListRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetGameRecordPageListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetGameRecordPageListRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetGameRecordPageListRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetGameRecordPageListRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *GetGameRecordPageListRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *GetGameRecordPageListRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GetGameRecordPageListRequest) GetGameMode() GameMode {
	if m != nil {
		return m.GameMode
	}
	return GameMode_GameMode_None
}

func (m *GetGameRecordPageListRequest) GetRoomType() RoomType {
	if m != nil {
		return m.RoomType
	}
	return RoomType_RoomType_None
}

//获取游戏记录分页列表回复
type GetGameRecordPageListReply struct {
	PageIndex   int32 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize    int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RecordCount int32 `protobuf:"varint,3,opt,name=recordCount,proto3" json:"recordCount,omitempty"`
	// 游戏类型
	GameType GameType `protobuf:"varint,4,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	//游戏模式
	GameMode GameMode `protobuf:"varint,5,opt,name=gameMode,proto3,enum=GameMode" json:"gameMode,omitempty"`
	// 房间类型
	RoomType             RoomType            `protobuf:"varint,6,opt,name=roomType,proto3,enum=RoomType" json:"roomType,omitempty"`
	Data                 []*GameRecordReport `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetGameRecordPageListReply) Reset()         { *m = GetGameRecordPageListReply{} }
func (m *GetGameRecordPageListReply) String() string { return proto.CompactTextString(m) }
func (*GetGameRecordPageListReply) ProtoMessage()    {}
func (*GetGameRecordPageListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{605}
}

func (m *GetGameRecordPageListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGameRecordPageListReply.Unmarshal(m, b)
}
func (m *GetGameRecordPageListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGameRecordPageListReply.Marshal(b, m, deterministic)
}
func (m *GetGameRecordPageListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGameRecordPageListReply.Merge(m, src)
}
func (m *GetGameRecordPageListReply) XXX_Size() int {
	return xxx_messageInfo_GetGameRecordPageListReply.Size(m)
}
func (m *GetGameRecordPageListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGameRecordPageListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetGameRecordPageListReply proto.InternalMessageInfo

func (m *GetGameRecordPageListReply) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetGameRecordPageListReply) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetGameRecordPageListReply) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *GetGameRecordPageListReply) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GetGameRecordPageListReply) GetGameMode() GameMode {
	if m != nil {
		return m.GameMode
	}
	return GameMode_GameMode_None
}

func (m *GetGameRecordPageListReply) GetRoomType() RoomType {
	if m != nil {
		return m.RoomType
	}
	return RoomType_RoomType_None
}

func (m *GetGameRecordPageListReply) GetData() []*GameRecordReport {
	if m != nil {
		return m.Data
	}
	return nil
}

//获取金额变动记录分页列表
type GetBalanceChangeRecordPageListRequest struct {
	PageIndex            int32                  `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Start                int64                  `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64                  `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	Account              string                 `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	ShortId              string                 `protobuf:"bytes,6,opt,name=shortId,proto3" json:"shortId,omitempty"`
	ChangeReason         ResourceChangeReason   `protobuf:"varint,7,opt,name=changeReason,proto3,enum=ResourceChangeReason" json:"changeReason,omitempty"`
	Reasons              []ResourceChangeReason `protobuf:"varint,8,rep,packed,name=reasons,proto3,enum=ResourceChangeReason" json:"reasons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetBalanceChangeRecordPageListRequest) Reset()         { *m = GetBalanceChangeRecordPageListRequest{} }
func (m *GetBalanceChangeRecordPageListRequest) String() string { return proto.CompactTextString(m) }
func (*GetBalanceChangeRecordPageListRequest) ProtoMessage()    {}
func (*GetBalanceChangeRecordPageListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{606}
}

func (m *GetBalanceChangeRecordPageListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalanceChangeRecordPageListRequest.Unmarshal(m, b)
}
func (m *GetBalanceChangeRecordPageListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalanceChangeRecordPageListRequest.Marshal(b, m, deterministic)
}
func (m *GetBalanceChangeRecordPageListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceChangeRecordPageListRequest.Merge(m, src)
}
func (m *GetBalanceChangeRecordPageListRequest) XXX_Size() int {
	return xxx_messageInfo_GetBalanceChangeRecordPageListRequest.Size(m)
}
func (m *GetBalanceChangeRecordPageListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceChangeRecordPageListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceChangeRecordPageListRequest proto.InternalMessageInfo

func (m *GetBalanceChangeRecordPageListRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetBalanceChangeRecordPageListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetBalanceChangeRecordPageListRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetBalanceChangeRecordPageListRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetBalanceChangeRecordPageListRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *GetBalanceChangeRecordPageListRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *GetBalanceChangeRecordPageListRequest) GetChangeReason() ResourceChangeReason {
	if m != nil {
		return m.ChangeReason
	}
	return ResourceChangeReason_ReasonNone
}

func (m *GetBalanceChangeRecordPageListRequest) GetReasons() []ResourceChangeReason {
	if m != nil {
		return m.Reasons
	}
	return nil
}

//获取账号分页列表回复
type GetBalanceChangeRecordPageListReply struct {
	PageIndex            int32                        `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32                        `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RecordCount          int32                        `protobuf:"varint,3,opt,name=recordCount,proto3" json:"recordCount,omitempty"`
	Data                 []*BalanceChangeRecordReport `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *GetBalanceChangeRecordPageListReply) Reset()         { *m = GetBalanceChangeRecordPageListReply{} }
func (m *GetBalanceChangeRecordPageListReply) String() string { return proto.CompactTextString(m) }
func (*GetBalanceChangeRecordPageListReply) ProtoMessage()    {}
func (*GetBalanceChangeRecordPageListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{607}
}

func (m *GetBalanceChangeRecordPageListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalanceChangeRecordPageListReply.Unmarshal(m, b)
}
func (m *GetBalanceChangeRecordPageListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalanceChangeRecordPageListReply.Marshal(b, m, deterministic)
}
func (m *GetBalanceChangeRecordPageListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceChangeRecordPageListReply.Merge(m, src)
}
func (m *GetBalanceChangeRecordPageListReply) XXX_Size() int {
	return xxx_messageInfo_GetBalanceChangeRecordPageListReply.Size(m)
}
func (m *GetBalanceChangeRecordPageListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceChangeRecordPageListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceChangeRecordPageListReply proto.InternalMessageInfo

func (m *GetBalanceChangeRecordPageListReply) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetBalanceChangeRecordPageListReply) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetBalanceChangeRecordPageListReply) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *GetBalanceChangeRecordPageListReply) GetData() []*BalanceChangeRecordReport {
	if m != nil {
		return m.Data
	}
	return nil
}

//获取业绩变动记录分页列表
type GetAchievementChangeRecordPageListRequest struct {
	PageIndex    int32                `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize     int32                `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Start        int64                `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End          int64                `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	Account      string               `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	ShortId      string               `protobuf:"bytes,6,opt,name=shortId,proto3" json:"shortId,omitempty"`
	ChangeReason ResourceChangeReason `protobuf:"varint,7,opt,name=changeReason,proto3,enum=ResourceChangeReason" json:"changeReason,omitempty"`
	//佣金类型
	AchievementType AchievementType `protobuf:"varint,8,opt,name=achievementType,proto3,enum=AchievementType" json:"achievementType,omitempty"`
	//请求id，回复同一id
	RequestId            string   `protobuf:"bytes,9,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAchievementChangeRecordPageListRequest) Reset() {
	*m = GetAchievementChangeRecordPageListRequest{}
}
func (m *GetAchievementChangeRecordPageListRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GetAchievementChangeRecordPageListRequest) ProtoMessage() {}
func (*GetAchievementChangeRecordPageListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{608}
}

func (m *GetAchievementChangeRecordPageListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAchievementChangeRecordPageListRequest.Unmarshal(m, b)
}
func (m *GetAchievementChangeRecordPageListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAchievementChangeRecordPageListRequest.Marshal(b, m, deterministic)
}
func (m *GetAchievementChangeRecordPageListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAchievementChangeRecordPageListRequest.Merge(m, src)
}
func (m *GetAchievementChangeRecordPageListRequest) XXX_Size() int {
	return xxx_messageInfo_GetAchievementChangeRecordPageListRequest.Size(m)
}
func (m *GetAchievementChangeRecordPageListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAchievementChangeRecordPageListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAchievementChangeRecordPageListRequest proto.InternalMessageInfo

func (m *GetAchievementChangeRecordPageListRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetAchievementChangeRecordPageListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetAchievementChangeRecordPageListRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetAchievementChangeRecordPageListRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetAchievementChangeRecordPageListRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *GetAchievementChangeRecordPageListRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *GetAchievementChangeRecordPageListRequest) GetChangeReason() ResourceChangeReason {
	if m != nil {
		return m.ChangeReason
	}
	return ResourceChangeReason_ReasonNone
}

func (m *GetAchievementChangeRecordPageListRequest) GetAchievementType() AchievementType {
	if m != nil {
		return m.AchievementType
	}
	return AchievementType_AchievementType_None
}

func (m *GetAchievementChangeRecordPageListRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

//获取业绩变动记录列表回复
type GetAchievementChangeRecordPageListReply struct {
	PageIndex   int32                            `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize    int32                            `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RecordCount int32                            `protobuf:"varint,3,opt,name=recordCount,proto3" json:"recordCount,omitempty"`
	Data        []*AchievementChangeRecordReport `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	//请求id，回复同一id
	RequestId            string   `protobuf:"bytes,5,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAchievementChangeRecordPageListReply) Reset() {
	*m = GetAchievementChangeRecordPageListReply{}
}
func (m *GetAchievementChangeRecordPageListReply) String() string { return proto.CompactTextString(m) }
func (*GetAchievementChangeRecordPageListReply) ProtoMessage()    {}
func (*GetAchievementChangeRecordPageListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{609}
}

func (m *GetAchievementChangeRecordPageListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAchievementChangeRecordPageListReply.Unmarshal(m, b)
}
func (m *GetAchievementChangeRecordPageListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAchievementChangeRecordPageListReply.Marshal(b, m, deterministic)
}
func (m *GetAchievementChangeRecordPageListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAchievementChangeRecordPageListReply.Merge(m, src)
}
func (m *GetAchievementChangeRecordPageListReply) XXX_Size() int {
	return xxx_messageInfo_GetAchievementChangeRecordPageListReply.Size(m)
}
func (m *GetAchievementChangeRecordPageListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAchievementChangeRecordPageListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAchievementChangeRecordPageListReply proto.InternalMessageInfo

func (m *GetAchievementChangeRecordPageListReply) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetAchievementChangeRecordPageListReply) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetAchievementChangeRecordPageListReply) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *GetAchievementChangeRecordPageListReply) GetData() []*AchievementChangeRecordReport {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetAchievementChangeRecordPageListReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

//获取业绩变动记录分页列表
type GetGetCommissionRecordPageListRequest struct {
	PageIndex            int32             `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32             `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Start                int64             `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64             `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	Account              string            `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	ShortId              string            `protobuf:"bytes,6,opt,name=shortId,proto3" json:"shortId,omitempty"`
	Type                 GetCommissionType `protobuf:"varint,7,opt,name=type,proto3,enum=GetCommissionType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetGetCommissionRecordPageListRequest) Reset()         { *m = GetGetCommissionRecordPageListRequest{} }
func (m *GetGetCommissionRecordPageListRequest) String() string { return proto.CompactTextString(m) }
func (*GetGetCommissionRecordPageListRequest) ProtoMessage()    {}
func (*GetGetCommissionRecordPageListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{610}
}

func (m *GetGetCommissionRecordPageListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGetCommissionRecordPageListRequest.Unmarshal(m, b)
}
func (m *GetGetCommissionRecordPageListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGetCommissionRecordPageListRequest.Marshal(b, m, deterministic)
}
func (m *GetGetCommissionRecordPageListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGetCommissionRecordPageListRequest.Merge(m, src)
}
func (m *GetGetCommissionRecordPageListRequest) XXX_Size() int {
	return xxx_messageInfo_GetGetCommissionRecordPageListRequest.Size(m)
}
func (m *GetGetCommissionRecordPageListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGetCommissionRecordPageListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGetCommissionRecordPageListRequest proto.InternalMessageInfo

func (m *GetGetCommissionRecordPageListRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetGetCommissionRecordPageListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetGetCommissionRecordPageListRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetGetCommissionRecordPageListRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetGetCommissionRecordPageListRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *GetGetCommissionRecordPageListRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *GetGetCommissionRecordPageListRequest) GetType() GetCommissionType {
	if m != nil {
		return m.Type
	}
	return GetCommissionType_GetCommissionType_None
}

//获取房卡消耗汇总
type GetRoomCardConsumptionTotalByChangeRecordRequest struct {
	Start                int64                  `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64                  `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	Account              string                 `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	ShortId              string                 `protobuf:"bytes,4,opt,name=shortId,proto3" json:"shortId,omitempty"`
	RequestId            string                 `protobuf:"bytes,5,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Reasons              []ResourceChangeReason `protobuf:"varint,6,rep,packed,name=reasons,proto3,enum=ResourceChangeReason" json:"reasons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetRoomCardConsumptionTotalByChangeRecordRequest) Reset() {
	*m = GetRoomCardConsumptionTotalByChangeRecordRequest{}
}
func (m *GetRoomCardConsumptionTotalByChangeRecordRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GetRoomCardConsumptionTotalByChangeRecordRequest) ProtoMessage() {}
func (*GetRoomCardConsumptionTotalByChangeRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{611}
}

func (m *GetRoomCardConsumptionTotalByChangeRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomCardConsumptionTotalByChangeRecordRequest.Unmarshal(m, b)
}
func (m *GetRoomCardConsumptionTotalByChangeRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomCardConsumptionTotalByChangeRecordRequest.Marshal(b, m, deterministic)
}
func (m *GetRoomCardConsumptionTotalByChangeRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomCardConsumptionTotalByChangeRecordRequest.Merge(m, src)
}
func (m *GetRoomCardConsumptionTotalByChangeRecordRequest) XXX_Size() int {
	return xxx_messageInfo_GetRoomCardConsumptionTotalByChangeRecordRequest.Size(m)
}
func (m *GetRoomCardConsumptionTotalByChangeRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomCardConsumptionTotalByChangeRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomCardConsumptionTotalByChangeRecordRequest proto.InternalMessageInfo

func (m *GetRoomCardConsumptionTotalByChangeRecordRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetRoomCardConsumptionTotalByChangeRecordRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetRoomCardConsumptionTotalByChangeRecordRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *GetRoomCardConsumptionTotalByChangeRecordRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *GetRoomCardConsumptionTotalByChangeRecordRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *GetRoomCardConsumptionTotalByChangeRecordRequest) GetReasons() []ResourceChangeReason {
	if m != nil {
		return m.Reasons
	}
	return nil
}

//获取房卡消耗汇总
type GetRoomCardConsumptionTotalByChangeRecordReply struct {
	RequestId            string   `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Total                int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoomCardConsumptionTotalByChangeRecordReply) Reset() {
	*m = GetRoomCardConsumptionTotalByChangeRecordReply{}
}
func (m *GetRoomCardConsumptionTotalByChangeRecordReply) String() string {
	return proto.CompactTextString(m)
}
func (*GetRoomCardConsumptionTotalByChangeRecordReply) ProtoMessage() {}
func (*GetRoomCardConsumptionTotalByChangeRecordReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{612}
}

func (m *GetRoomCardConsumptionTotalByChangeRecordReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomCardConsumptionTotalByChangeRecordReply.Unmarshal(m, b)
}
func (m *GetRoomCardConsumptionTotalByChangeRecordReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomCardConsumptionTotalByChangeRecordReply.Marshal(b, m, deterministic)
}
func (m *GetRoomCardConsumptionTotalByChangeRecordReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomCardConsumptionTotalByChangeRecordReply.Merge(m, src)
}
func (m *GetRoomCardConsumptionTotalByChangeRecordReply) XXX_Size() int {
	return xxx_messageInfo_GetRoomCardConsumptionTotalByChangeRecordReply.Size(m)
}
func (m *GetRoomCardConsumptionTotalByChangeRecordReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomCardConsumptionTotalByChangeRecordReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomCardConsumptionTotalByChangeRecordReply proto.InternalMessageInfo

func (m *GetRoomCardConsumptionTotalByChangeRecordReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *GetRoomCardConsumptionTotalByChangeRecordReply) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

//获取夏季房卡消耗汇总列表（统计昨天和今天）
type GetRoomCardConsumptionByChangeRecordRequest struct {
	Account              string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	ShortId              string                 `protobuf:"bytes,2,opt,name=shortId,proto3" json:"shortId,omitempty"`
	RequestId            string                 `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Reasons              []ResourceChangeReason `protobuf:"varint,4,rep,packed,name=reasons,proto3,enum=ResourceChangeReason" json:"reasons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetRoomCardConsumptionByChangeRecordRequest) Reset() {
	*m = GetRoomCardConsumptionByChangeRecordRequest{}
}
func (m *GetRoomCardConsumptionByChangeRecordRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GetRoomCardConsumptionByChangeRecordRequest) ProtoMessage() {}
func (*GetRoomCardConsumptionByChangeRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{613}
}

func (m *GetRoomCardConsumptionByChangeRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomCardConsumptionByChangeRecordRequest.Unmarshal(m, b)
}
func (m *GetRoomCardConsumptionByChangeRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomCardConsumptionByChangeRecordRequest.Marshal(b, m, deterministic)
}
func (m *GetRoomCardConsumptionByChangeRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomCardConsumptionByChangeRecordRequest.Merge(m, src)
}
func (m *GetRoomCardConsumptionByChangeRecordRequest) XXX_Size() int {
	return xxx_messageInfo_GetRoomCardConsumptionByChangeRecordRequest.Size(m)
}
func (m *GetRoomCardConsumptionByChangeRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomCardConsumptionByChangeRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomCardConsumptionByChangeRecordRequest proto.InternalMessageInfo

func (m *GetRoomCardConsumptionByChangeRecordRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *GetRoomCardConsumptionByChangeRecordRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *GetRoomCardConsumptionByChangeRecordRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *GetRoomCardConsumptionByChangeRecordRequest) GetReasons() []ResourceChangeReason {
	if m != nil {
		return m.Reasons
	}
	return nil
}

//获取夏季房卡消耗汇总列表（统计昨天和今天）
type GetRoomCardConsumptionByChangeRecordReply struct {
	RequestId            string                                      `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Data                 []*GetRoomCardConsumptionByChangeRecordItem `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *GetRoomCardConsumptionByChangeRecordReply) Reset() {
	*m = GetRoomCardConsumptionByChangeRecordReply{}
}
func (m *GetRoomCardConsumptionByChangeRecordReply) String() string {
	return proto.CompactTextString(m)
}
func (*GetRoomCardConsumptionByChangeRecordReply) ProtoMessage() {}
func (*GetRoomCardConsumptionByChangeRecordReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{614}
}

func (m *GetRoomCardConsumptionByChangeRecordReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomCardConsumptionByChangeRecordReply.Unmarshal(m, b)
}
func (m *GetRoomCardConsumptionByChangeRecordReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomCardConsumptionByChangeRecordReply.Marshal(b, m, deterministic)
}
func (m *GetRoomCardConsumptionByChangeRecordReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomCardConsumptionByChangeRecordReply.Merge(m, src)
}
func (m *GetRoomCardConsumptionByChangeRecordReply) XXX_Size() int {
	return xxx_messageInfo_GetRoomCardConsumptionByChangeRecordReply.Size(m)
}
func (m *GetRoomCardConsumptionByChangeRecordReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomCardConsumptionByChangeRecordReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomCardConsumptionByChangeRecordReply proto.InternalMessageInfo

func (m *GetRoomCardConsumptionByChangeRecordReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *GetRoomCardConsumptionByChangeRecordReply) GetData() []*GetRoomCardConsumptionByChangeRecordItem {
	if m != nil {
		return m.Data
	}
	return nil
}

// 获取平台收益
type GetPlatProfitRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlatProfitRequest) Reset()         { *m = GetPlatProfitRequest{} }
func (m *GetPlatProfitRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlatProfitRequest) ProtoMessage()    {}
func (*GetPlatProfitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{615}
}

func (m *GetPlatProfitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlatProfitRequest.Unmarshal(m, b)
}
func (m *GetPlatProfitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlatProfitRequest.Marshal(b, m, deterministic)
}
func (m *GetPlatProfitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlatProfitRequest.Merge(m, src)
}
func (m *GetPlatProfitRequest) XXX_Size() int {
	return xxx_messageInfo_GetPlatProfitRequest.Size(m)
}
func (m *GetPlatProfitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlatProfitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlatProfitRequest proto.InternalMessageInfo

// 获取平台收益
type GetPlatProfitReply struct {
	PlatProfit int64 `protobuf:"varint,1,opt,name=platProfit,proto3" json:"platProfit,omitempty"`
	//玩家总余额
	MemberBalance int64 `protobuf:"varint,2,opt,name=memberBalance,proto3" json:"memberBalance,omitempty"`
	//平台总抽水
	Commission int64 `protobuf:"varint,3,opt,name=commission,proto3" json:"commission,omitempty"`
	//系统奖池
	PlatJackpot int64 `protobuf:"varint,4,opt,name=platJackpot,proto3" json:"platJackpot,omitempty"`
	//游戏奖池
	GameJackpot int64 `protobuf:"varint,5,opt,name=gameJackpot,proto3" json:"gameJackpot,omitempty"`
	//玩家奖池
	PlayerJackpot int64 `protobuf:"varint,6,opt,name=playerJackpot,proto3" json:"playerJackpot,omitempty"`
	//上分金额
	UpScore int64 `protobuf:"varint,7,opt,name=upScore,proto3" json:"upScore,omitempty"`
	//下分金额
	LowScore             int64    `protobuf:"varint,8,opt,name=lowScore,proto3" json:"lowScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlatProfitReply) Reset()         { *m = GetPlatProfitReply{} }
func (m *GetPlatProfitReply) String() string { return proto.CompactTextString(m) }
func (*GetPlatProfitReply) ProtoMessage()    {}
func (*GetPlatProfitReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{616}
}

func (m *GetPlatProfitReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlatProfitReply.Unmarshal(m, b)
}
func (m *GetPlatProfitReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlatProfitReply.Marshal(b, m, deterministic)
}
func (m *GetPlatProfitReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlatProfitReply.Merge(m, src)
}
func (m *GetPlatProfitReply) XXX_Size() int {
	return xxx_messageInfo_GetPlatProfitReply.Size(m)
}
func (m *GetPlatProfitReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlatProfitReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlatProfitReply proto.InternalMessageInfo

func (m *GetPlatProfitReply) GetPlatProfit() int64 {
	if m != nil {
		return m.PlatProfit
	}
	return 0
}

func (m *GetPlatProfitReply) GetMemberBalance() int64 {
	if m != nil {
		return m.MemberBalance
	}
	return 0
}

func (m *GetPlatProfitReply) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *GetPlatProfitReply) GetPlatJackpot() int64 {
	if m != nil {
		return m.PlatJackpot
	}
	return 0
}

func (m *GetPlatProfitReply) GetGameJackpot() int64 {
	if m != nil {
		return m.GameJackpot
	}
	return 0
}

func (m *GetPlatProfitReply) GetPlayerJackpot() int64 {
	if m != nil {
		return m.PlayerJackpot
	}
	return 0
}

func (m *GetPlatProfitReply) GetUpScore() int64 {
	if m != nil {
		return m.UpScore
	}
	return 0
}

func (m *GetPlatProfitReply) GetLowScore() int64 {
	if m != nil {
		return m.LowScore
	}
	return 0
}

type GetRoomCardConsumptionByChangeRecordItem struct {
	Today                int64    `protobuf:"varint,1,opt,name=today,proto3" json:"today,omitempty"`
	Yesterday            int64    `protobuf:"varint,2,opt,name=yesterday,proto3" json:"yesterday,omitempty"`
	PlayerUUID           string   `protobuf:"bytes,3,opt,name=playerUUID,proto3" json:"playerUUID,omitempty"`
	PlayerShortId        string   `protobuf:"bytes,4,opt,name=playerShortId,proto3" json:"playerShortId,omitempty"`
	PlayerAccount        string   `protobuf:"bytes,5,opt,name=playerAccount,proto3" json:"playerAccount,omitempty"`
	PlayerName           string   `protobuf:"bytes,6,opt,name=playerName,proto3" json:"playerName,omitempty"`
	PlayerHeadImgUrl     string   `protobuf:"bytes,7,opt,name=playerHeadImgUrl,proto3" json:"playerHeadImgUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoomCardConsumptionByChangeRecordItem) Reset() {
	*m = GetRoomCardConsumptionByChangeRecordItem{}
}
func (m *GetRoomCardConsumptionByChangeRecordItem) String() string { return proto.CompactTextString(m) }
func (*GetRoomCardConsumptionByChangeRecordItem) ProtoMessage()    {}
func (*GetRoomCardConsumptionByChangeRecordItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{617}
}

func (m *GetRoomCardConsumptionByChangeRecordItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomCardConsumptionByChangeRecordItem.Unmarshal(m, b)
}
func (m *GetRoomCardConsumptionByChangeRecordItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomCardConsumptionByChangeRecordItem.Marshal(b, m, deterministic)
}
func (m *GetRoomCardConsumptionByChangeRecordItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomCardConsumptionByChangeRecordItem.Merge(m, src)
}
func (m *GetRoomCardConsumptionByChangeRecordItem) XXX_Size() int {
	return xxx_messageInfo_GetRoomCardConsumptionByChangeRecordItem.Size(m)
}
func (m *GetRoomCardConsumptionByChangeRecordItem) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomCardConsumptionByChangeRecordItem.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomCardConsumptionByChangeRecordItem proto.InternalMessageInfo

func (m *GetRoomCardConsumptionByChangeRecordItem) GetToday() int64 {
	if m != nil {
		return m.Today
	}
	return 0
}

func (m *GetRoomCardConsumptionByChangeRecordItem) GetYesterday() int64 {
	if m != nil {
		return m.Yesterday
	}
	return 0
}

func (m *GetRoomCardConsumptionByChangeRecordItem) GetPlayerUUID() string {
	if m != nil {
		return m.PlayerUUID
	}
	return ""
}

func (m *GetRoomCardConsumptionByChangeRecordItem) GetPlayerShortId() string {
	if m != nil {
		return m.PlayerShortId
	}
	return ""
}

func (m *GetRoomCardConsumptionByChangeRecordItem) GetPlayerAccount() string {
	if m != nil {
		return m.PlayerAccount
	}
	return ""
}

func (m *GetRoomCardConsumptionByChangeRecordItem) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *GetRoomCardConsumptionByChangeRecordItem) GetPlayerHeadImgUrl() string {
	if m != nil {
		return m.PlayerHeadImgUrl
	}
	return ""
}

//获取房卡变动记录
type GetRoomCardChangeRecordRequest struct {
	PageIndex            int32                  `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Start                int64                  `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64                  `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	ShortId              string                 `protobuf:"bytes,5,opt,name=shortId,proto3" json:"shortId,omitempty"`
	Account              string                 `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`
	Reasons              []ResourceChangeReason `protobuf:"varint,7,rep,packed,name=reasons,proto3,enum=ResourceChangeReason" json:"reasons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetRoomCardChangeRecordRequest) Reset()         { *m = GetRoomCardChangeRecordRequest{} }
func (m *GetRoomCardChangeRecordRequest) String() string { return proto.CompactTextString(m) }
func (*GetRoomCardChangeRecordRequest) ProtoMessage()    {}
func (*GetRoomCardChangeRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{618}
}

func (m *GetRoomCardChangeRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomCardChangeRecordRequest.Unmarshal(m, b)
}
func (m *GetRoomCardChangeRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomCardChangeRecordRequest.Marshal(b, m, deterministic)
}
func (m *GetRoomCardChangeRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomCardChangeRecordRequest.Merge(m, src)
}
func (m *GetRoomCardChangeRecordRequest) XXX_Size() int {
	return xxx_messageInfo_GetRoomCardChangeRecordRequest.Size(m)
}
func (m *GetRoomCardChangeRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomCardChangeRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomCardChangeRecordRequest proto.InternalMessageInfo

func (m *GetRoomCardChangeRecordRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetRoomCardChangeRecordRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetRoomCardChangeRecordRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetRoomCardChangeRecordRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetRoomCardChangeRecordRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *GetRoomCardChangeRecordRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *GetRoomCardChangeRecordRequest) GetReasons() []ResourceChangeReason {
	if m != nil {
		return m.Reasons
	}
	return nil
}

//获取房卡变动记录
type GetRoomCardChangeRecordReply struct {
	// 获取页数
	PageIndex int32 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	// 每页大小
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	// 多少条数据
	RecordCount int32 `protobuf:"varint,3,opt,name=recordCount,proto3" json:"recordCount,omitempty"`
	// 数据
	Data                 []*RoomCardChangeRecord `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetRoomCardChangeRecordReply) Reset()         { *m = GetRoomCardChangeRecordReply{} }
func (m *GetRoomCardChangeRecordReply) String() string { return proto.CompactTextString(m) }
func (*GetRoomCardChangeRecordReply) ProtoMessage()    {}
func (*GetRoomCardChangeRecordReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{619}
}

func (m *GetRoomCardChangeRecordReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomCardChangeRecordReply.Unmarshal(m, b)
}
func (m *GetRoomCardChangeRecordReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomCardChangeRecordReply.Marshal(b, m, deterministic)
}
func (m *GetRoomCardChangeRecordReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomCardChangeRecordReply.Merge(m, src)
}
func (m *GetRoomCardChangeRecordReply) XXX_Size() int {
	return xxx_messageInfo_GetRoomCardChangeRecordReply.Size(m)
}
func (m *GetRoomCardChangeRecordReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomCardChangeRecordReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomCardChangeRecordReply proto.InternalMessageInfo

func (m *GetRoomCardChangeRecordReply) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetRoomCardChangeRecordReply) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetRoomCardChangeRecordReply) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *GetRoomCardChangeRecordReply) GetData() []*RoomCardChangeRecord {
	if m != nil {
		return m.Data
	}
	return nil
}

//获取业绩变动记录列表回复
type GetGetCommissionRecordPageListReply struct {
	PageIndex            int32                        `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32                        `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RecordCount          int32                        `protobuf:"varint,3,opt,name=recordCount,proto3" json:"recordCount,omitempty"`
	Data                 []*GetCommissionRecordReport `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *GetGetCommissionRecordPageListReply) Reset()         { *m = GetGetCommissionRecordPageListReply{} }
func (m *GetGetCommissionRecordPageListReply) String() string { return proto.CompactTextString(m) }
func (*GetGetCommissionRecordPageListReply) ProtoMessage()    {}
func (*GetGetCommissionRecordPageListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{620}
}

func (m *GetGetCommissionRecordPageListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGetCommissionRecordPageListReply.Unmarshal(m, b)
}
func (m *GetGetCommissionRecordPageListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGetCommissionRecordPageListReply.Marshal(b, m, deterministic)
}
func (m *GetGetCommissionRecordPageListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGetCommissionRecordPageListReply.Merge(m, src)
}
func (m *GetGetCommissionRecordPageListReply) XXX_Size() int {
	return xxx_messageInfo_GetGetCommissionRecordPageListReply.Size(m)
}
func (m *GetGetCommissionRecordPageListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGetCommissionRecordPageListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetGetCommissionRecordPageListReply proto.InternalMessageInfo

func (m *GetGetCommissionRecordPageListReply) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetGetCommissionRecordPageListReply) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetGetCommissionRecordPageListReply) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *GetGetCommissionRecordPageListReply) GetData() []*GetCommissionRecordReport {
	if m != nil {
		return m.Data
	}
	return nil
}

// 获取 赠送记录 分页列表申请
type GetGiveAwayRecordPageListRequest struct {
	// 获取页数
	PageIndex int32 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	// 每页大小
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	// 开始时间
	Start int64 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	// 结束时间
	End int64 `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	// shortId查询（管理端）
	ShortId string `protobuf:"bytes,5,opt,name=shortId,proto3" json:"shortId,omitempty"`
	// 是否是被赠送者(默认查询赠送者)
	IsBeDonor bool `protobuf:"varint,6,opt,name=IsBeDonor,proto3" json:"IsBeDonor,omitempty"`
	// 赠送的原因
	GiveAwayReason       ResourceChangeReason `protobuf:"varint,7,opt,name=giveAwayReason,proto3,enum=ResourceChangeReason" json:"giveAwayReason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetGiveAwayRecordPageListRequest) Reset()         { *m = GetGiveAwayRecordPageListRequest{} }
func (m *GetGiveAwayRecordPageListRequest) String() string { return proto.CompactTextString(m) }
func (*GetGiveAwayRecordPageListRequest) ProtoMessage()    {}
func (*GetGiveAwayRecordPageListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{621}
}

func (m *GetGiveAwayRecordPageListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGiveAwayRecordPageListRequest.Unmarshal(m, b)
}
func (m *GetGiveAwayRecordPageListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGiveAwayRecordPageListRequest.Marshal(b, m, deterministic)
}
func (m *GetGiveAwayRecordPageListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGiveAwayRecordPageListRequest.Merge(m, src)
}
func (m *GetGiveAwayRecordPageListRequest) XXX_Size() int {
	return xxx_messageInfo_GetGiveAwayRecordPageListRequest.Size(m)
}
func (m *GetGiveAwayRecordPageListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGiveAwayRecordPageListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGiveAwayRecordPageListRequest proto.InternalMessageInfo

func (m *GetGiveAwayRecordPageListRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetGiveAwayRecordPageListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetGiveAwayRecordPageListRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetGiveAwayRecordPageListRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetGiveAwayRecordPageListRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *GetGiveAwayRecordPageListRequest) GetIsBeDonor() bool {
	if m != nil {
		return m.IsBeDonor
	}
	return false
}

func (m *GetGiveAwayRecordPageListRequest) GetGiveAwayReason() ResourceChangeReason {
	if m != nil {
		return m.GiveAwayReason
	}
	return ResourceChangeReason_ReasonNone
}

// 获取 赠送记录 分页列表回复
type GetGiveAwayRecordPageListReply struct {
	// 获取页数
	PageIndex int32 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	// 每页大小
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	// 多少条数据
	RecordCount int32 `protobuf:"varint,3,opt,name=recordCount,proto3" json:"recordCount,omitempty"`
	// 数据
	Data                 []*GiveAwayRecordReport `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetGiveAwayRecordPageListReply) Reset()         { *m = GetGiveAwayRecordPageListReply{} }
func (m *GetGiveAwayRecordPageListReply) String() string { return proto.CompactTextString(m) }
func (*GetGiveAwayRecordPageListReply) ProtoMessage()    {}
func (*GetGiveAwayRecordPageListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{622}
}

func (m *GetGiveAwayRecordPageListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGiveAwayRecordPageListReply.Unmarshal(m, b)
}
func (m *GetGiveAwayRecordPageListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGiveAwayRecordPageListReply.Marshal(b, m, deterministic)
}
func (m *GetGiveAwayRecordPageListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGiveAwayRecordPageListReply.Merge(m, src)
}
func (m *GetGiveAwayRecordPageListReply) XXX_Size() int {
	return xxx_messageInfo_GetGiveAwayRecordPageListReply.Size(m)
}
func (m *GetGiveAwayRecordPageListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGiveAwayRecordPageListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetGiveAwayRecordPageListReply proto.InternalMessageInfo

func (m *GetGiveAwayRecordPageListReply) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetGiveAwayRecordPageListReply) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetGiveAwayRecordPageListReply) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *GetGiveAwayRecordPageListReply) GetData() []*GiveAwayRecordReport {
	if m != nil {
		return m.Data
	}
	return nil
}

//获取房卡消耗请求
type GetRoomCardConsumptionRequest struct {
	StartTime            int64    `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64    `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoomCardConsumptionRequest) Reset()         { *m = GetRoomCardConsumptionRequest{} }
func (m *GetRoomCardConsumptionRequest) String() string { return proto.CompactTextString(m) }
func (*GetRoomCardConsumptionRequest) ProtoMessage()    {}
func (*GetRoomCardConsumptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{623}
}

func (m *GetRoomCardConsumptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomCardConsumptionRequest.Unmarshal(m, b)
}
func (m *GetRoomCardConsumptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomCardConsumptionRequest.Marshal(b, m, deterministic)
}
func (m *GetRoomCardConsumptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomCardConsumptionRequest.Merge(m, src)
}
func (m *GetRoomCardConsumptionRequest) XXX_Size() int {
	return xxx_messageInfo_GetRoomCardConsumptionRequest.Size(m)
}
func (m *GetRoomCardConsumptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomCardConsumptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomCardConsumptionRequest proto.InternalMessageInfo

func (m *GetRoomCardConsumptionRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GetRoomCardConsumptionRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *GetRoomCardConsumptionRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

//获取房卡消耗回复
type GetRoomCardConsumptionReply struct {
	Consumption          int64    `protobuf:"varint,1,opt,name=Consumption,proto3" json:"Consumption,omitempty"`
	RequestId            string   `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoomCardConsumptionReply) Reset()         { *m = GetRoomCardConsumptionReply{} }
func (m *GetRoomCardConsumptionReply) String() string { return proto.CompactTextString(m) }
func (*GetRoomCardConsumptionReply) ProtoMessage()    {}
func (*GetRoomCardConsumptionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{624}
}

func (m *GetRoomCardConsumptionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomCardConsumptionReply.Unmarshal(m, b)
}
func (m *GetRoomCardConsumptionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomCardConsumptionReply.Marshal(b, m, deterministic)
}
func (m *GetRoomCardConsumptionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomCardConsumptionReply.Merge(m, src)
}
func (m *GetRoomCardConsumptionReply) XXX_Size() int {
	return xxx_messageInfo_GetRoomCardConsumptionReply.Size(m)
}
func (m *GetRoomCardConsumptionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomCardConsumptionReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomCardConsumptionReply proto.InternalMessageInfo

func (m *GetRoomCardConsumptionReply) GetConsumption() int64 {
	if m != nil {
		return m.Consumption
	}
	return 0
}

func (m *GetRoomCardConsumptionReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

//获取游戏开局数请求
type GetGameRoundCountRequest struct {
	StartTime            int64    `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64    `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	GameType             GameType `protobuf:"varint,3,opt,name=game_type,json=gameType,proto3,enum=GameType" json:"game_type,omitempty"`
	RequestId            string   `protobuf:"bytes,4,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGameRoundCountRequest) Reset()         { *m = GetGameRoundCountRequest{} }
func (m *GetGameRoundCountRequest) String() string { return proto.CompactTextString(m) }
func (*GetGameRoundCountRequest) ProtoMessage()    {}
func (*GetGameRoundCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{625}
}

func (m *GetGameRoundCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGameRoundCountRequest.Unmarshal(m, b)
}
func (m *GetGameRoundCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGameRoundCountRequest.Marshal(b, m, deterministic)
}
func (m *GetGameRoundCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGameRoundCountRequest.Merge(m, src)
}
func (m *GetGameRoundCountRequest) XXX_Size() int {
	return xxx_messageInfo_GetGameRoundCountRequest.Size(m)
}
func (m *GetGameRoundCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGameRoundCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGameRoundCountRequest proto.InternalMessageInfo

func (m *GetGameRoundCountRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GetGameRoundCountRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *GetGameRoundCountRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GetGameRoundCountRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

//获取游戏开局数回复
type GetGameRoundCountReply struct {
	TotalCount           int64                   `protobuf:"varint,1,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	Details              []*GameRoundCountDetail `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
	RequestId            string                  `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetGameRoundCountReply) Reset()         { *m = GetGameRoundCountReply{} }
func (m *GetGameRoundCountReply) String() string { return proto.CompactTextString(m) }
func (*GetGameRoundCountReply) ProtoMessage()    {}
func (*GetGameRoundCountReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{626}
}

func (m *GetGameRoundCountReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGameRoundCountReply.Unmarshal(m, b)
}
func (m *GetGameRoundCountReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGameRoundCountReply.Marshal(b, m, deterministic)
}
func (m *GetGameRoundCountReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGameRoundCountReply.Merge(m, src)
}
func (m *GetGameRoundCountReply) XXX_Size() int {
	return xxx_messageInfo_GetGameRoundCountReply.Size(m)
}
func (m *GetGameRoundCountReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGameRoundCountReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetGameRoundCountReply proto.InternalMessageInfo

func (m *GetGameRoundCountReply) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *GetGameRoundCountReply) GetDetails() []*GameRoundCountDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *GetGameRoundCountReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

//游戏开局数详情
type GameRoundCountDetail struct {
	GameType             GameType `protobuf:"varint,1,opt,name=game_type,json=gameType,proto3,enum=GameType" json:"game_type,omitempty"`
	RoundCount           int64    `protobuf:"varint,2,opt,name=RoundCount,proto3" json:"RoundCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameRoundCountDetail) Reset()         { *m = GameRoundCountDetail{} }
func (m *GameRoundCountDetail) String() string { return proto.CompactTextString(m) }
func (*GameRoundCountDetail) ProtoMessage()    {}
func (*GameRoundCountDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{627}
}

func (m *GameRoundCountDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameRoundCountDetail.Unmarshal(m, b)
}
func (m *GameRoundCountDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameRoundCountDetail.Marshal(b, m, deterministic)
}
func (m *GameRoundCountDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameRoundCountDetail.Merge(m, src)
}
func (m *GameRoundCountDetail) XXX_Size() int {
	return xxx_messageInfo_GameRoundCountDetail.Size(m)
}
func (m *GameRoundCountDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_GameRoundCountDetail.DiscardUnknown(m)
}

var xxx_messageInfo_GameRoundCountDetail proto.InternalMessageInfo

func (m *GameRoundCountDetail) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GameRoundCountDetail) GetRoundCount() int64 {
	if m != nil {
		return m.RoundCount
	}
	return 0
}

//获取充值统计请求
type GetChargeStatisticsRequest struct {
	StartTime            int64    `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64    `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChargeStatisticsRequest) Reset()         { *m = GetChargeStatisticsRequest{} }
func (m *GetChargeStatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*GetChargeStatisticsRequest) ProtoMessage()    {}
func (*GetChargeStatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{628}
}

func (m *GetChargeStatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChargeStatisticsRequest.Unmarshal(m, b)
}
func (m *GetChargeStatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChargeStatisticsRequest.Marshal(b, m, deterministic)
}
func (m *GetChargeStatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChargeStatisticsRequest.Merge(m, src)
}
func (m *GetChargeStatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_GetChargeStatisticsRequest.Size(m)
}
func (m *GetChargeStatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChargeStatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetChargeStatisticsRequest proto.InternalMessageInfo

func (m *GetChargeStatisticsRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GetChargeStatisticsRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *GetChargeStatisticsRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

//获取游戏开局数回复
type GetChargeStatisticsReply struct {
	ChargeTotal          int64    `protobuf:"varint,1,opt,name=chargeTotal,proto3" json:"chargeTotal,omitempty"`
	RequestId            string   `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChargeStatisticsReply) Reset()         { *m = GetChargeStatisticsReply{} }
func (m *GetChargeStatisticsReply) String() string { return proto.CompactTextString(m) }
func (*GetChargeStatisticsReply) ProtoMessage()    {}
func (*GetChargeStatisticsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{629}
}

func (m *GetChargeStatisticsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChargeStatisticsReply.Unmarshal(m, b)
}
func (m *GetChargeStatisticsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChargeStatisticsReply.Marshal(b, m, deterministic)
}
func (m *GetChargeStatisticsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChargeStatisticsReply.Merge(m, src)
}
func (m *GetChargeStatisticsReply) XXX_Size() int {
	return xxx_messageInfo_GetChargeStatisticsReply.Size(m)
}
func (m *GetChargeStatisticsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChargeStatisticsReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetChargeStatisticsReply proto.InternalMessageInfo

func (m *GetChargeStatisticsReply) GetChargeTotal() int64 {
	if m != nil {
		return m.ChargeTotal
	}
	return 0
}

func (m *GetChargeStatisticsReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

//获取注册人数统计请求
type GetRegistStatisticsRequest struct {
	StartTime            int64    `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64    `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRegistStatisticsRequest) Reset()         { *m = GetRegistStatisticsRequest{} }
func (m *GetRegistStatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*GetRegistStatisticsRequest) ProtoMessage()    {}
func (*GetRegistStatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{630}
}

func (m *GetRegistStatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRegistStatisticsRequest.Unmarshal(m, b)
}
func (m *GetRegistStatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRegistStatisticsRequest.Marshal(b, m, deterministic)
}
func (m *GetRegistStatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRegistStatisticsRequest.Merge(m, src)
}
func (m *GetRegistStatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_GetRegistStatisticsRequest.Size(m)
}
func (m *GetRegistStatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRegistStatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRegistStatisticsRequest proto.InternalMessageInfo

func (m *GetRegistStatisticsRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GetRegistStatisticsRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *GetRegistStatisticsRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

//获取注册人数回复
type GetRegistStatisticsReply struct {
	RegistCount          int64    `protobuf:"varint,1,opt,name=RegistCount,proto3" json:"RegistCount,omitempty"`
	RequestId            string   `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRegistStatisticsReply) Reset()         { *m = GetRegistStatisticsReply{} }
func (m *GetRegistStatisticsReply) String() string { return proto.CompactTextString(m) }
func (*GetRegistStatisticsReply) ProtoMessage()    {}
func (*GetRegistStatisticsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{631}
}

func (m *GetRegistStatisticsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRegistStatisticsReply.Unmarshal(m, b)
}
func (m *GetRegistStatisticsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRegistStatisticsReply.Marshal(b, m, deterministic)
}
func (m *GetRegistStatisticsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRegistStatisticsReply.Merge(m, src)
}
func (m *GetRegistStatisticsReply) XXX_Size() int {
	return xxx_messageInfo_GetRegistStatisticsReply.Size(m)
}
func (m *GetRegistStatisticsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRegistStatisticsReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRegistStatisticsReply proto.InternalMessageInfo

func (m *GetRegistStatisticsReply) GetRegistCount() int64 {
	if m != nil {
		return m.RegistCount
	}
	return 0
}

func (m *GetRegistStatisticsReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

// =============================================================================
// 血池协议start
// =============================================================================
// 血池存储结构(redi存储的时候用) -- 单个血池总信息
type BloodSlotRedisStruct struct {
	// 血池信息
	Info *BloodSlotInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	// 血池配置
	Config *BloodSlotConfig `protobuf:"bytes,2,opt,name=Config,proto3" json:"Config,omitempty"`
	//游戏类型
	GameType GameType `protobuf:"varint,3,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	//游戏场次
	GameScene            int32    `protobuf:"varint,4,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BloodSlotRedisStruct) Reset()         { *m = BloodSlotRedisStruct{} }
func (m *BloodSlotRedisStruct) String() string { return proto.CompactTextString(m) }
func (*BloodSlotRedisStruct) ProtoMessage()    {}
func (*BloodSlotRedisStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{632}
}

func (m *BloodSlotRedisStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BloodSlotRedisStruct.Unmarshal(m, b)
}
func (m *BloodSlotRedisStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BloodSlotRedisStruct.Marshal(b, m, deterministic)
}
func (m *BloodSlotRedisStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BloodSlotRedisStruct.Merge(m, src)
}
func (m *BloodSlotRedisStruct) XXX_Size() int {
	return xxx_messageInfo_BloodSlotRedisStruct.Size(m)
}
func (m *BloodSlotRedisStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_BloodSlotRedisStruct.DiscardUnknown(m)
}

var xxx_messageInfo_BloodSlotRedisStruct proto.InternalMessageInfo

func (m *BloodSlotRedisStruct) GetInfo() *BloodSlotInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *BloodSlotRedisStruct) GetConfig() *BloodSlotConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *BloodSlotRedisStruct) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *BloodSlotRedisStruct) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

// 血池配置
type BloodSlotConfig struct {
	// 吃线配置
	EatLines []*LinesConfig `protobuf:"bytes,1,rep,name=eatLines,proto3" json:"eatLines,omitempty"`
	// 吐线配置
	OutLines []*LinesConfig `protobuf:"bytes,2,rep,name=outLines,proto3" json:"outLines,omitempty"`
	// 暗税配置
	DarkTax              int64    `protobuf:"varint,3,opt,name=darkTax,proto3" json:"darkTax,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BloodSlotConfig) Reset()         { *m = BloodSlotConfig{} }
func (m *BloodSlotConfig) String() string { return proto.CompactTextString(m) }
func (*BloodSlotConfig) ProtoMessage()    {}
func (*BloodSlotConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{633}
}

func (m *BloodSlotConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BloodSlotConfig.Unmarshal(m, b)
}
func (m *BloodSlotConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BloodSlotConfig.Marshal(b, m, deterministic)
}
func (m *BloodSlotConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BloodSlotConfig.Merge(m, src)
}
func (m *BloodSlotConfig) XXX_Size() int {
	return xxx_messageInfo_BloodSlotConfig.Size(m)
}
func (m *BloodSlotConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_BloodSlotConfig.DiscardUnknown(m)
}

var xxx_messageInfo_BloodSlotConfig proto.InternalMessageInfo

func (m *BloodSlotConfig) GetEatLines() []*LinesConfig {
	if m != nil {
		return m.EatLines
	}
	return nil
}

func (m *BloodSlotConfig) GetOutLines() []*LinesConfig {
	if m != nil {
		return m.OutLines
	}
	return nil
}

func (m *BloodSlotConfig) GetDarkTax() int64 {
	if m != nil {
		return m.DarkTax
	}
	return 0
}

// 血线配置
type LinesConfig struct {
	// 血池数值线(根据这个值来应用不同的作弊值）
	Number int64 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	// 状态作弊值(游戏根据血池状态进行控制干预的幅度值，其绝对值越大，系统干预的几率越大。取值范围[-100,100]；）
	CheatRatio int64 `protobuf:"varint,2,opt,name=cheatRatio,proto3" json:"cheatRatio,omitempty"`
	// 强制干预次数 （常规状态下由血池作弊值的概率进行控制，为规避随机性设置1个值使之满足条件时，根据血池状态进行强制干预)
	// (强制干预初始为0,吃分吐分的时候清0）
	// (连续N次未系统干预时，当N值≥[强制干预次数]时，将不再根据作弊幅度随机，而直接根据血池状态作弊)
	CoerceCount          int64    `protobuf:"varint,3,opt,name=coerceCount,proto3" json:"coerceCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinesConfig) Reset()         { *m = LinesConfig{} }
func (m *LinesConfig) String() string { return proto.CompactTextString(m) }
func (*LinesConfig) ProtoMessage()    {}
func (*LinesConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{634}
}

func (m *LinesConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinesConfig.Unmarshal(m, b)
}
func (m *LinesConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinesConfig.Marshal(b, m, deterministic)
}
func (m *LinesConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinesConfig.Merge(m, src)
}
func (m *LinesConfig) XXX_Size() int {
	return xxx_messageInfo_LinesConfig.Size(m)
}
func (m *LinesConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LinesConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LinesConfig proto.InternalMessageInfo

func (m *LinesConfig) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *LinesConfig) GetCheatRatio() int64 {
	if m != nil {
		return m.CheatRatio
	}
	return 0
}

func (m *LinesConfig) GetCoerceCount() int64 {
	if m != nil {
		return m.CoerceCount
	}
	return 0
}

// 血池信息
type BloodSlotInfo struct {
	// 血池状态（血池的状态,根据指定血池规则来检测血池状态，也对应了吸分和吐分的表现）
	Status BloodSlotStatus `protobuf:"varint,1,opt,name=status,proto3,enum=BloodSlotStatus" json:"status,omitempty"`
	// 血池状态值（血池中动态变化的血池值）
	Value int64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	// 未干预次数（根据随机值判断没有走血池控制的次数,这个次数累计到强制控制次数的配置时。就进行一次控制，然后置0）
	FreeCount int64 `protobuf:"varint,3,opt,name=freeCount,proto3" json:"freeCount,omitempty"`
	// 缓存值，这个值满1万就扣一次暗税，并且置0重新记
	TmpValue             int64    `protobuf:"varint,4,opt,name=tmpValue,proto3" json:"tmpValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BloodSlotInfo) Reset()         { *m = BloodSlotInfo{} }
func (m *BloodSlotInfo) String() string { return proto.CompactTextString(m) }
func (*BloodSlotInfo) ProtoMessage()    {}
func (*BloodSlotInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{635}
}

func (m *BloodSlotInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BloodSlotInfo.Unmarshal(m, b)
}
func (m *BloodSlotInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BloodSlotInfo.Marshal(b, m, deterministic)
}
func (m *BloodSlotInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BloodSlotInfo.Merge(m, src)
}
func (m *BloodSlotInfo) XXX_Size() int {
	return xxx_messageInfo_BloodSlotInfo.Size(m)
}
func (m *BloodSlotInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BloodSlotInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BloodSlotInfo proto.InternalMessageInfo

func (m *BloodSlotInfo) GetStatus() BloodSlotStatus {
	if m != nil {
		return m.Status
	}
	return BloodSlotStatus_BloodSlotStatus_None
}

func (m *BloodSlotInfo) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *BloodSlotInfo) GetFreeCount() int64 {
	if m != nil {
		return m.FreeCount
	}
	return 0
}

func (m *BloodSlotInfo) GetTmpValue() int64 {
	if m != nil {
		return m.TmpValue
	}
	return 0
}

// 获取血池配置（游戏类型）--------------------------------------
type GetBloodSlotConfigRequest struct {
	//游戏类型
	GameType             GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBloodSlotConfigRequest) Reset()         { *m = GetBloodSlotConfigRequest{} }
func (m *GetBloodSlotConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetBloodSlotConfigRequest) ProtoMessage()    {}
func (*GetBloodSlotConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{636}
}

func (m *GetBloodSlotConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBloodSlotConfigRequest.Unmarshal(m, b)
}
func (m *GetBloodSlotConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBloodSlotConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetBloodSlotConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBloodSlotConfigRequest.Merge(m, src)
}
func (m *GetBloodSlotConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetBloodSlotConfigRequest.Size(m)
}
func (m *GetBloodSlotConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBloodSlotConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBloodSlotConfigRequest proto.InternalMessageInfo

func (m *GetBloodSlotConfigRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

type GetBloodSlotConfigReply struct {
	// 游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 该游戏的血池配置及信息
	BloodSlotConfigAndInfos []*BloodSlotRedisStruct `protobuf:"bytes,2,rep,name=BloodSlotConfigAndInfos,proto3" json:"BloodSlotConfigAndInfos,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                `json:"-"`
	XXX_unrecognized        []byte                  `json:"-"`
	XXX_sizecache           int32                   `json:"-"`
}

func (m *GetBloodSlotConfigReply) Reset()         { *m = GetBloodSlotConfigReply{} }
func (m *GetBloodSlotConfigReply) String() string { return proto.CompactTextString(m) }
func (*GetBloodSlotConfigReply) ProtoMessage()    {}
func (*GetBloodSlotConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{637}
}

func (m *GetBloodSlotConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBloodSlotConfigReply.Unmarshal(m, b)
}
func (m *GetBloodSlotConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBloodSlotConfigReply.Marshal(b, m, deterministic)
}
func (m *GetBloodSlotConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBloodSlotConfigReply.Merge(m, src)
}
func (m *GetBloodSlotConfigReply) XXX_Size() int {
	return xxx_messageInfo_GetBloodSlotConfigReply.Size(m)
}
func (m *GetBloodSlotConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBloodSlotConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetBloodSlotConfigReply proto.InternalMessageInfo

func (m *GetBloodSlotConfigReply) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GetBloodSlotConfigReply) GetBloodSlotConfigAndInfos() []*BloodSlotRedisStruct {
	if m != nil {
		return m.BloodSlotConfigAndInfos
	}
	return nil
}

// 获取血池配置（单）--------------------------------------
type GetOneBloodSlotConfigRequest struct {
	//游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 游戏场次
	GameScene            int32    `protobuf:"varint,2,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOneBloodSlotConfigRequest) Reset()         { *m = GetOneBloodSlotConfigRequest{} }
func (m *GetOneBloodSlotConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetOneBloodSlotConfigRequest) ProtoMessage()    {}
func (*GetOneBloodSlotConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{638}
}

func (m *GetOneBloodSlotConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOneBloodSlotConfigRequest.Unmarshal(m, b)
}
func (m *GetOneBloodSlotConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOneBloodSlotConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetOneBloodSlotConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOneBloodSlotConfigRequest.Merge(m, src)
}
func (m *GetOneBloodSlotConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetOneBloodSlotConfigRequest.Size(m)
}
func (m *GetOneBloodSlotConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOneBloodSlotConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOneBloodSlotConfigRequest proto.InternalMessageInfo

func (m *GetOneBloodSlotConfigRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GetOneBloodSlotConfigRequest) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

type GetOneBloodSlotConfigReply struct {
	// 游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 游戏场次
	GameScene int32 `protobuf:"varint,2,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	// 该游戏该场次 的血池配置及信息
	BloodSlotConfigAndInfo *BloodSlotRedisStruct `protobuf:"bytes,3,opt,name=BloodSlotConfigAndInfo,proto3" json:"BloodSlotConfigAndInfo,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *GetOneBloodSlotConfigReply) Reset()         { *m = GetOneBloodSlotConfigReply{} }
func (m *GetOneBloodSlotConfigReply) String() string { return proto.CompactTextString(m) }
func (*GetOneBloodSlotConfigReply) ProtoMessage()    {}
func (*GetOneBloodSlotConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{639}
}

func (m *GetOneBloodSlotConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOneBloodSlotConfigReply.Unmarshal(m, b)
}
func (m *GetOneBloodSlotConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOneBloodSlotConfigReply.Marshal(b, m, deterministic)
}
func (m *GetOneBloodSlotConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOneBloodSlotConfigReply.Merge(m, src)
}
func (m *GetOneBloodSlotConfigReply) XXX_Size() int {
	return xxx_messageInfo_GetOneBloodSlotConfigReply.Size(m)
}
func (m *GetOneBloodSlotConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOneBloodSlotConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetOneBloodSlotConfigReply proto.InternalMessageInfo

func (m *GetOneBloodSlotConfigReply) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GetOneBloodSlotConfigReply) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *GetOneBloodSlotConfigReply) GetBloodSlotConfigAndInfo() *BloodSlotRedisStruct {
	if m != nil {
		return m.BloodSlotConfigAndInfo
	}
	return nil
}

// 修改血池配置（单）------------------------------------
type UpdateBloodSlotConfigRequest struct {
	BloodSlotConfigAndInfo *BloodSlotRedisStruct `protobuf:"bytes,1,opt,name=BloodSlotConfigAndInfo,proto3" json:"BloodSlotConfigAndInfo,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *UpdateBloodSlotConfigRequest) Reset()         { *m = UpdateBloodSlotConfigRequest{} }
func (m *UpdateBloodSlotConfigRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBloodSlotConfigRequest) ProtoMessage()    {}
func (*UpdateBloodSlotConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{640}
}

func (m *UpdateBloodSlotConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBloodSlotConfigRequest.Unmarshal(m, b)
}
func (m *UpdateBloodSlotConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBloodSlotConfigRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBloodSlotConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBloodSlotConfigRequest.Merge(m, src)
}
func (m *UpdateBloodSlotConfigRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBloodSlotConfigRequest.Size(m)
}
func (m *UpdateBloodSlotConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBloodSlotConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBloodSlotConfigRequest proto.InternalMessageInfo

func (m *UpdateBloodSlotConfigRequest) GetBloodSlotConfigAndInfo() *BloodSlotRedisStruct {
	if m != nil {
		return m.BloodSlotConfigAndInfo
	}
	return nil
}

type UpdateBloodSlotConfigReply struct {
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBloodSlotConfigReply) Reset()         { *m = UpdateBloodSlotConfigReply{} }
func (m *UpdateBloodSlotConfigReply) String() string { return proto.CompactTextString(m) }
func (*UpdateBloodSlotConfigReply) ProtoMessage()    {}
func (*UpdateBloodSlotConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{641}
}

func (m *UpdateBloodSlotConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBloodSlotConfigReply.Unmarshal(m, b)
}
func (m *UpdateBloodSlotConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBloodSlotConfigReply.Marshal(b, m, deterministic)
}
func (m *UpdateBloodSlotConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBloodSlotConfigReply.Merge(m, src)
}
func (m *UpdateBloodSlotConfigReply) XXX_Size() int {
	return xxx_messageInfo_UpdateBloodSlotConfigReply.Size(m)
}
func (m *UpdateBloodSlotConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBloodSlotConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBloodSlotConfigReply proto.InternalMessageInfo

func (m *UpdateBloodSlotConfigReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 新增血池配置（单）------------------------------------
type AlertBloodSlotConfigRequest struct {
	BloodSlotConfigAndInfo *BloodSlotRedisStruct `protobuf:"bytes,1,opt,name=BloodSlotConfigAndInfo,proto3" json:"BloodSlotConfigAndInfo,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *AlertBloodSlotConfigRequest) Reset()         { *m = AlertBloodSlotConfigRequest{} }
func (m *AlertBloodSlotConfigRequest) String() string { return proto.CompactTextString(m) }
func (*AlertBloodSlotConfigRequest) ProtoMessage()    {}
func (*AlertBloodSlotConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{642}
}

func (m *AlertBloodSlotConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertBloodSlotConfigRequest.Unmarshal(m, b)
}
func (m *AlertBloodSlotConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertBloodSlotConfigRequest.Marshal(b, m, deterministic)
}
func (m *AlertBloodSlotConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertBloodSlotConfigRequest.Merge(m, src)
}
func (m *AlertBloodSlotConfigRequest) XXX_Size() int {
	return xxx_messageInfo_AlertBloodSlotConfigRequest.Size(m)
}
func (m *AlertBloodSlotConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertBloodSlotConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AlertBloodSlotConfigRequest proto.InternalMessageInfo

func (m *AlertBloodSlotConfigRequest) GetBloodSlotConfigAndInfo() *BloodSlotRedisStruct {
	if m != nil {
		return m.BloodSlotConfigAndInfo
	}
	return nil
}

type AlertBloodSlotConfigReply struct {
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlertBloodSlotConfigReply) Reset()         { *m = AlertBloodSlotConfigReply{} }
func (m *AlertBloodSlotConfigReply) String() string { return proto.CompactTextString(m) }
func (*AlertBloodSlotConfigReply) ProtoMessage()    {}
func (*AlertBloodSlotConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{643}
}

func (m *AlertBloodSlotConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertBloodSlotConfigReply.Unmarshal(m, b)
}
func (m *AlertBloodSlotConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertBloodSlotConfigReply.Marshal(b, m, deterministic)
}
func (m *AlertBloodSlotConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertBloodSlotConfigReply.Merge(m, src)
}
func (m *AlertBloodSlotConfigReply) XXX_Size() int {
	return xxx_messageInfo_AlertBloodSlotConfigReply.Size(m)
}
func (m *AlertBloodSlotConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertBloodSlotConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_AlertBloodSlotConfigReply proto.InternalMessageInfo

func (m *AlertBloodSlotConfigReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 删除血池配置（单）------------------------------------
type DeleteBloodSlotConfigRequest struct {
	// 游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 游戏场次
	GameScene            int32    `protobuf:"varint,2,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBloodSlotConfigRequest) Reset()         { *m = DeleteBloodSlotConfigRequest{} }
func (m *DeleteBloodSlotConfigRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBloodSlotConfigRequest) ProtoMessage()    {}
func (*DeleteBloodSlotConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{644}
}

func (m *DeleteBloodSlotConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBloodSlotConfigRequest.Unmarshal(m, b)
}
func (m *DeleteBloodSlotConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBloodSlotConfigRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBloodSlotConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBloodSlotConfigRequest.Merge(m, src)
}
func (m *DeleteBloodSlotConfigRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBloodSlotConfigRequest.Size(m)
}
func (m *DeleteBloodSlotConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBloodSlotConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBloodSlotConfigRequest proto.InternalMessageInfo

func (m *DeleteBloodSlotConfigRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *DeleteBloodSlotConfigRequest) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

type DeleteBloodSlotConfigReply struct {
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBloodSlotConfigReply) Reset()         { *m = DeleteBloodSlotConfigReply{} }
func (m *DeleteBloodSlotConfigReply) String() string { return proto.CompactTextString(m) }
func (*DeleteBloodSlotConfigReply) ProtoMessage()    {}
func (*DeleteBloodSlotConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{645}
}

func (m *DeleteBloodSlotConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBloodSlotConfigReply.Unmarshal(m, b)
}
func (m *DeleteBloodSlotConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBloodSlotConfigReply.Marshal(b, m, deterministic)
}
func (m *DeleteBloodSlotConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBloodSlotConfigReply.Merge(m, src)
}
func (m *DeleteBloodSlotConfigReply) XXX_Size() int {
	return xxx_messageInfo_DeleteBloodSlotConfigReply.Size(m)
}
func (m *DeleteBloodSlotConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBloodSlotConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBloodSlotConfigReply proto.InternalMessageInfo

func (m *DeleteBloodSlotConfigReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 红黑操作请求
type RedBlackDoRequest struct {
	// 想要进行的操作
	DoType RedBlackDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=RedBlackDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedBlackDoRequest) Reset()         { *m = RedBlackDoRequest{} }
func (m *RedBlackDoRequest) String() string { return proto.CompactTextString(m) }
func (*RedBlackDoRequest) ProtoMessage()    {}
func (*RedBlackDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{646}
}

func (m *RedBlackDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedBlackDoRequest.Unmarshal(m, b)
}
func (m *RedBlackDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedBlackDoRequest.Marshal(b, m, deterministic)
}
func (m *RedBlackDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedBlackDoRequest.Merge(m, src)
}
func (m *RedBlackDoRequest) XXX_Size() int {
	return xxx_messageInfo_RedBlackDoRequest.Size(m)
}
func (m *RedBlackDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RedBlackDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RedBlackDoRequest proto.InternalMessageInfo

func (m *RedBlackDoRequest) GetDoType() RedBlackDoType {
	if m != nil {
		return m.DoType
	}
	return RedBlackDoType_RedBlack_None
}

func (m *RedBlackDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 红黑每局庄家信息的推送
type PushRedBlackBankerMessage struct {
	// 之前的庄家 - 如之前之后相同说明庄家未变，同时原因会为容错
	BeforeBanker string `protobuf:"bytes,1,opt,name=BeforeBanker,proto3" json:"BeforeBanker,omitempty"`
	// 之后的庄家
	AfterBanker string `protobuf:"bytes,2,opt,name=AfterBanker,proto3" json:"AfterBanker,omitempty"`
	// 之前庄家被替换的原因
	ReplaceBankerReason KickBankerReason `protobuf:"varint,3,opt,name=ReplaceBankerReason,proto3,enum=KickBankerReason" json:"ReplaceBankerReason,omitempty"`
	// 庄家目前的连庄回合数
	NowRound int64 `protobuf:"varint,4,opt,name=NowRound,proto3" json:"NowRound,omitempty"`
	// 庄家申请列表
	Bankers []string `protobuf:"bytes,5,rep,name=Bankers,proto3" json:"Bankers,omitempty"`
	// 限红，红，黑，幸运区
	MaxBetRatio []int64 `protobuf:"varint,6,rep,packed,name=MaxBetRatio,proto3" json:"MaxBetRatio,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,7,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRedBlackBankerMessage) Reset()         { *m = PushRedBlackBankerMessage{} }
func (m *PushRedBlackBankerMessage) String() string { return proto.CompactTextString(m) }
func (*PushRedBlackBankerMessage) ProtoMessage()    {}
func (*PushRedBlackBankerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{647}
}

func (m *PushRedBlackBankerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRedBlackBankerMessage.Unmarshal(m, b)
}
func (m *PushRedBlackBankerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRedBlackBankerMessage.Marshal(b, m, deterministic)
}
func (m *PushRedBlackBankerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRedBlackBankerMessage.Merge(m, src)
}
func (m *PushRedBlackBankerMessage) XXX_Size() int {
	return xxx_messageInfo_PushRedBlackBankerMessage.Size(m)
}
func (m *PushRedBlackBankerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRedBlackBankerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PushRedBlackBankerMessage proto.InternalMessageInfo

func (m *PushRedBlackBankerMessage) GetBeforeBanker() string {
	if m != nil {
		return m.BeforeBanker
	}
	return ""
}

func (m *PushRedBlackBankerMessage) GetAfterBanker() string {
	if m != nil {
		return m.AfterBanker
	}
	return ""
}

func (m *PushRedBlackBankerMessage) GetReplaceBankerReason() KickBankerReason {
	if m != nil {
		return m.ReplaceBankerReason
	}
	return KickBankerReason_KickBankerNone
}

func (m *PushRedBlackBankerMessage) GetNowRound() int64 {
	if m != nil {
		return m.NowRound
	}
	return 0
}

func (m *PushRedBlackBankerMessage) GetBankers() []string {
	if m != nil {
		return m.Bankers
	}
	return nil
}

func (m *PushRedBlackBankerMessage) GetMaxBetRatio() []int64 {
	if m != nil {
		return m.MaxBetRatio
	}
	return nil
}

func (m *PushRedBlackBankerMessage) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 比较红黑牌型
type CompareRedBlackPoker struct {
	// 红牌或者黑牌 -3张
	RedBlackPoker []*Poker `protobuf:"bytes,1,rep,name=RedBlackPoker,proto3" json:"RedBlackPoker,omitempty"`
	// 牌型
	RedBlackPokerType RedBlackPokerType `protobuf:"varint,2,opt,name=RedBlackPokerType,proto3,enum=RedBlackPokerType" json:"RedBlackPokerType,omitempty"`
	// 单牌  -得分最小的牌
	SinglePoker *Poker `protobuf:"bytes,3,opt,name=SinglePoker,proto3" json:"SinglePoker,omitempty"`
	// 牌型牌(如对5，则为5) -得分最高的牌
	TypePoker *Poker `protobuf:"bytes,4,opt,name=TypePoker,proto3" json:"TypePoker,omitempty"`
	// 最大牌  -得分第二的牌
	MaxPoker *Poker `protobuf:"bytes,5,opt,name=MaxPoker,proto3" json:"MaxPoker,omitempty"`
	// 牌的分数
	PokerScore           int64    `protobuf:"varint,6,opt,name=PokerScore,proto3" json:"PokerScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompareRedBlackPoker) Reset()         { *m = CompareRedBlackPoker{} }
func (m *CompareRedBlackPoker) String() string { return proto.CompactTextString(m) }
func (*CompareRedBlackPoker) ProtoMessage()    {}
func (*CompareRedBlackPoker) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{648}
}

func (m *CompareRedBlackPoker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompareRedBlackPoker.Unmarshal(m, b)
}
func (m *CompareRedBlackPoker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompareRedBlackPoker.Marshal(b, m, deterministic)
}
func (m *CompareRedBlackPoker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompareRedBlackPoker.Merge(m, src)
}
func (m *CompareRedBlackPoker) XXX_Size() int {
	return xxx_messageInfo_CompareRedBlackPoker.Size(m)
}
func (m *CompareRedBlackPoker) XXX_DiscardUnknown() {
	xxx_messageInfo_CompareRedBlackPoker.DiscardUnknown(m)
}

var xxx_messageInfo_CompareRedBlackPoker proto.InternalMessageInfo

func (m *CompareRedBlackPoker) GetRedBlackPoker() []*Poker {
	if m != nil {
		return m.RedBlackPoker
	}
	return nil
}

func (m *CompareRedBlackPoker) GetRedBlackPokerType() RedBlackPokerType {
	if m != nil {
		return m.RedBlackPokerType
	}
	return RedBlackPokerType_RedBlackCardType_None
}

func (m *CompareRedBlackPoker) GetSinglePoker() *Poker {
	if m != nil {
		return m.SinglePoker
	}
	return nil
}

func (m *CompareRedBlackPoker) GetTypePoker() *Poker {
	if m != nil {
		return m.TypePoker
	}
	return nil
}

func (m *CompareRedBlackPoker) GetMaxPoker() *Poker {
	if m != nil {
		return m.MaxPoker
	}
	return nil
}

func (m *CompareRedBlackPoker) GetPokerScore() int64 {
	if m != nil {
		return m.PokerScore
	}
	return 0
}

// 红黑输赢信息
type RedBlackWinInfo struct {
	// 胜利的牌区 (红|黑)
	WinArea RedBlackCardArea `protobuf:"varint,1,opt,name=WinArea,proto3,enum=RedBlackCardArea" json:"WinArea,omitempty"`
	// 获胜的牌型
	WinPokerType RedBlackPokerType `protobuf:"varint,2,opt,name=WinPokerType,proto3,enum=RedBlackPokerType" json:"WinPokerType,omitempty"`
	// 幸运区是否胜利
	LuckIsWin            bool     `protobuf:"varint,3,opt,name=LuckIsWin,proto3" json:"LuckIsWin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedBlackWinInfo) Reset()         { *m = RedBlackWinInfo{} }
func (m *RedBlackWinInfo) String() string { return proto.CompactTextString(m) }
func (*RedBlackWinInfo) ProtoMessage()    {}
func (*RedBlackWinInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{649}
}

func (m *RedBlackWinInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedBlackWinInfo.Unmarshal(m, b)
}
func (m *RedBlackWinInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedBlackWinInfo.Marshal(b, m, deterministic)
}
func (m *RedBlackWinInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedBlackWinInfo.Merge(m, src)
}
func (m *RedBlackWinInfo) XXX_Size() int {
	return xxx_messageInfo_RedBlackWinInfo.Size(m)
}
func (m *RedBlackWinInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RedBlackWinInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RedBlackWinInfo proto.InternalMessageInfo

func (m *RedBlackWinInfo) GetWinArea() RedBlackCardArea {
	if m != nil {
		return m.WinArea
	}
	return RedBlackCardArea_RedBlackCardArea_None
}

func (m *RedBlackWinInfo) GetWinPokerType() RedBlackPokerType {
	if m != nil {
		return m.WinPokerType
	}
	return RedBlackPokerType_RedBlackCardType_None
}

func (m *RedBlackWinInfo) GetLuckIsWin() bool {
	if m != nil {
		return m.LuckIsWin
	}
	return false
}

// 红黑开牌推送
type PushRedBlackPoker struct {
	// 房间Id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 红牌与黑牌 012红牌 345黑牌
	RedBlackPoker []*Poker `protobuf:"bytes,2,rep,name=RedBlackPoker,proto3" json:"RedBlackPoker,omitempty"`
	// 红牌与黑牌比较牌型
	RedBlackPokerType    []*CompareRedBlackPoker `protobuf:"bytes,3,rep,name=RedBlackPokerType,proto3" json:"RedBlackPokerType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PushRedBlackPoker) Reset()         { *m = PushRedBlackPoker{} }
func (m *PushRedBlackPoker) String() string { return proto.CompactTextString(m) }
func (*PushRedBlackPoker) ProtoMessage()    {}
func (*PushRedBlackPoker) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{650}
}

func (m *PushRedBlackPoker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRedBlackPoker.Unmarshal(m, b)
}
func (m *PushRedBlackPoker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRedBlackPoker.Marshal(b, m, deterministic)
}
func (m *PushRedBlackPoker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRedBlackPoker.Merge(m, src)
}
func (m *PushRedBlackPoker) XXX_Size() int {
	return xxx_messageInfo_PushRedBlackPoker.Size(m)
}
func (m *PushRedBlackPoker) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRedBlackPoker.DiscardUnknown(m)
}

var xxx_messageInfo_PushRedBlackPoker proto.InternalMessageInfo

func (m *PushRedBlackPoker) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushRedBlackPoker) GetRedBlackPoker() []*Poker {
	if m != nil {
		return m.RedBlackPoker
	}
	return nil
}

func (m *PushRedBlackPoker) GetRedBlackPokerType() []*CompareRedBlackPoker {
	if m != nil {
		return m.RedBlackPokerType
	}
	return nil
}

// --------------------------------------------------------------------------
// 红黑下注请求
// --------------------------------------------------------------------------
// 红黑下注申请
type RedBlackBetRequest struct {
	// 下注的区域
	BetArea RedBlackCardArea `protobuf:"varint,1,opt,name=BetArea,proto3,enum=RedBlackCardArea" json:"BetArea,omitempty"`
	// 下注金额（密等）
	BetBalance           int64    `protobuf:"varint,2,opt,name=BetBalance,proto3" json:"BetBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedBlackBetRequest) Reset()         { *m = RedBlackBetRequest{} }
func (m *RedBlackBetRequest) String() string { return proto.CompactTextString(m) }
func (*RedBlackBetRequest) ProtoMessage()    {}
func (*RedBlackBetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{651}
}

func (m *RedBlackBetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedBlackBetRequest.Unmarshal(m, b)
}
func (m *RedBlackBetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedBlackBetRequest.Marshal(b, m, deterministic)
}
func (m *RedBlackBetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedBlackBetRequest.Merge(m, src)
}
func (m *RedBlackBetRequest) XXX_Size() int {
	return xxx_messageInfo_RedBlackBetRequest.Size(m)
}
func (m *RedBlackBetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RedBlackBetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RedBlackBetRequest proto.InternalMessageInfo

func (m *RedBlackBetRequest) GetBetArea() RedBlackCardArea {
	if m != nil {
		return m.BetArea
	}
	return RedBlackCardArea_RedBlackCardArea_None
}

func (m *RedBlackBetRequest) GetBetBalance() int64 {
	if m != nil {
		return m.BetBalance
	}
	return 0
}

// 红黑下注回复
type RedBlackBetReply struct {
	// 下注是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 房间Id
	RoomId string `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 玩家目前金币数
	PlayerBalance        int64    `protobuf:"varint,3,opt,name=PlayerBalance,proto3" json:"PlayerBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedBlackBetReply) Reset()         { *m = RedBlackBetReply{} }
func (m *RedBlackBetReply) String() string { return proto.CompactTextString(m) }
func (*RedBlackBetReply) ProtoMessage()    {}
func (*RedBlackBetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{652}
}

func (m *RedBlackBetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedBlackBetReply.Unmarshal(m, b)
}
func (m *RedBlackBetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedBlackBetReply.Marshal(b, m, deterministic)
}
func (m *RedBlackBetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedBlackBetReply.Merge(m, src)
}
func (m *RedBlackBetReply) XXX_Size() int {
	return xxx_messageInfo_RedBlackBetReply.Size(m)
}
func (m *RedBlackBetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RedBlackBetReply.DiscardUnknown(m)
}

var xxx_messageInfo_RedBlackBetReply proto.InternalMessageInfo

func (m *RedBlackBetReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *RedBlackBetReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *RedBlackBetReply) GetPlayerBalance() int64 {
	if m != nil {
		return m.PlayerBalance
	}
	return 0
}

// --------------------------------------------------------------------------
// 红黑上庄请求
// --------------------------------------------------------------------------
// 红黑申请上庄申请
type RedBlackUpBankerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedBlackUpBankerRequest) Reset()         { *m = RedBlackUpBankerRequest{} }
func (m *RedBlackUpBankerRequest) String() string { return proto.CompactTextString(m) }
func (*RedBlackUpBankerRequest) ProtoMessage()    {}
func (*RedBlackUpBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{653}
}

func (m *RedBlackUpBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedBlackUpBankerRequest.Unmarshal(m, b)
}
func (m *RedBlackUpBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedBlackUpBankerRequest.Marshal(b, m, deterministic)
}
func (m *RedBlackUpBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedBlackUpBankerRequest.Merge(m, src)
}
func (m *RedBlackUpBankerRequest) XXX_Size() int {
	return xxx_messageInfo_RedBlackUpBankerRequest.Size(m)
}
func (m *RedBlackUpBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RedBlackUpBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RedBlackUpBankerRequest proto.InternalMessageInfo

// 红黑申请上庄回复
type RedBlackUpBankerReply struct {
	// 上庄是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 房间Id
	RoomId               string   `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedBlackUpBankerReply) Reset()         { *m = RedBlackUpBankerReply{} }
func (m *RedBlackUpBankerReply) String() string { return proto.CompactTextString(m) }
func (*RedBlackUpBankerReply) ProtoMessage()    {}
func (*RedBlackUpBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{654}
}

func (m *RedBlackUpBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedBlackUpBankerReply.Unmarshal(m, b)
}
func (m *RedBlackUpBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedBlackUpBankerReply.Marshal(b, m, deterministic)
}
func (m *RedBlackUpBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedBlackUpBankerReply.Merge(m, src)
}
func (m *RedBlackUpBankerReply) XXX_Size() int {
	return xxx_messageInfo_RedBlackUpBankerReply.Size(m)
}
func (m *RedBlackUpBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RedBlackUpBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_RedBlackUpBankerReply proto.InternalMessageInfo

func (m *RedBlackUpBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *RedBlackUpBankerReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// --------------------------------------------------------------------------
// 红黑下庄请求（庄家下庄|从申请庄家列表退出）
// --------------------------------------------------------------------------
// 红黑申请下庄申请
type RedBlackDownBankerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedBlackDownBankerRequest) Reset()         { *m = RedBlackDownBankerRequest{} }
func (m *RedBlackDownBankerRequest) String() string { return proto.CompactTextString(m) }
func (*RedBlackDownBankerRequest) ProtoMessage()    {}
func (*RedBlackDownBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{655}
}

func (m *RedBlackDownBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedBlackDownBankerRequest.Unmarshal(m, b)
}
func (m *RedBlackDownBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedBlackDownBankerRequest.Marshal(b, m, deterministic)
}
func (m *RedBlackDownBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedBlackDownBankerRequest.Merge(m, src)
}
func (m *RedBlackDownBankerRequest) XXX_Size() int {
	return xxx_messageInfo_RedBlackDownBankerRequest.Size(m)
}
func (m *RedBlackDownBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RedBlackDownBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RedBlackDownBankerRequest proto.InternalMessageInfo

// 红黑申请下庄回复
type RedBlackDownBankerReply struct {
	// 下庄是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 房间Id
	RoomId               string   `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedBlackDownBankerReply) Reset()         { *m = RedBlackDownBankerReply{} }
func (m *RedBlackDownBankerReply) String() string { return proto.CompactTextString(m) }
func (*RedBlackDownBankerReply) ProtoMessage()    {}
func (*RedBlackDownBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{656}
}

func (m *RedBlackDownBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedBlackDownBankerReply.Unmarshal(m, b)
}
func (m *RedBlackDownBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedBlackDownBankerReply.Marshal(b, m, deterministic)
}
func (m *RedBlackDownBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedBlackDownBankerReply.Merge(m, src)
}
func (m *RedBlackDownBankerReply) XXX_Size() int {
	return xxx_messageInfo_RedBlackDownBankerReply.Size(m)
}
func (m *RedBlackDownBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RedBlackDownBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_RedBlackDownBankerReply proto.InternalMessageInfo

func (m *RedBlackDownBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *RedBlackDownBankerReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 红黑准备阶段初始化推送
type PushRedBlackReadyInit struct {
	// 房间id
	RoomId     string            `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	PlayerInfo []*RoomPlayerInfo `protobuf:"bytes,2,rep,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	// 红黑总注（玩家下注的总和） - 红黑幸运
	RedBlackAllBet       []int64  `protobuf:"varint,3,rep,packed,name=RedBlackAllBet,proto3" json:"RedBlackAllBet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRedBlackReadyInit) Reset()         { *m = PushRedBlackReadyInit{} }
func (m *PushRedBlackReadyInit) String() string { return proto.CompactTextString(m) }
func (*PushRedBlackReadyInit) ProtoMessage()    {}
func (*PushRedBlackReadyInit) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{657}
}

func (m *PushRedBlackReadyInit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRedBlackReadyInit.Unmarshal(m, b)
}
func (m *PushRedBlackReadyInit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRedBlackReadyInit.Marshal(b, m, deterministic)
}
func (m *PushRedBlackReadyInit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRedBlackReadyInit.Merge(m, src)
}
func (m *PushRedBlackReadyInit) XXX_Size() int {
	return xxx_messageInfo_PushRedBlackReadyInit.Size(m)
}
func (m *PushRedBlackReadyInit) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRedBlackReadyInit.DiscardUnknown(m)
}

var xxx_messageInfo_PushRedBlackReadyInit proto.InternalMessageInfo

func (m *PushRedBlackReadyInit) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushRedBlackReadyInit) GetPlayerInfo() []*RoomPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *PushRedBlackReadyInit) GetRedBlackAllBet() []int64 {
	if m != nil {
		return m.RedBlackAllBet
	}
	return nil
}

// 红黑玩家下注成功推送数组
type PushRedBlackPlayerBets struct {
	// 消息数组
	PushBets []*PushRedBlackPlayerBet `protobuf:"bytes,1,rep,name=PushBets,proto3" json:"PushBets,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRedBlackPlayerBets) Reset()         { *m = PushRedBlackPlayerBets{} }
func (m *PushRedBlackPlayerBets) String() string { return proto.CompactTextString(m) }
func (*PushRedBlackPlayerBets) ProtoMessage()    {}
func (*PushRedBlackPlayerBets) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{658}
}

func (m *PushRedBlackPlayerBets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRedBlackPlayerBets.Unmarshal(m, b)
}
func (m *PushRedBlackPlayerBets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRedBlackPlayerBets.Marshal(b, m, deterministic)
}
func (m *PushRedBlackPlayerBets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRedBlackPlayerBets.Merge(m, src)
}
func (m *PushRedBlackPlayerBets) XXX_Size() int {
	return xxx_messageInfo_PushRedBlackPlayerBets.Size(m)
}
func (m *PushRedBlackPlayerBets) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRedBlackPlayerBets.DiscardUnknown(m)
}

var xxx_messageInfo_PushRedBlackPlayerBets proto.InternalMessageInfo

func (m *PushRedBlackPlayerBets) GetPushBets() []*PushRedBlackPlayerBet {
	if m != nil {
		return m.PushBets
	}
	return nil
}

func (m *PushRedBlackPlayerBets) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 红黑玩家下注成功后的推送
type PushRedBlackPlayerBet struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 下注的玩家
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 玩家的投注
	PlayerBets []int64 `protobuf:"varint,3,rep,packed,name=PlayerBets,proto3" json:"PlayerBets,omitempty"`
	// 限红，红黑幸运
	MaxBetRatio []int64 `protobuf:"varint,4,rep,packed,name=MaxBetRatio,proto3" json:"MaxBetRatio,omitempty"`
	// 总注金额，红黑幸运
	AllBet []int64 `protobuf:"varint,5,rep,packed,name=AllBet,proto3" json:"AllBet,omitempty"`
	// 该玩家目前金币数
	PlayerBalance int64 `protobuf:"varint,6,opt,name=PlayerBalance,proto3" json:"PlayerBalance,omitempty"`
	// 玩家下注的区域
	BetArea RedBlackCardArea `protobuf:"varint,7,opt,name=BetArea,proto3,enum=RedBlackCardArea" json:"BetArea,omitempty"`
	// 玩家新增的这笔下注金额
	AddBalance           int64    `protobuf:"varint,8,opt,name=addBalance,proto3" json:"addBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRedBlackPlayerBet) Reset()         { *m = PushRedBlackPlayerBet{} }
func (m *PushRedBlackPlayerBet) String() string { return proto.CompactTextString(m) }
func (*PushRedBlackPlayerBet) ProtoMessage()    {}
func (*PushRedBlackPlayerBet) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{659}
}

func (m *PushRedBlackPlayerBet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRedBlackPlayerBet.Unmarshal(m, b)
}
func (m *PushRedBlackPlayerBet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRedBlackPlayerBet.Marshal(b, m, deterministic)
}
func (m *PushRedBlackPlayerBet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRedBlackPlayerBet.Merge(m, src)
}
func (m *PushRedBlackPlayerBet) XXX_Size() int {
	return xxx_messageInfo_PushRedBlackPlayerBet.Size(m)
}
func (m *PushRedBlackPlayerBet) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRedBlackPlayerBet.DiscardUnknown(m)
}

var xxx_messageInfo_PushRedBlackPlayerBet proto.InternalMessageInfo

func (m *PushRedBlackPlayerBet) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushRedBlackPlayerBet) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PushRedBlackPlayerBet) GetPlayerBets() []int64 {
	if m != nil {
		return m.PlayerBets
	}
	return nil
}

func (m *PushRedBlackPlayerBet) GetMaxBetRatio() []int64 {
	if m != nil {
		return m.MaxBetRatio
	}
	return nil
}

func (m *PushRedBlackPlayerBet) GetAllBet() []int64 {
	if m != nil {
		return m.AllBet
	}
	return nil
}

func (m *PushRedBlackPlayerBet) GetPlayerBalance() int64 {
	if m != nil {
		return m.PlayerBalance
	}
	return 0
}

func (m *PushRedBlackPlayerBet) GetBetArea() RedBlackCardArea {
	if m != nil {
		return m.BetArea
	}
	return RedBlackCardArea_RedBlackCardArea_None
}

func (m *PushRedBlackPlayerBet) GetAddBalance() int64 {
	if m != nil {
		return m.AddBalance
	}
	return 0
}

// 红黑上庄列表变动的推送
type PushRedBlackChangeBankers struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 现在庄家的等待队列
	Bankers              []string `protobuf:"bytes,2,rep,name=Bankers,proto3" json:"Bankers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRedBlackChangeBankers) Reset()         { *m = PushRedBlackChangeBankers{} }
func (m *PushRedBlackChangeBankers) String() string { return proto.CompactTextString(m) }
func (*PushRedBlackChangeBankers) ProtoMessage()    {}
func (*PushRedBlackChangeBankers) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{660}
}

func (m *PushRedBlackChangeBankers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRedBlackChangeBankers.Unmarshal(m, b)
}
func (m *PushRedBlackChangeBankers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRedBlackChangeBankers.Marshal(b, m, deterministic)
}
func (m *PushRedBlackChangeBankers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRedBlackChangeBankers.Merge(m, src)
}
func (m *PushRedBlackChangeBankers) XXX_Size() int {
	return xxx_messageInfo_PushRedBlackChangeBankers.Size(m)
}
func (m *PushRedBlackChangeBankers) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRedBlackChangeBankers.DiscardUnknown(m)
}

var xxx_messageInfo_PushRedBlackChangeBankers proto.InternalMessageInfo

func (m *PushRedBlackChangeBankers) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushRedBlackChangeBankers) GetBankers() []string {
	if m != nil {
		return m.Bankers
	}
	return nil
}

// 红黑输赢信息推送
type PushRedBlackWinInfos struct {
	// 房间Id
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 红黑输赢情况 近60局(可配置)
	RedBlackWinInfos     []*RedBlackWinInfo `protobuf:"bytes,2,rep,name=RedBlackWinInfos,proto3" json:"RedBlackWinInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PushRedBlackWinInfos) Reset()         { *m = PushRedBlackWinInfos{} }
func (m *PushRedBlackWinInfos) String() string { return proto.CompactTextString(m) }
func (*PushRedBlackWinInfos) ProtoMessage()    {}
func (*PushRedBlackWinInfos) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{661}
}

func (m *PushRedBlackWinInfos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRedBlackWinInfos.Unmarshal(m, b)
}
func (m *PushRedBlackWinInfos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRedBlackWinInfos.Marshal(b, m, deterministic)
}
func (m *PushRedBlackWinInfos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRedBlackWinInfos.Merge(m, src)
}
func (m *PushRedBlackWinInfos) XXX_Size() int {
	return xxx_messageInfo_PushRedBlackWinInfos.Size(m)
}
func (m *PushRedBlackWinInfos) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRedBlackWinInfos.DiscardUnknown(m)
}

var xxx_messageInfo_PushRedBlackWinInfos proto.InternalMessageInfo

func (m *PushRedBlackWinInfos) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushRedBlackWinInfos) GetRedBlackWinInfos() []*RedBlackWinInfo {
	if m != nil {
		return m.RedBlackWinInfos
	}
	return nil
}

// 麻将玩家所有牌
type MahjongPlayerInfo struct {
	// 玩家手牌
	HandRegion []*Mahjong `protobuf:"bytes,1,rep,name=handRegion,proto3" json:"handRegion,omitempty"`
	// 玩家手牌数
	HandCardsNum int32 `protobuf:"varint,2,opt,name=handCardsNum,proto3" json:"handCardsNum,omitempty"`
	// 玩家出牌区域的牌（不管其他玩家碰杠吃胡，不改值，需要记录则重新记录）
	OutputRegion []*Mahjong `protobuf:"bytes,3,rep,name=outputRegion,proto3" json:"outputRegion,omitempty"`
	// 玩家碰牌区域的牌
	PongRegion []*MahjongPongInfo `protobuf:"bytes,4,rep,name=PongRegion,proto3" json:"PongRegion,omitempty"`
	// 玩家杠牌区域的牌
	KongRegion []*MahjongKongInfo `protobuf:"bytes,5,rep,name=KongRegion,proto3" json:"KongRegion,omitempty"`
	// 玩家吃牌区域的牌
	ChowRegion []*Mahjong `protobuf:"bytes,6,rep,name=ChowRegion,proto3" json:"ChowRegion,omitempty"`
	// 玩家胡牌区域的牌
	WinRegion []*Mahjong `protobuf:"bytes,7,rep,name=WinRegion,proto3" json:"WinRegion,omitempty"`
	// 系统给玩家新发的牌(只有每次摸一张麻将时有值)
	NewMahjong *Mahjong `protobuf:"bytes,8,opt,name=newMahjong,proto3" json:"newMahjong,omitempty"`
	// 玩家当前局定缺花色
	BlankSuit MahjongColor `protobuf:"varint,9,opt,name=blankSuit,proto3,enum=MahjongColor" json:"blankSuit,omitempty"`
	// 玩家当前局余额变化(目前只支持杠牌的实时结算)
	SettleDetail []*MahjongSettleDetail `protobuf:"bytes,10,rep,name=settleDetail,proto3" json:"settleDetail,omitempty"`
	// 当前局操作信息
	WaitChoice           *MahjongWaitChoiceNotice `protobuf:"bytes,11,opt,name=waitChoice,proto3" json:"waitChoice,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MahjongPlayerInfo) Reset()         { *m = MahjongPlayerInfo{} }
func (m *MahjongPlayerInfo) String() string { return proto.CompactTextString(m) }
func (*MahjongPlayerInfo) ProtoMessage()    {}
func (*MahjongPlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{662}
}

func (m *MahjongPlayerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongPlayerInfo.Unmarshal(m, b)
}
func (m *MahjongPlayerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongPlayerInfo.Marshal(b, m, deterministic)
}
func (m *MahjongPlayerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongPlayerInfo.Merge(m, src)
}
func (m *MahjongPlayerInfo) XXX_Size() int {
	return xxx_messageInfo_MahjongPlayerInfo.Size(m)
}
func (m *MahjongPlayerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongPlayerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongPlayerInfo proto.InternalMessageInfo

func (m *MahjongPlayerInfo) GetHandRegion() []*Mahjong {
	if m != nil {
		return m.HandRegion
	}
	return nil
}

func (m *MahjongPlayerInfo) GetHandCardsNum() int32 {
	if m != nil {
		return m.HandCardsNum
	}
	return 0
}

func (m *MahjongPlayerInfo) GetOutputRegion() []*Mahjong {
	if m != nil {
		return m.OutputRegion
	}
	return nil
}

func (m *MahjongPlayerInfo) GetPongRegion() []*MahjongPongInfo {
	if m != nil {
		return m.PongRegion
	}
	return nil
}

func (m *MahjongPlayerInfo) GetKongRegion() []*MahjongKongInfo {
	if m != nil {
		return m.KongRegion
	}
	return nil
}

func (m *MahjongPlayerInfo) GetChowRegion() []*Mahjong {
	if m != nil {
		return m.ChowRegion
	}
	return nil
}

func (m *MahjongPlayerInfo) GetWinRegion() []*Mahjong {
	if m != nil {
		return m.WinRegion
	}
	return nil
}

func (m *MahjongPlayerInfo) GetNewMahjong() *Mahjong {
	if m != nil {
		return m.NewMahjong
	}
	return nil
}

func (m *MahjongPlayerInfo) GetBlankSuit() MahjongColor {
	if m != nil {
		return m.BlankSuit
	}
	return MahjongColor_MahjongColorNone
}

func (m *MahjongPlayerInfo) GetSettleDetail() []*MahjongSettleDetail {
	if m != nil {
		return m.SettleDetail
	}
	return nil
}

func (m *MahjongPlayerInfo) GetWaitChoice() *MahjongWaitChoiceNotice {
	if m != nil {
		return m.WaitChoice
	}
	return nil
}

// 临沧麻将操作请求
type LinCangMahjongDoRequest struct {
	// 想要进行的操作
	DoType LinCangMahjongDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=LinCangMahjongDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinCangMahjongDoRequest) Reset()         { *m = LinCangMahjongDoRequest{} }
func (m *LinCangMahjongDoRequest) String() string { return proto.CompactTextString(m) }
func (*LinCangMahjongDoRequest) ProtoMessage()    {}
func (*LinCangMahjongDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{663}
}

func (m *LinCangMahjongDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinCangMahjongDoRequest.Unmarshal(m, b)
}
func (m *LinCangMahjongDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinCangMahjongDoRequest.Marshal(b, m, deterministic)
}
func (m *LinCangMahjongDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinCangMahjongDoRequest.Merge(m, src)
}
func (m *LinCangMahjongDoRequest) XXX_Size() int {
	return xxx_messageInfo_LinCangMahjongDoRequest.Size(m)
}
func (m *LinCangMahjongDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LinCangMahjongDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LinCangMahjongDoRequest proto.InternalMessageInfo

func (m *LinCangMahjongDoRequest) GetDoType() LinCangMahjongDoType {
	if m != nil {
		return m.DoType
	}
	return LinCangMahjongDoType_LinCangMahjong_None
}

func (m *LinCangMahjongDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 临沧麻将操作回复
type LinCangMahjongDoReply struct {
	OperateType LinCangMahjongDoType `protobuf:"varint,1,opt,name=operateType,proto3,enum=LinCangMahjongDoType" json:"operateType,omitempty"`
	//当前操作玩家uuid
	DoUuid               string   `protobuf:"bytes,2,opt,name=doUuid,proto3" json:"doUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinCangMahjongDoReply) Reset()         { *m = LinCangMahjongDoReply{} }
func (m *LinCangMahjongDoReply) String() string { return proto.CompactTextString(m) }
func (*LinCangMahjongDoReply) ProtoMessage()    {}
func (*LinCangMahjongDoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{664}
}

func (m *LinCangMahjongDoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinCangMahjongDoReply.Unmarshal(m, b)
}
func (m *LinCangMahjongDoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinCangMahjongDoReply.Marshal(b, m, deterministic)
}
func (m *LinCangMahjongDoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinCangMahjongDoReply.Merge(m, src)
}
func (m *LinCangMahjongDoReply) XXX_Size() int {
	return xxx_messageInfo_LinCangMahjongDoReply.Size(m)
}
func (m *LinCangMahjongDoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LinCangMahjongDoReply.DiscardUnknown(m)
}

var xxx_messageInfo_LinCangMahjongDoReply proto.InternalMessageInfo

func (m *LinCangMahjongDoReply) GetOperateType() LinCangMahjongDoType {
	if m != nil {
		return m.OperateType
	}
	return LinCangMahjongDoType_LinCangMahjong_None
}

func (m *LinCangMahjongDoReply) GetDoUuid() string {
	if m != nil {
		return m.DoUuid
	}
	return ""
}

// 血战麻将操作请求
type XueZhanMahjongDoRequest struct {
	// 想要进行的操作
	DoType XueZhanMahjongDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=XueZhanMahjongDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XueZhanMahjongDoRequest) Reset()         { *m = XueZhanMahjongDoRequest{} }
func (m *XueZhanMahjongDoRequest) String() string { return proto.CompactTextString(m) }
func (*XueZhanMahjongDoRequest) ProtoMessage()    {}
func (*XueZhanMahjongDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{665}
}

func (m *XueZhanMahjongDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XueZhanMahjongDoRequest.Unmarshal(m, b)
}
func (m *XueZhanMahjongDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XueZhanMahjongDoRequest.Marshal(b, m, deterministic)
}
func (m *XueZhanMahjongDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XueZhanMahjongDoRequest.Merge(m, src)
}
func (m *XueZhanMahjongDoRequest) XXX_Size() int {
	return xxx_messageInfo_XueZhanMahjongDoRequest.Size(m)
}
func (m *XueZhanMahjongDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_XueZhanMahjongDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_XueZhanMahjongDoRequest proto.InternalMessageInfo

func (m *XueZhanMahjongDoRequest) GetDoType() XueZhanMahjongDoType {
	if m != nil {
		return m.DoType
	}
	return XueZhanMahjongDoType_XueZhanMahjong_None
}

func (m *XueZhanMahjongDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 血战麻将操作回复
type XueZhanMahjongDoReply struct {
	OperateType XueZhanMahjongDoType `protobuf:"varint,1,opt,name=operateType,proto3,enum=XueZhanMahjongDoType" json:"operateType,omitempty"`
	//当前操作玩家uuid
	DoUuid               string   `protobuf:"bytes,2,opt,name=doUuid,proto3" json:"doUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XueZhanMahjongDoReply) Reset()         { *m = XueZhanMahjongDoReply{} }
func (m *XueZhanMahjongDoReply) String() string { return proto.CompactTextString(m) }
func (*XueZhanMahjongDoReply) ProtoMessage()    {}
func (*XueZhanMahjongDoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{666}
}

func (m *XueZhanMahjongDoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XueZhanMahjongDoReply.Unmarshal(m, b)
}
func (m *XueZhanMahjongDoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XueZhanMahjongDoReply.Marshal(b, m, deterministic)
}
func (m *XueZhanMahjongDoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XueZhanMahjongDoReply.Merge(m, src)
}
func (m *XueZhanMahjongDoReply) XXX_Size() int {
	return xxx_messageInfo_XueZhanMahjongDoReply.Size(m)
}
func (m *XueZhanMahjongDoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_XueZhanMahjongDoReply.DiscardUnknown(m)
}

var xxx_messageInfo_XueZhanMahjongDoReply proto.InternalMessageInfo

func (m *XueZhanMahjongDoReply) GetOperateType() XueZhanMahjongDoType {
	if m != nil {
		return m.OperateType
	}
	return XueZhanMahjongDoType_XueZhanMahjong_None
}

func (m *XueZhanMahjongDoReply) GetDoUuid() string {
	if m != nil {
		return m.DoUuid
	}
	return ""
}

// 麻将出牌信息
type MahjongOutputInfo struct {
	// 出牌的玩家索引
	OutputPlayerIndex int32 `protobuf:"varint,1,opt,name=outputPlayerIndex,proto3" json:"outputPlayerIndex,omitempty"`
	// 出牌玩家uuid 与 索引保持一致
	OutputPlayerUuid string `protobuf:"bytes,2,opt,name=outputPlayerUuid,proto3" json:"outputPlayerUuid,omitempty"`
	// 出的牌
	OutputMahjongCard *Mahjong `protobuf:"bytes,3,opt,name=outputMahjongCard,proto3" json:"outputMahjongCard,omitempty"`
	// 是否需要隐藏（此牌被其他玩家碰杠胡时需要）
	BHide                bool     `protobuf:"varint,4,opt,name=bHide,proto3" json:"bHide,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongOutputInfo) Reset()         { *m = MahjongOutputInfo{} }
func (m *MahjongOutputInfo) String() string { return proto.CompactTextString(m) }
func (*MahjongOutputInfo) ProtoMessage()    {}
func (*MahjongOutputInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{667}
}

func (m *MahjongOutputInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongOutputInfo.Unmarshal(m, b)
}
func (m *MahjongOutputInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongOutputInfo.Marshal(b, m, deterministic)
}
func (m *MahjongOutputInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongOutputInfo.Merge(m, src)
}
func (m *MahjongOutputInfo) XXX_Size() int {
	return xxx_messageInfo_MahjongOutputInfo.Size(m)
}
func (m *MahjongOutputInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongOutputInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongOutputInfo proto.InternalMessageInfo

func (m *MahjongOutputInfo) GetOutputPlayerIndex() int32 {
	if m != nil {
		return m.OutputPlayerIndex
	}
	return 0
}

func (m *MahjongOutputInfo) GetOutputPlayerUuid() string {
	if m != nil {
		return m.OutputPlayerUuid
	}
	return ""
}

func (m *MahjongOutputInfo) GetOutputMahjongCard() *Mahjong {
	if m != nil {
		return m.OutputMahjongCard
	}
	return nil
}

func (m *MahjongOutputInfo) GetBHide() bool {
	if m != nil {
		return m.BHide
	}
	return false
}

// 麻将碰牌信息
type MahjongPongInfo struct {
	// 碰牌的玩家索引
	PongPlayerIndex int32 `protobuf:"varint,1,opt,name=pongPlayerIndex,proto3" json:"pongPlayerIndex,omitempty"`
	// 碰牌的玩家uuid 与 索引保持一致
	PongPlayerUuid string `protobuf:"bytes,2,opt,name=pongPlayerUuid,proto3" json:"pongPlayerUuid,omitempty"`
	// 碰牌
	PongMahjongCard *Mahjong `protobuf:"bytes,4,opt,name=pongMahjongCard,proto3" json:"pongMahjongCard,omitempty"`
	// 点碰的玩家索引
	MakePongPlayerIndex int32 `protobuf:"varint,5,opt,name=makePongPlayerIndex,proto3" json:"makePongPlayerIndex,omitempty"`
	// 点碰的玩家uuid 与 索引保持一致
	MakePongPlayerUuid   string   `protobuf:"bytes,6,opt,name=makePongPlayerUuid,proto3" json:"makePongPlayerUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongPongInfo) Reset()         { *m = MahjongPongInfo{} }
func (m *MahjongPongInfo) String() string { return proto.CompactTextString(m) }
func (*MahjongPongInfo) ProtoMessage()    {}
func (*MahjongPongInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{668}
}

func (m *MahjongPongInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongPongInfo.Unmarshal(m, b)
}
func (m *MahjongPongInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongPongInfo.Marshal(b, m, deterministic)
}
func (m *MahjongPongInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongPongInfo.Merge(m, src)
}
func (m *MahjongPongInfo) XXX_Size() int {
	return xxx_messageInfo_MahjongPongInfo.Size(m)
}
func (m *MahjongPongInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongPongInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongPongInfo proto.InternalMessageInfo

func (m *MahjongPongInfo) GetPongPlayerIndex() int32 {
	if m != nil {
		return m.PongPlayerIndex
	}
	return 0
}

func (m *MahjongPongInfo) GetPongPlayerUuid() string {
	if m != nil {
		return m.PongPlayerUuid
	}
	return ""
}

func (m *MahjongPongInfo) GetPongMahjongCard() *Mahjong {
	if m != nil {
		return m.PongMahjongCard
	}
	return nil
}

func (m *MahjongPongInfo) GetMakePongPlayerIndex() int32 {
	if m != nil {
		return m.MakePongPlayerIndex
	}
	return 0
}

func (m *MahjongPongInfo) GetMakePongPlayerUuid() string {
	if m != nil {
		return m.MakePongPlayerUuid
	}
	return ""
}

// 麻将杠牌信息
type MahjongKongInfo struct {
	// 杠牌的玩家索引（无论是点杠、巴杠、暗杠)
	KongPlayerIndex int32 `protobuf:"varint,1,opt,name=kongPlayerIndex,proto3" json:"kongPlayerIndex,omitempty"`
	// 杠牌的玩家uuid 与 索引保持一致
	KongPlayerUuid string `protobuf:"bytes,2,opt,name=kongPlayerUuid,proto3" json:"kongPlayerUuid,omitempty"`
	// 杠牌枚举
	Kong MahjongKongEnum `protobuf:"varint,3,opt,name=kong,proto3,enum=MahjongKongEnum" json:"kong,omitempty"`
	// 杠牌
	KongMahjongCard *Mahjong `protobuf:"bytes,4,opt,name=kongMahjongCard,proto3" json:"kongMahjongCard,omitempty"`
	// 杠的玩家索引(当杠牌类型为直杠时，出牌玩家的index;当杠牌类型为巴杠时，出牌玩家的index;当杠牌类型为暗杠时，自己)
	MakeKongPlayerIndex int32 `protobuf:"varint,5,opt,name=makeKongPlayerIndex,proto3" json:"makeKongPlayerIndex,omitempty"`
	// 杠的玩家uuid 与 索引保持一致
	MakeKongPlayerUuid   string   `protobuf:"bytes,6,opt,name=makeKongPlayerUuid,proto3" json:"makeKongPlayerUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongKongInfo) Reset()         { *m = MahjongKongInfo{} }
func (m *MahjongKongInfo) String() string { return proto.CompactTextString(m) }
func (*MahjongKongInfo) ProtoMessage()    {}
func (*MahjongKongInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{669}
}

func (m *MahjongKongInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongKongInfo.Unmarshal(m, b)
}
func (m *MahjongKongInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongKongInfo.Marshal(b, m, deterministic)
}
func (m *MahjongKongInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongKongInfo.Merge(m, src)
}
func (m *MahjongKongInfo) XXX_Size() int {
	return xxx_messageInfo_MahjongKongInfo.Size(m)
}
func (m *MahjongKongInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongKongInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongKongInfo proto.InternalMessageInfo

func (m *MahjongKongInfo) GetKongPlayerIndex() int32 {
	if m != nil {
		return m.KongPlayerIndex
	}
	return 0
}

func (m *MahjongKongInfo) GetKongPlayerUuid() string {
	if m != nil {
		return m.KongPlayerUuid
	}
	return ""
}

func (m *MahjongKongInfo) GetKong() MahjongKongEnum {
	if m != nil {
		return m.Kong
	}
	return MahjongKongEnum_MahjongKongEnumUndefine
}

func (m *MahjongKongInfo) GetKongMahjongCard() *Mahjong {
	if m != nil {
		return m.KongMahjongCard
	}
	return nil
}

func (m *MahjongKongInfo) GetMakeKongPlayerIndex() int32 {
	if m != nil {
		return m.MakeKongPlayerIndex
	}
	return 0
}

func (m *MahjongKongInfo) GetMakeKongPlayerUuid() string {
	if m != nil {
		return m.MakeKongPlayerUuid
	}
	return ""
}

// 麻将胡牌信息
type MahjongWinInfo struct {
	// 胡牌玩家的索引
	WinPlayerIndex int32 `protobuf:"varint,1,opt,name=winPlayerIndex,proto3" json:"winPlayerIndex,omitempty"`
	// 胡牌玩家的uuid
	WinPlayerUuid string `protobuf:"bytes,2,opt,name=winPlayerUuid,proto3" json:"winPlayerUuid,omitempty"`
	// 胡的是哪张牌
	WinCard *Mahjong `protobuf:"bytes,3,opt,name=winCard,proto3" json:"winCard,omitempty"`
	// 胡牌类型
	WinType []MahjongWinEnum `protobuf:"varint,4,rep,packed,name=winType,proto3,enum=MahjongWinEnum" json:"winType,omitempty"`
	// 胡牌来源
	WinSource MahjongWinSourceEnum `protobuf:"varint,5,opt,name=winSource,proto3,enum=MahjongWinSourceEnum" json:"winSource,omitempty"`
	// 点炮的玩家(胡牌来源为点炮、杠上炮、抢杠胡时有值)
	OutputPlayerIndex int32 `protobuf:"varint,6,opt,name=outputPlayerIndex,proto3" json:"outputPlayerIndex,omitempty"`
	// 点炮玩家的出牌区(玩家点炮时有值)
	OutputCards []*Mahjong `protobuf:"bytes,7,rep,name=outputCards,proto3" json:"outputCards,omitempty"`
	// 点炮玩家的碰牌区(玩家抢杠胡时有值)
	PongInfo []*MahjongPongInfo `protobuf:"bytes,8,rep,name=pongInfo,proto3" json:"pongInfo,omitempty"`
	// 点炮玩家的杠牌区(玩家抢杠胡时有值)
	KongInfo []*MahjongKongInfo `protobuf:"bytes,9,rep,name=kongInfo,proto3" json:"kongInfo,omitempty"`
	// 结算的分数
	WinScore             int64    `protobuf:"varint,10,opt,name=winScore,proto3" json:"winScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongWinInfo) Reset()         { *m = MahjongWinInfo{} }
func (m *MahjongWinInfo) String() string { return proto.CompactTextString(m) }
func (*MahjongWinInfo) ProtoMessage()    {}
func (*MahjongWinInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{670}
}

func (m *MahjongWinInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongWinInfo.Unmarshal(m, b)
}
func (m *MahjongWinInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongWinInfo.Marshal(b, m, deterministic)
}
func (m *MahjongWinInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongWinInfo.Merge(m, src)
}
func (m *MahjongWinInfo) XXX_Size() int {
	return xxx_messageInfo_MahjongWinInfo.Size(m)
}
func (m *MahjongWinInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongWinInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongWinInfo proto.InternalMessageInfo

func (m *MahjongWinInfo) GetWinPlayerIndex() int32 {
	if m != nil {
		return m.WinPlayerIndex
	}
	return 0
}

func (m *MahjongWinInfo) GetWinPlayerUuid() string {
	if m != nil {
		return m.WinPlayerUuid
	}
	return ""
}

func (m *MahjongWinInfo) GetWinCard() *Mahjong {
	if m != nil {
		return m.WinCard
	}
	return nil
}

func (m *MahjongWinInfo) GetWinType() []MahjongWinEnum {
	if m != nil {
		return m.WinType
	}
	return nil
}

func (m *MahjongWinInfo) GetWinSource() MahjongWinSourceEnum {
	if m != nil {
		return m.WinSource
	}
	return MahjongWinSourceEnum_MahjongWinSourceEnumUndefined
}

func (m *MahjongWinInfo) GetOutputPlayerIndex() int32 {
	if m != nil {
		return m.OutputPlayerIndex
	}
	return 0
}

func (m *MahjongWinInfo) GetOutputCards() []*Mahjong {
	if m != nil {
		return m.OutputCards
	}
	return nil
}

func (m *MahjongWinInfo) GetPongInfo() []*MahjongPongInfo {
	if m != nil {
		return m.PongInfo
	}
	return nil
}

func (m *MahjongWinInfo) GetKongInfo() []*MahjongKongInfo {
	if m != nil {
		return m.KongInfo
	}
	return nil
}

func (m *MahjongWinInfo) GetWinScore() int64 {
	if m != nil {
		return m.WinScore
	}
	return 0
}

// 麻将结算前信息
type MahjongBeforeSettleInfo struct {
	// 玩家索引
	PlayerIndex int32 `protobuf:"varint,1,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 玩家uuid
	PlayerUuid string `protobuf:"bytes,2,opt,name=playerUuid,proto3" json:"playerUuid,omitempty"`
	// 变更原因
	BeforeSettle         MahjongBeforeSettleEnum `protobuf:"varint,3,opt,name=beforeSettle,proto3,enum=MahjongBeforeSettleEnum" json:"beforeSettle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *MahjongBeforeSettleInfo) Reset()         { *m = MahjongBeforeSettleInfo{} }
func (m *MahjongBeforeSettleInfo) String() string { return proto.CompactTextString(m) }
func (*MahjongBeforeSettleInfo) ProtoMessage()    {}
func (*MahjongBeforeSettleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{671}
}

func (m *MahjongBeforeSettleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongBeforeSettleInfo.Unmarshal(m, b)
}
func (m *MahjongBeforeSettleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongBeforeSettleInfo.Marshal(b, m, deterministic)
}
func (m *MahjongBeforeSettleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongBeforeSettleInfo.Merge(m, src)
}
func (m *MahjongBeforeSettleInfo) XXX_Size() int {
	return xxx_messageInfo_MahjongBeforeSettleInfo.Size(m)
}
func (m *MahjongBeforeSettleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongBeforeSettleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongBeforeSettleInfo proto.InternalMessageInfo

func (m *MahjongBeforeSettleInfo) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongBeforeSettleInfo) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *MahjongBeforeSettleInfo) GetBeforeSettle() MahjongBeforeSettleEnum {
	if m != nil {
		return m.BeforeSettle
	}
	return MahjongBeforeSettleEnum_MahjongBeforeSettleEnum_undefined
}

// 麻将听牌提示信息
type MahjongReadyDetail struct {
	// 玩家索引
	PlayerIndex int32 `protobuf:"varint,1,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 可以胡的牌
	WinCard *Mahjong `protobuf:"bytes,2,opt,name=winCard,proto3" json:"winCard,omitempty"`
	// 剩余牌的数量
	RemainCardNum int32 `protobuf:"varint,3,opt,name=remainCardNum,proto3" json:"remainCardNum,omitempty"`
	// 胡牌的类型
	Type []MahjongWinEnum `protobuf:"varint,4,rep,packed,name=type,proto3,enum=MahjongWinEnum" json:"type,omitempty"`
	// 胡牌的来源
	Source MahjongWinSourceEnum `protobuf:"varint,5,opt,name=source,proto3,enum=MahjongWinSourceEnum" json:"source,omitempty"`
	// 分数
	Score                int32    `protobuf:"varint,6,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongReadyDetail) Reset()         { *m = MahjongReadyDetail{} }
func (m *MahjongReadyDetail) String() string { return proto.CompactTextString(m) }
func (*MahjongReadyDetail) ProtoMessage()    {}
func (*MahjongReadyDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{672}
}

func (m *MahjongReadyDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongReadyDetail.Unmarshal(m, b)
}
func (m *MahjongReadyDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongReadyDetail.Marshal(b, m, deterministic)
}
func (m *MahjongReadyDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongReadyDetail.Merge(m, src)
}
func (m *MahjongReadyDetail) XXX_Size() int {
	return xxx_messageInfo_MahjongReadyDetail.Size(m)
}
func (m *MahjongReadyDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongReadyDetail.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongReadyDetail proto.InternalMessageInfo

func (m *MahjongReadyDetail) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongReadyDetail) GetWinCard() *Mahjong {
	if m != nil {
		return m.WinCard
	}
	return nil
}

func (m *MahjongReadyDetail) GetRemainCardNum() int32 {
	if m != nil {
		return m.RemainCardNum
	}
	return 0
}

func (m *MahjongReadyDetail) GetType() []MahjongWinEnum {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *MahjongReadyDetail) GetSource() MahjongWinSourceEnum {
	if m != nil {
		return m.Source
	}
	return MahjongWinSourceEnum_MahjongWinSourceEnumUndefined
}

func (m *MahjongReadyDetail) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

// 玩家手上的对子（仅用于房间信息记录)
type MahjongDoubles struct {
	// 玩家在房间中的索引
	PlayerIndex int32 `protobuf:"varint,1,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 玩家手上的对子
	Card                 *Mahjong `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongDoubles) Reset()         { *m = MahjongDoubles{} }
func (m *MahjongDoubles) String() string { return proto.CompactTextString(m) }
func (*MahjongDoubles) ProtoMessage()    {}
func (*MahjongDoubles) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{673}
}

func (m *MahjongDoubles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongDoubles.Unmarshal(m, b)
}
func (m *MahjongDoubles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongDoubles.Marshal(b, m, deterministic)
}
func (m *MahjongDoubles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongDoubles.Merge(m, src)
}
func (m *MahjongDoubles) XXX_Size() int {
	return xxx_messageInfo_MahjongDoubles.Size(m)
}
func (m *MahjongDoubles) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongDoubles.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongDoubles proto.InternalMessageInfo

func (m *MahjongDoubles) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongDoubles) GetCard() *Mahjong {
	if m != nil {
		return m.Card
	}
	return nil
}

// 玩家手上的刻子（仅用于房间信息记录)
type MahjongTriples struct {
	// 玩家在房间中的索引
	PlayerIndex int32 `protobuf:"varint,1,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 玩家手上的刻子
	Card                 *Mahjong `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongTriples) Reset()         { *m = MahjongTriples{} }
func (m *MahjongTriples) String() string { return proto.CompactTextString(m) }
func (*MahjongTriples) ProtoMessage()    {}
func (*MahjongTriples) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{674}
}

func (m *MahjongTriples) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongTriples.Unmarshal(m, b)
}
func (m *MahjongTriples) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongTriples.Marshal(b, m, deterministic)
}
func (m *MahjongTriples) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongTriples.Merge(m, src)
}
func (m *MahjongTriples) XXX_Size() int {
	return xxx_messageInfo_MahjongTriples.Size(m)
}
func (m *MahjongTriples) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongTriples.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongTriples proto.InternalMessageInfo

func (m *MahjongTriples) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongTriples) GetCard() *Mahjong {
	if m != nil {
		return m.Card
	}
	return nil
}

// 玩家手上的暗杠（仅用于房间信息记录)
type MahjongQuadruples struct {
	// 玩家在房间中的索引
	PlayerIndex int32 `protobuf:"varint,1,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 玩家手上的暗杠
	Card                 *Mahjong `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongQuadruples) Reset()         { *m = MahjongQuadruples{} }
func (m *MahjongQuadruples) String() string { return proto.CompactTextString(m) }
func (*MahjongQuadruples) ProtoMessage()    {}
func (*MahjongQuadruples) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{675}
}

func (m *MahjongQuadruples) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongQuadruples.Unmarshal(m, b)
}
func (m *MahjongQuadruples) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongQuadruples.Marshal(b, m, deterministic)
}
func (m *MahjongQuadruples) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongQuadruples.Merge(m, src)
}
func (m *MahjongQuadruples) XXX_Size() int {
	return xxx_messageInfo_MahjongQuadruples.Size(m)
}
func (m *MahjongQuadruples) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongQuadruples.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongQuadruples proto.InternalMessageInfo

func (m *MahjongQuadruples) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongQuadruples) GetCard() *Mahjong {
	if m != nil {
		return m.Card
	}
	return nil
}

// 麻将游戏中信息
type MahjongGameInfo struct {
	// 麻将牌墙
	MahjongCards []*Mahjong `protobuf:"bytes,1,rep,name=mahjongCards,proto3" json:"mahjongCards,omitempty"`
	// 麻将牌墙张数
	MahjongCardWallCount int32 `protobuf:"varint,2,opt,name=mahjongCardWallCount,proto3" json:"mahjongCardWallCount,omitempty"`
	// 本局明牌
	OpenMahjongCards []*Mahjong `protobuf:"bytes,3,rep,name=openMahjongCards,proto3" json:"openMahjongCards,omitempty"`
	// 本局所有碰牌信息记录
	PongInfo []*MahjongPongInfo `protobuf:"bytes,4,rep,name=pongInfo,proto3" json:"pongInfo,omitempty"`
	// 本局所有杠牌信息记录
	KongInfo []*MahjongKongInfo `protobuf:"bytes,5,rep,name=kongInfo,proto3" json:"kongInfo,omitempty"`
	// 本局所有出牌信息记录
	OutputInfo []*MahjongOutputInfo `protobuf:"bytes,6,rep,name=outputInfo,proto3" json:"outputInfo,omitempty"`
	// 本局当前玩家手牌分析结果
	IfOutputInfo []*MahjongReadyInfoIfOutput `protobuf:"bytes,7,rep,name=ifOutputInfo,proto3" json:"ifOutputInfo,omitempty"`
	// 本局所有听牌信息记录
	ReadyDetail []*MahjongReadyDetail `protobuf:"bytes,8,rep,name=readyDetail,proto3" json:"readyDetail,omitempty"`
	// 所有玩家手牌的对子
	Doubles []*MahjongDoubles `protobuf:"bytes,9,rep,name=doubles,proto3" json:"doubles,omitempty"`
	// 所有玩家手牌的刻子
	Triples []*MahjongTriples `protobuf:"bytes,10,rep,name=triples,proto3" json:"triples,omitempty"`
	// 所有玩家手牌的暗杠
	Quadruples []*MahjongQuadruples `protobuf:"bytes,11,rep,name=quadruples,proto3" json:"quadruples,omitempty"`
	// 是否有人杠牌(有人已经点杠、巴杠、暗杠时赋值，在另外一家出牌时设置为MahjongKongEnumUndefine=0，这样可以在杠上花、杠上炮、杠上杠时使用)
	Kong []MahjongKongEnum `protobuf:"varint,12,rep,packed,name=kong,proto3,enum=MahjongKongEnum" json:"kong,omitempty"`
	// 玩家出牌后，服务器等待玩家响应的所有操作记录
	WaitOperateRecord []*MahjongWaitOperateRecord `protobuf:"bytes,13,rep,name=waitOperateRecord,proto3" json:"waitOperateRecord,omitempty"`
	// 玩家出牌后，服务器在等待时间内已经被玩家响应的所有操作
	HasBeenOperatedRecord []*MahjongHasBeenOperatedRecord `protobuf:"bytes,14,rep,name=hasBeenOperatedRecord,proto3" json:"hasBeenOperatedRecord,omitempty"`
	// 被玩家杠走了多少张牌
	KongCardNum int32 `protobuf:"varint,15,opt,name=kongCardNum,proto3" json:"kongCardNum,omitempty"`
	// 玩家新摸的牌
	NewMahjong *Mahjong `protobuf:"bytes,16,opt,name=newMahjong,proto3" json:"newMahjong,omitempty"`
	// 此房间所有的胡牌信息
	WinInfo []*MahjongWinInfo `protobuf:"bytes,17,rep,name=winInfo,proto3" json:"winInfo,omitempty"`
	// 是否已经定缺(此变量可以作为流程控制)
	HasBeenBlankSuit bool `protobuf:"varint,18,opt,name=hasBeenBlankSuit,proto3" json:"hasBeenBlankSuit,omitempty"`
	// 本局定缺信息
	BlankSuit []MahjongColor `protobuf:"varint,19,rep,packed,name=blankSuit,proto3,enum=MahjongColor" json:"blankSuit,omitempty"`
	// 本局流水明细
	SettleDetail []*MahjongSettleDetail `protobuf:"bytes,20,rep,name=settleDetail,proto3" json:"settleDetail,omitempty"`
	// 本局是否流局
	BDraw bool `protobuf:"varint,21,opt,name=bDraw,proto3" json:"bDraw,omitempty"`
	// 是否有人刚刚碰牌
	BPong                bool     `protobuf:"varint,22,opt,name=bPong,proto3" json:"bPong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongGameInfo) Reset()         { *m = MahjongGameInfo{} }
func (m *MahjongGameInfo) String() string { return proto.CompactTextString(m) }
func (*MahjongGameInfo) ProtoMessage()    {}
func (*MahjongGameInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{676}
}

func (m *MahjongGameInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongGameInfo.Unmarshal(m, b)
}
func (m *MahjongGameInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongGameInfo.Marshal(b, m, deterministic)
}
func (m *MahjongGameInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongGameInfo.Merge(m, src)
}
func (m *MahjongGameInfo) XXX_Size() int {
	return xxx_messageInfo_MahjongGameInfo.Size(m)
}
func (m *MahjongGameInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongGameInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongGameInfo proto.InternalMessageInfo

func (m *MahjongGameInfo) GetMahjongCards() []*Mahjong {
	if m != nil {
		return m.MahjongCards
	}
	return nil
}

func (m *MahjongGameInfo) GetMahjongCardWallCount() int32 {
	if m != nil {
		return m.MahjongCardWallCount
	}
	return 0
}

func (m *MahjongGameInfo) GetOpenMahjongCards() []*Mahjong {
	if m != nil {
		return m.OpenMahjongCards
	}
	return nil
}

func (m *MahjongGameInfo) GetPongInfo() []*MahjongPongInfo {
	if m != nil {
		return m.PongInfo
	}
	return nil
}

func (m *MahjongGameInfo) GetKongInfo() []*MahjongKongInfo {
	if m != nil {
		return m.KongInfo
	}
	return nil
}

func (m *MahjongGameInfo) GetOutputInfo() []*MahjongOutputInfo {
	if m != nil {
		return m.OutputInfo
	}
	return nil
}

func (m *MahjongGameInfo) GetIfOutputInfo() []*MahjongReadyInfoIfOutput {
	if m != nil {
		return m.IfOutputInfo
	}
	return nil
}

func (m *MahjongGameInfo) GetReadyDetail() []*MahjongReadyDetail {
	if m != nil {
		return m.ReadyDetail
	}
	return nil
}

func (m *MahjongGameInfo) GetDoubles() []*MahjongDoubles {
	if m != nil {
		return m.Doubles
	}
	return nil
}

func (m *MahjongGameInfo) GetTriples() []*MahjongTriples {
	if m != nil {
		return m.Triples
	}
	return nil
}

func (m *MahjongGameInfo) GetQuadruples() []*MahjongQuadruples {
	if m != nil {
		return m.Quadruples
	}
	return nil
}

func (m *MahjongGameInfo) GetKong() []MahjongKongEnum {
	if m != nil {
		return m.Kong
	}
	return nil
}

func (m *MahjongGameInfo) GetWaitOperateRecord() []*MahjongWaitOperateRecord {
	if m != nil {
		return m.WaitOperateRecord
	}
	return nil
}

func (m *MahjongGameInfo) GetHasBeenOperatedRecord() []*MahjongHasBeenOperatedRecord {
	if m != nil {
		return m.HasBeenOperatedRecord
	}
	return nil
}

func (m *MahjongGameInfo) GetKongCardNum() int32 {
	if m != nil {
		return m.KongCardNum
	}
	return 0
}

func (m *MahjongGameInfo) GetNewMahjong() *Mahjong {
	if m != nil {
		return m.NewMahjong
	}
	return nil
}

func (m *MahjongGameInfo) GetWinInfo() []*MahjongWinInfo {
	if m != nil {
		return m.WinInfo
	}
	return nil
}

func (m *MahjongGameInfo) GetHasBeenBlankSuit() bool {
	if m != nil {
		return m.HasBeenBlankSuit
	}
	return false
}

func (m *MahjongGameInfo) GetBlankSuit() []MahjongColor {
	if m != nil {
		return m.BlankSuit
	}
	return nil
}

func (m *MahjongGameInfo) GetSettleDetail() []*MahjongSettleDetail {
	if m != nil {
		return m.SettleDetail
	}
	return nil
}

func (m *MahjongGameInfo) GetBDraw() bool {
	if m != nil {
		return m.BDraw
	}
	return false
}

func (m *MahjongGameInfo) GetBPong() bool {
	if m != nil {
		return m.BPong
	}
	return false
}

// 临沧麻将单局单个玩家结算记录
type LinCangMahjongPlayerSettle struct {
	// 玩家信息
	PlayerIndex int32  `protobuf:"varint,1,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	PlayerUuid  string `protobuf:"bytes,2,opt,name=playerUuid,proto3" json:"playerUuid,omitempty"`
	ShortId     string `protobuf:"bytes,3,opt,name=shortId,proto3" json:"shortId,omitempty"`
	// 玩家手牌信息
	HandCards []*Mahjong `protobuf:"bytes,4,rep,name=handCards,proto3" json:"handCards,omitempty"`
	// 所有玩家胡牌信息
	WinInfo *MahjongWinInfo `protobuf:"bytes,5,opt,name=winInfo,proto3" json:"winInfo,omitempty"`
	// 玩家杠牌输赢分数
	KongScore int32 `protobuf:"varint,6,opt,name=kongScore,proto3" json:"kongScore,omitempty"`
	// 玩家胡牌输赢分数
	WinScore int32 `protobuf:"varint,7,opt,name=winScore,proto3" json:"winScore,omitempty"`
	// 玩家总的输赢分数
	TotalScore           int32    `protobuf:"varint,8,opt,name=totalScore,proto3" json:"totalScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinCangMahjongPlayerSettle) Reset()         { *m = LinCangMahjongPlayerSettle{} }
func (m *LinCangMahjongPlayerSettle) String() string { return proto.CompactTextString(m) }
func (*LinCangMahjongPlayerSettle) ProtoMessage()    {}
func (*LinCangMahjongPlayerSettle) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{677}
}

func (m *LinCangMahjongPlayerSettle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinCangMahjongPlayerSettle.Unmarshal(m, b)
}
func (m *LinCangMahjongPlayerSettle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinCangMahjongPlayerSettle.Marshal(b, m, deterministic)
}
func (m *LinCangMahjongPlayerSettle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinCangMahjongPlayerSettle.Merge(m, src)
}
func (m *LinCangMahjongPlayerSettle) XXX_Size() int {
	return xxx_messageInfo_LinCangMahjongPlayerSettle.Size(m)
}
func (m *LinCangMahjongPlayerSettle) XXX_DiscardUnknown() {
	xxx_messageInfo_LinCangMahjongPlayerSettle.DiscardUnknown(m)
}

var xxx_messageInfo_LinCangMahjongPlayerSettle proto.InternalMessageInfo

func (m *LinCangMahjongPlayerSettle) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *LinCangMahjongPlayerSettle) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *LinCangMahjongPlayerSettle) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *LinCangMahjongPlayerSettle) GetHandCards() []*Mahjong {
	if m != nil {
		return m.HandCards
	}
	return nil
}

func (m *LinCangMahjongPlayerSettle) GetWinInfo() *MahjongWinInfo {
	if m != nil {
		return m.WinInfo
	}
	return nil
}

func (m *LinCangMahjongPlayerSettle) GetKongScore() int32 {
	if m != nil {
		return m.KongScore
	}
	return 0
}

func (m *LinCangMahjongPlayerSettle) GetWinScore() int32 {
	if m != nil {
		return m.WinScore
	}
	return 0
}

func (m *LinCangMahjongPlayerSettle) GetTotalScore() int32 {
	if m != nil {
		return m.TotalScore
	}
	return 0
}

// 临沧麻将单局结算记录
type LinCangMahjongSettle struct {
	PlayerSettle         []*LinCangMahjongPlayerSettle `protobuf:"bytes,1,rep,name=playerSettle,proto3" json:"playerSettle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *LinCangMahjongSettle) Reset()         { *m = LinCangMahjongSettle{} }
func (m *LinCangMahjongSettle) String() string { return proto.CompactTextString(m) }
func (*LinCangMahjongSettle) ProtoMessage()    {}
func (*LinCangMahjongSettle) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{678}
}

func (m *LinCangMahjongSettle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinCangMahjongSettle.Unmarshal(m, b)
}
func (m *LinCangMahjongSettle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinCangMahjongSettle.Marshal(b, m, deterministic)
}
func (m *LinCangMahjongSettle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinCangMahjongSettle.Merge(m, src)
}
func (m *LinCangMahjongSettle) XXX_Size() int {
	return xxx_messageInfo_LinCangMahjongSettle.Size(m)
}
func (m *LinCangMahjongSettle) XXX_DiscardUnknown() {
	xxx_messageInfo_LinCangMahjongSettle.DiscardUnknown(m)
}

var xxx_messageInfo_LinCangMahjongSettle proto.InternalMessageInfo

func (m *LinCangMahjongSettle) GetPlayerSettle() []*LinCangMahjongPlayerSettle {
	if m != nil {
		return m.PlayerSettle
	}
	return nil
}

// 临沧麻将房卡版建房配置
type LinCangMahjongCardCreateRoomConfig struct {
	// 玩法
	// 门清
	BNoPongKong bool `protobuf:"varint,1,opt,name=bNoPongKong,proto3" json:"bNoPongKong,omitempty"`
	// 五梅花
	BFivePlumBlossom bool `protobuf:"varint,2,opt,name=bFivePlumBlossom,proto3" json:"bFivePlumBlossom,omitempty"`
	// 七星
	BSevenStars bool `protobuf:"varint,3,opt,name=bSevenStars,proto3" json:"bSevenStars,omitempty"`
	// 十老头
	BTenOldMen bool `protobuf:"varint,4,opt,name=bTenOldMen,proto3" json:"bTenOldMen,omitempty"`
	// 天胡
	BDrawSky bool `protobuf:"varint,5,opt,name=bDrawSky,proto3" json:"bDrawSky,omitempty"`
	// 地胡
	BDiscardLand bool `protobuf:"varint,6,opt,name=bDiscardLand,proto3" json:"bDiscardLand,omitempty"`
	// 硬烂
	BHardBad bool `protobuf:"varint,7,opt,name=bHardBad,proto3" json:"bHardBad,omitempty"`
	// 卡绝张
	BMiddleLast bool `protobuf:"varint,8,opt,name=bMiddleLast,proto3" json:"bMiddleLast,omitempty"`
	// 边绝张
	BSideLast bool `protobuf:"varint,9,opt,name=bSideLast,proto3" json:"bSideLast,omitempty"`
	// 结算
	// 胡分相加 true为相加、false为相乘
	BPlus bool `protobuf:"varint,10,opt,name=bPlus,proto3" json:"bPlus,omitempty"`
	// 胡牌优先级(优先我胡7风、十老头还是优先其他人胡牌)
	BSevenStarsAndTenOldMenFirst bool     `protobuf:"varint,11,opt,name=bSevenStarsAndTenOldMenFirst,proto3" json:"bSevenStarsAndTenOldMenFirst,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *LinCangMahjongCardCreateRoomConfig) Reset()         { *m = LinCangMahjongCardCreateRoomConfig{} }
func (m *LinCangMahjongCardCreateRoomConfig) String() string { return proto.CompactTextString(m) }
func (*LinCangMahjongCardCreateRoomConfig) ProtoMessage()    {}
func (*LinCangMahjongCardCreateRoomConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{679}
}

func (m *LinCangMahjongCardCreateRoomConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinCangMahjongCardCreateRoomConfig.Unmarshal(m, b)
}
func (m *LinCangMahjongCardCreateRoomConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinCangMahjongCardCreateRoomConfig.Marshal(b, m, deterministic)
}
func (m *LinCangMahjongCardCreateRoomConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinCangMahjongCardCreateRoomConfig.Merge(m, src)
}
func (m *LinCangMahjongCardCreateRoomConfig) XXX_Size() int {
	return xxx_messageInfo_LinCangMahjongCardCreateRoomConfig.Size(m)
}
func (m *LinCangMahjongCardCreateRoomConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LinCangMahjongCardCreateRoomConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LinCangMahjongCardCreateRoomConfig proto.InternalMessageInfo

func (m *LinCangMahjongCardCreateRoomConfig) GetBNoPongKong() bool {
	if m != nil {
		return m.BNoPongKong
	}
	return false
}

func (m *LinCangMahjongCardCreateRoomConfig) GetBFivePlumBlossom() bool {
	if m != nil {
		return m.BFivePlumBlossom
	}
	return false
}

func (m *LinCangMahjongCardCreateRoomConfig) GetBSevenStars() bool {
	if m != nil {
		return m.BSevenStars
	}
	return false
}

func (m *LinCangMahjongCardCreateRoomConfig) GetBTenOldMen() bool {
	if m != nil {
		return m.BTenOldMen
	}
	return false
}

func (m *LinCangMahjongCardCreateRoomConfig) GetBDrawSky() bool {
	if m != nil {
		return m.BDrawSky
	}
	return false
}

func (m *LinCangMahjongCardCreateRoomConfig) GetBDiscardLand() bool {
	if m != nil {
		return m.BDiscardLand
	}
	return false
}

func (m *LinCangMahjongCardCreateRoomConfig) GetBHardBad() bool {
	if m != nil {
		return m.BHardBad
	}
	return false
}

func (m *LinCangMahjongCardCreateRoomConfig) GetBMiddleLast() bool {
	if m != nil {
		return m.BMiddleLast
	}
	return false
}

func (m *LinCangMahjongCardCreateRoomConfig) GetBSideLast() bool {
	if m != nil {
		return m.BSideLast
	}
	return false
}

func (m *LinCangMahjongCardCreateRoomConfig) GetBPlus() bool {
	if m != nil {
		return m.BPlus
	}
	return false
}

func (m *LinCangMahjongCardCreateRoomConfig) GetBSevenStarsAndTenOldMenFirst() bool {
	if m != nil {
		return m.BSevenStarsAndTenOldMenFirst
	}
	return false
}

// 麻将获取IfOutputInfo
type MahjongIfOutputRequest struct {
	// 房间信息
	RoomInfo *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	// 玩家信息
	PlayerInfo *RoomPlayerInfo `protobuf:"bytes,2,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	// 玩家索引
	PlayerIndex          int32    `protobuf:"varint,3,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongIfOutputRequest) Reset()         { *m = MahjongIfOutputRequest{} }
func (m *MahjongIfOutputRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongIfOutputRequest) ProtoMessage()    {}
func (*MahjongIfOutputRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{680}
}

func (m *MahjongIfOutputRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongIfOutputRequest.Unmarshal(m, b)
}
func (m *MahjongIfOutputRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongIfOutputRequest.Marshal(b, m, deterministic)
}
func (m *MahjongIfOutputRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongIfOutputRequest.Merge(m, src)
}
func (m *MahjongIfOutputRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongIfOutputRequest.Size(m)
}
func (m *MahjongIfOutputRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongIfOutputRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongIfOutputRequest proto.InternalMessageInfo

func (m *MahjongIfOutputRequest) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *MahjongIfOutputRequest) GetPlayerInfo() *RoomPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *MahjongIfOutputRequest) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

type MahjongIfOutputReply struct {
	IfOutputInfo []*MahjongReadyInfoIfOutput `protobuf:"bytes,1,rep,name=ifOutputInfo,proto3" json:"ifOutputInfo,omitempty"`
	// 能否自摸
	BCanSelfDrawnWin     bool     `protobuf:"varint,2,opt,name=bCanSelfDrawnWin,proto3" json:"bCanSelfDrawnWin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongIfOutputReply) Reset()         { *m = MahjongIfOutputReply{} }
func (m *MahjongIfOutputReply) String() string { return proto.CompactTextString(m) }
func (*MahjongIfOutputReply) ProtoMessage()    {}
func (*MahjongIfOutputReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{681}
}

func (m *MahjongIfOutputReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongIfOutputReply.Unmarshal(m, b)
}
func (m *MahjongIfOutputReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongIfOutputReply.Marshal(b, m, deterministic)
}
func (m *MahjongIfOutputReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongIfOutputReply.Merge(m, src)
}
func (m *MahjongIfOutputReply) XXX_Size() int {
	return xxx_messageInfo_MahjongIfOutputReply.Size(m)
}
func (m *MahjongIfOutputReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongIfOutputReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongIfOutputReply proto.InternalMessageInfo

func (m *MahjongIfOutputReply) GetIfOutputInfo() []*MahjongReadyInfoIfOutput {
	if m != nil {
		return m.IfOutputInfo
	}
	return nil
}

func (m *MahjongIfOutputReply) GetBCanSelfDrawnWin() bool {
	if m != nil {
		return m.BCanSelfDrawnWin
	}
	return false
}

type MahjongCanReadyRequest struct {
	// 麻将单局所有游戏信息
	GameInfo *MahjongGameInfo `protobuf:"bytes,1,opt,name=gameInfo,proto3" json:"gameInfo,omitempty"`
	// 玩家信息
	PlayerInfo *RoomPlayerInfo `protobuf:"bytes,2,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	// 玩家索引
	PlayerIndex int32 `protobuf:"varint,3,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 需要判断的手牌信息(可以是手牌，也可以是假设打出后的手牌)
	Cards                []*Mahjong `protobuf:"bytes,4,rep,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MahjongCanReadyRequest) Reset()         { *m = MahjongCanReadyRequest{} }
func (m *MahjongCanReadyRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongCanReadyRequest) ProtoMessage()    {}
func (*MahjongCanReadyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{682}
}

func (m *MahjongCanReadyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongCanReadyRequest.Unmarshal(m, b)
}
func (m *MahjongCanReadyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongCanReadyRequest.Marshal(b, m, deterministic)
}
func (m *MahjongCanReadyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongCanReadyRequest.Merge(m, src)
}
func (m *MahjongCanReadyRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongCanReadyRequest.Size(m)
}
func (m *MahjongCanReadyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongCanReadyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongCanReadyRequest proto.InternalMessageInfo

func (m *MahjongCanReadyRequest) GetGameInfo() *MahjongGameInfo {
	if m != nil {
		return m.GameInfo
	}
	return nil
}

func (m *MahjongCanReadyRequest) GetPlayerInfo() *RoomPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *MahjongCanReadyRequest) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongCanReadyRequest) GetCards() []*Mahjong {
	if m != nil {
		return m.Cards
	}
	return nil
}

type MahjongCanReadyReply struct {
	// 麻将玩家所有听牌信息
	ReadyDetail          []*MahjongReadyDetail `protobuf:"bytes,1,rep,name=readyDetail,proto3" json:"readyDetail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MahjongCanReadyReply) Reset()         { *m = MahjongCanReadyReply{} }
func (m *MahjongCanReadyReply) String() string { return proto.CompactTextString(m) }
func (*MahjongCanReadyReply) ProtoMessage()    {}
func (*MahjongCanReadyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{683}
}

func (m *MahjongCanReadyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongCanReadyReply.Unmarshal(m, b)
}
func (m *MahjongCanReadyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongCanReadyReply.Marshal(b, m, deterministic)
}
func (m *MahjongCanReadyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongCanReadyReply.Merge(m, src)
}
func (m *MahjongCanReadyReply) XXX_Size() int {
	return xxx_messageInfo_MahjongCanReadyReply.Size(m)
}
func (m *MahjongCanReadyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongCanReadyReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongCanReadyReply proto.InternalMessageInfo

func (m *MahjongCanReadyReply) GetReadyDetail() []*MahjongReadyDetail {
	if m != nil {
		return m.ReadyDetail
	}
	return nil
}

type MahjongReadyTypeAndScoreRequest struct {
	// 房间信息
	RoomInfo *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	// 听牌信息
	ReadyDetail []*MahjongReadyDetail `protobuf:"bytes,2,rep,name=readyDetail,proto3" json:"readyDetail,omitempty"`
	// 手牌信息
	HandCards            []*Mahjong `protobuf:"bytes,3,rep,name=handCards,proto3" json:"handCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MahjongReadyTypeAndScoreRequest) Reset()         { *m = MahjongReadyTypeAndScoreRequest{} }
func (m *MahjongReadyTypeAndScoreRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongReadyTypeAndScoreRequest) ProtoMessage()    {}
func (*MahjongReadyTypeAndScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{684}
}

func (m *MahjongReadyTypeAndScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongReadyTypeAndScoreRequest.Unmarshal(m, b)
}
func (m *MahjongReadyTypeAndScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongReadyTypeAndScoreRequest.Marshal(b, m, deterministic)
}
func (m *MahjongReadyTypeAndScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongReadyTypeAndScoreRequest.Merge(m, src)
}
func (m *MahjongReadyTypeAndScoreRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongReadyTypeAndScoreRequest.Size(m)
}
func (m *MahjongReadyTypeAndScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongReadyTypeAndScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongReadyTypeAndScoreRequest proto.InternalMessageInfo

func (m *MahjongReadyTypeAndScoreRequest) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *MahjongReadyTypeAndScoreRequest) GetReadyDetail() []*MahjongReadyDetail {
	if m != nil {
		return m.ReadyDetail
	}
	return nil
}

func (m *MahjongReadyTypeAndScoreRequest) GetHandCards() []*Mahjong {
	if m != nil {
		return m.HandCards
	}
	return nil
}

type MahjongReadyTypeAndScoreReply struct {
	ReadyDetail          []*MahjongReadyDetail `protobuf:"bytes,1,rep,name=readyDetail,proto3" json:"readyDetail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MahjongReadyTypeAndScoreReply) Reset()         { *m = MahjongReadyTypeAndScoreReply{} }
func (m *MahjongReadyTypeAndScoreReply) String() string { return proto.CompactTextString(m) }
func (*MahjongReadyTypeAndScoreReply) ProtoMessage()    {}
func (*MahjongReadyTypeAndScoreReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{685}
}

func (m *MahjongReadyTypeAndScoreReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongReadyTypeAndScoreReply.Unmarshal(m, b)
}
func (m *MahjongReadyTypeAndScoreReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongReadyTypeAndScoreReply.Marshal(b, m, deterministic)
}
func (m *MahjongReadyTypeAndScoreReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongReadyTypeAndScoreReply.Merge(m, src)
}
func (m *MahjongReadyTypeAndScoreReply) XXX_Size() int {
	return xxx_messageInfo_MahjongReadyTypeAndScoreReply.Size(m)
}
func (m *MahjongReadyTypeAndScoreReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongReadyTypeAndScoreReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongReadyTypeAndScoreReply proto.InternalMessageInfo

func (m *MahjongReadyTypeAndScoreReply) GetReadyDetail() []*MahjongReadyDetail {
	if m != nil {
		return m.ReadyDetail
	}
	return nil
}

type MahjongGetReadyTypeAndScore struct {
	// 玩家手牌区域的牌
	HandCards []int32 `protobuf:"varint,1,rep,packed,name=handCards,proto3" json:"handCards,omitempty"`
	// 玩家碰牌区域的牌
	PongCards []int32 `protobuf:"varint,2,rep,packed,name=pongCards,proto3" json:"pongCards,omitempty"`
	// 玩家杠牌区域的牌
	KongCards []int32 `protobuf:"varint,3,rep,packed,name=kongCards,proto3" json:"kongCards,omitempty"`
	// 可以胡的牌
	WinCard              int32    `protobuf:"varint,4,opt,name=winCard,proto3" json:"winCard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongGetReadyTypeAndScore) Reset()         { *m = MahjongGetReadyTypeAndScore{} }
func (m *MahjongGetReadyTypeAndScore) String() string { return proto.CompactTextString(m) }
func (*MahjongGetReadyTypeAndScore) ProtoMessage()    {}
func (*MahjongGetReadyTypeAndScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{686}
}

func (m *MahjongGetReadyTypeAndScore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongGetReadyTypeAndScore.Unmarshal(m, b)
}
func (m *MahjongGetReadyTypeAndScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongGetReadyTypeAndScore.Marshal(b, m, deterministic)
}
func (m *MahjongGetReadyTypeAndScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongGetReadyTypeAndScore.Merge(m, src)
}
func (m *MahjongGetReadyTypeAndScore) XXX_Size() int {
	return xxx_messageInfo_MahjongGetReadyTypeAndScore.Size(m)
}
func (m *MahjongGetReadyTypeAndScore) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongGetReadyTypeAndScore.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongGetReadyTypeAndScore proto.InternalMessageInfo

func (m *MahjongGetReadyTypeAndScore) GetHandCards() []int32 {
	if m != nil {
		return m.HandCards
	}
	return nil
}

func (m *MahjongGetReadyTypeAndScore) GetPongCards() []int32 {
	if m != nil {
		return m.PongCards
	}
	return nil
}

func (m *MahjongGetReadyTypeAndScore) GetKongCards() []int32 {
	if m != nil {
		return m.KongCards
	}
	return nil
}

func (m *MahjongGetReadyTypeAndScore) GetWinCard() int32 {
	if m != nil {
		return m.WinCard
	}
	return 0
}

type MahjongDealMahjongRequest struct {
	// 框架房间信息
	RoomInfo             *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MahjongDealMahjongRequest) Reset()         { *m = MahjongDealMahjongRequest{} }
func (m *MahjongDealMahjongRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongDealMahjongRequest) ProtoMessage()    {}
func (*MahjongDealMahjongRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{687}
}

func (m *MahjongDealMahjongRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongDealMahjongRequest.Unmarshal(m, b)
}
func (m *MahjongDealMahjongRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongDealMahjongRequest.Marshal(b, m, deterministic)
}
func (m *MahjongDealMahjongRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongDealMahjongRequest.Merge(m, src)
}
func (m *MahjongDealMahjongRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongDealMahjongRequest.Size(m)
}
func (m *MahjongDealMahjongRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongDealMahjongRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongDealMahjongRequest proto.InternalMessageInfo

func (m *MahjongDealMahjongRequest) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

type MahjongDealMahjongReply struct {
	// 框架房间信息
	RoomInfo             *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MahjongDealMahjongReply) Reset()         { *m = MahjongDealMahjongReply{} }
func (m *MahjongDealMahjongReply) String() string { return proto.CompactTextString(m) }
func (*MahjongDealMahjongReply) ProtoMessage()    {}
func (*MahjongDealMahjongReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{688}
}

func (m *MahjongDealMahjongReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongDealMahjongReply.Unmarshal(m, b)
}
func (m *MahjongDealMahjongReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongDealMahjongReply.Marshal(b, m, deterministic)
}
func (m *MahjongDealMahjongReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongDealMahjongReply.Merge(m, src)
}
func (m *MahjongDealMahjongReply) XXX_Size() int {
	return xxx_messageInfo_MahjongDealMahjongReply.Size(m)
}
func (m *MahjongDealMahjongReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongDealMahjongReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongDealMahjongReply proto.InternalMessageInfo

func (m *MahjongDealMahjongReply) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

type MahjongDrawMahjongRequest struct {
	// 临沧麻将单局所有游戏信息
	RoomInfo             *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MahjongDrawMahjongRequest) Reset()         { *m = MahjongDrawMahjongRequest{} }
func (m *MahjongDrawMahjongRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongDrawMahjongRequest) ProtoMessage()    {}
func (*MahjongDrawMahjongRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{689}
}

func (m *MahjongDrawMahjongRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongDrawMahjongRequest.Unmarshal(m, b)
}
func (m *MahjongDrawMahjongRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongDrawMahjongRequest.Marshal(b, m, deterministic)
}
func (m *MahjongDrawMahjongRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongDrawMahjongRequest.Merge(m, src)
}
func (m *MahjongDrawMahjongRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongDrawMahjongRequest.Size(m)
}
func (m *MahjongDrawMahjongRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongDrawMahjongRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongDrawMahjongRequest proto.InternalMessageInfo

func (m *MahjongDrawMahjongRequest) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

type MahjongReadyInfoIfOutput struct {
	// 如果打出去的牌
	IfOutputCard *Mahjong `protobuf:"bytes,1,opt,name=ifOutputCard,proto3" json:"ifOutputCard,omitempty"`
	// 听牌详细信息
	ReadyDetail          []*MahjongReadyDetail `protobuf:"bytes,2,rep,name=readyDetail,proto3" json:"readyDetail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MahjongReadyInfoIfOutput) Reset()         { *m = MahjongReadyInfoIfOutput{} }
func (m *MahjongReadyInfoIfOutput) String() string { return proto.CompactTextString(m) }
func (*MahjongReadyInfoIfOutput) ProtoMessage()    {}
func (*MahjongReadyInfoIfOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{690}
}

func (m *MahjongReadyInfoIfOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongReadyInfoIfOutput.Unmarshal(m, b)
}
func (m *MahjongReadyInfoIfOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongReadyInfoIfOutput.Marshal(b, m, deterministic)
}
func (m *MahjongReadyInfoIfOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongReadyInfoIfOutput.Merge(m, src)
}
func (m *MahjongReadyInfoIfOutput) XXX_Size() int {
	return xxx_messageInfo_MahjongReadyInfoIfOutput.Size(m)
}
func (m *MahjongReadyInfoIfOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongReadyInfoIfOutput.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongReadyInfoIfOutput proto.InternalMessageInfo

func (m *MahjongReadyInfoIfOutput) GetIfOutputCard() *Mahjong {
	if m != nil {
		return m.IfOutputCard
	}
	return nil
}

func (m *MahjongReadyInfoIfOutput) GetReadyDetail() []*MahjongReadyDetail {
	if m != nil {
		return m.ReadyDetail
	}
	return nil
}

type MahjongDrawMahjongReply struct {
	// 房间信息
	RoomInfo *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	// 杠(包括巴杠和暗杠)
	Kong []*MahjongKongInfo `protobuf:"bytes,2,rep,name=kong,proto3" json:"kong,omitempty"`
	// 能否自摸
	CanSelfDrawnWin      bool     `protobuf:"varint,3,opt,name=canSelfDrawnWin,proto3" json:"canSelfDrawnWin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongDrawMahjongReply) Reset()         { *m = MahjongDrawMahjongReply{} }
func (m *MahjongDrawMahjongReply) String() string { return proto.CompactTextString(m) }
func (*MahjongDrawMahjongReply) ProtoMessage()    {}
func (*MahjongDrawMahjongReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{691}
}

func (m *MahjongDrawMahjongReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongDrawMahjongReply.Unmarshal(m, b)
}
func (m *MahjongDrawMahjongReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongDrawMahjongReply.Marshal(b, m, deterministic)
}
func (m *MahjongDrawMahjongReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongDrawMahjongReply.Merge(m, src)
}
func (m *MahjongDrawMahjongReply) XXX_Size() int {
	return xxx_messageInfo_MahjongDrawMahjongReply.Size(m)
}
func (m *MahjongDrawMahjongReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongDrawMahjongReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongDrawMahjongReply proto.InternalMessageInfo

func (m *MahjongDrawMahjongReply) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *MahjongDrawMahjongReply) GetKong() []*MahjongKongInfo {
	if m != nil {
		return m.Kong
	}
	return nil
}

func (m *MahjongDrawMahjongReply) GetCanSelfDrawnWin() bool {
	if m != nil {
		return m.CanSelfDrawnWin
	}
	return false
}

type MahjongOutputMahjongRequest struct {
	// 房间信息
	RoomInfo *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	// 出的牌
	OutputMahjongCard    *Mahjong `protobuf:"bytes,2,opt,name=outputMahjongCard,proto3" json:"outputMahjongCard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongOutputMahjongRequest) Reset()         { *m = MahjongOutputMahjongRequest{} }
func (m *MahjongOutputMahjongRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongOutputMahjongRequest) ProtoMessage()    {}
func (*MahjongOutputMahjongRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{692}
}

func (m *MahjongOutputMahjongRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongOutputMahjongRequest.Unmarshal(m, b)
}
func (m *MahjongOutputMahjongRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongOutputMahjongRequest.Marshal(b, m, deterministic)
}
func (m *MahjongOutputMahjongRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongOutputMahjongRequest.Merge(m, src)
}
func (m *MahjongOutputMahjongRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongOutputMahjongRequest.Size(m)
}
func (m *MahjongOutputMahjongRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongOutputMahjongRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongOutputMahjongRequest proto.InternalMessageInfo

func (m *MahjongOutputMahjongRequest) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *MahjongOutputMahjongRequest) GetOutputMahjongCard() *Mahjong {
	if m != nil {
		return m.OutputMahjongCard
	}
	return nil
}

// 玩家出牌后，服务器等待玩家响应的操作记录
type MahjongWaitOperateRecord struct {
	// 有权限操作的玩家索引
	PlayerIndex int32 `protobuf:"varint,1,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 玩家可以进行的操作
	OperateType MahjongOperateEnum `protobuf:"varint,2,opt,name=operateType,proto3,enum=MahjongOperateEnum" json:"operateType,omitempty"`
	// 是不是七星
	BSevenStars bool `protobuf:"varint,3,opt,name=bSevenStars,proto3" json:"bSevenStars,omitempty"`
	// 是不是十老头
	BTenOldMen           bool     `protobuf:"varint,4,opt,name=bTenOldMen,proto3" json:"bTenOldMen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongWaitOperateRecord) Reset()         { *m = MahjongWaitOperateRecord{} }
func (m *MahjongWaitOperateRecord) String() string { return proto.CompactTextString(m) }
func (*MahjongWaitOperateRecord) ProtoMessage()    {}
func (*MahjongWaitOperateRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{693}
}

func (m *MahjongWaitOperateRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongWaitOperateRecord.Unmarshal(m, b)
}
func (m *MahjongWaitOperateRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongWaitOperateRecord.Marshal(b, m, deterministic)
}
func (m *MahjongWaitOperateRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongWaitOperateRecord.Merge(m, src)
}
func (m *MahjongWaitOperateRecord) XXX_Size() int {
	return xxx_messageInfo_MahjongWaitOperateRecord.Size(m)
}
func (m *MahjongWaitOperateRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongWaitOperateRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongWaitOperateRecord proto.InternalMessageInfo

func (m *MahjongWaitOperateRecord) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongWaitOperateRecord) GetOperateType() MahjongOperateEnum {
	if m != nil {
		return m.OperateType
	}
	return MahjongOperateEnum_MahjongOperateEnumUndefine
}

func (m *MahjongWaitOperateRecord) GetBSevenStars() bool {
	if m != nil {
		return m.BSevenStars
	}
	return false
}

func (m *MahjongWaitOperateRecord) GetBTenOldMen() bool {
	if m != nil {
		return m.BTenOldMen
	}
	return false
}

// 玩家出牌后，服务器在等待时间内已经被玩家响应的所有操作
type MahjongHasBeenOperatedRecord struct {
	// 有权限操作的玩家索引
	PlayerIndex int32 `protobuf:"varint,1,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 玩家已经响应的操作
	HasBeOperateType MahjongOperateEnum `protobuf:"varint,2,opt,name=hasBeOperateType,proto3,enum=MahjongOperateEnum" json:"hasBeOperateType,omitempty"`
	// 是不是七星
	BSevenStars bool `protobuf:"varint,3,opt,name=bSevenStars,proto3" json:"bSevenStars,omitempty"`
	// 是不是十老头
	BTenOldMen bool `protobuf:"varint,4,opt,name=bTenOldMen,proto3" json:"bTenOldMen,omitempty"`
	// 杠的牌(有玩家可以胡牌，另一家可以杠牌，可杠玩家选择杠操作时，有值)
	KongCard             *Mahjong `protobuf:"bytes,5,opt,name=kongCard,proto3" json:"kongCard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongHasBeenOperatedRecord) Reset()         { *m = MahjongHasBeenOperatedRecord{} }
func (m *MahjongHasBeenOperatedRecord) String() string { return proto.CompactTextString(m) }
func (*MahjongHasBeenOperatedRecord) ProtoMessage()    {}
func (*MahjongHasBeenOperatedRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{694}
}

func (m *MahjongHasBeenOperatedRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongHasBeenOperatedRecord.Unmarshal(m, b)
}
func (m *MahjongHasBeenOperatedRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongHasBeenOperatedRecord.Marshal(b, m, deterministic)
}
func (m *MahjongHasBeenOperatedRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongHasBeenOperatedRecord.Merge(m, src)
}
func (m *MahjongHasBeenOperatedRecord) XXX_Size() int {
	return xxx_messageInfo_MahjongHasBeenOperatedRecord.Size(m)
}
func (m *MahjongHasBeenOperatedRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongHasBeenOperatedRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongHasBeenOperatedRecord proto.InternalMessageInfo

func (m *MahjongHasBeenOperatedRecord) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongHasBeenOperatedRecord) GetHasBeOperateType() MahjongOperateEnum {
	if m != nil {
		return m.HasBeOperateType
	}
	return MahjongOperateEnum_MahjongOperateEnumUndefine
}

func (m *MahjongHasBeenOperatedRecord) GetBSevenStars() bool {
	if m != nil {
		return m.BSevenStars
	}
	return false
}

func (m *MahjongHasBeenOperatedRecord) GetBTenOldMen() bool {
	if m != nil {
		return m.BTenOldMen
	}
	return false
}

func (m *MahjongHasBeenOperatedRecord) GetKongCard() *Mahjong {
	if m != nil {
		return m.KongCard
	}
	return nil
}

type MahjongOutputMahjongReply struct {
	// 房间的游戏信息
	RoomInfo             *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MahjongOutputMahjongReply) Reset()         { *m = MahjongOutputMahjongReply{} }
func (m *MahjongOutputMahjongReply) String() string { return proto.CompactTextString(m) }
func (*MahjongOutputMahjongReply) ProtoMessage()    {}
func (*MahjongOutputMahjongReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{695}
}

func (m *MahjongOutputMahjongReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongOutputMahjongReply.Unmarshal(m, b)
}
func (m *MahjongOutputMahjongReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongOutputMahjongReply.Marshal(b, m, deterministic)
}
func (m *MahjongOutputMahjongReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongOutputMahjongReply.Merge(m, src)
}
func (m *MahjongOutputMahjongReply) XXX_Size() int {
	return xxx_messageInfo_MahjongOutputMahjongReply.Size(m)
}
func (m *MahjongOutputMahjongReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongOutputMahjongReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongOutputMahjongReply proto.InternalMessageInfo

func (m *MahjongOutputMahjongReply) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

type MahjongPongOperateRequest struct {
	// 房间的游戏信息
	RoomInfo             *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MahjongPongOperateRequest) Reset()         { *m = MahjongPongOperateRequest{} }
func (m *MahjongPongOperateRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongPongOperateRequest) ProtoMessage()    {}
func (*MahjongPongOperateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{696}
}

func (m *MahjongPongOperateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongPongOperateRequest.Unmarshal(m, b)
}
func (m *MahjongPongOperateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongPongOperateRequest.Marshal(b, m, deterministic)
}
func (m *MahjongPongOperateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongPongOperateRequest.Merge(m, src)
}
func (m *MahjongPongOperateRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongPongOperateRequest.Size(m)
}
func (m *MahjongPongOperateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongPongOperateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongPongOperateRequest proto.InternalMessageInfo

func (m *MahjongPongOperateRequest) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

type MahjongPongOperateReply struct {
	// 房间的游戏信息
	RoomInfo             *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MahjongPongOperateReply) Reset()         { *m = MahjongPongOperateReply{} }
func (m *MahjongPongOperateReply) String() string { return proto.CompactTextString(m) }
func (*MahjongPongOperateReply) ProtoMessage()    {}
func (*MahjongPongOperateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{697}
}

func (m *MahjongPongOperateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongPongOperateReply.Unmarshal(m, b)
}
func (m *MahjongPongOperateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongPongOperateReply.Marshal(b, m, deterministic)
}
func (m *MahjongPongOperateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongPongOperateReply.Merge(m, src)
}
func (m *MahjongPongOperateReply) XXX_Size() int {
	return xxx_messageInfo_MahjongPongOperateReply.Size(m)
}
func (m *MahjongPongOperateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongPongOperateReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongPongOperateReply proto.InternalMessageInfo

func (m *MahjongPongOperateReply) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

type MahjongKongOperateRequest struct {
	// 房间的游戏信息
	RoomInfo *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	// 杠的牌(巴杠、暗杠时赋值)
	KongCard             *Mahjong `protobuf:"bytes,2,opt,name=kongCard,proto3" json:"kongCard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongKongOperateRequest) Reset()         { *m = MahjongKongOperateRequest{} }
func (m *MahjongKongOperateRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongKongOperateRequest) ProtoMessage()    {}
func (*MahjongKongOperateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{698}
}

func (m *MahjongKongOperateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongKongOperateRequest.Unmarshal(m, b)
}
func (m *MahjongKongOperateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongKongOperateRequest.Marshal(b, m, deterministic)
}
func (m *MahjongKongOperateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongKongOperateRequest.Merge(m, src)
}
func (m *MahjongKongOperateRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongKongOperateRequest.Size(m)
}
func (m *MahjongKongOperateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongKongOperateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongKongOperateRequest proto.InternalMessageInfo

func (m *MahjongKongOperateRequest) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *MahjongKongOperateRequest) GetKongCard() *Mahjong {
	if m != nil {
		return m.KongCard
	}
	return nil
}

type MahjongKongOperateReply struct {
	RoomInfo *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	// 可以抢杠胡的玩家(巴杠且有人可以抢杠胡时有值)
	CanWinByRobKongPlayerIndex []int32 `protobuf:"varint,2,rep,packed,name=canWinByRobKongPlayerIndex,proto3" json:"canWinByRobKongPlayerIndex,omitempty"`
	// 玩家是否可以摸明牌（只有满足杠上花的条件，才允许玩家摸明牌，但是玩家如果摸了明牌，自动胡牌)
	CanDrawOpenCard      bool     `protobuf:"varint,3,opt,name=canDrawOpenCard,proto3" json:"canDrawOpenCard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongKongOperateReply) Reset()         { *m = MahjongKongOperateReply{} }
func (m *MahjongKongOperateReply) String() string { return proto.CompactTextString(m) }
func (*MahjongKongOperateReply) ProtoMessage()    {}
func (*MahjongKongOperateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{699}
}

func (m *MahjongKongOperateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongKongOperateReply.Unmarshal(m, b)
}
func (m *MahjongKongOperateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongKongOperateReply.Marshal(b, m, deterministic)
}
func (m *MahjongKongOperateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongKongOperateReply.Merge(m, src)
}
func (m *MahjongKongOperateReply) XXX_Size() int {
	return xxx_messageInfo_MahjongKongOperateReply.Size(m)
}
func (m *MahjongKongOperateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongKongOperateReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongKongOperateReply proto.InternalMessageInfo

func (m *MahjongKongOperateReply) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *MahjongKongOperateReply) GetCanWinByRobKongPlayerIndex() []int32 {
	if m != nil {
		return m.CanWinByRobKongPlayerIndex
	}
	return nil
}

func (m *MahjongKongOperateReply) GetCanDrawOpenCard() bool {
	if m != nil {
		return m.CanDrawOpenCard
	}
	return false
}

type MahjongWinOperateRequest struct {
	// 房间的游戏信息
	RoomInfo             *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MahjongWinOperateRequest) Reset()         { *m = MahjongWinOperateRequest{} }
func (m *MahjongWinOperateRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongWinOperateRequest) ProtoMessage()    {}
func (*MahjongWinOperateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{700}
}

func (m *MahjongWinOperateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongWinOperateRequest.Unmarshal(m, b)
}
func (m *MahjongWinOperateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongWinOperateRequest.Marshal(b, m, deterministic)
}
func (m *MahjongWinOperateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongWinOperateRequest.Merge(m, src)
}
func (m *MahjongWinOperateRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongWinOperateRequest.Size(m)
}
func (m *MahjongWinOperateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongWinOperateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongWinOperateRequest proto.InternalMessageInfo

func (m *MahjongWinOperateRequest) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

type MahjongWinOperateReply struct {
	// 房间的游戏信息
	RoomInfo             *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MahjongWinOperateReply) Reset()         { *m = MahjongWinOperateReply{} }
func (m *MahjongWinOperateReply) String() string { return proto.CompactTextString(m) }
func (*MahjongWinOperateReply) ProtoMessage()    {}
func (*MahjongWinOperateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{701}
}

func (m *MahjongWinOperateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongWinOperateReply.Unmarshal(m, b)
}
func (m *MahjongWinOperateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongWinOperateReply.Marshal(b, m, deterministic)
}
func (m *MahjongWinOperateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongWinOperateReply.Merge(m, src)
}
func (m *MahjongWinOperateReply) XXX_Size() int {
	return xxx_messageInfo_MahjongWinOperateReply.Size(m)
}
func (m *MahjongWinOperateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongWinOperateReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongWinOperateReply proto.InternalMessageInfo

func (m *MahjongWinOperateReply) GetRoomInfo() *RoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

// 麻将玩家余额变更明细(仅用于房间信息记录)
type MahjongSettleDetail struct {
	// 玩家索引
	PlayerIndex int32 `protobuf:"varint,1,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 玩家uuid
	PlayerUuid string `protobuf:"bytes,2,opt,name=playerUuid,proto3" json:"playerUuid,omitempty"`
	// 玩家余额变更明细
	AmountChange int64 `protobuf:"varint,3,opt,name=amountChange,proto3" json:"amountChange,omitempty"`
	// 变更原因(麻将杠牌中途结算时有值)
	KongInfo *MahjongKongInfo `protobuf:"bytes,4,opt,name=kongInfo,proto3" json:"kongInfo,omitempty"`
	// 变更原因(麻将胡牌结算时有值)
	WinInfo *MahjongWinInfo `protobuf:"bytes,5,opt,name=winInfo,proto3" json:"winInfo,omitempty"`
	// 变更原因(退税、花猪、查叫时有值)
	BeforeSettleInfo     *MahjongBeforeSettleInfo `protobuf:"bytes,6,opt,name=beforeSettleInfo,proto3" json:"beforeSettleInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MahjongSettleDetail) Reset()         { *m = MahjongSettleDetail{} }
func (m *MahjongSettleDetail) String() string { return proto.CompactTextString(m) }
func (*MahjongSettleDetail) ProtoMessage()    {}
func (*MahjongSettleDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{702}
}

func (m *MahjongSettleDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongSettleDetail.Unmarshal(m, b)
}
func (m *MahjongSettleDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongSettleDetail.Marshal(b, m, deterministic)
}
func (m *MahjongSettleDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongSettleDetail.Merge(m, src)
}
func (m *MahjongSettleDetail) XXX_Size() int {
	return xxx_messageInfo_MahjongSettleDetail.Size(m)
}
func (m *MahjongSettleDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongSettleDetail.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongSettleDetail proto.InternalMessageInfo

func (m *MahjongSettleDetail) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongSettleDetail) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *MahjongSettleDetail) GetAmountChange() int64 {
	if m != nil {
		return m.AmountChange
	}
	return 0
}

func (m *MahjongSettleDetail) GetKongInfo() *MahjongKongInfo {
	if m != nil {
		return m.KongInfo
	}
	return nil
}

func (m *MahjongSettleDetail) GetWinInfo() *MahjongWinInfo {
	if m != nil {
		return m.WinInfo
	}
	return nil
}

func (m *MahjongSettleDetail) GetBeforeSettleInfo() *MahjongBeforeSettleInfo {
	if m != nil {
		return m.BeforeSettleInfo
	}
	return nil
}

//////////////////////////////////以下为麻将通信协议//////////////////////////////
// 麻将打骰子（服务器发送到客户端）
type MahjongPlayDicesNotice struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 庄家index
	BankerIndex int64 `protobuf:"varint,2,opt,name=bankerIndex,proto3" json:"bankerIndex,omitempty"`
	// 牌墙剩余牌张数
	MahjongCardWallCount int32 `protobuf:"varint,3,opt,name=mahjongCardWallCount,proto3" json:"mahjongCardWallCount,omitempty"`
	// 等待时长(打骰子时间)
	WaitTime int64 `protobuf:"varint,4,opt,name=waitTime,proto3" json:"waitTime,omitempty"`
	// 骰子
	Dices                []int32  `protobuf:"varint,5,rep,packed,name=dices,proto3" json:"dices,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongPlayDicesNotice) Reset()         { *m = MahjongPlayDicesNotice{} }
func (m *MahjongPlayDicesNotice) String() string { return proto.CompactTextString(m) }
func (*MahjongPlayDicesNotice) ProtoMessage()    {}
func (*MahjongPlayDicesNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{703}
}

func (m *MahjongPlayDicesNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongPlayDicesNotice.Unmarshal(m, b)
}
func (m *MahjongPlayDicesNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongPlayDicesNotice.Marshal(b, m, deterministic)
}
func (m *MahjongPlayDicesNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongPlayDicesNotice.Merge(m, src)
}
func (m *MahjongPlayDicesNotice) XXX_Size() int {
	return xxx_messageInfo_MahjongPlayDicesNotice.Size(m)
}
func (m *MahjongPlayDicesNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongPlayDicesNotice.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongPlayDicesNotice proto.InternalMessageInfo

func (m *MahjongPlayDicesNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongPlayDicesNotice) GetBankerIndex() int64 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

func (m *MahjongPlayDicesNotice) GetMahjongCardWallCount() int32 {
	if m != nil {
		return m.MahjongCardWallCount
	}
	return 0
}

func (m *MahjongPlayDicesNotice) GetWaitTime() int64 {
	if m != nil {
		return m.WaitTime
	}
	return 0
}

func (m *MahjongPlayDicesNotice) GetDices() []int32 {
	if m != nil {
		return m.Dices
	}
	return nil
}

// 麻将开局发牌（服务器发送到客户端）
type MahjongDealNotice struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 庄家index
	BankerIndex int64 `protobuf:"varint,2,opt,name=bankerIndex,proto3" json:"bankerIndex,omitempty"`
	// 发牌的玩家index
	PlayerIndex int32 `protobuf:"varint,3,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 发牌的玩家uuid
	PlayerUuid string `protobuf:"bytes,4,opt,name=playerUuid,proto3" json:"playerUuid,omitempty"`
	// 发牌的玩家手牌牌信息
	HandCards []*Mahjong `protobuf:"bytes,5,rep,name=handCards,proto3" json:"handCards,omitempty"`
	// 所有玩家手牌张数
	OthersHandCardNum int32 `protobuf:"varint,6,opt,name=othersHandCardNum,proto3" json:"othersHandCardNum,omitempty"`
	// 玩家牌变动原因
	OpterateType MahjongOperateEnum `protobuf:"varint,7,opt,name=opterateType,proto3,enum=MahjongOperateEnum" json:"opterateType,omitempty"`
	// 牌墙剩余牌张数
	MahjongCardWallCount int32 `protobuf:"varint,8,opt,name=mahjongCardWallCount,proto3" json:"mahjongCardWallCount,omitempty"`
	// 等待时长(发牌时间)
	WaitTime int64 `protobuf:"varint,9,opt,name=waitTime,proto3" json:"waitTime,omitempty"`
	// 明牌
	OpenMahjongCards []*Mahjong `protobuf:"bytes,10,rep,name=openMahjongCards,proto3" json:"openMahjongCards,omitempty"`
	// 庄家新摸的牌(只有庄家有数据)
	NewMahjong           *Mahjong `protobuf:"bytes,11,opt,name=newMahjong,proto3" json:"newMahjong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongDealNotice) Reset()         { *m = MahjongDealNotice{} }
func (m *MahjongDealNotice) String() string { return proto.CompactTextString(m) }
func (*MahjongDealNotice) ProtoMessage()    {}
func (*MahjongDealNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{704}
}

func (m *MahjongDealNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongDealNotice.Unmarshal(m, b)
}
func (m *MahjongDealNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongDealNotice.Marshal(b, m, deterministic)
}
func (m *MahjongDealNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongDealNotice.Merge(m, src)
}
func (m *MahjongDealNotice) XXX_Size() int {
	return xxx_messageInfo_MahjongDealNotice.Size(m)
}
func (m *MahjongDealNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongDealNotice.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongDealNotice proto.InternalMessageInfo

func (m *MahjongDealNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongDealNotice) GetBankerIndex() int64 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

func (m *MahjongDealNotice) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongDealNotice) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *MahjongDealNotice) GetHandCards() []*Mahjong {
	if m != nil {
		return m.HandCards
	}
	return nil
}

func (m *MahjongDealNotice) GetOthersHandCardNum() int32 {
	if m != nil {
		return m.OthersHandCardNum
	}
	return 0
}

func (m *MahjongDealNotice) GetOpterateType() MahjongOperateEnum {
	if m != nil {
		return m.OpterateType
	}
	return MahjongOperateEnum_MahjongOperateEnumUndefine
}

func (m *MahjongDealNotice) GetMahjongCardWallCount() int32 {
	if m != nil {
		return m.MahjongCardWallCount
	}
	return 0
}

func (m *MahjongDealNotice) GetWaitTime() int64 {
	if m != nil {
		return m.WaitTime
	}
	return 0
}

func (m *MahjongDealNotice) GetOpenMahjongCards() []*Mahjong {
	if m != nil {
		return m.OpenMahjongCards
	}
	return nil
}

func (m *MahjongDealNotice) GetNewMahjong() *Mahjong {
	if m != nil {
		return m.NewMahjong
	}
	return nil
}

// 麻将玩家定缺(服务器发送到客户端)
type MahjongBlankSuitNotice struct {
	// 房间信息
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 玩家索引
	PlayerIndex int32 `protobuf:"varint,2,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 默认定缺花色
	BlankSuit MahjongColor `protobuf:"varint,3,opt,name=blankSuit,proto3,enum=MahjongColor" json:"blankSuit,omitempty"`
	// 等待时长
	WaitTime             int64    `protobuf:"varint,4,opt,name=waitTime,proto3" json:"waitTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongBlankSuitNotice) Reset()         { *m = MahjongBlankSuitNotice{} }
func (m *MahjongBlankSuitNotice) String() string { return proto.CompactTextString(m) }
func (*MahjongBlankSuitNotice) ProtoMessage()    {}
func (*MahjongBlankSuitNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{705}
}

func (m *MahjongBlankSuitNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongBlankSuitNotice.Unmarshal(m, b)
}
func (m *MahjongBlankSuitNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongBlankSuitNotice.Marshal(b, m, deterministic)
}
func (m *MahjongBlankSuitNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongBlankSuitNotice.Merge(m, src)
}
func (m *MahjongBlankSuitNotice) XXX_Size() int {
	return xxx_messageInfo_MahjongBlankSuitNotice.Size(m)
}
func (m *MahjongBlankSuitNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongBlankSuitNotice.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongBlankSuitNotice proto.InternalMessageInfo

func (m *MahjongBlankSuitNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongBlankSuitNotice) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongBlankSuitNotice) GetBlankSuit() MahjongColor {
	if m != nil {
		return m.BlankSuit
	}
	return MahjongColor_MahjongColorNone
}

func (m *MahjongBlankSuitNotice) GetWaitTime() int64 {
	if m != nil {
		return m.WaitTime
	}
	return 0
}

// 麻将 定缺(客户端发送到服务器)
type MahjongBlankSuitRequest struct {
	BlankSuit            MahjongColor `protobuf:"varint,1,opt,name=blankSuit,proto3,enum=MahjongColor" json:"blankSuit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MahjongBlankSuitRequest) Reset()         { *m = MahjongBlankSuitRequest{} }
func (m *MahjongBlankSuitRequest) String() string { return proto.CompactTextString(m) }
func (*MahjongBlankSuitRequest) ProtoMessage()    {}
func (*MahjongBlankSuitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{706}
}

func (m *MahjongBlankSuitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongBlankSuitRequest.Unmarshal(m, b)
}
func (m *MahjongBlankSuitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongBlankSuitRequest.Marshal(b, m, deterministic)
}
func (m *MahjongBlankSuitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongBlankSuitRequest.Merge(m, src)
}
func (m *MahjongBlankSuitRequest) XXX_Size() int {
	return xxx_messageInfo_MahjongBlankSuitRequest.Size(m)
}
func (m *MahjongBlankSuitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongBlankSuitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongBlankSuitRequest proto.InternalMessageInfo

func (m *MahjongBlankSuitRequest) GetBlankSuit() MahjongColor {
	if m != nil {
		return m.BlankSuit
	}
	return MahjongColor_MahjongColorNone
}

// 麻将 定缺(服务器回复客户端)
type MahjongBlankSuitReply struct {
	// 房间信息
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 玩家索引
	PlayerIndex int32 `protobuf:"varint,2,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 定缺花色
	BlankSuit            MahjongColor `protobuf:"varint,3,opt,name=blankSuit,proto3,enum=MahjongColor" json:"blankSuit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MahjongBlankSuitReply) Reset()         { *m = MahjongBlankSuitReply{} }
func (m *MahjongBlankSuitReply) String() string { return proto.CompactTextString(m) }
func (*MahjongBlankSuitReply) ProtoMessage()    {}
func (*MahjongBlankSuitReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{707}
}

func (m *MahjongBlankSuitReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongBlankSuitReply.Unmarshal(m, b)
}
func (m *MahjongBlankSuitReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongBlankSuitReply.Marshal(b, m, deterministic)
}
func (m *MahjongBlankSuitReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongBlankSuitReply.Merge(m, src)
}
func (m *MahjongBlankSuitReply) XXX_Size() int {
	return xxx_messageInfo_MahjongBlankSuitReply.Size(m)
}
func (m *MahjongBlankSuitReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongBlankSuitReply.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongBlankSuitReply proto.InternalMessageInfo

func (m *MahjongBlankSuitReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongBlankSuitReply) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongBlankSuitReply) GetBlankSuit() MahjongColor {
	if m != nil {
		return m.BlankSuit
	}
	return MahjongColor_MahjongColorNone
}

// 定缺阶段结束后，广播所有玩家定缺花色(服务器发送到客户端)
type MahjongAllPlayerBlankSuitNotice struct {
	// 房间信息
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 玩家定缺花色
	BlankSuit            []MahjongColor `protobuf:"varint,2,rep,packed,name=blankSuit,proto3,enum=MahjongColor" json:"blankSuit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MahjongAllPlayerBlankSuitNotice) Reset()         { *m = MahjongAllPlayerBlankSuitNotice{} }
func (m *MahjongAllPlayerBlankSuitNotice) String() string { return proto.CompactTextString(m) }
func (*MahjongAllPlayerBlankSuitNotice) ProtoMessage()    {}
func (*MahjongAllPlayerBlankSuitNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{708}
}

func (m *MahjongAllPlayerBlankSuitNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongAllPlayerBlankSuitNotice.Unmarshal(m, b)
}
func (m *MahjongAllPlayerBlankSuitNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongAllPlayerBlankSuitNotice.Marshal(b, m, deterministic)
}
func (m *MahjongAllPlayerBlankSuitNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongAllPlayerBlankSuitNotice.Merge(m, src)
}
func (m *MahjongAllPlayerBlankSuitNotice) XXX_Size() int {
	return xxx_messageInfo_MahjongAllPlayerBlankSuitNotice.Size(m)
}
func (m *MahjongAllPlayerBlankSuitNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongAllPlayerBlankSuitNotice.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongAllPlayerBlankSuitNotice proto.InternalMessageInfo

func (m *MahjongAllPlayerBlankSuitNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongAllPlayerBlankSuitNotice) GetBlankSuit() []MahjongColor {
	if m != nil {
		return m.BlankSuit
	}
	return nil
}

// 麻将玩家发牌(服务器发送到客户端)
type MahjongPlayerSendCardNotice struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 庄家index
	BankerIndex int64 `protobuf:"varint,2,opt,name=bankerIndex,proto3" json:"bankerIndex,omitempty"`
	// 牌变动的玩家index
	PlayerIndex int32 `protobuf:"varint,3,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 玩家牌变动原因
	OpterateType MahjongOperateEnum `protobuf:"varint,4,opt,name=opterateType,proto3,enum=MahjongOperateEnum" json:"opterateType,omitempty"`
	// 牌墙剩余牌张数
	MahjongCardWallCount int32 `protobuf:"varint,5,opt,name=mahjongCardWallCount,proto3" json:"mahjongCardWallCount,omitempty"`
	// 等待玩家出牌、考虑巴杠、直杠、胡时长(玩耍时间)
	WaitTime int64 `protobuf:"varint,6,opt,name=waitTime,proto3" json:"waitTime,omitempty"`
	// 被杠走了多少张牌(仅供前端展示用)
	KongCardNum int32 `protobuf:"varint,7,opt,name=kongCardNum,proto3" json:"kongCardNum,omitempty"`
	// 以下协议只有摸牌的玩家有值
	// 发的麻将牌
	Card *Mahjong `protobuf:"bytes,8,opt,name=card,proto3" json:"card,omitempty"`
	// 手牌分析结果
	IfOutputInfo         []*MahjongReadyInfoIfOutput `protobuf:"bytes,9,rep,name=ifOutputInfo,proto3" json:"ifOutputInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *MahjongPlayerSendCardNotice) Reset()         { *m = MahjongPlayerSendCardNotice{} }
func (m *MahjongPlayerSendCardNotice) String() string { return proto.CompactTextString(m) }
func (*MahjongPlayerSendCardNotice) ProtoMessage()    {}
func (*MahjongPlayerSendCardNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{709}
}

func (m *MahjongPlayerSendCardNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongPlayerSendCardNotice.Unmarshal(m, b)
}
func (m *MahjongPlayerSendCardNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongPlayerSendCardNotice.Marshal(b, m, deterministic)
}
func (m *MahjongPlayerSendCardNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongPlayerSendCardNotice.Merge(m, src)
}
func (m *MahjongPlayerSendCardNotice) XXX_Size() int {
	return xxx_messageInfo_MahjongPlayerSendCardNotice.Size(m)
}
func (m *MahjongPlayerSendCardNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongPlayerSendCardNotice.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongPlayerSendCardNotice proto.InternalMessageInfo

func (m *MahjongPlayerSendCardNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongPlayerSendCardNotice) GetBankerIndex() int64 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

func (m *MahjongPlayerSendCardNotice) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongPlayerSendCardNotice) GetOpterateType() MahjongOperateEnum {
	if m != nil {
		return m.OpterateType
	}
	return MahjongOperateEnum_MahjongOperateEnumUndefine
}

func (m *MahjongPlayerSendCardNotice) GetMahjongCardWallCount() int32 {
	if m != nil {
		return m.MahjongCardWallCount
	}
	return 0
}

func (m *MahjongPlayerSendCardNotice) GetWaitTime() int64 {
	if m != nil {
		return m.WaitTime
	}
	return 0
}

func (m *MahjongPlayerSendCardNotice) GetKongCardNum() int32 {
	if m != nil {
		return m.KongCardNum
	}
	return 0
}

func (m *MahjongPlayerSendCardNotice) GetCard() *Mahjong {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *MahjongPlayerSendCardNotice) GetIfOutputInfo() []*MahjongReadyInfoIfOutput {
	if m != nil {
		return m.IfOutputInfo
	}
	return nil
}

// 麻将 出牌、碰、杠、过、胡等操作(客户端发送到服务器)
type LinCangMahjongOperateRequest struct {
	// 操作类型
	OperateType MahjongOperateEnum `protobuf:"varint,1,opt,name=operateType,proto3,enum=MahjongOperateEnum" json:"operateType,omitempty"`
	// 麻将面值(出牌、巴杠、暗杠时赋值)
	Mahjong              *Mahjong `protobuf:"bytes,2,opt,name=mahjong,proto3" json:"mahjong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinCangMahjongOperateRequest) Reset()         { *m = LinCangMahjongOperateRequest{} }
func (m *LinCangMahjongOperateRequest) String() string { return proto.CompactTextString(m) }
func (*LinCangMahjongOperateRequest) ProtoMessage()    {}
func (*LinCangMahjongOperateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{710}
}

func (m *LinCangMahjongOperateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinCangMahjongOperateRequest.Unmarshal(m, b)
}
func (m *LinCangMahjongOperateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinCangMahjongOperateRequest.Marshal(b, m, deterministic)
}
func (m *LinCangMahjongOperateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinCangMahjongOperateRequest.Merge(m, src)
}
func (m *LinCangMahjongOperateRequest) XXX_Size() int {
	return xxx_messageInfo_LinCangMahjongOperateRequest.Size(m)
}
func (m *LinCangMahjongOperateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LinCangMahjongOperateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LinCangMahjongOperateRequest proto.InternalMessageInfo

func (m *LinCangMahjongOperateRequest) GetOperateType() MahjongOperateEnum {
	if m != nil {
		return m.OperateType
	}
	return MahjongOperateEnum_MahjongOperateEnumUndefine
}

func (m *LinCangMahjongOperateRequest) GetMahjong() *Mahjong {
	if m != nil {
		return m.Mahjong
	}
	return nil
}

type LinCangMahjongOperateReply struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 玩家的index
	PlayerIndex          int32    `protobuf:"varint,2,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinCangMahjongOperateReply) Reset()         { *m = LinCangMahjongOperateReply{} }
func (m *LinCangMahjongOperateReply) String() string { return proto.CompactTextString(m) }
func (*LinCangMahjongOperateReply) ProtoMessage()    {}
func (*LinCangMahjongOperateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{711}
}

func (m *LinCangMahjongOperateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinCangMahjongOperateReply.Unmarshal(m, b)
}
func (m *LinCangMahjongOperateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinCangMahjongOperateReply.Marshal(b, m, deterministic)
}
func (m *LinCangMahjongOperateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinCangMahjongOperateReply.Merge(m, src)
}
func (m *LinCangMahjongOperateReply) XXX_Size() int {
	return xxx_messageInfo_LinCangMahjongOperateReply.Size(m)
}
func (m *LinCangMahjongOperateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LinCangMahjongOperateReply.DiscardUnknown(m)
}

var xxx_messageInfo_LinCangMahjongOperateReply proto.InternalMessageInfo

func (m *LinCangMahjongOperateReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *LinCangMahjongOperateReply) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

// 麻将 出牌、碰、杠、过、胡等操作(客户端发送到服务器)
type XueZhanMahjongOperateRequest struct {
	// 操作类型
	OperateType MahjongOperateEnum `protobuf:"varint,1,opt,name=operateType,proto3,enum=MahjongOperateEnum" json:"operateType,omitempty"`
	// 麻将面值(出牌、巴杠、暗杠时赋值)
	Mahjong *Mahjong `protobuf:"bytes,2,opt,name=mahjong,proto3" json:"mahjong,omitempty"`
	// 麻将花色(定缺时赋值)
	BlankSuit            MahjongColor `protobuf:"varint,3,opt,name=blankSuit,proto3,enum=MahjongColor" json:"blankSuit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *XueZhanMahjongOperateRequest) Reset()         { *m = XueZhanMahjongOperateRequest{} }
func (m *XueZhanMahjongOperateRequest) String() string { return proto.CompactTextString(m) }
func (*XueZhanMahjongOperateRequest) ProtoMessage()    {}
func (*XueZhanMahjongOperateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{712}
}

func (m *XueZhanMahjongOperateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XueZhanMahjongOperateRequest.Unmarshal(m, b)
}
func (m *XueZhanMahjongOperateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XueZhanMahjongOperateRequest.Marshal(b, m, deterministic)
}
func (m *XueZhanMahjongOperateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XueZhanMahjongOperateRequest.Merge(m, src)
}
func (m *XueZhanMahjongOperateRequest) XXX_Size() int {
	return xxx_messageInfo_XueZhanMahjongOperateRequest.Size(m)
}
func (m *XueZhanMahjongOperateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_XueZhanMahjongOperateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_XueZhanMahjongOperateRequest proto.InternalMessageInfo

func (m *XueZhanMahjongOperateRequest) GetOperateType() MahjongOperateEnum {
	if m != nil {
		return m.OperateType
	}
	return MahjongOperateEnum_MahjongOperateEnumUndefine
}

func (m *XueZhanMahjongOperateRequest) GetMahjong() *Mahjong {
	if m != nil {
		return m.Mahjong
	}
	return nil
}

func (m *XueZhanMahjongOperateRequest) GetBlankSuit() MahjongColor {
	if m != nil {
		return m.BlankSuit
	}
	return MahjongColor_MahjongColorNone
}

type XueZhanMahjongOperateReply struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 玩家的index
	PlayerIndex          int32    `protobuf:"varint,2,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XueZhanMahjongOperateReply) Reset()         { *m = XueZhanMahjongOperateReply{} }
func (m *XueZhanMahjongOperateReply) String() string { return proto.CompactTextString(m) }
func (*XueZhanMahjongOperateReply) ProtoMessage()    {}
func (*XueZhanMahjongOperateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{713}
}

func (m *XueZhanMahjongOperateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XueZhanMahjongOperateReply.Unmarshal(m, b)
}
func (m *XueZhanMahjongOperateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XueZhanMahjongOperateReply.Marshal(b, m, deterministic)
}
func (m *XueZhanMahjongOperateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XueZhanMahjongOperateReply.Merge(m, src)
}
func (m *XueZhanMahjongOperateReply) XXX_Size() int {
	return xxx_messageInfo_XueZhanMahjongOperateReply.Size(m)
}
func (m *XueZhanMahjongOperateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_XueZhanMahjongOperateReply.DiscardUnknown(m)
}

var xxx_messageInfo_XueZhanMahjongOperateReply proto.InternalMessageInfo

func (m *XueZhanMahjongOperateReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *XueZhanMahjongOperateReply) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

// 麻将 玩家出牌通知（当有玩家可以碰杠胡时发送此消息，服务器发送到客户端）
type MahjongOutputNotice struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 庄家index
	BankerIndex int64 `protobuf:"varint,2,opt,name=bankerIndex,proto3" json:"bankerIndex,omitempty"`
	// 出牌玩家的index
	OutputPlayerIndex int32 `protobuf:"varint,3,opt,name=outputPlayerIndex,proto3" json:"outputPlayerIndex,omitempty"`
	// 玩家出的麻将牌
	OutputMahjongCard *Mahjong `protobuf:"bytes,4,opt,name=outputMahjongCard,proto3" json:"outputMahjongCard,omitempty"`
	// 玩家出牌后的手牌区
	HandCards []*Mahjong `protobuf:"bytes,5,rep,name=handCards,proto3" json:"handCards,omitempty"`
	// 玩家出牌后的手牌长度
	HandCardsNum int32 `protobuf:"varint,6,opt,name=handCardsNum,proto3" json:"handCardsNum,omitempty"`
	// 玩家出牌后的出牌区
	OutputCards          []*Mahjong `protobuf:"bytes,7,rep,name=outputCards,proto3" json:"outputCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MahjongOutputNotice) Reset()         { *m = MahjongOutputNotice{} }
func (m *MahjongOutputNotice) String() string { return proto.CompactTextString(m) }
func (*MahjongOutputNotice) ProtoMessage()    {}
func (*MahjongOutputNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{714}
}

func (m *MahjongOutputNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongOutputNotice.Unmarshal(m, b)
}
func (m *MahjongOutputNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongOutputNotice.Marshal(b, m, deterministic)
}
func (m *MahjongOutputNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongOutputNotice.Merge(m, src)
}
func (m *MahjongOutputNotice) XXX_Size() int {
	return xxx_messageInfo_MahjongOutputNotice.Size(m)
}
func (m *MahjongOutputNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongOutputNotice.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongOutputNotice proto.InternalMessageInfo

func (m *MahjongOutputNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongOutputNotice) GetBankerIndex() int64 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

func (m *MahjongOutputNotice) GetOutputPlayerIndex() int32 {
	if m != nil {
		return m.OutputPlayerIndex
	}
	return 0
}

func (m *MahjongOutputNotice) GetOutputMahjongCard() *Mahjong {
	if m != nil {
		return m.OutputMahjongCard
	}
	return nil
}

func (m *MahjongOutputNotice) GetHandCards() []*Mahjong {
	if m != nil {
		return m.HandCards
	}
	return nil
}

func (m *MahjongOutputNotice) GetHandCardsNum() int32 {
	if m != nil {
		return m.HandCardsNum
	}
	return 0
}

func (m *MahjongOutputNotice) GetOutputCards() []*Mahjong {
	if m != nil {
		return m.OutputCards
	}
	return nil
}

// 麻将 玩家出牌后通知（当有玩家可以碰杠胡时发送此消息，服务器发送到客户端）
type MahjongWaitChoiceNotice struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 庄家index
	BankerIndex int64 `protobuf:"varint,2,opt,name=bankerIndex,proto3" json:"bankerIndex,omitempty"`
	// 可以响应碰杠胡的玩家索引
	PlayerIndex int32 `protobuf:"varint,3,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 当前前端界面箭头指向玩家的索引(仅用于前端展示)
	PointToIndex int32 `protobuf:"varint,4,opt,name=pointToIndex,proto3" json:"pointToIndex,omitempty"`
	// 玩家等待时长(不能碰杠胡的玩家，时间为0(无权操作的玩家，等待时间为0是模仿欢乐麻将搞的，具体为啥我没想明白(是因为不想让玩家看出来有人能碰杠胡么)))
	WaitTime int64 `protobuf:"varint,5,opt,name=waitTime,proto3" json:"waitTime,omitempty"`
	// 玩家可以碰杠胡操作集合
	Operates []MahjongOperateEnum `protobuf:"varint,6,rep,packed,name=operates,proto3,enum=MahjongOperateEnum" json:"operates,omitempty"`
	// 玩家可以杠牌的集合
	CanKongCard          []*Mahjong `protobuf:"bytes,7,rep,name=canKongCard,proto3" json:"canKongCard,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MahjongWaitChoiceNotice) Reset()         { *m = MahjongWaitChoiceNotice{} }
func (m *MahjongWaitChoiceNotice) String() string { return proto.CompactTextString(m) }
func (*MahjongWaitChoiceNotice) ProtoMessage()    {}
func (*MahjongWaitChoiceNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{715}
}

func (m *MahjongWaitChoiceNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongWaitChoiceNotice.Unmarshal(m, b)
}
func (m *MahjongWaitChoiceNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongWaitChoiceNotice.Marshal(b, m, deterministic)
}
func (m *MahjongWaitChoiceNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongWaitChoiceNotice.Merge(m, src)
}
func (m *MahjongWaitChoiceNotice) XXX_Size() int {
	return xxx_messageInfo_MahjongWaitChoiceNotice.Size(m)
}
func (m *MahjongWaitChoiceNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongWaitChoiceNotice.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongWaitChoiceNotice proto.InternalMessageInfo

func (m *MahjongWaitChoiceNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongWaitChoiceNotice) GetBankerIndex() int64 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

func (m *MahjongWaitChoiceNotice) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongWaitChoiceNotice) GetPointToIndex() int32 {
	if m != nil {
		return m.PointToIndex
	}
	return 0
}

func (m *MahjongWaitChoiceNotice) GetWaitTime() int64 {
	if m != nil {
		return m.WaitTime
	}
	return 0
}

func (m *MahjongWaitChoiceNotice) GetOperates() []MahjongOperateEnum {
	if m != nil {
		return m.Operates
	}
	return nil
}

func (m *MahjongWaitChoiceNotice) GetCanKongCard() []*Mahjong {
	if m != nil {
		return m.CanKongCard
	}
	return nil
}

// 麻将有玩家碰牌时通知(服务器发送到客户端)
type MahjongPongNotice struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 庄家index
	BankerIndex int64 `protobuf:"varint,2,opt,name=bankerIndex,proto3" json:"bankerIndex,omitempty"`
	// 出牌玩家的index
	OutputPlayerIndex int32 `protobuf:"varint,3,opt,name=outputPlayerIndex,proto3" json:"outputPlayerIndex,omitempty"`
	// 出牌玩家，出牌区域的牌
	OutputCards []*Mahjong `protobuf:"bytes,4,rep,name=outputCards,proto3" json:"outputCards,omitempty"`
	// 碰牌玩家的index
	PongPlayerIndex int32 `protobuf:"varint,5,opt,name=pongPlayerIndex,proto3" json:"pongPlayerIndex,omitempty"`
	// 碰牌玩家手牌区域的牌
	HandCards []*Mahjong `protobuf:"bytes,6,rep,name=handCards,proto3" json:"handCards,omitempty"`
	// 碰牌玩家手牌区域的牌张数(用于通知其他玩家，该玩家碰牌后手牌张数，便于前端展示)
	PongPlayerHandCardLenth int32 `protobuf:"varint,7,opt,name=pongPlayerHandCardLenth,proto3" json:"pongPlayerHandCardLenth,omitempty"`
	// 碰牌玩家碰牌区域的牌
	PongInfo []*MahjongPongInfo `protobuf:"bytes,8,rep,name=pongInfo,proto3" json:"pongInfo,omitempty"`
	// 碰牌玩家碰牌后的手牌分析结果
	IfOutputInfo         []*MahjongReadyInfoIfOutput `protobuf:"bytes,9,rep,name=ifOutputInfo,proto3" json:"ifOutputInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *MahjongPongNotice) Reset()         { *m = MahjongPongNotice{} }
func (m *MahjongPongNotice) String() string { return proto.CompactTextString(m) }
func (*MahjongPongNotice) ProtoMessage()    {}
func (*MahjongPongNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{716}
}

func (m *MahjongPongNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongPongNotice.Unmarshal(m, b)
}
func (m *MahjongPongNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongPongNotice.Marshal(b, m, deterministic)
}
func (m *MahjongPongNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongPongNotice.Merge(m, src)
}
func (m *MahjongPongNotice) XXX_Size() int {
	return xxx_messageInfo_MahjongPongNotice.Size(m)
}
func (m *MahjongPongNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongPongNotice.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongPongNotice proto.InternalMessageInfo

func (m *MahjongPongNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongPongNotice) GetBankerIndex() int64 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

func (m *MahjongPongNotice) GetOutputPlayerIndex() int32 {
	if m != nil {
		return m.OutputPlayerIndex
	}
	return 0
}

func (m *MahjongPongNotice) GetOutputCards() []*Mahjong {
	if m != nil {
		return m.OutputCards
	}
	return nil
}

func (m *MahjongPongNotice) GetPongPlayerIndex() int32 {
	if m != nil {
		return m.PongPlayerIndex
	}
	return 0
}

func (m *MahjongPongNotice) GetHandCards() []*Mahjong {
	if m != nil {
		return m.HandCards
	}
	return nil
}

func (m *MahjongPongNotice) GetPongPlayerHandCardLenth() int32 {
	if m != nil {
		return m.PongPlayerHandCardLenth
	}
	return 0
}

func (m *MahjongPongNotice) GetPongInfo() []*MahjongPongInfo {
	if m != nil {
		return m.PongInfo
	}
	return nil
}

func (m *MahjongPongNotice) GetIfOutputInfo() []*MahjongReadyInfoIfOutput {
	if m != nil {
		return m.IfOutputInfo
	}
	return nil
}

// 麻将有玩家杠牌时通知（服务器发送到客户端）
type MahjongKongNotice struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 庄家index
	BankerIndex int64 `protobuf:"varint,2,opt,name=bankerIndex,proto3" json:"bankerIndex,omitempty"`
	// 杠牌玩家的index
	KongPlayerIndex int32 `protobuf:"varint,3,opt,name=kongPlayerIndex,proto3" json:"kongPlayerIndex,omitempty"`
	// 杠牌玩家的杠牌类型
	KongType MahjongKongEnum `protobuf:"varint,4,opt,name=kongType,proto3,enum=MahjongKongEnum" json:"kongType,omitempty"`
	// 杠牌玩家手牌区域的牌
	HandCards []*Mahjong `protobuf:"bytes,5,rep,name=handCards,proto3" json:"handCards,omitempty"`
	// 杠牌玩家手牌区域的牌张数
	KongPlayerHandCardLenth int32 `protobuf:"varint,6,opt,name=kongPlayerHandCardLenth,proto3" json:"kongPlayerHandCardLenth,omitempty"`
	// 杠牌玩家杠牌区域的牌
	KongInfos []*MahjongKongInfo `protobuf:"bytes,7,rep,name=kongInfos,proto3" json:"kongInfos,omitempty"`
	// 杠牌玩家碰牌区域的牌(巴杠时有值)
	PongInfos []*MahjongPongInfo `protobuf:"bytes,8,rep,name=pongInfos,proto3" json:"pongInfos,omitempty"`
	// 出牌玩家的index(直杠时有值)
	OutputPlayerIndex int32 `protobuf:"varint,9,opt,name=outputPlayerIndex,proto3" json:"outputPlayerIndex,omitempty"`
	// 出牌玩家，出牌区域的牌(直杠时有值)
	OutputCards          []*Mahjong `protobuf:"bytes,10,rep,name=outputCards,proto3" json:"outputCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MahjongKongNotice) Reset()         { *m = MahjongKongNotice{} }
func (m *MahjongKongNotice) String() string { return proto.CompactTextString(m) }
func (*MahjongKongNotice) ProtoMessage()    {}
func (*MahjongKongNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{717}
}

func (m *MahjongKongNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongKongNotice.Unmarshal(m, b)
}
func (m *MahjongKongNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongKongNotice.Marshal(b, m, deterministic)
}
func (m *MahjongKongNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongKongNotice.Merge(m, src)
}
func (m *MahjongKongNotice) XXX_Size() int {
	return xxx_messageInfo_MahjongKongNotice.Size(m)
}
func (m *MahjongKongNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongKongNotice.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongKongNotice proto.InternalMessageInfo

func (m *MahjongKongNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongKongNotice) GetBankerIndex() int64 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

func (m *MahjongKongNotice) GetKongPlayerIndex() int32 {
	if m != nil {
		return m.KongPlayerIndex
	}
	return 0
}

func (m *MahjongKongNotice) GetKongType() MahjongKongEnum {
	if m != nil {
		return m.KongType
	}
	return MahjongKongEnum_MahjongKongEnumUndefine
}

func (m *MahjongKongNotice) GetHandCards() []*Mahjong {
	if m != nil {
		return m.HandCards
	}
	return nil
}

func (m *MahjongKongNotice) GetKongPlayerHandCardLenth() int32 {
	if m != nil {
		return m.KongPlayerHandCardLenth
	}
	return 0
}

func (m *MahjongKongNotice) GetKongInfos() []*MahjongKongInfo {
	if m != nil {
		return m.KongInfos
	}
	return nil
}

func (m *MahjongKongNotice) GetPongInfos() []*MahjongPongInfo {
	if m != nil {
		return m.PongInfos
	}
	return nil
}

func (m *MahjongKongNotice) GetOutputPlayerIndex() int32 {
	if m != nil {
		return m.OutputPlayerIndex
	}
	return 0
}

func (m *MahjongKongNotice) GetOutputCards() []*Mahjong {
	if m != nil {
		return m.OutputCards
	}
	return nil
}

// 麻将杠牌扣钱通知（服务器发送到客户端）
type MahjongKongChangeMoneyNotice struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 玩家扣钱明细
	ChangeMoney []int64 `protobuf:"varint,2,rep,packed,name=changeMoney,proto3" json:"changeMoney,omitempty"`
	// 玩家杠钱后的余额
	RemainMoney          []int64  `protobuf:"varint,3,rep,packed,name=remainMoney,proto3" json:"remainMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongKongChangeMoneyNotice) Reset()         { *m = MahjongKongChangeMoneyNotice{} }
func (m *MahjongKongChangeMoneyNotice) String() string { return proto.CompactTextString(m) }
func (*MahjongKongChangeMoneyNotice) ProtoMessage()    {}
func (*MahjongKongChangeMoneyNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{718}
}

func (m *MahjongKongChangeMoneyNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongKongChangeMoneyNotice.Unmarshal(m, b)
}
func (m *MahjongKongChangeMoneyNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongKongChangeMoneyNotice.Marshal(b, m, deterministic)
}
func (m *MahjongKongChangeMoneyNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongKongChangeMoneyNotice.Merge(m, src)
}
func (m *MahjongKongChangeMoneyNotice) XXX_Size() int {
	return xxx_messageInfo_MahjongKongChangeMoneyNotice.Size(m)
}
func (m *MahjongKongChangeMoneyNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongKongChangeMoneyNotice.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongKongChangeMoneyNotice proto.InternalMessageInfo

func (m *MahjongKongChangeMoneyNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongKongChangeMoneyNotice) GetChangeMoney() []int64 {
	if m != nil {
		return m.ChangeMoney
	}
	return nil
}

func (m *MahjongKongChangeMoneyNotice) GetRemainMoney() []int64 {
	if m != nil {
		return m.RemainMoney
	}
	return nil
}

// 麻将有玩家可以抢杠胡、摸明牌时通知
type MahjongAfterKongNotice struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 玩家索引
	PlayerIndex int32 `protobuf:"varint,2,opt,name=playerIndex,proto3" json:"playerIndex,omitempty"`
	// 是否可以抢杠胡
	BCanWinByRobKong bool `protobuf:"varint,3,opt,name=bCanWinByRobKong,proto3" json:"bCanWinByRobKong,omitempty"`
	// 是否可以摸明牌
	BCanDrawOpenCard     bool     `protobuf:"varint,4,opt,name=bCanDrawOpenCard,proto3" json:"bCanDrawOpenCard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongAfterKongNotice) Reset()         { *m = MahjongAfterKongNotice{} }
func (m *MahjongAfterKongNotice) String() string { return proto.CompactTextString(m) }
func (*MahjongAfterKongNotice) ProtoMessage()    {}
func (*MahjongAfterKongNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{719}
}

func (m *MahjongAfterKongNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongAfterKongNotice.Unmarshal(m, b)
}
func (m *MahjongAfterKongNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongAfterKongNotice.Marshal(b, m, deterministic)
}
func (m *MahjongAfterKongNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongAfterKongNotice.Merge(m, src)
}
func (m *MahjongAfterKongNotice) XXX_Size() int {
	return xxx_messageInfo_MahjongAfterKongNotice.Size(m)
}
func (m *MahjongAfterKongNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongAfterKongNotice.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongAfterKongNotice proto.InternalMessageInfo

func (m *MahjongAfterKongNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongAfterKongNotice) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MahjongAfterKongNotice) GetBCanWinByRobKong() bool {
	if m != nil {
		return m.BCanWinByRobKong
	}
	return false
}

func (m *MahjongAfterKongNotice) GetBCanDrawOpenCard() bool {
	if m != nil {
		return m.BCanDrawOpenCard
	}
	return false
}

// 麻将有玩家胡牌时通知（服务器发送到客户端）
type MahjongWinNotice struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 房间胡牌信息
	WinInfo              []*MahjongWinInfo `protobuf:"bytes,2,rep,name=winInfo,proto3" json:"winInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MahjongWinNotice) Reset()         { *m = MahjongWinNotice{} }
func (m *MahjongWinNotice) String() string { return proto.CompactTextString(m) }
func (*MahjongWinNotice) ProtoMessage()    {}
func (*MahjongWinNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{720}
}

func (m *MahjongWinNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongWinNotice.Unmarshal(m, b)
}
func (m *MahjongWinNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongWinNotice.Marshal(b, m, deterministic)
}
func (m *MahjongWinNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongWinNotice.Merge(m, src)
}
func (m *MahjongWinNotice) XXX_Size() int {
	return xxx_messageInfo_MahjongWinNotice.Size(m)
}
func (m *MahjongWinNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongWinNotice.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongWinNotice proto.InternalMessageInfo

func (m *MahjongWinNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongWinNotice) GetWinInfo() []*MahjongWinInfo {
	if m != nil {
		return m.WinInfo
	}
	return nil
}

// 麻将结算前通知(服务器发送到客户端)
type MahjongBeforeSettleNotice struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 通知类型
	Type MahjongBeforeSettleEnum `protobuf:"varint,2,opt,name=type,proto3,enum=MahjongBeforeSettleEnum" json:"type,omitempty"`
	// 变更明细
	ChangeAmount []int64 `protobuf:"varint,3,rep,packed,name=changeAmount,proto3" json:"changeAmount,omitempty"`
	// 变更后的余额
	RemainMoney          []int64  `protobuf:"varint,4,rep,packed,name=remainMoney,proto3" json:"remainMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MahjongBeforeSettleNotice) Reset()         { *m = MahjongBeforeSettleNotice{} }
func (m *MahjongBeforeSettleNotice) String() string { return proto.CompactTextString(m) }
func (*MahjongBeforeSettleNotice) ProtoMessage()    {}
func (*MahjongBeforeSettleNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{721}
}

func (m *MahjongBeforeSettleNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongBeforeSettleNotice.Unmarshal(m, b)
}
func (m *MahjongBeforeSettleNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongBeforeSettleNotice.Marshal(b, m, deterministic)
}
func (m *MahjongBeforeSettleNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongBeforeSettleNotice.Merge(m, src)
}
func (m *MahjongBeforeSettleNotice) XXX_Size() int {
	return xxx_messageInfo_MahjongBeforeSettleNotice.Size(m)
}
func (m *MahjongBeforeSettleNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongBeforeSettleNotice.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongBeforeSettleNotice proto.InternalMessageInfo

func (m *MahjongBeforeSettleNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongBeforeSettleNotice) GetType() MahjongBeforeSettleEnum {
	if m != nil {
		return m.Type
	}
	return MahjongBeforeSettleEnum_MahjongBeforeSettleEnum_undefined
}

func (m *MahjongBeforeSettleNotice) GetChangeAmount() []int64 {
	if m != nil {
		return m.ChangeAmount
	}
	return nil
}

func (m *MahjongBeforeSettleNotice) GetRemainMoney() []int64 {
	if m != nil {
		return m.RemainMoney
	}
	return nil
}

type MahjongPlayerExtendData struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 玩家uuid
	PlayerUuid string `protobuf:"bytes,2,opt,name=playerUuid,proto3" json:"playerUuid,omitempty"`
	// 玩家shortId
	PlayerShortId string `protobuf:"bytes,3,opt,name=playerShortId,proto3" json:"playerShortId,omitempty"`
	// 玩家name
	PlayerName string `protobuf:"bytes,4,opt,name=playerName,proto3" json:"playerName,omitempty"`
	// 当前局麻将所有信息
	MahjongPlayerInfo    *MahjongPlayerInfo `protobuf:"bytes,5,opt,name=mahjongPlayerInfo,proto3" json:"mahjongPlayerInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MahjongPlayerExtendData) Reset()         { *m = MahjongPlayerExtendData{} }
func (m *MahjongPlayerExtendData) String() string { return proto.CompactTextString(m) }
func (*MahjongPlayerExtendData) ProtoMessage()    {}
func (*MahjongPlayerExtendData) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{722}
}

func (m *MahjongPlayerExtendData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MahjongPlayerExtendData.Unmarshal(m, b)
}
func (m *MahjongPlayerExtendData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MahjongPlayerExtendData.Marshal(b, m, deterministic)
}
func (m *MahjongPlayerExtendData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MahjongPlayerExtendData.Merge(m, src)
}
func (m *MahjongPlayerExtendData) XXX_Size() int {
	return xxx_messageInfo_MahjongPlayerExtendData.Size(m)
}
func (m *MahjongPlayerExtendData) XXX_DiscardUnknown() {
	xxx_messageInfo_MahjongPlayerExtendData.DiscardUnknown(m)
}

var xxx_messageInfo_MahjongPlayerExtendData proto.InternalMessageInfo

func (m *MahjongPlayerExtendData) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *MahjongPlayerExtendData) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *MahjongPlayerExtendData) GetPlayerShortId() string {
	if m != nil {
		return m.PlayerShortId
	}
	return ""
}

func (m *MahjongPlayerExtendData) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *MahjongPlayerExtendData) GetMahjongPlayerInfo() *MahjongPlayerInfo {
	if m != nil {
		return m.MahjongPlayerInfo
	}
	return nil
}

type LinCangMahjongSettleNotice struct {
	// 房间uuid
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 庄家index
	BankerIndex int32 `protobuf:"varint,2,opt,name=bankerIndex,proto3" json:"bankerIndex,omitempty"`
	// 结算信息
	SettleInfo           *LinCangMahjongSettle `protobuf:"bytes,3,opt,name=settleInfo,proto3" json:"settleInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *LinCangMahjongSettleNotice) Reset()         { *m = LinCangMahjongSettleNotice{} }
func (m *LinCangMahjongSettleNotice) String() string { return proto.CompactTextString(m) }
func (*LinCangMahjongSettleNotice) ProtoMessage()    {}
func (*LinCangMahjongSettleNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{723}
}

func (m *LinCangMahjongSettleNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinCangMahjongSettleNotice.Unmarshal(m, b)
}
func (m *LinCangMahjongSettleNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinCangMahjongSettleNotice.Marshal(b, m, deterministic)
}
func (m *LinCangMahjongSettleNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinCangMahjongSettleNotice.Merge(m, src)
}
func (m *LinCangMahjongSettleNotice) XXX_Size() int {
	return xxx_messageInfo_LinCangMahjongSettleNotice.Size(m)
}
func (m *LinCangMahjongSettleNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_LinCangMahjongSettleNotice.DiscardUnknown(m)
}

var xxx_messageInfo_LinCangMahjongSettleNotice proto.InternalMessageInfo

func (m *LinCangMahjongSettleNotice) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *LinCangMahjongSettleNotice) GetBankerIndex() int32 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

func (m *LinCangMahjongSettleNotice) GetSettleInfo() *LinCangMahjongSettle {
	if m != nil {
		return m.SettleInfo
	}
	return nil
}

////////////////////////////////////奔驰宝马服务器内部使用////////////////////////////
// 奔驰宝马单局游戏记录
type BenzBMWGameInfo struct {
	// 房间Id
	RoomUuid string `protobuf:"bytes,1,opt,name=roomUuid,proto3" json:"roomUuid,omitempty"`
	// 下注区域个数
	BetAreaCount int32 `protobuf:"varint,2,opt,name=betAreaCount,proto3" json:"betAreaCount,omitempty"`
	// 每个下注区域赔率
	BetAreaRate []int32 `protobuf:"varint,3,rep,packed,name=betAreaRate,proto3" json:"betAreaRate,omitempty"`
	// 当前局每个下注区域已下注总金额
	BetAreaAmount []int64 `protobuf:"varint,4,rep,packed,name=betAreaAmount,proto3" json:"betAreaAmount,omitempty"`
	// 庄家index
	BankerIndex int32 `protobuf:"varint,5,opt,name=bankerIndex,proto3" json:"bankerIndex,omitempty"`
	// 庄家uuid
	BankerUuid string `protobuf:"bytes,6,opt,name=bankerUuid,proto3" json:"bankerUuid,omitempty"`
	// 庄家的钱
	BankerAmount         int64    `protobuf:"varint,7,opt,name=bankerAmount,proto3" json:"bankerAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BenzBMWGameInfo) Reset()         { *m = BenzBMWGameInfo{} }
func (m *BenzBMWGameInfo) String() string { return proto.CompactTextString(m) }
func (*BenzBMWGameInfo) ProtoMessage()    {}
func (*BenzBMWGameInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{724}
}

func (m *BenzBMWGameInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BenzBMWGameInfo.Unmarshal(m, b)
}
func (m *BenzBMWGameInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BenzBMWGameInfo.Marshal(b, m, deterministic)
}
func (m *BenzBMWGameInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BenzBMWGameInfo.Merge(m, src)
}
func (m *BenzBMWGameInfo) XXX_Size() int {
	return xxx_messageInfo_BenzBMWGameInfo.Size(m)
}
func (m *BenzBMWGameInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BenzBMWGameInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BenzBMWGameInfo proto.InternalMessageInfo

func (m *BenzBMWGameInfo) GetRoomUuid() string {
	if m != nil {
		return m.RoomUuid
	}
	return ""
}

func (m *BenzBMWGameInfo) GetBetAreaCount() int32 {
	if m != nil {
		return m.BetAreaCount
	}
	return 0
}

func (m *BenzBMWGameInfo) GetBetAreaRate() []int32 {
	if m != nil {
		return m.BetAreaRate
	}
	return nil
}

func (m *BenzBMWGameInfo) GetBetAreaAmount() []int64 {
	if m != nil {
		return m.BetAreaAmount
	}
	return nil
}

func (m *BenzBMWGameInfo) GetBankerIndex() int32 {
	if m != nil {
		return m.BankerIndex
	}
	return 0
}

func (m *BenzBMWGameInfo) GetBankerUuid() string {
	if m != nil {
		return m.BankerUuid
	}
	return ""
}

func (m *BenzBMWGameInfo) GetBankerAmount() int64 {
	if m != nil {
		return m.BankerAmount
	}
	return 0
}

// 奔驰宝马操作请求
type BenzBMWDoRequest struct {
	// 想要进行的操作
	DoType BenzBMWDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=BenzBMWDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BenzBMWDoRequest) Reset()         { *m = BenzBMWDoRequest{} }
func (m *BenzBMWDoRequest) String() string { return proto.CompactTextString(m) }
func (*BenzBMWDoRequest) ProtoMessage()    {}
func (*BenzBMWDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{725}
}

func (m *BenzBMWDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BenzBMWDoRequest.Unmarshal(m, b)
}
func (m *BenzBMWDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BenzBMWDoRequest.Marshal(b, m, deterministic)
}
func (m *BenzBMWDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BenzBMWDoRequest.Merge(m, src)
}
func (m *BenzBMWDoRequest) XXX_Size() int {
	return xxx_messageInfo_BenzBMWDoRequest.Size(m)
}
func (m *BenzBMWDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BenzBMWDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BenzBMWDoRequest proto.InternalMessageInfo

func (m *BenzBMWDoRequest) GetDoType() BenzBMWDoType {
	if m != nil {
		return m.DoType
	}
	return BenzBMWDoType_BenzBMW_None
}

func (m *BenzBMWDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 奔驰宝马下注申请
type BenzBMWBetRequest struct {
	// 下注的区域
	BenzBMWBetArea int32 `protobuf:"varint,1,opt,name=benzBMWBetArea,proto3" json:"benzBMWBetArea,omitempty"`
	// 下注金额（幂等）
	BenzBMWBetBalance    int64    `protobuf:"varint,2,opt,name=benzBMWBetBalance,proto3" json:"benzBMWBetBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BenzBMWBetRequest) Reset()         { *m = BenzBMWBetRequest{} }
func (m *BenzBMWBetRequest) String() string { return proto.CompactTextString(m) }
func (*BenzBMWBetRequest) ProtoMessage()    {}
func (*BenzBMWBetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{726}
}

func (m *BenzBMWBetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BenzBMWBetRequest.Unmarshal(m, b)
}
func (m *BenzBMWBetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BenzBMWBetRequest.Marshal(b, m, deterministic)
}
func (m *BenzBMWBetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BenzBMWBetRequest.Merge(m, src)
}
func (m *BenzBMWBetRequest) XXX_Size() int {
	return xxx_messageInfo_BenzBMWBetRequest.Size(m)
}
func (m *BenzBMWBetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BenzBMWBetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BenzBMWBetRequest proto.InternalMessageInfo

func (m *BenzBMWBetRequest) GetBenzBMWBetArea() int32 {
	if m != nil {
		return m.BenzBMWBetArea
	}
	return 0
}

func (m *BenzBMWBetRequest) GetBenzBMWBetBalance() int64 {
	if m != nil {
		return m.BenzBMWBetBalance
	}
	return 0
}

// 奔驰宝马下注回复
type BenzBMWBetReply struct {
	// 房间Id
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 下注是否成功
	IsSuccess bool `protobuf:"varint,2,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 玩家目前金币数
	PlayerBalance        int64    `protobuf:"varint,3,opt,name=PlayerBalance,proto3" json:"PlayerBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BenzBMWBetReply) Reset()         { *m = BenzBMWBetReply{} }
func (m *BenzBMWBetReply) String() string { return proto.CompactTextString(m) }
func (*BenzBMWBetReply) ProtoMessage()    {}
func (*BenzBMWBetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{727}
}

func (m *BenzBMWBetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BenzBMWBetReply.Unmarshal(m, b)
}
func (m *BenzBMWBetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BenzBMWBetReply.Marshal(b, m, deterministic)
}
func (m *BenzBMWBetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BenzBMWBetReply.Merge(m, src)
}
func (m *BenzBMWBetReply) XXX_Size() int {
	return xxx_messageInfo_BenzBMWBetReply.Size(m)
}
func (m *BenzBMWBetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BenzBMWBetReply.DiscardUnknown(m)
}

var xxx_messageInfo_BenzBMWBetReply proto.InternalMessageInfo

func (m *BenzBMWBetReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *BenzBMWBetReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *BenzBMWBetReply) GetPlayerBalance() int64 {
	if m != nil {
		return m.PlayerBalance
	}
	return 0
}

// 奔驰宝马申请上庄申请
type BenzBMWUpBankerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BenzBMWUpBankerRequest) Reset()         { *m = BenzBMWUpBankerRequest{} }
func (m *BenzBMWUpBankerRequest) String() string { return proto.CompactTextString(m) }
func (*BenzBMWUpBankerRequest) ProtoMessage()    {}
func (*BenzBMWUpBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{728}
}

func (m *BenzBMWUpBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BenzBMWUpBankerRequest.Unmarshal(m, b)
}
func (m *BenzBMWUpBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BenzBMWUpBankerRequest.Marshal(b, m, deterministic)
}
func (m *BenzBMWUpBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BenzBMWUpBankerRequest.Merge(m, src)
}
func (m *BenzBMWUpBankerRequest) XXX_Size() int {
	return xxx_messageInfo_BenzBMWUpBankerRequest.Size(m)
}
func (m *BenzBMWUpBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BenzBMWUpBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BenzBMWUpBankerRequest proto.InternalMessageInfo

// 奔驰宝马申请上庄回复
type BenzBMWUpBankerReply struct {
	// 房间Id
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 上庄是否成功
	IsSuccess            bool     `protobuf:"varint,2,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BenzBMWUpBankerReply) Reset()         { *m = BenzBMWUpBankerReply{} }
func (m *BenzBMWUpBankerReply) String() string { return proto.CompactTextString(m) }
func (*BenzBMWUpBankerReply) ProtoMessage()    {}
func (*BenzBMWUpBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{729}
}

func (m *BenzBMWUpBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BenzBMWUpBankerReply.Unmarshal(m, b)
}
func (m *BenzBMWUpBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BenzBMWUpBankerReply.Marshal(b, m, deterministic)
}
func (m *BenzBMWUpBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BenzBMWUpBankerReply.Merge(m, src)
}
func (m *BenzBMWUpBankerReply) XXX_Size() int {
	return xxx_messageInfo_BenzBMWUpBankerReply.Size(m)
}
func (m *BenzBMWUpBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BenzBMWUpBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_BenzBMWUpBankerReply proto.InternalMessageInfo

func (m *BenzBMWUpBankerReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *BenzBMWUpBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 奔驰宝马申请下庄申请
type BenzBMWDownBankerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BenzBMWDownBankerRequest) Reset()         { *m = BenzBMWDownBankerRequest{} }
func (m *BenzBMWDownBankerRequest) String() string { return proto.CompactTextString(m) }
func (*BenzBMWDownBankerRequest) ProtoMessage()    {}
func (*BenzBMWDownBankerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{730}
}

func (m *BenzBMWDownBankerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BenzBMWDownBankerRequest.Unmarshal(m, b)
}
func (m *BenzBMWDownBankerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BenzBMWDownBankerRequest.Marshal(b, m, deterministic)
}
func (m *BenzBMWDownBankerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BenzBMWDownBankerRequest.Merge(m, src)
}
func (m *BenzBMWDownBankerRequest) XXX_Size() int {
	return xxx_messageInfo_BenzBMWDownBankerRequest.Size(m)
}
func (m *BenzBMWDownBankerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BenzBMWDownBankerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BenzBMWDownBankerRequest proto.InternalMessageInfo

// 奔驰宝马申请下庄回复
type BenzBMWDownBankerReply struct {
	// 房间Id
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 上庄是否成功
	IsSuccess            bool     `protobuf:"varint,2,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BenzBMWDownBankerReply) Reset()         { *m = BenzBMWDownBankerReply{} }
func (m *BenzBMWDownBankerReply) String() string { return proto.CompactTextString(m) }
func (*BenzBMWDownBankerReply) ProtoMessage()    {}
func (*BenzBMWDownBankerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{731}
}

func (m *BenzBMWDownBankerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BenzBMWDownBankerReply.Unmarshal(m, b)
}
func (m *BenzBMWDownBankerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BenzBMWDownBankerReply.Marshal(b, m, deterministic)
}
func (m *BenzBMWDownBankerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BenzBMWDownBankerReply.Merge(m, src)
}
func (m *BenzBMWDownBankerReply) XXX_Size() int {
	return xxx_messageInfo_BenzBMWDownBankerReply.Size(m)
}
func (m *BenzBMWDownBankerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BenzBMWDownBankerReply.DiscardUnknown(m)
}

var xxx_messageInfo_BenzBMWDownBankerReply proto.InternalMessageInfo

func (m *BenzBMWDownBankerReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *BenzBMWDownBankerReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 奔驰宝马上庄列表变动的推送
type PushBenzBMWChangeBankers struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 现在庄家的等待队列
	Bankers              []string `protobuf:"bytes,2,rep,name=Bankers,proto3" json:"Bankers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBenzBMWChangeBankers) Reset()         { *m = PushBenzBMWChangeBankers{} }
func (m *PushBenzBMWChangeBankers) String() string { return proto.CompactTextString(m) }
func (*PushBenzBMWChangeBankers) ProtoMessage()    {}
func (*PushBenzBMWChangeBankers) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{732}
}

func (m *PushBenzBMWChangeBankers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBenzBMWChangeBankers.Unmarshal(m, b)
}
func (m *PushBenzBMWChangeBankers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBenzBMWChangeBankers.Marshal(b, m, deterministic)
}
func (m *PushBenzBMWChangeBankers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBenzBMWChangeBankers.Merge(m, src)
}
func (m *PushBenzBMWChangeBankers) XXX_Size() int {
	return xxx_messageInfo_PushBenzBMWChangeBankers.Size(m)
}
func (m *PushBenzBMWChangeBankers) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBenzBMWChangeBankers.DiscardUnknown(m)
}

var xxx_messageInfo_PushBenzBMWChangeBankers proto.InternalMessageInfo

func (m *PushBenzBMWChangeBankers) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushBenzBMWChangeBankers) GetBankers() []string {
	if m != nil {
		return m.Bankers
	}
	return nil
}

// 奔驰宝马每局庄家信息的推送
type PushBenzBMWBankerMessage struct {
	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	// 之前的庄家 - 如之前之后相同说明庄家未变，同时原因会为容错
	BeforeBanker string `protobuf:"bytes,2,opt,name=BeforeBanker,proto3" json:"BeforeBanker,omitempty"`
	// 之后的庄家
	AfterBanker string `protobuf:"bytes,3,opt,name=AfterBanker,proto3" json:"AfterBanker,omitempty"`
	// 之前庄家被替换的原因
	ReplaceBankerReason KickBankerReason `protobuf:"varint,4,opt,name=ReplaceBankerReason,proto3,enum=KickBankerReason" json:"ReplaceBankerReason,omitempty"`
	// 庄家目前的连庄回合数
	NowRound int64 `protobuf:"varint,5,opt,name=NowRound,proto3" json:"NowRound,omitempty"`
	// 庄家申请列表
	Bankers []string `protobuf:"bytes,6,rep,name=Bankers,proto3" json:"Bankers,omitempty"`
	// 限红，龙虎和
	MaxBetRatio          []int64  `protobuf:"varint,7,rep,packed,name=MaxBetRatio,proto3" json:"MaxBetRatio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBenzBMWBankerMessage) Reset()         { *m = PushBenzBMWBankerMessage{} }
func (m *PushBenzBMWBankerMessage) String() string { return proto.CompactTextString(m) }
func (*PushBenzBMWBankerMessage) ProtoMessage()    {}
func (*PushBenzBMWBankerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{733}
}

func (m *PushBenzBMWBankerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBenzBMWBankerMessage.Unmarshal(m, b)
}
func (m *PushBenzBMWBankerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBenzBMWBankerMessage.Marshal(b, m, deterministic)
}
func (m *PushBenzBMWBankerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBenzBMWBankerMessage.Merge(m, src)
}
func (m *PushBenzBMWBankerMessage) XXX_Size() int {
	return xxx_messageInfo_PushBenzBMWBankerMessage.Size(m)
}
func (m *PushBenzBMWBankerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBenzBMWBankerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PushBenzBMWBankerMessage proto.InternalMessageInfo

func (m *PushBenzBMWBankerMessage) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PushBenzBMWBankerMessage) GetBeforeBanker() string {
	if m != nil {
		return m.BeforeBanker
	}
	return ""
}

func (m *PushBenzBMWBankerMessage) GetAfterBanker() string {
	if m != nil {
		return m.AfterBanker
	}
	return ""
}

func (m *PushBenzBMWBankerMessage) GetReplaceBankerReason() KickBankerReason {
	if m != nil {
		return m.ReplaceBankerReason
	}
	return KickBankerReason_KickBankerNone
}

func (m *PushBenzBMWBankerMessage) GetNowRound() int64 {
	if m != nil {
		return m.NowRound
	}
	return 0
}

func (m *PushBenzBMWBankerMessage) GetBankers() []string {
	if m != nil {
		return m.Bankers
	}
	return nil
}

func (m *PushBenzBMWBankerMessage) GetMaxBetRatio() []int64 {
	if m != nil {
		return m.MaxBetRatio
	}
	return nil
}

// 一条业绩档位的配置
type OneAchievementLevelConfig struct {
	// 该档位的最小值,以万为单位
	Min int64 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	// 该档位的最大值,以万为单位
	Max int64 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	// 该档位的佣金值
	Gold                 int64    `protobuf:"varint,3,opt,name=gold,proto3" json:"gold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneAchievementLevelConfig) Reset()         { *m = OneAchievementLevelConfig{} }
func (m *OneAchievementLevelConfig) String() string { return proto.CompactTextString(m) }
func (*OneAchievementLevelConfig) ProtoMessage()    {}
func (*OneAchievementLevelConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{734}
}

func (m *OneAchievementLevelConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneAchievementLevelConfig.Unmarshal(m, b)
}
func (m *OneAchievementLevelConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneAchievementLevelConfig.Marshal(b, m, deterministic)
}
func (m *OneAchievementLevelConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneAchievementLevelConfig.Merge(m, src)
}
func (m *OneAchievementLevelConfig) XXX_Size() int {
	return xxx_messageInfo_OneAchievementLevelConfig.Size(m)
}
func (m *OneAchievementLevelConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_OneAchievementLevelConfig.DiscardUnknown(m)
}

var xxx_messageInfo_OneAchievementLevelConfig proto.InternalMessageInfo

func (m *OneAchievementLevelConfig) GetMin() int64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *OneAchievementLevelConfig) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *OneAchievementLevelConfig) GetGold() int64 {
	if m != nil {
		return m.Gold
	}
	return 0
}

// 代理相关配置
type AgentConfig struct {
	// 配置的uuid
	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// 业绩档位配置
	AllLevel             []*OneAchievementLevelConfig `protobuf:"bytes,2,rep,name=allLevel,proto3" json:"allLevel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *AgentConfig) Reset()         { *m = AgentConfig{} }
func (m *AgentConfig) String() string { return proto.CompactTextString(m) }
func (*AgentConfig) ProtoMessage()    {}
func (*AgentConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{735}
}

func (m *AgentConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentConfig.Unmarshal(m, b)
}
func (m *AgentConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentConfig.Marshal(b, m, deterministic)
}
func (m *AgentConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentConfig.Merge(m, src)
}
func (m *AgentConfig) XXX_Size() int {
	return xxx_messageInfo_AgentConfig.Size(m)
}
func (m *AgentConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AgentConfig proto.InternalMessageInfo

func (m *AgentConfig) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *AgentConfig) GetAllLevel() []*OneAchievementLevelConfig {
	if m != nil {
		return m.AllLevel
	}
	return nil
}

//修改代理配置申请
type UpdateAgentConfigRequest struct {
	AgentConfig          *AgentConfig `protobuf:"bytes,1,opt,name=agentConfig,proto3" json:"agentConfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateAgentConfigRequest) Reset()         { *m = UpdateAgentConfigRequest{} }
func (m *UpdateAgentConfigRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAgentConfigRequest) ProtoMessage()    {}
func (*UpdateAgentConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{736}
}

func (m *UpdateAgentConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAgentConfigRequest.Unmarshal(m, b)
}
func (m *UpdateAgentConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAgentConfigRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAgentConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAgentConfigRequest.Merge(m, src)
}
func (m *UpdateAgentConfigRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAgentConfigRequest.Size(m)
}
func (m *UpdateAgentConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAgentConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAgentConfigRequest proto.InternalMessageInfo

func (m *UpdateAgentConfigRequest) GetAgentConfig() *AgentConfig {
	if m != nil {
		return m.AgentConfig
	}
	return nil
}

//修改代理配置回复
type UpdateAgentConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAgentConfigReply) Reset()         { *m = UpdateAgentConfigReply{} }
func (m *UpdateAgentConfigReply) String() string { return proto.CompactTextString(m) }
func (*UpdateAgentConfigReply) ProtoMessage()    {}
func (*UpdateAgentConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{737}
}

func (m *UpdateAgentConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAgentConfigReply.Unmarshal(m, b)
}
func (m *UpdateAgentConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAgentConfigReply.Marshal(b, m, deterministic)
}
func (m *UpdateAgentConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAgentConfigReply.Merge(m, src)
}
func (m *UpdateAgentConfigReply) XXX_Size() int {
	return xxx_messageInfo_UpdateAgentConfigReply.Size(m)
}
func (m *UpdateAgentConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAgentConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAgentConfigReply proto.InternalMessageInfo

//获得代理配置申请
type GetAgentConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAgentConfigRequest) Reset()         { *m = GetAgentConfigRequest{} }
func (m *GetAgentConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetAgentConfigRequest) ProtoMessage()    {}
func (*GetAgentConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{738}
}

func (m *GetAgentConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentConfigRequest.Unmarshal(m, b)
}
func (m *GetAgentConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetAgentConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentConfigRequest.Merge(m, src)
}
func (m *GetAgentConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetAgentConfigRequest.Size(m)
}
func (m *GetAgentConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentConfigRequest proto.InternalMessageInfo

//获得代理配置回复
type GetAgentConfigReply struct {
	AgentConfig          []*AgentConfig `protobuf:"bytes,1,rep,name=agentConfig,proto3" json:"agentConfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetAgentConfigReply) Reset()         { *m = GetAgentConfigReply{} }
func (m *GetAgentConfigReply) String() string { return proto.CompactTextString(m) }
func (*GetAgentConfigReply) ProtoMessage()    {}
func (*GetAgentConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{739}
}

func (m *GetAgentConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentConfigReply.Unmarshal(m, b)
}
func (m *GetAgentConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentConfigReply.Marshal(b, m, deterministic)
}
func (m *GetAgentConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentConfigReply.Merge(m, src)
}
func (m *GetAgentConfigReply) XXX_Size() int {
	return xxx_messageInfo_GetAgentConfigReply.Size(m)
}
func (m *GetAgentConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentConfigReply proto.InternalMessageInfo

func (m *GetAgentConfigReply) GetAgentConfig() []*AgentConfig {
	if m != nil {
		return m.AgentConfig
	}
	return nil
}

// 业绩信息
type AchievementInfo struct {
	// 产生这条业绩的uuid
	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// 业绩值
	Num int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	// 业绩产生的原因
	Reason ResourceChangeReason `protobuf:"varint,3,opt,name=reason,proto3,enum=ResourceChangeReason" json:"reason,omitempty"`
	// 业绩创建时间
	CreateTime           int64    `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AchievementInfo) Reset()         { *m = AchievementInfo{} }
func (m *AchievementInfo) String() string { return proto.CompactTextString(m) }
func (*AchievementInfo) ProtoMessage()    {}
func (*AchievementInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{740}
}

func (m *AchievementInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AchievementInfo.Unmarshal(m, b)
}
func (m *AchievementInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AchievementInfo.Marshal(b, m, deterministic)
}
func (m *AchievementInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AchievementInfo.Merge(m, src)
}
func (m *AchievementInfo) XXX_Size() int {
	return xxx_messageInfo_AchievementInfo.Size(m)
}
func (m *AchievementInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AchievementInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AchievementInfo proto.InternalMessageInfo

func (m *AchievementInfo) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *AchievementInfo) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *AchievementInfo) GetReason() ResourceChangeReason {
	if m != nil {
		return m.Reason
	}
	return ResourceChangeReason_ReasonNone
}

func (m *AchievementInfo) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

// 代理排线码信息
type AgentLineCodeInfo struct {
	// 排线码最后一位的uuid
	LastUUID string `protobuf:"bytes,1,opt,name=lastUUID,proto3" json:"lastUUID,omitempty"`
	// 排线码中总共有多少人
	AgentNum int32 `protobuf:"varint,2,opt,name=agentNum,proto3" json:"agentNum,omitempty"`
	// 排线码的最大容纳人数
	MaxAgentNum int32 `protobuf:"varint,3,opt,name=maxAgentNum,proto3" json:"maxAgentNum,omitempty"`
	// 排线码的创建时间
	CreateTime int64 `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 排线码的名字
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// 排线码的最后一位的昵称，前端展示用，服务器不存储
	LastName string `protobuf:"bytes,6,opt,name=lastName,proto3" json:"lastName,omitempty"`
	// 排线码的uuid
	UUID                 string   `protobuf:"bytes,7,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentLineCodeInfo) Reset()         { *m = AgentLineCodeInfo{} }
func (m *AgentLineCodeInfo) String() string { return proto.CompactTextString(m) }
func (*AgentLineCodeInfo) ProtoMessage()    {}
func (*AgentLineCodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{741}
}

func (m *AgentLineCodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentLineCodeInfo.Unmarshal(m, b)
}
func (m *AgentLineCodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentLineCodeInfo.Marshal(b, m, deterministic)
}
func (m *AgentLineCodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentLineCodeInfo.Merge(m, src)
}
func (m *AgentLineCodeInfo) XXX_Size() int {
	return xxx_messageInfo_AgentLineCodeInfo.Size(m)
}
func (m *AgentLineCodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentLineCodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AgentLineCodeInfo proto.InternalMessageInfo

func (m *AgentLineCodeInfo) GetLastUUID() string {
	if m != nil {
		return m.LastUUID
	}
	return ""
}

func (m *AgentLineCodeInfo) GetAgentNum() int32 {
	if m != nil {
		return m.AgentNum
	}
	return 0
}

func (m *AgentLineCodeInfo) GetMaxAgentNum() int32 {
	if m != nil {
		return m.MaxAgentNum
	}
	return 0
}

func (m *AgentLineCodeInfo) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *AgentLineCodeInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AgentLineCodeInfo) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *AgentLineCodeInfo) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

// 一个代理的代理的片段信息
type OneAgentFragmentInfo struct {
	// 该代理的uuid
	AgentUUID string `protobuf:"bytes,1,opt,name=agentUUID,proto3" json:"agentUUID,omitempty"`
	// 该代理父亲所在的数据片段的编号
	ParentFragmentNum int32 `protobuf:"varint,2,opt,name=parentFragmentNum,proto3" json:"parentFragmentNum,omitempty"`
	// 该代理父亲在数据片段中的位置索引
	ParentIndex int32 `protobuf:"varint,3,opt,name=parentIndex,proto3" json:"parentIndex,omitempty"`
	// 父亲的uuid
	ParentUUID string `protobuf:"bytes,4,opt,name=parentUUID,proto3" json:"parentUUID,omitempty"`
	// 该代理的所属的排线码id
	LineCodeUUID string `protobuf:"bytes,5,opt,name=lineCodeUUID,proto3" json:"lineCodeUUID,omitempty"`
	// 该代理的非直属代理总数
	IndirectlyUnderNum int32 `protobuf:"varint,6,opt,name=indirectlyUnderNum,proto3" json:"indirectlyUnderNum,omitempty"`
	// 本周新增,包括直属和非直属
	NewAgentOneWeek int32 `protobuf:"varint,7,opt,name=newAgentOneWeek,proto3" json:"newAgentOneWeek,omitempty"`
	// 上次新增下属的时间，包括直属和非直属
	LastAddTime int64 `protobuf:"varint,8,opt,name=lastAddTime,proto3" json:"lastAddTime,omitempty"`
	// 代理的子身份
	AgentSubIdentity AgentSubIdentity `protobuf:"varint,9,opt,name=agentSubIdentity,proto3,enum=AgentSubIdentity" json:"agentSubIdentity,omitempty"`
	// 加入链条的时间
	JoinTime int64 `protobuf:"varint,10,opt,name=joinTime,proto3" json:"joinTime,omitempty"`
	// 顶代的uuid [1级顶代，2级顶代，3级顶代，4级顶代] - 只保存在顶代账号身上
	TopUuid              []string `protobuf:"bytes,11,rep,name=TopUuid,proto3" json:"TopUuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneAgentFragmentInfo) Reset()         { *m = OneAgentFragmentInfo{} }
func (m *OneAgentFragmentInfo) String() string { return proto.CompactTextString(m) }
func (*OneAgentFragmentInfo) ProtoMessage()    {}
func (*OneAgentFragmentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{742}
}

func (m *OneAgentFragmentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneAgentFragmentInfo.Unmarshal(m, b)
}
func (m *OneAgentFragmentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneAgentFragmentInfo.Marshal(b, m, deterministic)
}
func (m *OneAgentFragmentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneAgentFragmentInfo.Merge(m, src)
}
func (m *OneAgentFragmentInfo) XXX_Size() int {
	return xxx_messageInfo_OneAgentFragmentInfo.Size(m)
}
func (m *OneAgentFragmentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OneAgentFragmentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OneAgentFragmentInfo proto.InternalMessageInfo

func (m *OneAgentFragmentInfo) GetAgentUUID() string {
	if m != nil {
		return m.AgentUUID
	}
	return ""
}

func (m *OneAgentFragmentInfo) GetParentFragmentNum() int32 {
	if m != nil {
		return m.ParentFragmentNum
	}
	return 0
}

func (m *OneAgentFragmentInfo) GetParentIndex() int32 {
	if m != nil {
		return m.ParentIndex
	}
	return 0
}

func (m *OneAgentFragmentInfo) GetParentUUID() string {
	if m != nil {
		return m.ParentUUID
	}
	return ""
}

func (m *OneAgentFragmentInfo) GetLineCodeUUID() string {
	if m != nil {
		return m.LineCodeUUID
	}
	return ""
}

func (m *OneAgentFragmentInfo) GetIndirectlyUnderNum() int32 {
	if m != nil {
		return m.IndirectlyUnderNum
	}
	return 0
}

func (m *OneAgentFragmentInfo) GetNewAgentOneWeek() int32 {
	if m != nil {
		return m.NewAgentOneWeek
	}
	return 0
}

func (m *OneAgentFragmentInfo) GetLastAddTime() int64 {
	if m != nil {
		return m.LastAddTime
	}
	return 0
}

func (m *OneAgentFragmentInfo) GetAgentSubIdentity() AgentSubIdentity {
	if m != nil {
		return m.AgentSubIdentity
	}
	return AgentSubIdentity_AgentSubIdentity_Agent
}

func (m *OneAgentFragmentInfo) GetJoinTime() int64 {
	if m != nil {
		return m.JoinTime
	}
	return 0
}

func (m *OneAgentFragmentInfo) GetTopUuid() []string {
	if m != nil {
		return m.TopUuid
	}
	return nil
}

// 代理片段，这个列表会有多段，每一个片段预计存储1万个代理的片段信息
type AgentFragment struct {
	// 代理片段信息
	Info                 []*OneAgentFragmentInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *AgentFragment) Reset()         { *m = AgentFragment{} }
func (m *AgentFragment) String() string { return proto.CompactTextString(m) }
func (*AgentFragment) ProtoMessage()    {}
func (*AgentFragment) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{743}
}

func (m *AgentFragment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentFragment.Unmarshal(m, b)
}
func (m *AgentFragment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentFragment.Marshal(b, m, deterministic)
}
func (m *AgentFragment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentFragment.Merge(m, src)
}
func (m *AgentFragment) XXX_Size() int {
	return xxx_messageInfo_AgentFragment.Size(m)
}
func (m *AgentFragment) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentFragment.DiscardUnknown(m)
}

var xxx_messageInfo_AgentFragment proto.InternalMessageInfo

func (m *AgentFragment) GetInfo() []*OneAgentFragmentInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 一个代理的代理关系信息
type OneAgentInfo struct {
	// 排线码的信息,key为排线码的uuid
	LineCodeInfos map[string]*AgentLineCodeInfo `protobuf:"bytes,1,rep,name=lineCodeInfos,proto3" json:"lineCodeInfos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 所有直属代理，有序
	DirectlyUnder []string `protobuf:"bytes,2,rep,name=directlyUnder,proto3" json:"directlyUnder,omitempty"`
	// 我所在的数据片段的编号
	MyFragmentNum int32 `protobuf:"varint,3,opt,name=myFragmentNum,proto3" json:"myFragmentNum,omitempty"`
	// 我在数据片段中的位置索引
	MyIndex int32 `protobuf:"varint,4,opt,name=myIndex,proto3" json:"myIndex,omitempty"`
	// 父亲的uuid
	ParentUUID string `protobuf:"bytes,5,opt,name=parentUUID,proto3" json:"parentUUID,omitempty"`
	// 代理的子身份
	AgentSubIdentity AgentSubIdentity `protobuf:"varint,6,opt,name=agentSubIdentity,proto3,enum=AgentSubIdentity" json:"agentSubIdentity,omitempty"`
	// 加入链条的时间
	JoinTime             int64    `protobuf:"varint,7,opt,name=joinTime,proto3" json:"joinTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneAgentInfo) Reset()         { *m = OneAgentInfo{} }
func (m *OneAgentInfo) String() string { return proto.CompactTextString(m) }
func (*OneAgentInfo) ProtoMessage()    {}
func (*OneAgentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{744}
}

func (m *OneAgentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneAgentInfo.Unmarshal(m, b)
}
func (m *OneAgentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneAgentInfo.Marshal(b, m, deterministic)
}
func (m *OneAgentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneAgentInfo.Merge(m, src)
}
func (m *OneAgentInfo) XXX_Size() int {
	return xxx_messageInfo_OneAgentInfo.Size(m)
}
func (m *OneAgentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OneAgentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OneAgentInfo proto.InternalMessageInfo

func (m *OneAgentInfo) GetLineCodeInfos() map[string]*AgentLineCodeInfo {
	if m != nil {
		return m.LineCodeInfos
	}
	return nil
}

func (m *OneAgentInfo) GetDirectlyUnder() []string {
	if m != nil {
		return m.DirectlyUnder
	}
	return nil
}

func (m *OneAgentInfo) GetMyFragmentNum() int32 {
	if m != nil {
		return m.MyFragmentNum
	}
	return 0
}

func (m *OneAgentInfo) GetMyIndex() int32 {
	if m != nil {
		return m.MyIndex
	}
	return 0
}

func (m *OneAgentInfo) GetParentUUID() string {
	if m != nil {
		return m.ParentUUID
	}
	return ""
}

func (m *OneAgentInfo) GetAgentSubIdentity() AgentSubIdentity {
	if m != nil {
		return m.AgentSubIdentity
	}
	return AgentSubIdentity_AgentSubIdentity_Agent
}

func (m *OneAgentInfo) GetJoinTime() int64 {
	if m != nil {
		return m.JoinTime
	}
	return 0
}

// 创建代理关系的请求
type CreateAgentRelationRequest struct {
	// 父亲的UUID
	ParentUUID string `protobuf:"bytes,1,opt,name=parentUUID,proto3" json:"parentUUID,omitempty"`
	// 儿子的UUID
	ChildUUID string `protobuf:"bytes,2,opt,name=childUUID,proto3" json:"childUUID,omitempty"`
	// 排线码的UUID
	LineCodeUUID         string   `protobuf:"bytes,3,opt,name=lineCodeUUID,proto3" json:"lineCodeUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAgentRelationRequest) Reset()         { *m = CreateAgentRelationRequest{} }
func (m *CreateAgentRelationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAgentRelationRequest) ProtoMessage()    {}
func (*CreateAgentRelationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{745}
}

func (m *CreateAgentRelationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAgentRelationRequest.Unmarshal(m, b)
}
func (m *CreateAgentRelationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAgentRelationRequest.Marshal(b, m, deterministic)
}
func (m *CreateAgentRelationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAgentRelationRequest.Merge(m, src)
}
func (m *CreateAgentRelationRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAgentRelationRequest.Size(m)
}
func (m *CreateAgentRelationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAgentRelationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAgentRelationRequest proto.InternalMessageInfo

func (m *CreateAgentRelationRequest) GetParentUUID() string {
	if m != nil {
		return m.ParentUUID
	}
	return ""
}

func (m *CreateAgentRelationRequest) GetChildUUID() string {
	if m != nil {
		return m.ChildUUID
	}
	return ""
}

func (m *CreateAgentRelationRequest) GetLineCodeUUID() string {
	if m != nil {
		return m.LineCodeUUID
	}
	return ""
}

// 创建代理关系的返回
type CreateAgentRelationReply struct {
	// 真正的父亲的UUID，排线码情况下有肯能不是真正的
	ParentUUID string `protobuf:"bytes,1,opt,name=parentUUID,proto3" json:"parentUUID,omitempty"`
	// 儿子的UUID
	ChildUUID            string   `protobuf:"bytes,2,opt,name=childUUID,proto3" json:"childUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAgentRelationReply) Reset()         { *m = CreateAgentRelationReply{} }
func (m *CreateAgentRelationReply) String() string { return proto.CompactTextString(m) }
func (*CreateAgentRelationReply) ProtoMessage()    {}
func (*CreateAgentRelationReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{746}
}

func (m *CreateAgentRelationReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAgentRelationReply.Unmarshal(m, b)
}
func (m *CreateAgentRelationReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAgentRelationReply.Marshal(b, m, deterministic)
}
func (m *CreateAgentRelationReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAgentRelationReply.Merge(m, src)
}
func (m *CreateAgentRelationReply) XXX_Size() int {
	return xxx_messageInfo_CreateAgentRelationReply.Size(m)
}
func (m *CreateAgentRelationReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAgentRelationReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAgentRelationReply proto.InternalMessageInfo

func (m *CreateAgentRelationReply) GetParentUUID() string {
	if m != nil {
		return m.ParentUUID
	}
	return ""
}

func (m *CreateAgentRelationReply) GetChildUUID() string {
	if m != nil {
		return m.ChildUUID
	}
	return ""
}

// 设置顶代账号的请求
type SetTopAgentRequest struct {
	TopUUID              string   `protobuf:"bytes,1,opt,name=topUUID,proto3" json:"topUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTopAgentRequest) Reset()         { *m = SetTopAgentRequest{} }
func (m *SetTopAgentRequest) String() string { return proto.CompactTextString(m) }
func (*SetTopAgentRequest) ProtoMessage()    {}
func (*SetTopAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{747}
}

func (m *SetTopAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTopAgentRequest.Unmarshal(m, b)
}
func (m *SetTopAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTopAgentRequest.Marshal(b, m, deterministic)
}
func (m *SetTopAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTopAgentRequest.Merge(m, src)
}
func (m *SetTopAgentRequest) XXX_Size() int {
	return xxx_messageInfo_SetTopAgentRequest.Size(m)
}
func (m *SetTopAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTopAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetTopAgentRequest proto.InternalMessageInfo

func (m *SetTopAgentRequest) GetTopUUID() string {
	if m != nil {
		return m.TopUUID
	}
	return ""
}

// 设置顶代账号的返回
type SetTopAgentReply struct {
	TopUUID              string   `protobuf:"bytes,1,opt,name=topUUID,proto3" json:"topUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTopAgentReply) Reset()         { *m = SetTopAgentReply{} }
func (m *SetTopAgentReply) String() string { return proto.CompactTextString(m) }
func (*SetTopAgentReply) ProtoMessage()    {}
func (*SetTopAgentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{748}
}

func (m *SetTopAgentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTopAgentReply.Unmarshal(m, b)
}
func (m *SetTopAgentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTopAgentReply.Marshal(b, m, deterministic)
}
func (m *SetTopAgentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTopAgentReply.Merge(m, src)
}
func (m *SetTopAgentReply) XXX_Size() int {
	return xxx_messageInfo_SetTopAgentReply.Size(m)
}
func (m *SetTopAgentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTopAgentReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetTopAgentReply proto.InternalMessageInfo

func (m *SetTopAgentReply) GetTopUUID() string {
	if m != nil {
		return m.TopUUID
	}
	return ""
}

// 代理业绩信息总览
type AgentAchievementInfo struct {
	// 代理短位id
	ShortId string `protobuf:"bytes,1,opt,name=shortId,proto3" json:"shortId,omitempty"`
	// 代理昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 代理父亲的短位id
	ParentShortId string `protobuf:"bytes,3,opt,name=parentShortId,proto3" json:"parentShortId,omitempty"`
	// 本周总业绩
	AllWeekAchievement int64 `protobuf:"varint,4,opt,name=allWeekAchievement,proto3" json:"allWeekAchievement,omitempty"`
	// 本周直属业绩
	WeekDirectlyAchievement int64 `protobuf:"varint,5,opt,name=weekDirectlyAchievement,proto3" json:"weekDirectlyAchievement,omitempty"`
	// 本周团队业绩
	WeekTeamAchievement int64 `protobuf:"varint,6,opt,name=weekTeamAchievement,proto3" json:"weekTeamAchievement,omitempty"`
	// 直属会员
	DirectlyNum int32 `protobuf:"varint,7,opt,name=directlyNum,proto3" json:"directlyNum,omitempty"`
	// 团队会员
	TeamNum int32 `protobuf:"varint,8,opt,name=teamNum,proto3" json:"teamNum,omitempty"`
	// 最后登陆时间
	LastLoginTime        int64    `protobuf:"varint,9,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentAchievementInfo) Reset()         { *m = AgentAchievementInfo{} }
func (m *AgentAchievementInfo) String() string { return proto.CompactTextString(m) }
func (*AgentAchievementInfo) ProtoMessage()    {}
func (*AgentAchievementInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{749}
}

func (m *AgentAchievementInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentAchievementInfo.Unmarshal(m, b)
}
func (m *AgentAchievementInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentAchievementInfo.Marshal(b, m, deterministic)
}
func (m *AgentAchievementInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentAchievementInfo.Merge(m, src)
}
func (m *AgentAchievementInfo) XXX_Size() int {
	return xxx_messageInfo_AgentAchievementInfo.Size(m)
}
func (m *AgentAchievementInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentAchievementInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AgentAchievementInfo proto.InternalMessageInfo

func (m *AgentAchievementInfo) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *AgentAchievementInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AgentAchievementInfo) GetParentShortId() string {
	if m != nil {
		return m.ParentShortId
	}
	return ""
}

func (m *AgentAchievementInfo) GetAllWeekAchievement() int64 {
	if m != nil {
		return m.AllWeekAchievement
	}
	return 0
}

func (m *AgentAchievementInfo) GetWeekDirectlyAchievement() int64 {
	if m != nil {
		return m.WeekDirectlyAchievement
	}
	return 0
}

func (m *AgentAchievementInfo) GetWeekTeamAchievement() int64 {
	if m != nil {
		return m.WeekTeamAchievement
	}
	return 0
}

func (m *AgentAchievementInfo) GetDirectlyNum() int32 {
	if m != nil {
		return m.DirectlyNum
	}
	return 0
}

func (m *AgentAchievementInfo) GetTeamNum() int32 {
	if m != nil {
		return m.TeamNum
	}
	return 0
}

func (m *AgentAchievementInfo) GetLastLoginTime() int64 {
	if m != nil {
		return m.LastLoginTime
	}
	return 0
}

// 获得代理业绩总览的请求
type GetAgentAchievementInfoRequest struct {
	WantShortID          string   `protobuf:"bytes,1,opt,name=wantShortID,proto3" json:"wantShortID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAgentAchievementInfoRequest) Reset()         { *m = GetAgentAchievementInfoRequest{} }
func (m *GetAgentAchievementInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetAgentAchievementInfoRequest) ProtoMessage()    {}
func (*GetAgentAchievementInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{750}
}

func (m *GetAgentAchievementInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentAchievementInfoRequest.Unmarshal(m, b)
}
func (m *GetAgentAchievementInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentAchievementInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetAgentAchievementInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentAchievementInfoRequest.Merge(m, src)
}
func (m *GetAgentAchievementInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetAgentAchievementInfoRequest.Size(m)
}
func (m *GetAgentAchievementInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentAchievementInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentAchievementInfoRequest proto.InternalMessageInfo

func (m *GetAgentAchievementInfoRequest) GetWantShortID() string {
	if m != nil {
		return m.WantShortID
	}
	return ""
}

// 获得代理业绩总览的返回
type GetAgentAchievementInfoReply struct {
	Info                 *AgentAchievementInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetAgentAchievementInfoReply) Reset()         { *m = GetAgentAchievementInfoReply{} }
func (m *GetAgentAchievementInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetAgentAchievementInfoReply) ProtoMessage()    {}
func (*GetAgentAchievementInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{751}
}

func (m *GetAgentAchievementInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentAchievementInfoReply.Unmarshal(m, b)
}
func (m *GetAgentAchievementInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentAchievementInfoReply.Marshal(b, m, deterministic)
}
func (m *GetAgentAchievementInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentAchievementInfoReply.Merge(m, src)
}
func (m *GetAgentAchievementInfoReply) XXX_Size() int {
	return xxx_messageInfo_GetAgentAchievementInfoReply.Size(m)
}
func (m *GetAgentAchievementInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentAchievementInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentAchievementInfoReply proto.InternalMessageInfo

func (m *GetAgentAchievementInfoReply) GetInfo() *AgentAchievementInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 创建排线码的请求
type CreateLineCodeRequest struct {
	// 排线码的最大容纳人数
	MaxAgentNum int32 `protobuf:"varint,1,opt,name=maxAgentNum,proto3" json:"maxAgentNum,omitempty"`
	// 排线码的名字
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLineCodeRequest) Reset()         { *m = CreateLineCodeRequest{} }
func (m *CreateLineCodeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLineCodeRequest) ProtoMessage()    {}
func (*CreateLineCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{752}
}

func (m *CreateLineCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLineCodeRequest.Unmarshal(m, b)
}
func (m *CreateLineCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLineCodeRequest.Marshal(b, m, deterministic)
}
func (m *CreateLineCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLineCodeRequest.Merge(m, src)
}
func (m *CreateLineCodeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLineCodeRequest.Size(m)
}
func (m *CreateLineCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLineCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLineCodeRequest proto.InternalMessageInfo

func (m *CreateLineCodeRequest) GetMaxAgentNum() int32 {
	if m != nil {
		return m.MaxAgentNum
	}
	return 0
}

func (m *CreateLineCodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 创建排线码的返回
type CreateLineCodeReply struct {
	Info                 *AgentLineCodeInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateLineCodeReply) Reset()         { *m = CreateLineCodeReply{} }
func (m *CreateLineCodeReply) String() string { return proto.CompactTextString(m) }
func (*CreateLineCodeReply) ProtoMessage()    {}
func (*CreateLineCodeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{753}
}

func (m *CreateLineCodeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLineCodeReply.Unmarshal(m, b)
}
func (m *CreateLineCodeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLineCodeReply.Marshal(b, m, deterministic)
}
func (m *CreateLineCodeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLineCodeReply.Merge(m, src)
}
func (m *CreateLineCodeReply) XXX_Size() int {
	return xxx_messageInfo_CreateLineCodeReply.Size(m)
}
func (m *CreateLineCodeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLineCodeReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLineCodeReply proto.InternalMessageInfo

func (m *CreateLineCodeReply) GetInfo() *AgentLineCodeInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 获取排线码的请求
type GetLineCodeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLineCodeRequest) Reset()         { *m = GetLineCodeRequest{} }
func (m *GetLineCodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetLineCodeRequest) ProtoMessage()    {}
func (*GetLineCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{754}
}

func (m *GetLineCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLineCodeRequest.Unmarshal(m, b)
}
func (m *GetLineCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLineCodeRequest.Marshal(b, m, deterministic)
}
func (m *GetLineCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLineCodeRequest.Merge(m, src)
}
func (m *GetLineCodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetLineCodeRequest.Size(m)
}
func (m *GetLineCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLineCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLineCodeRequest proto.InternalMessageInfo

// 获取排线码的返回
type GetLineCodeReply struct {
	Info                 []*AgentLineCodeInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetLineCodeReply) Reset()         { *m = GetLineCodeReply{} }
func (m *GetLineCodeReply) String() string { return proto.CompactTextString(m) }
func (*GetLineCodeReply) ProtoMessage()    {}
func (*GetLineCodeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{755}
}

func (m *GetLineCodeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLineCodeReply.Unmarshal(m, b)
}
func (m *GetLineCodeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLineCodeReply.Marshal(b, m, deterministic)
}
func (m *GetLineCodeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLineCodeReply.Merge(m, src)
}
func (m *GetLineCodeReply) XXX_Size() int {
	return xxx_messageInfo_GetLineCodeReply.Size(m)
}
func (m *GetLineCodeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLineCodeReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetLineCodeReply proto.InternalMessageInfo

func (m *GetLineCodeReply) GetInfo() []*AgentLineCodeInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 代理佣金信息总览
type AgentCommissionInfo struct {
	// 上级的短位id
	ParentShortId string `protobuf:"bytes,1,opt,name=parentShortId,proto3" json:"parentShortId,omitempty"`
	// 本周总业绩
	AllWeekAchievement int64 `protobuf:"varint,2,opt,name=allWeekAchievement,proto3" json:"allWeekAchievement,omitempty"`
	// 本周直属业绩
	WeekDirectlyAchievement int64 `protobuf:"varint,3,opt,name=weekDirectlyAchievement,proto3" json:"weekDirectlyAchievement,omitempty"`
	// 当日直属业绩
	DayDirectlyAchievement int64 `protobuf:"varint,4,opt,name=dayDirectlyAchievement,proto3" json:"dayDirectlyAchievement,omitempty"`
	// 本周团队业绩
	WeekTeamAchievement int64 `protobuf:"varint,5,opt,name=weekTeamAchievement,proto3" json:"weekTeamAchievement,omitempty"`
	// 可提取直属佣金
	CanGetDirectlyCommission int64 `protobuf:"varint,6,opt,name=canGetDirectlyCommission,proto3" json:"canGetDirectlyCommission,omitempty"`
	// 当日直属佣金
	DayCommission int64 `protobuf:"varint,7,opt,name=dayCommission,proto3" json:"dayCommission,omitempty"`
	// 当日直属佣金的档位
	DayCommissionLevelIndex int64 `protobuf:"varint,8,opt,name=dayCommissionLevelIndex,proto3" json:"dayCommissionLevelIndex,omitempty"`
	// 当日直属佣金的档位金额
	DayCommissionLevelGold int64 `protobuf:"varint,9,opt,name=dayCommissionLevelGold,proto3" json:"dayCommissionLevelGold,omitempty"`
	// 上周直属佣金补差
	LastRepairDirectlyCommission int64 `protobuf:"varint,10,opt,name=lastRepairDirectlyCommission,proto3" json:"lastRepairDirectlyCommission,omitempty"`
	// 当周团队佣金
	WeekTeamCommission int64 `protobuf:"varint,11,opt,name=weekTeamCommission,proto3" json:"weekTeamCommission,omitempty"`
	// 可提取团队佣金
	CanGetTeamCommission int64 `protobuf:"varint,12,opt,name=canGetTeamCommission,proto3" json:"canGetTeamCommission,omitempty"`
	// 上周总业绩
	LastAllWeekAchievement int64 `protobuf:"varint,13,opt,name=lastAllWeekAchievement,proto3" json:"lastAllWeekAchievement,omitempty"`
	// 上周团队业绩
	LastWeekDirectlyAchievement int64 `protobuf:"varint,14,opt,name=lastWeekDirectlyAchievement,proto3" json:"lastWeekDirectlyAchievement,omitempty"`
	// 上周直属业绩
	LastDayDirectlyAchievement int64 `protobuf:"varint,15,opt,name=lastDayDirectlyAchievement,proto3" json:"lastDayDirectlyAchievement,omitempty"`
	// 已提取直属佣金 - [级别代已提取佣金]
	AlreadyGetCommission int64 `protobuf:"varint,16,opt,name=alreadyGetCommission,proto3" json:"alreadyGetCommission,omitempty"`
	// 可提取佣金 - 级别 无直属/团队概念
	CanGetCommission     int64    `protobuf:"varint,17,opt,name=canGetCommission,proto3" json:"canGetCommission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentCommissionInfo) Reset()         { *m = AgentCommissionInfo{} }
func (m *AgentCommissionInfo) String() string { return proto.CompactTextString(m) }
func (*AgentCommissionInfo) ProtoMessage()    {}
func (*AgentCommissionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{756}
}

func (m *AgentCommissionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentCommissionInfo.Unmarshal(m, b)
}
func (m *AgentCommissionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentCommissionInfo.Marshal(b, m, deterministic)
}
func (m *AgentCommissionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentCommissionInfo.Merge(m, src)
}
func (m *AgentCommissionInfo) XXX_Size() int {
	return xxx_messageInfo_AgentCommissionInfo.Size(m)
}
func (m *AgentCommissionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentCommissionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AgentCommissionInfo proto.InternalMessageInfo

func (m *AgentCommissionInfo) GetParentShortId() string {
	if m != nil {
		return m.ParentShortId
	}
	return ""
}

func (m *AgentCommissionInfo) GetAllWeekAchievement() int64 {
	if m != nil {
		return m.AllWeekAchievement
	}
	return 0
}

func (m *AgentCommissionInfo) GetWeekDirectlyAchievement() int64 {
	if m != nil {
		return m.WeekDirectlyAchievement
	}
	return 0
}

func (m *AgentCommissionInfo) GetDayDirectlyAchievement() int64 {
	if m != nil {
		return m.DayDirectlyAchievement
	}
	return 0
}

func (m *AgentCommissionInfo) GetWeekTeamAchievement() int64 {
	if m != nil {
		return m.WeekTeamAchievement
	}
	return 0
}

func (m *AgentCommissionInfo) GetCanGetDirectlyCommission() int64 {
	if m != nil {
		return m.CanGetDirectlyCommission
	}
	return 0
}

func (m *AgentCommissionInfo) GetDayCommission() int64 {
	if m != nil {
		return m.DayCommission
	}
	return 0
}

func (m *AgentCommissionInfo) GetDayCommissionLevelIndex() int64 {
	if m != nil {
		return m.DayCommissionLevelIndex
	}
	return 0
}

func (m *AgentCommissionInfo) GetDayCommissionLevelGold() int64 {
	if m != nil {
		return m.DayCommissionLevelGold
	}
	return 0
}

func (m *AgentCommissionInfo) GetLastRepairDirectlyCommission() int64 {
	if m != nil {
		return m.LastRepairDirectlyCommission
	}
	return 0
}

func (m *AgentCommissionInfo) GetWeekTeamCommission() int64 {
	if m != nil {
		return m.WeekTeamCommission
	}
	return 0
}

func (m *AgentCommissionInfo) GetCanGetTeamCommission() int64 {
	if m != nil {
		return m.CanGetTeamCommission
	}
	return 0
}

func (m *AgentCommissionInfo) GetLastAllWeekAchievement() int64 {
	if m != nil {
		return m.LastAllWeekAchievement
	}
	return 0
}

func (m *AgentCommissionInfo) GetLastWeekDirectlyAchievement() int64 {
	if m != nil {
		return m.LastWeekDirectlyAchievement
	}
	return 0
}

func (m *AgentCommissionInfo) GetLastDayDirectlyAchievement() int64 {
	if m != nil {
		return m.LastDayDirectlyAchievement
	}
	return 0
}

func (m *AgentCommissionInfo) GetAlreadyGetCommission() int64 {
	if m != nil {
		return m.AlreadyGetCommission
	}
	return 0
}

func (m *AgentCommissionInfo) GetCanGetCommission() int64 {
	if m != nil {
		return m.CanGetCommission
	}
	return 0
}

// 获得代理佣金总览的请求
type GetAgentCommissionInfoRequest struct {
	WantShortID          string   `protobuf:"bytes,1,opt,name=wantShortID,proto3" json:"wantShortID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAgentCommissionInfoRequest) Reset()         { *m = GetAgentCommissionInfoRequest{} }
func (m *GetAgentCommissionInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetAgentCommissionInfoRequest) ProtoMessage()    {}
func (*GetAgentCommissionInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{757}
}

func (m *GetAgentCommissionInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentCommissionInfoRequest.Unmarshal(m, b)
}
func (m *GetAgentCommissionInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentCommissionInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetAgentCommissionInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentCommissionInfoRequest.Merge(m, src)
}
func (m *GetAgentCommissionInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetAgentCommissionInfoRequest.Size(m)
}
func (m *GetAgentCommissionInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentCommissionInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentCommissionInfoRequest proto.InternalMessageInfo

func (m *GetAgentCommissionInfoRequest) GetWantShortID() string {
	if m != nil {
		return m.WantShortID
	}
	return ""
}

// 获得代理佣金总览的返回
type GetAgentCommissionInfoReply struct {
	Info                 *AgentCommissionInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetAgentCommissionInfoReply) Reset()         { *m = GetAgentCommissionInfoReply{} }
func (m *GetAgentCommissionInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetAgentCommissionInfoReply) ProtoMessage()    {}
func (*GetAgentCommissionInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{758}
}

func (m *GetAgentCommissionInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentCommissionInfoReply.Unmarshal(m, b)
}
func (m *GetAgentCommissionInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentCommissionInfoReply.Marshal(b, m, deterministic)
}
func (m *GetAgentCommissionInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentCommissionInfoReply.Merge(m, src)
}
func (m *GetAgentCommissionInfoReply) XXX_Size() int {
	return xxx_messageInfo_GetAgentCommissionInfoReply.Size(m)
}
func (m *GetAgentCommissionInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentCommissionInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentCommissionInfoReply proto.InternalMessageInfo

func (m *GetAgentCommissionInfoReply) GetInfo() *AgentCommissionInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 代理简略信息
type AgentSimpleInfo struct {
	// 代理短位id
	ShortId string `protobuf:"bytes,1,opt,name=shortId,proto3" json:"shortId,omitempty"`
	// 代理昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 本周直属业绩
	WeekDirectlyAchievement int64 `protobuf:"varint,3,opt,name=weekDirectlyAchievement,proto3" json:"weekDirectlyAchievement,omitempty"`
	// 本周团队业绩
	WeekTeamAchievement int64 `protobuf:"varint,4,opt,name=weekTeamAchievement,proto3" json:"weekTeamAchievement,omitempty"`
	// 直属会员
	DirectlyNum int32 `protobuf:"varint,5,opt,name=directlyNum,proto3" json:"directlyNum,omitempty"`
	// 团队会员
	TeamNum int32 `protobuf:"varint,6,opt,name=teamNum,proto3" json:"teamNum,omitempty"`
	// 代理可领取的佣金 - 7级
	CanGetCommission int64 `protobuf:"varint,7,opt,name=canGetCommission,proto3" json:"canGetCommission,omitempty"`
	// 代理已领取的佣金  - 7级
	AlreadyGetCommission int64 `protobuf:"varint,8,opt,name=alreadyGetCommission,proto3" json:"alreadyGetCommission,omitempty"`
	// 最后登陆时间
	LastLoginTime int64 `protobuf:"varint,9,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	// 代理头像
	HeadImageUrl string `protobuf:"bytes,10,opt,name=headImageUrl,proto3" json:"headImageUrl,omitempty"`
	// 父亲的短位id
	ParentShortID string `protobuf:"bytes,11,opt,name=parentShortID,proto3" json:"parentShortID,omitempty"`
	// 父亲的昵称
	ParentName string `protobuf:"bytes,12,opt,name=parentName,proto3" json:"parentName,omitempty"`
	// 加入链条的时间
	JoinTime int64 `protobuf:"varint,13,opt,name=joinTime,proto3" json:"joinTime,omitempty"`
	// 代理uuid
	Uuid string `protobuf:"bytes,14,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 本日业绩
	ToDayAchievement int64 `protobuf:"varint,15,opt,name=ToDayAchievement,proto3" json:"ToDayAchievement,omitempty"`
	// 累计业绩
	AllAchievement int64 `protobuf:"varint,16,opt,name=AllAchievement,proto3" json:"AllAchievement,omitempty"`
	// 手数
	BetTimes             int64    `protobuf:"varint,17,opt,name=BetTimes,proto3" json:"BetTimes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentSimpleInfo) Reset()         { *m = AgentSimpleInfo{} }
func (m *AgentSimpleInfo) String() string { return proto.CompactTextString(m) }
func (*AgentSimpleInfo) ProtoMessage()    {}
func (*AgentSimpleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{759}
}

func (m *AgentSimpleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentSimpleInfo.Unmarshal(m, b)
}
func (m *AgentSimpleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentSimpleInfo.Marshal(b, m, deterministic)
}
func (m *AgentSimpleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentSimpleInfo.Merge(m, src)
}
func (m *AgentSimpleInfo) XXX_Size() int {
	return xxx_messageInfo_AgentSimpleInfo.Size(m)
}
func (m *AgentSimpleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentSimpleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AgentSimpleInfo proto.InternalMessageInfo

func (m *AgentSimpleInfo) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *AgentSimpleInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AgentSimpleInfo) GetWeekDirectlyAchievement() int64 {
	if m != nil {
		return m.WeekDirectlyAchievement
	}
	return 0
}

func (m *AgentSimpleInfo) GetWeekTeamAchievement() int64 {
	if m != nil {
		return m.WeekTeamAchievement
	}
	return 0
}

func (m *AgentSimpleInfo) GetDirectlyNum() int32 {
	if m != nil {
		return m.DirectlyNum
	}
	return 0
}

func (m *AgentSimpleInfo) GetTeamNum() int32 {
	if m != nil {
		return m.TeamNum
	}
	return 0
}

func (m *AgentSimpleInfo) GetCanGetCommission() int64 {
	if m != nil {
		return m.CanGetCommission
	}
	return 0
}

func (m *AgentSimpleInfo) GetAlreadyGetCommission() int64 {
	if m != nil {
		return m.AlreadyGetCommission
	}
	return 0
}

func (m *AgentSimpleInfo) GetLastLoginTime() int64 {
	if m != nil {
		return m.LastLoginTime
	}
	return 0
}

func (m *AgentSimpleInfo) GetHeadImageUrl() string {
	if m != nil {
		return m.HeadImageUrl
	}
	return ""
}

func (m *AgentSimpleInfo) GetParentShortID() string {
	if m != nil {
		return m.ParentShortID
	}
	return ""
}

func (m *AgentSimpleInfo) GetParentName() string {
	if m != nil {
		return m.ParentName
	}
	return ""
}

func (m *AgentSimpleInfo) GetJoinTime() int64 {
	if m != nil {
		return m.JoinTime
	}
	return 0
}

func (m *AgentSimpleInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *AgentSimpleInfo) GetToDayAchievement() int64 {
	if m != nil {
		return m.ToDayAchievement
	}
	return 0
}

func (m *AgentSimpleInfo) GetAllAchievement() int64 {
	if m != nil {
		return m.AllAchievement
	}
	return 0
}

func (m *AgentSimpleInfo) GetBetTimes() int64 {
	if m != nil {
		return m.BetTimes
	}
	return 0
}

// 代理下级信息
type AgentUnderInfo struct {
	// 直属会员
	DirectlyNum int32 `protobuf:"varint,1,opt,name=directlyNum,proto3" json:"directlyNum,omitempty"`
	// 团队会员
	TeamNum int32 `protobuf:"varint,2,opt,name=teamNum,proto3" json:"teamNum,omitempty"`
	// 本周新增
	WeekNew int32 `protobuf:"varint,3,opt,name=weekNew,proto3" json:"weekNew,omitempty"`
	// 直属下级简略信息
	AllUnder             []*AgentSimpleInfo `protobuf:"bytes,4,rep,name=allUnder,proto3" json:"allUnder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AgentUnderInfo) Reset()         { *m = AgentUnderInfo{} }
func (m *AgentUnderInfo) String() string { return proto.CompactTextString(m) }
func (*AgentUnderInfo) ProtoMessage()    {}
func (*AgentUnderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{760}
}

func (m *AgentUnderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentUnderInfo.Unmarshal(m, b)
}
func (m *AgentUnderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentUnderInfo.Marshal(b, m, deterministic)
}
func (m *AgentUnderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentUnderInfo.Merge(m, src)
}
func (m *AgentUnderInfo) XXX_Size() int {
	return xxx_messageInfo_AgentUnderInfo.Size(m)
}
func (m *AgentUnderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentUnderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AgentUnderInfo proto.InternalMessageInfo

func (m *AgentUnderInfo) GetDirectlyNum() int32 {
	if m != nil {
		return m.DirectlyNum
	}
	return 0
}

func (m *AgentUnderInfo) GetTeamNum() int32 {
	if m != nil {
		return m.TeamNum
	}
	return 0
}

func (m *AgentUnderInfo) GetWeekNew() int32 {
	if m != nil {
		return m.WeekNew
	}
	return 0
}

func (m *AgentUnderInfo) GetAllUnder() []*AgentSimpleInfo {
	if m != nil {
		return m.AllUnder
	}
	return nil
}

// 获得代理下级总览的请求
type GetAgentUnderInfoRequest struct {
	WantShortID          string   `protobuf:"bytes,1,opt,name=wantShortID,proto3" json:"wantShortID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAgentUnderInfoRequest) Reset()         { *m = GetAgentUnderInfoRequest{} }
func (m *GetAgentUnderInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetAgentUnderInfoRequest) ProtoMessage()    {}
func (*GetAgentUnderInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{761}
}

func (m *GetAgentUnderInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentUnderInfoRequest.Unmarshal(m, b)
}
func (m *GetAgentUnderInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentUnderInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetAgentUnderInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentUnderInfoRequest.Merge(m, src)
}
func (m *GetAgentUnderInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetAgentUnderInfoRequest.Size(m)
}
func (m *GetAgentUnderInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentUnderInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentUnderInfoRequest proto.InternalMessageInfo

func (m *GetAgentUnderInfoRequest) GetWantShortID() string {
	if m != nil {
		return m.WantShortID
	}
	return ""
}

// 获得代理下级总览的返回
type GetAgentUnderInfoReply struct {
	Info                 *AgentUnderInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetAgentUnderInfoReply) Reset()         { *m = GetAgentUnderInfoReply{} }
func (m *GetAgentUnderInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetAgentUnderInfoReply) ProtoMessage()    {}
func (*GetAgentUnderInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{762}
}

func (m *GetAgentUnderInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentUnderInfoReply.Unmarshal(m, b)
}
func (m *GetAgentUnderInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentUnderInfoReply.Marshal(b, m, deterministic)
}
func (m *GetAgentUnderInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentUnderInfoReply.Merge(m, src)
}
func (m *GetAgentUnderInfoReply) XXX_Size() int {
	return xxx_messageInfo_GetAgentUnderInfoReply.Size(m)
}
func (m *GetAgentUnderInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentUnderInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentUnderInfoReply proto.InternalMessageInfo

func (m *GetAgentUnderInfoReply) GetInfo() *AgentUnderInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 获得代理日结佣金的请求
type GetDayCommissionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDayCommissionRequest) Reset()         { *m = GetDayCommissionRequest{} }
func (m *GetDayCommissionRequest) String() string { return proto.CompactTextString(m) }
func (*GetDayCommissionRequest) ProtoMessage()    {}
func (*GetDayCommissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{763}
}

func (m *GetDayCommissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDayCommissionRequest.Unmarshal(m, b)
}
func (m *GetDayCommissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDayCommissionRequest.Marshal(b, m, deterministic)
}
func (m *GetDayCommissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDayCommissionRequest.Merge(m, src)
}
func (m *GetDayCommissionRequest) XXX_Size() int {
	return xxx_messageInfo_GetDayCommissionRequest.Size(m)
}
func (m *GetDayCommissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDayCommissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDayCommissionRequest proto.InternalMessageInfo

// 获得代理日结佣金的返回
type GetDayCommissionReply struct {
	// 领取到的佣金数
	Commission int64 `protobuf:"varint,1,opt,name=commission,proto3" json:"commission,omitempty"`
	// 已领取到的佣金数
	AllGetCommission     int64    `protobuf:"varint,2,opt,name=allGetCommission,proto3" json:"allGetCommission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDayCommissionReply) Reset()         { *m = GetDayCommissionReply{} }
func (m *GetDayCommissionReply) String() string { return proto.CompactTextString(m) }
func (*GetDayCommissionReply) ProtoMessage()    {}
func (*GetDayCommissionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{764}
}

func (m *GetDayCommissionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDayCommissionReply.Unmarshal(m, b)
}
func (m *GetDayCommissionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDayCommissionReply.Marshal(b, m, deterministic)
}
func (m *GetDayCommissionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDayCommissionReply.Merge(m, src)
}
func (m *GetDayCommissionReply) XXX_Size() int {
	return xxx_messageInfo_GetDayCommissionReply.Size(m)
}
func (m *GetDayCommissionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDayCommissionReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetDayCommissionReply proto.InternalMessageInfo

func (m *GetDayCommissionReply) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *GetDayCommissionReply) GetAllGetCommission() int64 {
	if m != nil {
		return m.AllGetCommission
	}
	return 0
}

// 获得代理日结佣金的请求
type GetDayCommissionByTypeRequest struct {
	//佣金类型
	Type                 GetCommissionType `protobuf:"varint,1,opt,name=type,proto3,enum=GetCommissionType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetDayCommissionByTypeRequest) Reset()         { *m = GetDayCommissionByTypeRequest{} }
func (m *GetDayCommissionByTypeRequest) String() string { return proto.CompactTextString(m) }
func (*GetDayCommissionByTypeRequest) ProtoMessage()    {}
func (*GetDayCommissionByTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{765}
}

func (m *GetDayCommissionByTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDayCommissionByTypeRequest.Unmarshal(m, b)
}
func (m *GetDayCommissionByTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDayCommissionByTypeRequest.Marshal(b, m, deterministic)
}
func (m *GetDayCommissionByTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDayCommissionByTypeRequest.Merge(m, src)
}
func (m *GetDayCommissionByTypeRequest) XXX_Size() int {
	return xxx_messageInfo_GetDayCommissionByTypeRequest.Size(m)
}
func (m *GetDayCommissionByTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDayCommissionByTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDayCommissionByTypeRequest proto.InternalMessageInfo

func (m *GetDayCommissionByTypeRequest) GetType() GetCommissionType {
	if m != nil {
		return m.Type
	}
	return GetCommissionType_GetCommissionType_None
}

// 获得代理日结佣金的回复
type GetDayCommissionByTypeReply struct {
	//佣金类型
	Type GetCommissionType `protobuf:"varint,1,opt,name=type,proto3,enum=GetCommissionType" json:"type,omitempty"`
	// 领取到的佣金数
	Commission int64 `protobuf:"varint,2,opt,name=commission,proto3" json:"commission,omitempty"`
	//抵扣的佣金
	DeductedCommission   int64    `protobuf:"varint,3,opt,name=deductedCommission,proto3" json:"deductedCommission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDayCommissionByTypeReply) Reset()         { *m = GetDayCommissionByTypeReply{} }
func (m *GetDayCommissionByTypeReply) String() string { return proto.CompactTextString(m) }
func (*GetDayCommissionByTypeReply) ProtoMessage()    {}
func (*GetDayCommissionByTypeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{766}
}

func (m *GetDayCommissionByTypeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDayCommissionByTypeReply.Unmarshal(m, b)
}
func (m *GetDayCommissionByTypeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDayCommissionByTypeReply.Marshal(b, m, deterministic)
}
func (m *GetDayCommissionByTypeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDayCommissionByTypeReply.Merge(m, src)
}
func (m *GetDayCommissionByTypeReply) XXX_Size() int {
	return xxx_messageInfo_GetDayCommissionByTypeReply.Size(m)
}
func (m *GetDayCommissionByTypeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDayCommissionByTypeReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetDayCommissionByTypeReply proto.InternalMessageInfo

func (m *GetDayCommissionByTypeReply) GetType() GetCommissionType {
	if m != nil {
		return m.Type
	}
	return GetCommissionType_GetCommissionType_None
}

func (m *GetDayCommissionByTypeReply) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *GetDayCommissionByTypeReply) GetDeductedCommission() int64 {
	if m != nil {
		return m.DeductedCommission
	}
	return 0
}

//保存副盟主结算信息
type SaveAllianceLeaderRoomCardSettleInfo struct {
	Data                 []*AllianceLeaderRoomCardSettleInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *SaveAllianceLeaderRoomCardSettleInfo) Reset()         { *m = SaveAllianceLeaderRoomCardSettleInfo{} }
func (m *SaveAllianceLeaderRoomCardSettleInfo) String() string { return proto.CompactTextString(m) }
func (*SaveAllianceLeaderRoomCardSettleInfo) ProtoMessage()    {}
func (*SaveAllianceLeaderRoomCardSettleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{767}
}

func (m *SaveAllianceLeaderRoomCardSettleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveAllianceLeaderRoomCardSettleInfo.Unmarshal(m, b)
}
func (m *SaveAllianceLeaderRoomCardSettleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveAllianceLeaderRoomCardSettleInfo.Marshal(b, m, deterministic)
}
func (m *SaveAllianceLeaderRoomCardSettleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveAllianceLeaderRoomCardSettleInfo.Merge(m, src)
}
func (m *SaveAllianceLeaderRoomCardSettleInfo) XXX_Size() int {
	return xxx_messageInfo_SaveAllianceLeaderRoomCardSettleInfo.Size(m)
}
func (m *SaveAllianceLeaderRoomCardSettleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveAllianceLeaderRoomCardSettleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SaveAllianceLeaderRoomCardSettleInfo proto.InternalMessageInfo

func (m *SaveAllianceLeaderRoomCardSettleInfo) GetData() []*AllianceLeaderRoomCardSettleInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

//副盟主房卡结算信息
type AllianceLeaderRoomCardSettleInfo struct {
	PlayerUUID    string `protobuf:"bytes,1,opt,name=playerUUID,proto3" json:"playerUUID,omitempty"`
	PlayerShortId string `protobuf:"bytes,2,opt,name=player_shortId,json=playerShortId,proto3" json:"player_shortId,omitempty"`
	PlayerAccount string `protobuf:"bytes,3,opt,name=player_account,json=playerAccount,proto3" json:"player_account,omitempty"`
	PlayerName    string `protobuf:"bytes,4,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	StartTime     int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       int64  `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	//真实的房卡消耗数量
	RealRoomCard int64 `protobuf:"varint,7,opt,name=realRoomCard,proto3" json:"realRoomCard,omitempty"`
	//显示的结算房卡消耗数量
	SettleRoomCard int64 `protobuf:"varint,8,opt,name=settleRoomCard,proto3" json:"settleRoomCard,omitempty"`
	//返利比例（百分比）
	CommissionPercent int32 `protobuf:"varint,9,opt,name=commissionPercent,proto3" json:"commissionPercent,omitempty"`
	//分得的佣金
	Commission int64 `protobuf:"varint,10,opt,name=commission,proto3" json:"commission,omitempty"`
	//更新时间
	UpdateTime           int64    `protobuf:"varint,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllianceLeaderRoomCardSettleInfo) Reset()         { *m = AllianceLeaderRoomCardSettleInfo{} }
func (m *AllianceLeaderRoomCardSettleInfo) String() string { return proto.CompactTextString(m) }
func (*AllianceLeaderRoomCardSettleInfo) ProtoMessage()    {}
func (*AllianceLeaderRoomCardSettleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{768}
}

func (m *AllianceLeaderRoomCardSettleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllianceLeaderRoomCardSettleInfo.Unmarshal(m, b)
}
func (m *AllianceLeaderRoomCardSettleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllianceLeaderRoomCardSettleInfo.Marshal(b, m, deterministic)
}
func (m *AllianceLeaderRoomCardSettleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllianceLeaderRoomCardSettleInfo.Merge(m, src)
}
func (m *AllianceLeaderRoomCardSettleInfo) XXX_Size() int {
	return xxx_messageInfo_AllianceLeaderRoomCardSettleInfo.Size(m)
}
func (m *AllianceLeaderRoomCardSettleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AllianceLeaderRoomCardSettleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AllianceLeaderRoomCardSettleInfo proto.InternalMessageInfo

func (m *AllianceLeaderRoomCardSettleInfo) GetPlayerUUID() string {
	if m != nil {
		return m.PlayerUUID
	}
	return ""
}

func (m *AllianceLeaderRoomCardSettleInfo) GetPlayerShortId() string {
	if m != nil {
		return m.PlayerShortId
	}
	return ""
}

func (m *AllianceLeaderRoomCardSettleInfo) GetPlayerAccount() string {
	if m != nil {
		return m.PlayerAccount
	}
	return ""
}

func (m *AllianceLeaderRoomCardSettleInfo) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *AllianceLeaderRoomCardSettleInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *AllianceLeaderRoomCardSettleInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *AllianceLeaderRoomCardSettleInfo) GetRealRoomCard() int64 {
	if m != nil {
		return m.RealRoomCard
	}
	return 0
}

func (m *AllianceLeaderRoomCardSettleInfo) GetSettleRoomCard() int64 {
	if m != nil {
		return m.SettleRoomCard
	}
	return 0
}

func (m *AllianceLeaderRoomCardSettleInfo) GetCommissionPercent() int32 {
	if m != nil {
		return m.CommissionPercent
	}
	return 0
}

func (m *AllianceLeaderRoomCardSettleInfo) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *AllianceLeaderRoomCardSettleInfo) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

// 获取副盟主未结算信息
type GetAllianceLeaderUnSettledListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllianceLeaderUnSettledListRequest) Reset()         { *m = GetAllianceLeaderUnSettledListRequest{} }
func (m *GetAllianceLeaderUnSettledListRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllianceLeaderUnSettledListRequest) ProtoMessage()    {}
func (*GetAllianceLeaderUnSettledListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{769}
}

func (m *GetAllianceLeaderUnSettledListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllianceLeaderUnSettledListRequest.Unmarshal(m, b)
}
func (m *GetAllianceLeaderUnSettledListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllianceLeaderUnSettledListRequest.Marshal(b, m, deterministic)
}
func (m *GetAllianceLeaderUnSettledListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllianceLeaderUnSettledListRequest.Merge(m, src)
}
func (m *GetAllianceLeaderUnSettledListRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllianceLeaderUnSettledListRequest.Size(m)
}
func (m *GetAllianceLeaderUnSettledListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllianceLeaderUnSettledListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllianceLeaderUnSettledListRequest proto.InternalMessageInfo

// 获取副盟主新的结算信息
type GetAllianceLeaderUnSettledListReply struct {
	Weeks                []string `protobuf:"bytes,1,rep,name=weeks,proto3" json:"weeks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllianceLeaderUnSettledListReply) Reset()         { *m = GetAllianceLeaderUnSettledListReply{} }
func (m *GetAllianceLeaderUnSettledListReply) String() string { return proto.CompactTextString(m) }
func (*GetAllianceLeaderUnSettledListReply) ProtoMessage()    {}
func (*GetAllianceLeaderUnSettledListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{770}
}

func (m *GetAllianceLeaderUnSettledListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllianceLeaderUnSettledListReply.Unmarshal(m, b)
}
func (m *GetAllianceLeaderUnSettledListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllianceLeaderUnSettledListReply.Marshal(b, m, deterministic)
}
func (m *GetAllianceLeaderUnSettledListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllianceLeaderUnSettledListReply.Merge(m, src)
}
func (m *GetAllianceLeaderUnSettledListReply) XXX_Size() int {
	return xxx_messageInfo_GetAllianceLeaderUnSettledListReply.Size(m)
}
func (m *GetAllianceLeaderUnSettledListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllianceLeaderUnSettledListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllianceLeaderUnSettledListReply proto.InternalMessageInfo

func (m *GetAllianceLeaderUnSettledListReply) GetWeeks() []string {
	if m != nil {
		return m.Weeks
	}
	return nil
}

//副盟主领取房卡返利请求
type GetAllianceLeaderRoomCardRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllianceLeaderRoomCardRequest) Reset()         { *m = GetAllianceLeaderRoomCardRequest{} }
func (m *GetAllianceLeaderRoomCardRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllianceLeaderRoomCardRequest) ProtoMessage()    {}
func (*GetAllianceLeaderRoomCardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{771}
}

func (m *GetAllianceLeaderRoomCardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllianceLeaderRoomCardRequest.Unmarshal(m, b)
}
func (m *GetAllianceLeaderRoomCardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllianceLeaderRoomCardRequest.Marshal(b, m, deterministic)
}
func (m *GetAllianceLeaderRoomCardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllianceLeaderRoomCardRequest.Merge(m, src)
}
func (m *GetAllianceLeaderRoomCardRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllianceLeaderRoomCardRequest.Size(m)
}
func (m *GetAllianceLeaderRoomCardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllianceLeaderRoomCardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllianceLeaderRoomCardRequest proto.InternalMessageInfo

//副盟主领取房卡返利回复
type GetAllianceLeaderRoomCardReply struct {
	//房卡数
	RoomCard int64 `protobuf:"varint,1,opt,name=roomCard,proto3" json:"roomCard,omitempty"`
	//返利佣金
	Commission           int64    `protobuf:"varint,2,opt,name=commission,proto3" json:"commission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllianceLeaderRoomCardReply) Reset()         { *m = GetAllianceLeaderRoomCardReply{} }
func (m *GetAllianceLeaderRoomCardReply) String() string { return proto.CompactTextString(m) }
func (*GetAllianceLeaderRoomCardReply) ProtoMessage()    {}
func (*GetAllianceLeaderRoomCardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{772}
}

func (m *GetAllianceLeaderRoomCardReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllianceLeaderRoomCardReply.Unmarshal(m, b)
}
func (m *GetAllianceLeaderRoomCardReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllianceLeaderRoomCardReply.Marshal(b, m, deterministic)
}
func (m *GetAllianceLeaderRoomCardReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllianceLeaderRoomCardReply.Merge(m, src)
}
func (m *GetAllianceLeaderRoomCardReply) XXX_Size() int {
	return xxx_messageInfo_GetAllianceLeaderRoomCardReply.Size(m)
}
func (m *GetAllianceLeaderRoomCardReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllianceLeaderRoomCardReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllianceLeaderRoomCardReply proto.InternalMessageInfo

func (m *GetAllianceLeaderRoomCardReply) GetRoomCard() int64 {
	if m != nil {
		return m.RoomCard
	}
	return 0
}

func (m *GetAllianceLeaderRoomCardReply) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

//根据周id获取未结算的信息
type GetAllianceLeaderUnSettledInfoRequest struct {
	WeekStr              string   `protobuf:"bytes,1,opt,name=weekStr,proto3" json:"weekStr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllianceLeaderUnSettledInfoRequest) Reset()         { *m = GetAllianceLeaderUnSettledInfoRequest{} }
func (m *GetAllianceLeaderUnSettledInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllianceLeaderUnSettledInfoRequest) ProtoMessage()    {}
func (*GetAllianceLeaderUnSettledInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{773}
}

func (m *GetAllianceLeaderUnSettledInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllianceLeaderUnSettledInfoRequest.Unmarshal(m, b)
}
func (m *GetAllianceLeaderUnSettledInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllianceLeaderUnSettledInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetAllianceLeaderUnSettledInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllianceLeaderUnSettledInfoRequest.Merge(m, src)
}
func (m *GetAllianceLeaderUnSettledInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllianceLeaderUnSettledInfoRequest.Size(m)
}
func (m *GetAllianceLeaderUnSettledInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllianceLeaderUnSettledInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllianceLeaderUnSettledInfoRequest proto.InternalMessageInfo

func (m *GetAllianceLeaderUnSettledInfoRequest) GetWeekStr() string {
	if m != nil {
		return m.WeekStr
	}
	return ""
}

//根据周id获取未结算的信息
type GetAllianceLeaderUnSettledInfoReply struct {
	Data                 []*AllianceLeaderRoomCardSettleInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *GetAllianceLeaderUnSettledInfoReply) Reset()         { *m = GetAllianceLeaderUnSettledInfoReply{} }
func (m *GetAllianceLeaderUnSettledInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetAllianceLeaderUnSettledInfoReply) ProtoMessage()    {}
func (*GetAllianceLeaderUnSettledInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{774}
}

func (m *GetAllianceLeaderUnSettledInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllianceLeaderUnSettledInfoReply.Unmarshal(m, b)
}
func (m *GetAllianceLeaderUnSettledInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllianceLeaderUnSettledInfoReply.Marshal(b, m, deterministic)
}
func (m *GetAllianceLeaderUnSettledInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllianceLeaderUnSettledInfoReply.Merge(m, src)
}
func (m *GetAllianceLeaderUnSettledInfoReply) XXX_Size() int {
	return xxx_messageInfo_GetAllianceLeaderUnSettledInfoReply.Size(m)
}
func (m *GetAllianceLeaderUnSettledInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllianceLeaderUnSettledInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllianceLeaderUnSettledInfoReply proto.InternalMessageInfo

func (m *GetAllianceLeaderUnSettledInfoReply) GetData() []*AllianceLeaderRoomCardSettleInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

//获取自己结算信息详情
type GetAllianceLeaderRoomCardSettleInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllianceLeaderRoomCardSettleInfo) Reset()         { *m = GetAllianceLeaderRoomCardSettleInfo{} }
func (m *GetAllianceLeaderRoomCardSettleInfo) String() string { return proto.CompactTextString(m) }
func (*GetAllianceLeaderRoomCardSettleInfo) ProtoMessage()    {}
func (*GetAllianceLeaderRoomCardSettleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{775}
}

func (m *GetAllianceLeaderRoomCardSettleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllianceLeaderRoomCardSettleInfo.Unmarshal(m, b)
}
func (m *GetAllianceLeaderRoomCardSettleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllianceLeaderRoomCardSettleInfo.Marshal(b, m, deterministic)
}
func (m *GetAllianceLeaderRoomCardSettleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllianceLeaderRoomCardSettleInfo.Merge(m, src)
}
func (m *GetAllianceLeaderRoomCardSettleInfo) XXX_Size() int {
	return xxx_messageInfo_GetAllianceLeaderRoomCardSettleInfo.Size(m)
}
func (m *GetAllianceLeaderRoomCardSettleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllianceLeaderRoomCardSettleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllianceLeaderRoomCardSettleInfo proto.InternalMessageInfo

//设置副盟主结算信息请求详情
type SetAllianceLeaderRoomCardSettleItem struct {
	PlayerUUID string `protobuf:"bytes,1,opt,name=playerUUID,proto3" json:"playerUUID,omitempty"`
	//真实的房卡消耗数量
	RealRoomCard int64 `protobuf:"varint,2,opt,name=realRoomCard,proto3" json:"realRoomCard,omitempty"`
	//显示的房卡消耗数量
	SettleRoomCard int64 `protobuf:"varint,3,opt,name=settleRoomCard,proto3" json:"settleRoomCard,omitempty"`
	//返利比例（百分比）
	CommissionPercent int32 `protobuf:"varint,4,opt,name=commissionPercent,proto3" json:"commissionPercent,omitempty"`
	//分得的佣金
	Commission           int64    `protobuf:"varint,5,opt,name=commission,proto3" json:"commission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAllianceLeaderRoomCardSettleItem) Reset()         { *m = SetAllianceLeaderRoomCardSettleItem{} }
func (m *SetAllianceLeaderRoomCardSettleItem) String() string { return proto.CompactTextString(m) }
func (*SetAllianceLeaderRoomCardSettleItem) ProtoMessage()    {}
func (*SetAllianceLeaderRoomCardSettleItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{776}
}

func (m *SetAllianceLeaderRoomCardSettleItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAllianceLeaderRoomCardSettleItem.Unmarshal(m, b)
}
func (m *SetAllianceLeaderRoomCardSettleItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAllianceLeaderRoomCardSettleItem.Marshal(b, m, deterministic)
}
func (m *SetAllianceLeaderRoomCardSettleItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAllianceLeaderRoomCardSettleItem.Merge(m, src)
}
func (m *SetAllianceLeaderRoomCardSettleItem) XXX_Size() int {
	return xxx_messageInfo_SetAllianceLeaderRoomCardSettleItem.Size(m)
}
func (m *SetAllianceLeaderRoomCardSettleItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAllianceLeaderRoomCardSettleItem.DiscardUnknown(m)
}

var xxx_messageInfo_SetAllianceLeaderRoomCardSettleItem proto.InternalMessageInfo

func (m *SetAllianceLeaderRoomCardSettleItem) GetPlayerUUID() string {
	if m != nil {
		return m.PlayerUUID
	}
	return ""
}

func (m *SetAllianceLeaderRoomCardSettleItem) GetRealRoomCard() int64 {
	if m != nil {
		return m.RealRoomCard
	}
	return 0
}

func (m *SetAllianceLeaderRoomCardSettleItem) GetSettleRoomCard() int64 {
	if m != nil {
		return m.SettleRoomCard
	}
	return 0
}

func (m *SetAllianceLeaderRoomCardSettleItem) GetCommissionPercent() int32 {
	if m != nil {
		return m.CommissionPercent
	}
	return 0
}

func (m *SetAllianceLeaderRoomCardSettleItem) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

//设置副盟主结算信息请求
type SetAllianceLeaderRoomCardSettleRequest struct {
	WeekStr              string                                 `protobuf:"bytes,1,opt,name=weekStr,proto3" json:"weekStr,omitempty"`
	SettleList           []*SetAllianceLeaderRoomCardSettleItem `protobuf:"bytes,2,rep,name=settleList,proto3" json:"settleList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *SetAllianceLeaderRoomCardSettleRequest) Reset() {
	*m = SetAllianceLeaderRoomCardSettleRequest{}
}
func (m *SetAllianceLeaderRoomCardSettleRequest) String() string { return proto.CompactTextString(m) }
func (*SetAllianceLeaderRoomCardSettleRequest) ProtoMessage()    {}
func (*SetAllianceLeaderRoomCardSettleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{777}
}

func (m *SetAllianceLeaderRoomCardSettleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAllianceLeaderRoomCardSettleRequest.Unmarshal(m, b)
}
func (m *SetAllianceLeaderRoomCardSettleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAllianceLeaderRoomCardSettleRequest.Marshal(b, m, deterministic)
}
func (m *SetAllianceLeaderRoomCardSettleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAllianceLeaderRoomCardSettleRequest.Merge(m, src)
}
func (m *SetAllianceLeaderRoomCardSettleRequest) XXX_Size() int {
	return xxx_messageInfo_SetAllianceLeaderRoomCardSettleRequest.Size(m)
}
func (m *SetAllianceLeaderRoomCardSettleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAllianceLeaderRoomCardSettleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetAllianceLeaderRoomCardSettleRequest proto.InternalMessageInfo

func (m *SetAllianceLeaderRoomCardSettleRequest) GetWeekStr() string {
	if m != nil {
		return m.WeekStr
	}
	return ""
}

func (m *SetAllianceLeaderRoomCardSettleRequest) GetSettleList() []*SetAllianceLeaderRoomCardSettleItem {
	if m != nil {
		return m.SettleList
	}
	return nil
}

//设置副盟主结算信息回复
type SetAllianceLeaderRoomCardSettleReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAllianceLeaderRoomCardSettleReply) Reset()         { *m = SetAllianceLeaderRoomCardSettleReply{} }
func (m *SetAllianceLeaderRoomCardSettleReply) String() string { return proto.CompactTextString(m) }
func (*SetAllianceLeaderRoomCardSettleReply) ProtoMessage()    {}
func (*SetAllianceLeaderRoomCardSettleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{778}
}

func (m *SetAllianceLeaderRoomCardSettleReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAllianceLeaderRoomCardSettleReply.Unmarshal(m, b)
}
func (m *SetAllianceLeaderRoomCardSettleReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAllianceLeaderRoomCardSettleReply.Marshal(b, m, deterministic)
}
func (m *SetAllianceLeaderRoomCardSettleReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAllianceLeaderRoomCardSettleReply.Merge(m, src)
}
func (m *SetAllianceLeaderRoomCardSettleReply) XXX_Size() int {
	return xxx_messageInfo_SetAllianceLeaderRoomCardSettleReply.Size(m)
}
func (m *SetAllianceLeaderRoomCardSettleReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAllianceLeaderRoomCardSettleReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetAllianceLeaderRoomCardSettleReply proto.InternalMessageInfo

//获取可领取佣金汇总请求
type GetCanGetCommissionTotalRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCanGetCommissionTotalRequest) Reset()         { *m = GetCanGetCommissionTotalRequest{} }
func (m *GetCanGetCommissionTotalRequest) String() string { return proto.CompactTextString(m) }
func (*GetCanGetCommissionTotalRequest) ProtoMessage()    {}
func (*GetCanGetCommissionTotalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{779}
}

func (m *GetCanGetCommissionTotalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCanGetCommissionTotalRequest.Unmarshal(m, b)
}
func (m *GetCanGetCommissionTotalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCanGetCommissionTotalRequest.Marshal(b, m, deterministic)
}
func (m *GetCanGetCommissionTotalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCanGetCommissionTotalRequest.Merge(m, src)
}
func (m *GetCanGetCommissionTotalRequest) XXX_Size() int {
	return xxx_messageInfo_GetCanGetCommissionTotalRequest.Size(m)
}
func (m *GetCanGetCommissionTotalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCanGetCommissionTotalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCanGetCommissionTotalRequest proto.InternalMessageInfo

//可领取的佣金详情
type CanGetCommissionInfo struct {
	//佣金类型
	CommissionType GetCommissionType `protobuf:"varint,1,opt,name=commissionType,proto3,enum=GetCommissionType" json:"commissionType,omitempty"`
	//开始时间
	StartTime int64 `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	//结束时间
	EndTime int64 `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	//佣金
	Commission           int64    `protobuf:"varint,4,opt,name=commission,proto3" json:"commission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CanGetCommissionInfo) Reset()         { *m = CanGetCommissionInfo{} }
func (m *CanGetCommissionInfo) String() string { return proto.CompactTextString(m) }
func (*CanGetCommissionInfo) ProtoMessage()    {}
func (*CanGetCommissionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{780}
}

func (m *CanGetCommissionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CanGetCommissionInfo.Unmarshal(m, b)
}
func (m *CanGetCommissionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CanGetCommissionInfo.Marshal(b, m, deterministic)
}
func (m *CanGetCommissionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CanGetCommissionInfo.Merge(m, src)
}
func (m *CanGetCommissionInfo) XXX_Size() int {
	return xxx_messageInfo_CanGetCommissionInfo.Size(m)
}
func (m *CanGetCommissionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CanGetCommissionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CanGetCommissionInfo proto.InternalMessageInfo

func (m *CanGetCommissionInfo) GetCommissionType() GetCommissionType {
	if m != nil {
		return m.CommissionType
	}
	return GetCommissionType_GetCommissionType_None
}

func (m *CanGetCommissionInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *CanGetCommissionInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *CanGetCommissionInfo) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

//获取可领取佣金汇总回复
type GetCanGetCommissionTotalReply struct {
	//副盟主结算详情
	Info *AllianceLeaderRoomCardSettleInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	//当前房卡数量
	CurrentRoomCard int64 `protobuf:"varint,2,opt,name=currentRoomCard,proto3" json:"currentRoomCard,omitempty"`
	//兑换比例
	ExchangeRatio int64 `protobuf:"varint,3,opt,name=exchangeRatio,proto3" json:"exchangeRatio,omitempty"`
	//玩家佣金
	PlayerCommission *CanGetCommissionInfo `protobuf:"bytes,4,opt,name=playerCommission,proto3" json:"playerCommission,omitempty"`
	//推荐人佣金
	RecommenderCommission *CanGetCommissionInfo `protobuf:"bytes,5,opt,name=recommenderCommission,proto3" json:"recommenderCommission,omitempty"`
	//盟主佣金
	AllianceLeaderCommission *CanGetCommissionInfo `protobuf:"bytes,6,opt,name=AllianceLeaderCommission,proto3" json:"AllianceLeaderCommission,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}              `json:"-"`
	XXX_unrecognized         []byte                `json:"-"`
	XXX_sizecache            int32                 `json:"-"`
}

func (m *GetCanGetCommissionTotalReply) Reset()         { *m = GetCanGetCommissionTotalReply{} }
func (m *GetCanGetCommissionTotalReply) String() string { return proto.CompactTextString(m) }
func (*GetCanGetCommissionTotalReply) ProtoMessage()    {}
func (*GetCanGetCommissionTotalReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{781}
}

func (m *GetCanGetCommissionTotalReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCanGetCommissionTotalReply.Unmarshal(m, b)
}
func (m *GetCanGetCommissionTotalReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCanGetCommissionTotalReply.Marshal(b, m, deterministic)
}
func (m *GetCanGetCommissionTotalReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCanGetCommissionTotalReply.Merge(m, src)
}
func (m *GetCanGetCommissionTotalReply) XXX_Size() int {
	return xxx_messageInfo_GetCanGetCommissionTotalReply.Size(m)
}
func (m *GetCanGetCommissionTotalReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCanGetCommissionTotalReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetCanGetCommissionTotalReply proto.InternalMessageInfo

func (m *GetCanGetCommissionTotalReply) GetInfo() *AllianceLeaderRoomCardSettleInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *GetCanGetCommissionTotalReply) GetCurrentRoomCard() int64 {
	if m != nil {
		return m.CurrentRoomCard
	}
	return 0
}

func (m *GetCanGetCommissionTotalReply) GetExchangeRatio() int64 {
	if m != nil {
		return m.ExchangeRatio
	}
	return 0
}

func (m *GetCanGetCommissionTotalReply) GetPlayerCommission() *CanGetCommissionInfo {
	if m != nil {
		return m.PlayerCommission
	}
	return nil
}

func (m *GetCanGetCommissionTotalReply) GetRecommenderCommission() *CanGetCommissionInfo {
	if m != nil {
		return m.RecommenderCommission
	}
	return nil
}

func (m *GetCanGetCommissionTotalReply) GetAllianceLeaderCommission() *CanGetCommissionInfo {
	if m != nil {
		return m.AllianceLeaderCommission
	}
	return nil
}

//获取业绩汇总
type GetAchievementTotalRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Start  int64  `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End    int64  `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	//佣金类型
	AchievementType AchievementType `protobuf:"varint,4,opt,name=achievementType,proto3,enum=AchievementType" json:"achievementType,omitempty"`
	//请求id，回复同一id
	RequestId            string   `protobuf:"bytes,5,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAchievementTotalRequest) Reset()         { *m = GetAchievementTotalRequest{} }
func (m *GetAchievementTotalRequest) String() string { return proto.CompactTextString(m) }
func (*GetAchievementTotalRequest) ProtoMessage()    {}
func (*GetAchievementTotalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{782}
}

func (m *GetAchievementTotalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAchievementTotalRequest.Unmarshal(m, b)
}
func (m *GetAchievementTotalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAchievementTotalRequest.Marshal(b, m, deterministic)
}
func (m *GetAchievementTotalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAchievementTotalRequest.Merge(m, src)
}
func (m *GetAchievementTotalRequest) XXX_Size() int {
	return xxx_messageInfo_GetAchievementTotalRequest.Size(m)
}
func (m *GetAchievementTotalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAchievementTotalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAchievementTotalRequest proto.InternalMessageInfo

func (m *GetAchievementTotalRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetAchievementTotalRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetAchievementTotalRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetAchievementTotalRequest) GetAchievementType() AchievementType {
	if m != nil {
		return m.AchievementType
	}
	return AchievementType_AchievementType_None
}

func (m *GetAchievementTotalRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

//获取佣金汇总
type GetAchievementTotalReply struct {
	Achievement int64 `protobuf:"varint,1,opt,name=achievement,proto3" json:"achievement,omitempty"`
	//请求id，回复同一id
	RequestId            string   `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAchievementTotalReply) Reset()         { *m = GetAchievementTotalReply{} }
func (m *GetAchievementTotalReply) String() string { return proto.CompactTextString(m) }
func (*GetAchievementTotalReply) ProtoMessage()    {}
func (*GetAchievementTotalReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{783}
}

func (m *GetAchievementTotalReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAchievementTotalReply.Unmarshal(m, b)
}
func (m *GetAchievementTotalReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAchievementTotalReply.Marshal(b, m, deterministic)
}
func (m *GetAchievementTotalReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAchievementTotalReply.Merge(m, src)
}
func (m *GetAchievementTotalReply) XXX_Size() int {
	return xxx_messageInfo_GetAchievementTotalReply.Size(m)
}
func (m *GetAchievementTotalReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAchievementTotalReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAchievementTotalReply proto.InternalMessageInfo

func (m *GetAchievementTotalReply) GetAchievement() int64 {
	if m != nil {
		return m.Achievement
	}
	return 0
}

func (m *GetAchievementTotalReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

//获取每日佣金汇总
type GetAchievementTotalPerDayRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Start  int64  `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End    int64  `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	//佣金类型
	AchievementType      AchievementType `protobuf:"varint,4,opt,name=achievementType,proto3,enum=AchievementType" json:"achievementType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetAchievementTotalPerDayRequest) Reset()         { *m = GetAchievementTotalPerDayRequest{} }
func (m *GetAchievementTotalPerDayRequest) String() string { return proto.CompactTextString(m) }
func (*GetAchievementTotalPerDayRequest) ProtoMessage()    {}
func (*GetAchievementTotalPerDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{784}
}

func (m *GetAchievementTotalPerDayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAchievementTotalPerDayRequest.Unmarshal(m, b)
}
func (m *GetAchievementTotalPerDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAchievementTotalPerDayRequest.Marshal(b, m, deterministic)
}
func (m *GetAchievementTotalPerDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAchievementTotalPerDayRequest.Merge(m, src)
}
func (m *GetAchievementTotalPerDayRequest) XXX_Size() int {
	return xxx_messageInfo_GetAchievementTotalPerDayRequest.Size(m)
}
func (m *GetAchievementTotalPerDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAchievementTotalPerDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAchievementTotalPerDayRequest proto.InternalMessageInfo

func (m *GetAchievementTotalPerDayRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetAchievementTotalPerDayRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetAchievementTotalPerDayRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GetAchievementTotalPerDayRequest) GetAchievementType() AchievementType {
	if m != nil {
		return m.AchievementType
	}
	return AchievementType_AchievementType_None
}

//获取每日佣金汇总
type GetAchievementTotalPerDayReply struct {
	Data                 []*AchievementTotalPerDay `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetAchievementTotalPerDayReply) Reset()         { *m = GetAchievementTotalPerDayReply{} }
func (m *GetAchievementTotalPerDayReply) String() string { return proto.CompactTextString(m) }
func (*GetAchievementTotalPerDayReply) ProtoMessage()    {}
func (*GetAchievementTotalPerDayReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{785}
}

func (m *GetAchievementTotalPerDayReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAchievementTotalPerDayReply.Unmarshal(m, b)
}
func (m *GetAchievementTotalPerDayReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAchievementTotalPerDayReply.Marshal(b, m, deterministic)
}
func (m *GetAchievementTotalPerDayReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAchievementTotalPerDayReply.Merge(m, src)
}
func (m *GetAchievementTotalPerDayReply) XXX_Size() int {
	return xxx_messageInfo_GetAchievementTotalPerDayReply.Size(m)
}
func (m *GetAchievementTotalPerDayReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAchievementTotalPerDayReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAchievementTotalPerDayReply proto.InternalMessageInfo

func (m *GetAchievementTotalPerDayReply) GetData() []*AchievementTotalPerDay {
	if m != nil {
		return m.Data
	}
	return nil
}

type AchievementTotalPerDay struct {
	Date                 int64    `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Total                int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AchievementTotalPerDay) Reset()         { *m = AchievementTotalPerDay{} }
func (m *AchievementTotalPerDay) String() string { return proto.CompactTextString(m) }
func (*AchievementTotalPerDay) ProtoMessage()    {}
func (*AchievementTotalPerDay) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{786}
}

func (m *AchievementTotalPerDay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AchievementTotalPerDay.Unmarshal(m, b)
}
func (m *AchievementTotalPerDay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AchievementTotalPerDay.Marshal(b, m, deterministic)
}
func (m *AchievementTotalPerDay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AchievementTotalPerDay.Merge(m, src)
}
func (m *AchievementTotalPerDay) XXX_Size() int {
	return xxx_messageInfo_AchievementTotalPerDay.Size(m)
}
func (m *AchievementTotalPerDay) XXX_DiscardUnknown() {
	xxx_messageInfo_AchievementTotalPerDay.DiscardUnknown(m)
}

var xxx_messageInfo_AchievementTotalPerDay proto.InternalMessageInfo

func (m *AchievementTotalPerDay) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *AchievementTotalPerDay) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

// 获得代理周结佣金的请求
type GetWeekCommissionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWeekCommissionRequest) Reset()         { *m = GetWeekCommissionRequest{} }
func (m *GetWeekCommissionRequest) String() string { return proto.CompactTextString(m) }
func (*GetWeekCommissionRequest) ProtoMessage()    {}
func (*GetWeekCommissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{787}
}

func (m *GetWeekCommissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWeekCommissionRequest.Unmarshal(m, b)
}
func (m *GetWeekCommissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWeekCommissionRequest.Marshal(b, m, deterministic)
}
func (m *GetWeekCommissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWeekCommissionRequest.Merge(m, src)
}
func (m *GetWeekCommissionRequest) XXX_Size() int {
	return xxx_messageInfo_GetWeekCommissionRequest.Size(m)
}
func (m *GetWeekCommissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWeekCommissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWeekCommissionRequest proto.InternalMessageInfo

// 获得代理周结佣金的返回
type GetWeekCommissionReply struct {
	// 领取到的佣金数
	Commission int64 `protobuf:"varint,1,opt,name=commission,proto3" json:"commission,omitempty"`
	// 已领取到的佣金数
	AllGetCommission     int64    `protobuf:"varint,2,opt,name=allGetCommission,proto3" json:"allGetCommission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWeekCommissionReply) Reset()         { *m = GetWeekCommissionReply{} }
func (m *GetWeekCommissionReply) String() string { return proto.CompactTextString(m) }
func (*GetWeekCommissionReply) ProtoMessage()    {}
func (*GetWeekCommissionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{788}
}

func (m *GetWeekCommissionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWeekCommissionReply.Unmarshal(m, b)
}
func (m *GetWeekCommissionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWeekCommissionReply.Marshal(b, m, deterministic)
}
func (m *GetWeekCommissionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWeekCommissionReply.Merge(m, src)
}
func (m *GetWeekCommissionReply) XXX_Size() int {
	return xxx_messageInfo_GetWeekCommissionReply.Size(m)
}
func (m *GetWeekCommissionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWeekCommissionReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetWeekCommissionReply proto.InternalMessageInfo

func (m *GetWeekCommissionReply) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *GetWeekCommissionReply) GetAllGetCommission() int64 {
	if m != nil {
		return m.AllGetCommission
	}
	return 0
}

// 获得顶代信息的请求
type GetTopAgentInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTopAgentInfoRequest) Reset()         { *m = GetTopAgentInfoRequest{} }
func (m *GetTopAgentInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetTopAgentInfoRequest) ProtoMessage()    {}
func (*GetTopAgentInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{789}
}

func (m *GetTopAgentInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopAgentInfoRequest.Unmarshal(m, b)
}
func (m *GetTopAgentInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopAgentInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetTopAgentInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopAgentInfoRequest.Merge(m, src)
}
func (m *GetTopAgentInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetTopAgentInfoRequest.Size(m)
}
func (m *GetTopAgentInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopAgentInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopAgentInfoRequest proto.InternalMessageInfo

// 获得顶代信息的返回
type GetTopAgentInfoReply struct {
	PlayerInfo           *PlayerInfo       `protobuf:"bytes,1,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	AccountInfo          *MysqlAccountInfo `protobuf:"bytes,2,opt,name=accountInfo,proto3" json:"accountInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetTopAgentInfoReply) Reset()         { *m = GetTopAgentInfoReply{} }
func (m *GetTopAgentInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetTopAgentInfoReply) ProtoMessage()    {}
func (*GetTopAgentInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{790}
}

func (m *GetTopAgentInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopAgentInfoReply.Unmarshal(m, b)
}
func (m *GetTopAgentInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopAgentInfoReply.Marshal(b, m, deterministic)
}
func (m *GetTopAgentInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopAgentInfoReply.Merge(m, src)
}
func (m *GetTopAgentInfoReply) XXX_Size() int {
	return xxx_messageInfo_GetTopAgentInfoReply.Size(m)
}
func (m *GetTopAgentInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopAgentInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopAgentInfoReply proto.InternalMessageInfo

func (m *GetTopAgentInfoReply) GetPlayerInfo() *PlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *GetTopAgentInfoReply) GetAccountInfo() *MysqlAccountInfo {
	if m != nil {
		return m.AccountInfo
	}
	return nil
}

// 获取短链接的请求
type GetShortURLRequest struct {
	// 排线码的uuid，如果有值，则认为是获取排线码的短链接，否则认为是直属码的短链接
	LineCodeUUID         string   `protobuf:"bytes,1,opt,name=lineCodeUUID,proto3" json:"lineCodeUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetShortURLRequest) Reset()         { *m = GetShortURLRequest{} }
func (m *GetShortURLRequest) String() string { return proto.CompactTextString(m) }
func (*GetShortURLRequest) ProtoMessage()    {}
func (*GetShortURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{791}
}

func (m *GetShortURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShortURLRequest.Unmarshal(m, b)
}
func (m *GetShortURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShortURLRequest.Marshal(b, m, deterministic)
}
func (m *GetShortURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShortURLRequest.Merge(m, src)
}
func (m *GetShortURLRequest) XXX_Size() int {
	return xxx_messageInfo_GetShortURLRequest.Size(m)
}
func (m *GetShortURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShortURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetShortURLRequest proto.InternalMessageInfo

func (m *GetShortURLRequest) GetLineCodeUUID() string {
	if m != nil {
		return m.LineCodeUUID
	}
	return ""
}

// 获取短链接的返回
type GetShortURLReply struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	LineCodeUUID         string   `protobuf:"bytes,2,opt,name=lineCodeUUID,proto3" json:"lineCodeUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetShortURLReply) Reset()         { *m = GetShortURLReply{} }
func (m *GetShortURLReply) String() string { return proto.CompactTextString(m) }
func (*GetShortURLReply) ProtoMessage()    {}
func (*GetShortURLReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{792}
}

func (m *GetShortURLReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShortURLReply.Unmarshal(m, b)
}
func (m *GetShortURLReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShortURLReply.Marshal(b, m, deterministic)
}
func (m *GetShortURLReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShortURLReply.Merge(m, src)
}
func (m *GetShortURLReply) XXX_Size() int {
	return xxx_messageInfo_GetShortURLReply.Size(m)
}
func (m *GetShortURLReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShortURLReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetShortURLReply proto.InternalMessageInfo

func (m *GetShortURLReply) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *GetShortURLReply) GetLineCodeUUID() string {
	if m != nil {
		return m.LineCodeUUID
	}
	return ""
}

// 抽水信息
type CommissionInfo struct {
	// 产生这条抽水的uuid
	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// 抽水值
	Num int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	// 抽水产生的原因
	Reason ResourceChangeReason `protobuf:"varint,3,opt,name=reason,proto3,enum=ResourceChangeReason" json:"reason,omitempty"`
	// 抽水创建时间
	CreateTime int64 `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 这局游戏的手数
	BetTimes             int64    `protobuf:"varint,5,opt,name=BetTimes,proto3" json:"BetTimes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommissionInfo) Reset()         { *m = CommissionInfo{} }
func (m *CommissionInfo) String() string { return proto.CompactTextString(m) }
func (*CommissionInfo) ProtoMessage()    {}
func (*CommissionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{793}
}

func (m *CommissionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommissionInfo.Unmarshal(m, b)
}
func (m *CommissionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommissionInfo.Marshal(b, m, deterministic)
}
func (m *CommissionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommissionInfo.Merge(m, src)
}
func (m *CommissionInfo) XXX_Size() int {
	return xxx_messageInfo_CommissionInfo.Size(m)
}
func (m *CommissionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CommissionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CommissionInfo proto.InternalMessageInfo

func (m *CommissionInfo) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *CommissionInfo) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *CommissionInfo) GetReason() ResourceChangeReason {
	if m != nil {
		return m.Reason
	}
	return ResourceChangeReason_ReasonNone
}

func (m *CommissionInfo) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *CommissionInfo) GetBetTimes() int64 {
	if m != nil {
		return m.BetTimes
	}
	return 0
}

// 获取自己的佣金的申请
type GetMeCommissionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMeCommissionRequest) Reset()         { *m = GetMeCommissionRequest{} }
func (m *GetMeCommissionRequest) String() string { return proto.CompactTextString(m) }
func (*GetMeCommissionRequest) ProtoMessage()    {}
func (*GetMeCommissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{794}
}

func (m *GetMeCommissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMeCommissionRequest.Unmarshal(m, b)
}
func (m *GetMeCommissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMeCommissionRequest.Marshal(b, m, deterministic)
}
func (m *GetMeCommissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMeCommissionRequest.Merge(m, src)
}
func (m *GetMeCommissionRequest) XXX_Size() int {
	return xxx_messageInfo_GetMeCommissionRequest.Size(m)
}
func (m *GetMeCommissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMeCommissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMeCommissionRequest proto.InternalMessageInfo

// 获取自己的佣金的回复
type GetMeCommissionReply struct {
	// 本次领取到的佣金
	Commission int64 `protobuf:"varint,1,opt,name=Commission,proto3" json:"Commission,omitempty"`
	// 已领取到的佣金数
	AlreadyCommission    int64    `protobuf:"varint,2,opt,name=AlreadyCommission,proto3" json:"AlreadyCommission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMeCommissionReply) Reset()         { *m = GetMeCommissionReply{} }
func (m *GetMeCommissionReply) String() string { return proto.CompactTextString(m) }
func (*GetMeCommissionReply) ProtoMessage()    {}
func (*GetMeCommissionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{795}
}

func (m *GetMeCommissionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMeCommissionReply.Unmarshal(m, b)
}
func (m *GetMeCommissionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMeCommissionReply.Marshal(b, m, deterministic)
}
func (m *GetMeCommissionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMeCommissionReply.Merge(m, src)
}
func (m *GetMeCommissionReply) XXX_Size() int {
	return xxx_messageInfo_GetMeCommissionReply.Size(m)
}
func (m *GetMeCommissionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMeCommissionReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetMeCommissionReply proto.InternalMessageInfo

func (m *GetMeCommissionReply) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *GetMeCommissionReply) GetAlreadyCommission() int64 {
	if m != nil {
		return m.AlreadyCommission
	}
	return 0
}

// 通过短位id绑定父节点的请求
type BindParentByShortIDRequest struct {
	// 想要绑定的短位id
	ShortID              string   `protobuf:"bytes,1,opt,name=shortID,proto3" json:"shortID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindParentByShortIDRequest) Reset()         { *m = BindParentByShortIDRequest{} }
func (m *BindParentByShortIDRequest) String() string { return proto.CompactTextString(m) }
func (*BindParentByShortIDRequest) ProtoMessage()    {}
func (*BindParentByShortIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{796}
}

func (m *BindParentByShortIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindParentByShortIDRequest.Unmarshal(m, b)
}
func (m *BindParentByShortIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindParentByShortIDRequest.Marshal(b, m, deterministic)
}
func (m *BindParentByShortIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindParentByShortIDRequest.Merge(m, src)
}
func (m *BindParentByShortIDRequest) XXX_Size() int {
	return xxx_messageInfo_BindParentByShortIDRequest.Size(m)
}
func (m *BindParentByShortIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BindParentByShortIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BindParentByShortIDRequest proto.InternalMessageInfo

func (m *BindParentByShortIDRequest) GetShortID() string {
	if m != nil {
		return m.ShortID
	}
	return ""
}

// 通过短位id绑定父节点的返回
type BindParentByShortIDReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindParentByShortIDReply) Reset()         { *m = BindParentByShortIDReply{} }
func (m *BindParentByShortIDReply) String() string { return proto.CompactTextString(m) }
func (*BindParentByShortIDReply) ProtoMessage()    {}
func (*BindParentByShortIDReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{797}
}

func (m *BindParentByShortIDReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindParentByShortIDReply.Unmarshal(m, b)
}
func (m *BindParentByShortIDReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindParentByShortIDReply.Marshal(b, m, deterministic)
}
func (m *BindParentByShortIDReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindParentByShortIDReply.Merge(m, src)
}
func (m *BindParentByShortIDReply) XXX_Size() int {
	return xxx_messageInfo_BindParentByShortIDReply.Size(m)
}
func (m *BindParentByShortIDReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BindParentByShortIDReply.DiscardUnknown(m)
}

var xxx_messageInfo_BindParentByShortIDReply proto.InternalMessageInfo

// 将玩家设置为代理的请求
type SetPlayerToAgentRequest struct {
	// 想要设置的玩家的短位id，客户端只需要设置这个值
	PlayerShortID string `protobuf:"bytes,1,opt,name=playerShortID,proto3" json:"playerShortID,omitempty"`
	// 想要设置的玩家的uuid
	PlayerUUID string `protobuf:"bytes,2,opt,name=playerUUID,proto3" json:"playerUUID,omitempty"`
	// 操作者的uuid
	OpUUID               string   `protobuf:"bytes,3,opt,name=opUUID,proto3" json:"opUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetPlayerToAgentRequest) Reset()         { *m = SetPlayerToAgentRequest{} }
func (m *SetPlayerToAgentRequest) String() string { return proto.CompactTextString(m) }
func (*SetPlayerToAgentRequest) ProtoMessage()    {}
func (*SetPlayerToAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{798}
}

func (m *SetPlayerToAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPlayerToAgentRequest.Unmarshal(m, b)
}
func (m *SetPlayerToAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPlayerToAgentRequest.Marshal(b, m, deterministic)
}
func (m *SetPlayerToAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPlayerToAgentRequest.Merge(m, src)
}
func (m *SetPlayerToAgentRequest) XXX_Size() int {
	return xxx_messageInfo_SetPlayerToAgentRequest.Size(m)
}
func (m *SetPlayerToAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPlayerToAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetPlayerToAgentRequest proto.InternalMessageInfo

func (m *SetPlayerToAgentRequest) GetPlayerShortID() string {
	if m != nil {
		return m.PlayerShortID
	}
	return ""
}

func (m *SetPlayerToAgentRequest) GetPlayerUUID() string {
	if m != nil {
		return m.PlayerUUID
	}
	return ""
}

func (m *SetPlayerToAgentRequest) GetOpUUID() string {
	if m != nil {
		return m.OpUUID
	}
	return ""
}

// 将玩家设置为代理的返回
type SetPlayerToAgentReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetPlayerToAgentReply) Reset()         { *m = SetPlayerToAgentReply{} }
func (m *SetPlayerToAgentReply) String() string { return proto.CompactTextString(m) }
func (*SetPlayerToAgentReply) ProtoMessage()    {}
func (*SetPlayerToAgentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{799}
}

func (m *SetPlayerToAgentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPlayerToAgentReply.Unmarshal(m, b)
}
func (m *SetPlayerToAgentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPlayerToAgentReply.Marshal(b, m, deterministic)
}
func (m *SetPlayerToAgentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPlayerToAgentReply.Merge(m, src)
}
func (m *SetPlayerToAgentReply) XXX_Size() int {
	return xxx_messageInfo_SetPlayerToAgentReply.Size(m)
}
func (m *SetPlayerToAgentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPlayerToAgentReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetPlayerToAgentReply proto.InternalMessageInfo

// 通过身份获取所有下级,支持分页的请求
type GetChildByIdentityRequest struct {
	// 想要查询的uuid
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 想要查询的页数
	PageNum int32 `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	// 想要查询的每页的数量
	PageSize int32 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	// 想要查询的身份
	Identity AgentSubIdentity `protobuf:"varint,4,opt,name=identity,proto3,enum=AgentSubIdentity" json:"identity,omitempty"`
	// 想要查询的关系
	WantRelation AgentRelation `protobuf:"varint,5,opt,name=wantRelation,proto3,enum=AgentRelation" json:"wantRelation,omitempty"`
	// 指定级别的下级 [如1级 就直属...]
	Level                int64    `protobuf:"varint,6,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChildByIdentityRequest) Reset()         { *m = GetChildByIdentityRequest{} }
func (m *GetChildByIdentityRequest) String() string { return proto.CompactTextString(m) }
func (*GetChildByIdentityRequest) ProtoMessage()    {}
func (*GetChildByIdentityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{800}
}

func (m *GetChildByIdentityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChildByIdentityRequest.Unmarshal(m, b)
}
func (m *GetChildByIdentityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChildByIdentityRequest.Marshal(b, m, deterministic)
}
func (m *GetChildByIdentityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChildByIdentityRequest.Merge(m, src)
}
func (m *GetChildByIdentityRequest) XXX_Size() int {
	return xxx_messageInfo_GetChildByIdentityRequest.Size(m)
}
func (m *GetChildByIdentityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChildByIdentityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetChildByIdentityRequest proto.InternalMessageInfo

func (m *GetChildByIdentityRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *GetChildByIdentityRequest) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *GetChildByIdentityRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetChildByIdentityRequest) GetIdentity() AgentSubIdentity {
	if m != nil {
		return m.Identity
	}
	return AgentSubIdentity_AgentSubIdentity_Agent
}

func (m *GetChildByIdentityRequest) GetWantRelation() AgentRelation {
	if m != nil {
		return m.WantRelation
	}
	return AgentRelation_AgentRelation_None
}

func (m *GetChildByIdentityRequest) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

// 通过身份获取所有下级,支持分页的返回
type GetChildByIdentityReply struct {
	// 符合身份的下级简略信息
	AllUnder []*AgentSimpleInfo `protobuf:"bytes,1,rep,name=allUnder,proto3" json:"allUnder,omitempty"`
	// 符合身份的下级总人数
	Num                  int32    `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChildByIdentityReply) Reset()         { *m = GetChildByIdentityReply{} }
func (m *GetChildByIdentityReply) String() string { return proto.CompactTextString(m) }
func (*GetChildByIdentityReply) ProtoMessage()    {}
func (*GetChildByIdentityReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{801}
}

func (m *GetChildByIdentityReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChildByIdentityReply.Unmarshal(m, b)
}
func (m *GetChildByIdentityReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChildByIdentityReply.Marshal(b, m, deterministic)
}
func (m *GetChildByIdentityReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChildByIdentityReply.Merge(m, src)
}
func (m *GetChildByIdentityReply) XXX_Size() int {
	return xxx_messageInfo_GetChildByIdentityReply.Size(m)
}
func (m *GetChildByIdentityReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChildByIdentityReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetChildByIdentityReply proto.InternalMessageInfo

func (m *GetChildByIdentityReply) GetAllUnder() []*AgentSimpleInfo {
	if m != nil {
		return m.AllUnder
	}
	return nil
}

func (m *GetChildByIdentityReply) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

// 通过身份查找某中关系的某个代理的请求
type FindChildByIdentityRequest struct {
	// 想要查询的shortId
	ShortId string `protobuf:"bytes,1,opt,name=shortId,proto3" json:"shortId,omitempty"`
	// 想要查询的身份
	Identity AgentSubIdentity `protobuf:"varint,2,opt,name=identity,proto3,enum=AgentSubIdentity" json:"identity,omitempty"`
	// 想要查询的关系
	WantRelation         AgentRelation `protobuf:"varint,3,opt,name=wantRelation,proto3,enum=AgentRelation" json:"wantRelation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FindChildByIdentityRequest) Reset()         { *m = FindChildByIdentityRequest{} }
func (m *FindChildByIdentityRequest) String() string { return proto.CompactTextString(m) }
func (*FindChildByIdentityRequest) ProtoMessage()    {}
func (*FindChildByIdentityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{802}
}

func (m *FindChildByIdentityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindChildByIdentityRequest.Unmarshal(m, b)
}
func (m *FindChildByIdentityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindChildByIdentityRequest.Marshal(b, m, deterministic)
}
func (m *FindChildByIdentityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindChildByIdentityRequest.Merge(m, src)
}
func (m *FindChildByIdentityRequest) XXX_Size() int {
	return xxx_messageInfo_FindChildByIdentityRequest.Size(m)
}
func (m *FindChildByIdentityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindChildByIdentityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindChildByIdentityRequest proto.InternalMessageInfo

func (m *FindChildByIdentityRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *FindChildByIdentityRequest) GetIdentity() AgentSubIdentity {
	if m != nil {
		return m.Identity
	}
	return AgentSubIdentity_AgentSubIdentity_Agent
}

func (m *FindChildByIdentityRequest) GetWantRelation() AgentRelation {
	if m != nil {
		return m.WantRelation
	}
	return AgentRelation_AgentRelation_None
}

// 通过身份获取所有下级的返回
type FindChildByIdentityReply struct {
	// 符合身份的下级简略信息
	Info                 *AgentSimpleInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *FindChildByIdentityReply) Reset()         { *m = FindChildByIdentityReply{} }
func (m *FindChildByIdentityReply) String() string { return proto.CompactTextString(m) }
func (*FindChildByIdentityReply) ProtoMessage()    {}
func (*FindChildByIdentityReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{803}
}

func (m *FindChildByIdentityReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindChildByIdentityReply.Unmarshal(m, b)
}
func (m *FindChildByIdentityReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindChildByIdentityReply.Marshal(b, m, deterministic)
}
func (m *FindChildByIdentityReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindChildByIdentityReply.Merge(m, src)
}
func (m *FindChildByIdentityReply) XXX_Size() int {
	return xxx_messageInfo_FindChildByIdentityReply.Size(m)
}
func (m *FindChildByIdentityReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FindChildByIdentityReply.DiscardUnknown(m)
}

var xxx_messageInfo_FindChildByIdentityReply proto.InternalMessageInfo

func (m *FindChildByIdentityReply) GetInfo() *AgentSimpleInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 获得玩家身份的请求
type GetAgentIdentityRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAgentIdentityRequest) Reset()         { *m = GetAgentIdentityRequest{} }
func (m *GetAgentIdentityRequest) String() string { return proto.CompactTextString(m) }
func (*GetAgentIdentityRequest) ProtoMessage()    {}
func (*GetAgentIdentityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{804}
}

func (m *GetAgentIdentityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentIdentityRequest.Unmarshal(m, b)
}
func (m *GetAgentIdentityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentIdentityRequest.Marshal(b, m, deterministic)
}
func (m *GetAgentIdentityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentIdentityRequest.Merge(m, src)
}
func (m *GetAgentIdentityRequest) XXX_Size() int {
	return xxx_messageInfo_GetAgentIdentityRequest.Size(m)
}
func (m *GetAgentIdentityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentIdentityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentIdentityRequest proto.InternalMessageInfo

func (m *GetAgentIdentityRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

// 获得玩家身份的返回
type GetAgentIdentityReply struct {
	Identity             AgentSubIdentity `protobuf:"varint,1,opt,name=identity,proto3,enum=AgentSubIdentity" json:"identity,omitempty"`
	ParentUUID           string           `protobuf:"bytes,2,opt,name=parentUUID,proto3" json:"parentUUID,omitempty"`
	ParentShortID        string           `protobuf:"bytes,3,opt,name=parentShortID,proto3" json:"parentShortID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetAgentIdentityReply) Reset()         { *m = GetAgentIdentityReply{} }
func (m *GetAgentIdentityReply) String() string { return proto.CompactTextString(m) }
func (*GetAgentIdentityReply) ProtoMessage()    {}
func (*GetAgentIdentityReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{805}
}

func (m *GetAgentIdentityReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentIdentityReply.Unmarshal(m, b)
}
func (m *GetAgentIdentityReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentIdentityReply.Marshal(b, m, deterministic)
}
func (m *GetAgentIdentityReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentIdentityReply.Merge(m, src)
}
func (m *GetAgentIdentityReply) XXX_Size() int {
	return xxx_messageInfo_GetAgentIdentityReply.Size(m)
}
func (m *GetAgentIdentityReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentIdentityReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentIdentityReply proto.InternalMessageInfo

func (m *GetAgentIdentityReply) GetIdentity() AgentSubIdentity {
	if m != nil {
		return m.Identity
	}
	return AgentSubIdentity_AgentSubIdentity_Agent
}

func (m *GetAgentIdentityReply) GetParentUUID() string {
	if m != nil {
		return m.ParentUUID
	}
	return ""
}

func (m *GetAgentIdentityReply) GetParentShortID() string {
	if m != nil {
		return m.ParentShortID
	}
	return ""
}

//发送玩家开始游戏消息
type PlayerStartPlayGameMessage struct {
	//玩家uuid
	PlayerUuid string `protobuf:"bytes,1,opt,name=player_uuid,json=playerUuid,proto3" json:"player_uuid,omitempty"`
	//房间类型
	RoomType RoomType `protobuf:"varint,2,opt,name=roomType,proto3,enum=RoomType" json:"roomType,omitempty"`
	//游戏类型
	GameType GameType `protobuf:"varint,3,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	//房间ID
	RoomId string `protobuf:"bytes,4,opt,name=roomId,proto3" json:"roomId,omitempty"`
	//对局ID
	RoundId string `protobuf:"bytes,5,opt,name=roundId,proto3" json:"roundId,omitempty"`
	//对局开始时间
	RoundStartTime int64 `protobuf:"varint,6,opt,name=roundStartTime,proto3" json:"roundStartTime,omitempty"`
	//每局扣除的房卡数
	DeductRoomCardPerRound int64    `protobuf:"varint,7,opt,name=deductRoomCardPerRound,proto3" json:"deductRoomCardPerRound,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *PlayerStartPlayGameMessage) Reset()         { *m = PlayerStartPlayGameMessage{} }
func (m *PlayerStartPlayGameMessage) String() string { return proto.CompactTextString(m) }
func (*PlayerStartPlayGameMessage) ProtoMessage()    {}
func (*PlayerStartPlayGameMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{806}
}

func (m *PlayerStartPlayGameMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerStartPlayGameMessage.Unmarshal(m, b)
}
func (m *PlayerStartPlayGameMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerStartPlayGameMessage.Marshal(b, m, deterministic)
}
func (m *PlayerStartPlayGameMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerStartPlayGameMessage.Merge(m, src)
}
func (m *PlayerStartPlayGameMessage) XXX_Size() int {
	return xxx_messageInfo_PlayerStartPlayGameMessage.Size(m)
}
func (m *PlayerStartPlayGameMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerStartPlayGameMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerStartPlayGameMessage proto.InternalMessageInfo

func (m *PlayerStartPlayGameMessage) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *PlayerStartPlayGameMessage) GetRoomType() RoomType {
	if m != nil {
		return m.RoomType
	}
	return RoomType_RoomType_None
}

func (m *PlayerStartPlayGameMessage) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *PlayerStartPlayGameMessage) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PlayerStartPlayGameMessage) GetRoundId() string {
	if m != nil {
		return m.RoundId
	}
	return ""
}

func (m *PlayerStartPlayGameMessage) GetRoundStartTime() int64 {
	if m != nil {
		return m.RoundStartTime
	}
	return 0
}

func (m *PlayerStartPlayGameMessage) GetDeductRoomCardPerRound() int64 {
	if m != nil {
		return m.DeductRoomCardPerRound
	}
	return 0
}

//房卡变动记录
type RoomCardChangeRecord struct {
	AutoId int64 `protobuf:"varint,1,opt,name=autoId,proto3" json:"autoId,omitempty"`
	//被操作人
	PlayerUuid    string `protobuf:"bytes,2,opt,name=player_uuid,json=playerUuid,proto3" json:"player_uuid,omitempty"`
	PlayerShortId string `protobuf:"bytes,3,opt,name=player_shortId,json=playerShortId,proto3" json:"player_shortId,omitempty"`
	PlayerAccount string `protobuf:"bytes,4,opt,name=player_account,json=playerAccount,proto3" json:"player_account,omitempty"`
	PlayerName    string `protobuf:"bytes,5,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	//操作人
	OperatorUuid    string `protobuf:"bytes,6,opt,name=operator_uuid,json=operatorUuid,proto3" json:"operator_uuid,omitempty"`
	OperatorShortId string `protobuf:"bytes,7,opt,name=operator_shortId,json=operatorShortId,proto3" json:"operator_shortId,omitempty"`
	OperatorAccount string `protobuf:"bytes,8,opt,name=operator_account,json=operatorAccount,proto3" json:"operator_account,omitempty"`
	OperatorName    string `protobuf:"bytes,9,opt,name=operator_name,json=operatorName,proto3" json:"operator_name,omitempty"`
	//副盟主ID
	AllianceLeaderUuid string `protobuf:"bytes,10,opt,name=alliance_leader_uuid,json=allianceLeaderUuid,proto3" json:"alliance_leader_uuid,omitempty"`
	//变动数量,正数增加，负数减少
	ChangeNum int64 `protobuf:"varint,11,opt,name=changeNum,proto3" json:"changeNum,omitempty"`
	//变动前数量
	BeforeNum int64 `protobuf:"varint,12,opt,name=before_num,json=beforeNum,proto3" json:"before_num,omitempty"`
	//变动后数量
	FinalNum int64 `protobuf:"varint,13,opt,name=final_num,json=finalNum,proto3" json:"final_num,omitempty"`
	//变动时间
	ChangeTime int64 `protobuf:"varint,14,opt,name=changeTime,proto3" json:"changeTime,omitempty"`
	//变动原因
	ChangeReason         ResourceChangeReason `protobuf:"varint,15,opt,name=change_reason,json=changeReason,proto3,enum=ResourceChangeReason" json:"change_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RoomCardChangeRecord) Reset()         { *m = RoomCardChangeRecord{} }
func (m *RoomCardChangeRecord) String() string { return proto.CompactTextString(m) }
func (*RoomCardChangeRecord) ProtoMessage()    {}
func (*RoomCardChangeRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{807}
}

func (m *RoomCardChangeRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomCardChangeRecord.Unmarshal(m, b)
}
func (m *RoomCardChangeRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomCardChangeRecord.Marshal(b, m, deterministic)
}
func (m *RoomCardChangeRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomCardChangeRecord.Merge(m, src)
}
func (m *RoomCardChangeRecord) XXX_Size() int {
	return xxx_messageInfo_RoomCardChangeRecord.Size(m)
}
func (m *RoomCardChangeRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomCardChangeRecord.DiscardUnknown(m)
}

var xxx_messageInfo_RoomCardChangeRecord proto.InternalMessageInfo

func (m *RoomCardChangeRecord) GetAutoId() int64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *RoomCardChangeRecord) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *RoomCardChangeRecord) GetPlayerShortId() string {
	if m != nil {
		return m.PlayerShortId
	}
	return ""
}

func (m *RoomCardChangeRecord) GetPlayerAccount() string {
	if m != nil {
		return m.PlayerAccount
	}
	return ""
}

func (m *RoomCardChangeRecord) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *RoomCardChangeRecord) GetOperatorUuid() string {
	if m != nil {
		return m.OperatorUuid
	}
	return ""
}

func (m *RoomCardChangeRecord) GetOperatorShortId() string {
	if m != nil {
		return m.OperatorShortId
	}
	return ""
}

func (m *RoomCardChangeRecord) GetOperatorAccount() string {
	if m != nil {
		return m.OperatorAccount
	}
	return ""
}

func (m *RoomCardChangeRecord) GetOperatorName() string {
	if m != nil {
		return m.OperatorName
	}
	return ""
}

func (m *RoomCardChangeRecord) GetAllianceLeaderUuid() string {
	if m != nil {
		return m.AllianceLeaderUuid
	}
	return ""
}

func (m *RoomCardChangeRecord) GetChangeNum() int64 {
	if m != nil {
		return m.ChangeNum
	}
	return 0
}

func (m *RoomCardChangeRecord) GetBeforeNum() int64 {
	if m != nil {
		return m.BeforeNum
	}
	return 0
}

func (m *RoomCardChangeRecord) GetFinalNum() int64 {
	if m != nil {
		return m.FinalNum
	}
	return 0
}

func (m *RoomCardChangeRecord) GetChangeTime() int64 {
	if m != nil {
		return m.ChangeTime
	}
	return 0
}

func (m *RoomCardChangeRecord) GetChangeReason() ResourceChangeReason {
	if m != nil {
		return m.ChangeReason
	}
	return ResourceChangeReason_ReasonNone
}

// 出借申请 -  代理 -> 玩家 直属
type BorrowMoneyRequest struct {
	// 用户shortId
	ShortId string `protobuf:"bytes,1,opt,name=ShortId,proto3" json:"ShortId,omitempty"`
	// 出借金额
	Balance              int64    `protobuf:"varint,2,opt,name=Balance,proto3" json:"Balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BorrowMoneyRequest) Reset()         { *m = BorrowMoneyRequest{} }
func (m *BorrowMoneyRequest) String() string { return proto.CompactTextString(m) }
func (*BorrowMoneyRequest) ProtoMessage()    {}
func (*BorrowMoneyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{808}
}

func (m *BorrowMoneyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BorrowMoneyRequest.Unmarshal(m, b)
}
func (m *BorrowMoneyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BorrowMoneyRequest.Marshal(b, m, deterministic)
}
func (m *BorrowMoneyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BorrowMoneyRequest.Merge(m, src)
}
func (m *BorrowMoneyRequest) XXX_Size() int {
	return xxx_messageInfo_BorrowMoneyRequest.Size(m)
}
func (m *BorrowMoneyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BorrowMoneyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BorrowMoneyRequest proto.InternalMessageInfo

func (m *BorrowMoneyRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *BorrowMoneyRequest) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

// 出借回复
type BorrowMoneyReply struct {
	// 是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BorrowMoneyReply) Reset()         { *m = BorrowMoneyReply{} }
func (m *BorrowMoneyReply) String() string { return proto.CompactTextString(m) }
func (*BorrowMoneyReply) ProtoMessage()    {}
func (*BorrowMoneyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{809}
}

func (m *BorrowMoneyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BorrowMoneyReply.Unmarshal(m, b)
}
func (m *BorrowMoneyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BorrowMoneyReply.Marshal(b, m, deterministic)
}
func (m *BorrowMoneyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BorrowMoneyReply.Merge(m, src)
}
func (m *BorrowMoneyReply) XXX_Size() int {
	return xxx_messageInfo_BorrowMoneyReply.Size(m)
}
func (m *BorrowMoneyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BorrowMoneyReply.DiscardUnknown(m)
}

var xxx_messageInfo_BorrowMoneyReply proto.InternalMessageInfo

func (m *BorrowMoneyReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 归还申请 -  玩家 -> 代理 直属
type BackMoneyRequest struct {
	// 归还金额
	Balance              int64    `protobuf:"varint,1,opt,name=Balance,proto3" json:"Balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackMoneyRequest) Reset()         { *m = BackMoneyRequest{} }
func (m *BackMoneyRequest) String() string { return proto.CompactTextString(m) }
func (*BackMoneyRequest) ProtoMessage()    {}
func (*BackMoneyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{810}
}

func (m *BackMoneyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackMoneyRequest.Unmarshal(m, b)
}
func (m *BackMoneyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackMoneyRequest.Marshal(b, m, deterministic)
}
func (m *BackMoneyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackMoneyRequest.Merge(m, src)
}
func (m *BackMoneyRequest) XXX_Size() int {
	return xxx_messageInfo_BackMoneyRequest.Size(m)
}
func (m *BackMoneyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackMoneyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackMoneyRequest proto.InternalMessageInfo

func (m *BackMoneyRequest) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

// 归还回复
type BackMoneyReply struct {
	// 是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackMoneyReply) Reset()         { *m = BackMoneyReply{} }
func (m *BackMoneyReply) String() string { return proto.CompactTextString(m) }
func (*BackMoneyReply) ProtoMessage()    {}
func (*BackMoneyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{811}
}

func (m *BackMoneyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackMoneyReply.Unmarshal(m, b)
}
func (m *BackMoneyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackMoneyReply.Marshal(b, m, deterministic)
}
func (m *BackMoneyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackMoneyReply.Merge(m, src)
}
func (m *BackMoneyReply) XXX_Size() int {
	return xxx_messageInfo_BackMoneyReply.Size(m)
}
func (m *BackMoneyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BackMoneyReply.DiscardUnknown(m)
}

var xxx_messageInfo_BackMoneyReply proto.InternalMessageInfo

func (m *BackMoneyReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 调配申请 -  代理 -> 代理
type DeployMoneyRequest struct {
	// 用户shortId
	ShortId string `protobuf:"bytes,1,opt,name=ShortId,proto3" json:"ShortId,omitempty"`
	// 出借金额
	Balance              int64    `protobuf:"varint,2,opt,name=Balance,proto3" json:"Balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployMoneyRequest) Reset()         { *m = DeployMoneyRequest{} }
func (m *DeployMoneyRequest) String() string { return proto.CompactTextString(m) }
func (*DeployMoneyRequest) ProtoMessage()    {}
func (*DeployMoneyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{812}
}

func (m *DeployMoneyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployMoneyRequest.Unmarshal(m, b)
}
func (m *DeployMoneyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployMoneyRequest.Marshal(b, m, deterministic)
}
func (m *DeployMoneyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployMoneyRequest.Merge(m, src)
}
func (m *DeployMoneyRequest) XXX_Size() int {
	return xxx_messageInfo_DeployMoneyRequest.Size(m)
}
func (m *DeployMoneyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployMoneyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeployMoneyRequest proto.InternalMessageInfo

func (m *DeployMoneyRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *DeployMoneyRequest) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

// 调配回复
type DeployMoneyReply struct {
	// 是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployMoneyReply) Reset()         { *m = DeployMoneyReply{} }
func (m *DeployMoneyReply) String() string { return proto.CompactTextString(m) }
func (*DeployMoneyReply) ProtoMessage()    {}
func (*DeployMoneyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{813}
}

func (m *DeployMoneyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployMoneyReply.Unmarshal(m, b)
}
func (m *DeployMoneyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployMoneyReply.Marshal(b, m, deterministic)
}
func (m *DeployMoneyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployMoneyReply.Merge(m, src)
}
func (m *DeployMoneyReply) XXX_Size() int {
	return xxx_messageInfo_DeployMoneyReply.Size(m)
}
func (m *DeployMoneyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployMoneyReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeployMoneyReply proto.InternalMessageInfo

func (m *DeployMoneyReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 赠送功能请求
type GiveAwayRequest struct {
	// 被赠送人的shortId
	ToBeGiveAwayShortId string `protobuf:"bytes,1,opt,name=ToBeGiveAwayShortId,proto3" json:"ToBeGiveAwayShortId,omitempty"`
	// 赠送的金额
	Balance              int64    `protobuf:"varint,2,opt,name=Balance,proto3" json:"Balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GiveAwayRequest) Reset()         { *m = GiveAwayRequest{} }
func (m *GiveAwayRequest) String() string { return proto.CompactTextString(m) }
func (*GiveAwayRequest) ProtoMessage()    {}
func (*GiveAwayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{814}
}

func (m *GiveAwayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GiveAwayRequest.Unmarshal(m, b)
}
func (m *GiveAwayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GiveAwayRequest.Marshal(b, m, deterministic)
}
func (m *GiveAwayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GiveAwayRequest.Merge(m, src)
}
func (m *GiveAwayRequest) XXX_Size() int {
	return xxx_messageInfo_GiveAwayRequest.Size(m)
}
func (m *GiveAwayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GiveAwayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GiveAwayRequest proto.InternalMessageInfo

func (m *GiveAwayRequest) GetToBeGiveAwayShortId() string {
	if m != nil {
		return m.ToBeGiveAwayShortId
	}
	return ""
}

func (m *GiveAwayRequest) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

// 赠送功能返回
type GiveAwayReply struct {
	// 是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GiveAwayReply) Reset()         { *m = GiveAwayReply{} }
func (m *GiveAwayReply) String() string { return proto.CompactTextString(m) }
func (*GiveAwayReply) ProtoMessage()    {}
func (*GiveAwayReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{815}
}

func (m *GiveAwayReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GiveAwayReply.Unmarshal(m, b)
}
func (m *GiveAwayReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GiveAwayReply.Marshal(b, m, deterministic)
}
func (m *GiveAwayReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GiveAwayReply.Merge(m, src)
}
func (m *GiveAwayReply) XXX_Size() int {
	return xxx_messageInfo_GiveAwayReply.Size(m)
}
func (m *GiveAwayReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GiveAwayReply.DiscardUnknown(m)
}

var xxx_messageInfo_GiveAwayReply proto.InternalMessageInfo

func (m *GiveAwayReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 根据shortId获取玩家信息请求
type GetPlayerInfoByShortIdRequest struct {
	ShortIds             []string `protobuf:"bytes,1,rep,name=ShortIds,proto3" json:"ShortIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlayerInfoByShortIdRequest) Reset()         { *m = GetPlayerInfoByShortIdRequest{} }
func (m *GetPlayerInfoByShortIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlayerInfoByShortIdRequest) ProtoMessage()    {}
func (*GetPlayerInfoByShortIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{816}
}

func (m *GetPlayerInfoByShortIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlayerInfoByShortIdRequest.Unmarshal(m, b)
}
func (m *GetPlayerInfoByShortIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlayerInfoByShortIdRequest.Marshal(b, m, deterministic)
}
func (m *GetPlayerInfoByShortIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlayerInfoByShortIdRequest.Merge(m, src)
}
func (m *GetPlayerInfoByShortIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetPlayerInfoByShortIdRequest.Size(m)
}
func (m *GetPlayerInfoByShortIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlayerInfoByShortIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlayerInfoByShortIdRequest proto.InternalMessageInfo

func (m *GetPlayerInfoByShortIdRequest) GetShortIds() []string {
	if m != nil {
		return m.ShortIds
	}
	return nil
}

// 根据shortId获取玩家信息回执
type GetPlayerInfoByShortIdReply struct {
	PlayerInfos          []*PlayerInfo `protobuf:"bytes,1,rep,name=PlayerInfos,proto3" json:"PlayerInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetPlayerInfoByShortIdReply) Reset()         { *m = GetPlayerInfoByShortIdReply{} }
func (m *GetPlayerInfoByShortIdReply) String() string { return proto.CompactTextString(m) }
func (*GetPlayerInfoByShortIdReply) ProtoMessage()    {}
func (*GetPlayerInfoByShortIdReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{817}
}

func (m *GetPlayerInfoByShortIdReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlayerInfoByShortIdReply.Unmarshal(m, b)
}
func (m *GetPlayerInfoByShortIdReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlayerInfoByShortIdReply.Marshal(b, m, deterministic)
}
func (m *GetPlayerInfoByShortIdReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlayerInfoByShortIdReply.Merge(m, src)
}
func (m *GetPlayerInfoByShortIdReply) XXX_Size() int {
	return xxx_messageInfo_GetPlayerInfoByShortIdReply.Size(m)
}
func (m *GetPlayerInfoByShortIdReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlayerInfoByShortIdReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlayerInfoByShortIdReply proto.InternalMessageInfo

func (m *GetPlayerInfoByShortIdReply) GetPlayerInfos() []*PlayerInfo {
	if m != nil {
		return m.PlayerInfos
	}
	return nil
}

// 修改玩家头像申请
type ReHeadImgUrlRequest struct {
	// 新的头像
	NewHeadImgUrl        string   `protobuf:"bytes,1,opt,name=newHeadImgUrl,proto3" json:"newHeadImgUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReHeadImgUrlRequest) Reset()         { *m = ReHeadImgUrlRequest{} }
func (m *ReHeadImgUrlRequest) String() string { return proto.CompactTextString(m) }
func (*ReHeadImgUrlRequest) ProtoMessage()    {}
func (*ReHeadImgUrlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{818}
}

func (m *ReHeadImgUrlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReHeadImgUrlRequest.Unmarshal(m, b)
}
func (m *ReHeadImgUrlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReHeadImgUrlRequest.Marshal(b, m, deterministic)
}
func (m *ReHeadImgUrlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReHeadImgUrlRequest.Merge(m, src)
}
func (m *ReHeadImgUrlRequest) XXX_Size() int {
	return xxx_messageInfo_ReHeadImgUrlRequest.Size(m)
}
func (m *ReHeadImgUrlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReHeadImgUrlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReHeadImgUrlRequest proto.InternalMessageInfo

func (m *ReHeadImgUrlRequest) GetNewHeadImgUrl() string {
	if m != nil {
		return m.NewHeadImgUrl
	}
	return ""
}

// 修改玩家头像回复
type ReHeadImgUrlReply struct {
	// 新的头像
	NewHeadImgUrl string `protobuf:"bytes,1,opt,name=newHeadImgUrl,proto3" json:"newHeadImgUrl,omitempty"`
	// 是否成功
	IsSuccess            bool     `protobuf:"varint,2,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReHeadImgUrlReply) Reset()         { *m = ReHeadImgUrlReply{} }
func (m *ReHeadImgUrlReply) String() string { return proto.CompactTextString(m) }
func (*ReHeadImgUrlReply) ProtoMessage()    {}
func (*ReHeadImgUrlReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{819}
}

func (m *ReHeadImgUrlReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReHeadImgUrlReply.Unmarshal(m, b)
}
func (m *ReHeadImgUrlReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReHeadImgUrlReply.Marshal(b, m, deterministic)
}
func (m *ReHeadImgUrlReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReHeadImgUrlReply.Merge(m, src)
}
func (m *ReHeadImgUrlReply) XXX_Size() int {
	return xxx_messageInfo_ReHeadImgUrlReply.Size(m)
}
func (m *ReHeadImgUrlReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReHeadImgUrlReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReHeadImgUrlReply proto.InternalMessageInfo

func (m *ReHeadImgUrlReply) GetNewHeadImgUrl() string {
	if m != nil {
		return m.NewHeadImgUrl
	}
	return ""
}

func (m *ReHeadImgUrlReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 修改玩家名字申请
type ReNameRequest struct {
	// 新的名字
	NewName              string   `protobuf:"bytes,1,opt,name=newName,proto3" json:"newName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReNameRequest) Reset()         { *m = ReNameRequest{} }
func (m *ReNameRequest) String() string { return proto.CompactTextString(m) }
func (*ReNameRequest) ProtoMessage()    {}
func (*ReNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{820}
}

func (m *ReNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReNameRequest.Unmarshal(m, b)
}
func (m *ReNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReNameRequest.Marshal(b, m, deterministic)
}
func (m *ReNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReNameRequest.Merge(m, src)
}
func (m *ReNameRequest) XXX_Size() int {
	return xxx_messageInfo_ReNameRequest.Size(m)
}
func (m *ReNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReNameRequest proto.InternalMessageInfo

func (m *ReNameRequest) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

// 修改玩家头像回复
type ReNameReply struct {
	// 新的名字
	NewName string `protobuf:"bytes,1,opt,name=newName,proto3" json:"newName,omitempty"`
	// 是否成功
	IsSuccess            bool     `protobuf:"varint,2,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReNameReply) Reset()         { *m = ReNameReply{} }
func (m *ReNameReply) String() string { return proto.CompactTextString(m) }
func (*ReNameReply) ProtoMessage()    {}
func (*ReNameReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{821}
}

func (m *ReNameReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReNameReply.Unmarshal(m, b)
}
func (m *ReNameReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReNameReply.Marshal(b, m, deterministic)
}
func (m *ReNameReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReNameReply.Merge(m, src)
}
func (m *ReNameReply) XXX_Size() int {
	return xxx_messageInfo_ReNameReply.Size(m)
}
func (m *ReNameReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReNameReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReNameReply proto.InternalMessageInfo

func (m *ReNameReply) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

func (m *ReNameReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 银行存钱申请
type BankSaveMoneyRequest struct {
	// 存好多钱
	Balance int64 `protobuf:"varint,1,opt,name=Balance,proto3" json:"Balance,omitempty"`
	// 银行密码
	BankPassword         string   `protobuf:"bytes,2,opt,name=BankPassword,proto3" json:"BankPassword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankSaveMoneyRequest) Reset()         { *m = BankSaveMoneyRequest{} }
func (m *BankSaveMoneyRequest) String() string { return proto.CompactTextString(m) }
func (*BankSaveMoneyRequest) ProtoMessage()    {}
func (*BankSaveMoneyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{822}
}

func (m *BankSaveMoneyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankSaveMoneyRequest.Unmarshal(m, b)
}
func (m *BankSaveMoneyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankSaveMoneyRequest.Marshal(b, m, deterministic)
}
func (m *BankSaveMoneyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankSaveMoneyRequest.Merge(m, src)
}
func (m *BankSaveMoneyRequest) XXX_Size() int {
	return xxx_messageInfo_BankSaveMoneyRequest.Size(m)
}
func (m *BankSaveMoneyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BankSaveMoneyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BankSaveMoneyRequest proto.InternalMessageInfo

func (m *BankSaveMoneyRequest) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *BankSaveMoneyRequest) GetBankPassword() string {
	if m != nil {
		return m.BankPassword
	}
	return ""
}

// 银行存钱回复
type BankSaveMoneyReply struct {
	// 是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 银行现在多少钱
	Balance              int64    `protobuf:"varint,2,opt,name=Balance,proto3" json:"Balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankSaveMoneyReply) Reset()         { *m = BankSaveMoneyReply{} }
func (m *BankSaveMoneyReply) String() string { return proto.CompactTextString(m) }
func (*BankSaveMoneyReply) ProtoMessage()    {}
func (*BankSaveMoneyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{823}
}

func (m *BankSaveMoneyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankSaveMoneyReply.Unmarshal(m, b)
}
func (m *BankSaveMoneyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankSaveMoneyReply.Marshal(b, m, deterministic)
}
func (m *BankSaveMoneyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankSaveMoneyReply.Merge(m, src)
}
func (m *BankSaveMoneyReply) XXX_Size() int {
	return xxx_messageInfo_BankSaveMoneyReply.Size(m)
}
func (m *BankSaveMoneyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BankSaveMoneyReply.DiscardUnknown(m)
}

var xxx_messageInfo_BankSaveMoneyReply proto.InternalMessageInfo

func (m *BankSaveMoneyReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *BankSaveMoneyReply) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

// 银行取钱申请
type BankWithDrawMoneyRequest struct {
	// 取好多钱
	Balance int64 `protobuf:"varint,1,opt,name=Balance,proto3" json:"Balance,omitempty"`
	// 银行密码
	BankPassword         string   `protobuf:"bytes,2,opt,name=BankPassword,proto3" json:"BankPassword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankWithDrawMoneyRequest) Reset()         { *m = BankWithDrawMoneyRequest{} }
func (m *BankWithDrawMoneyRequest) String() string { return proto.CompactTextString(m) }
func (*BankWithDrawMoneyRequest) ProtoMessage()    {}
func (*BankWithDrawMoneyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{824}
}

func (m *BankWithDrawMoneyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankWithDrawMoneyRequest.Unmarshal(m, b)
}
func (m *BankWithDrawMoneyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankWithDrawMoneyRequest.Marshal(b, m, deterministic)
}
func (m *BankWithDrawMoneyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankWithDrawMoneyRequest.Merge(m, src)
}
func (m *BankWithDrawMoneyRequest) XXX_Size() int {
	return xxx_messageInfo_BankWithDrawMoneyRequest.Size(m)
}
func (m *BankWithDrawMoneyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BankWithDrawMoneyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BankWithDrawMoneyRequest proto.InternalMessageInfo

func (m *BankWithDrawMoneyRequest) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *BankWithDrawMoneyRequest) GetBankPassword() string {
	if m != nil {
		return m.BankPassword
	}
	return ""
}

// 银行取钱回复
type BankWithDrawMoneyReply struct {
	// 是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 银行现在多少钱
	Balance              int64    `protobuf:"varint,2,opt,name=Balance,proto3" json:"Balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankWithDrawMoneyReply) Reset()         { *m = BankWithDrawMoneyReply{} }
func (m *BankWithDrawMoneyReply) String() string { return proto.CompactTextString(m) }
func (*BankWithDrawMoneyReply) ProtoMessage()    {}
func (*BankWithDrawMoneyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{825}
}

func (m *BankWithDrawMoneyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankWithDrawMoneyReply.Unmarshal(m, b)
}
func (m *BankWithDrawMoneyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankWithDrawMoneyReply.Marshal(b, m, deterministic)
}
func (m *BankWithDrawMoneyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankWithDrawMoneyReply.Merge(m, src)
}
func (m *BankWithDrawMoneyReply) XXX_Size() int {
	return xxx_messageInfo_BankWithDrawMoneyReply.Size(m)
}
func (m *BankWithDrawMoneyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BankWithDrawMoneyReply.DiscardUnknown(m)
}

var xxx_messageInfo_BankWithDrawMoneyReply proto.InternalMessageInfo

func (m *BankWithDrawMoneyReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *BankWithDrawMoneyReply) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

// 修改银行密码 申请
type UpdateBankPasswordRequest struct {
	// 新密码
	NewPassword string `protobuf:"bytes,1,opt,name=NewPassword,proto3" json:"NewPassword,omitempty"`
	// 旧密码
	OldPassword          string   `protobuf:"bytes,2,opt,name=OldPassword,proto3" json:"OldPassword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBankPasswordRequest) Reset()         { *m = UpdateBankPasswordRequest{} }
func (m *UpdateBankPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBankPasswordRequest) ProtoMessage()    {}
func (*UpdateBankPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{826}
}

func (m *UpdateBankPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBankPasswordRequest.Unmarshal(m, b)
}
func (m *UpdateBankPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBankPasswordRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBankPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBankPasswordRequest.Merge(m, src)
}
func (m *UpdateBankPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBankPasswordRequest.Size(m)
}
func (m *UpdateBankPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBankPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBankPasswordRequest proto.InternalMessageInfo

func (m *UpdateBankPasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

func (m *UpdateBankPasswordRequest) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

// 修改银行密码 回复
type UpdateBankPasswordReply struct {
	// 是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBankPasswordReply) Reset()         { *m = UpdateBankPasswordReply{} }
func (m *UpdateBankPasswordReply) String() string { return proto.CompactTextString(m) }
func (*UpdateBankPasswordReply) ProtoMessage()    {}
func (*UpdateBankPasswordReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{827}
}

func (m *UpdateBankPasswordReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBankPasswordReply.Unmarshal(m, b)
}
func (m *UpdateBankPasswordReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBankPasswordReply.Marshal(b, m, deterministic)
}
func (m *UpdateBankPasswordReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBankPasswordReply.Merge(m, src)
}
func (m *UpdateBankPasswordReply) XXX_Size() int {
	return xxx_messageInfo_UpdateBankPasswordReply.Size(m)
}
func (m *UpdateBankPasswordReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBankPasswordReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBankPasswordReply proto.InternalMessageInfo

func (m *UpdateBankPasswordReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 玩家查询奖池表分数申请
type PlayerGetBonusScoreRequest struct {
	// 游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 游戏场次
	GameScene            int32    `protobuf:"varint,2,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerGetBonusScoreRequest) Reset()         { *m = PlayerGetBonusScoreRequest{} }
func (m *PlayerGetBonusScoreRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerGetBonusScoreRequest) ProtoMessage()    {}
func (*PlayerGetBonusScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{828}
}

func (m *PlayerGetBonusScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerGetBonusScoreRequest.Unmarshal(m, b)
}
func (m *PlayerGetBonusScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerGetBonusScoreRequest.Marshal(b, m, deterministic)
}
func (m *PlayerGetBonusScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerGetBonusScoreRequest.Merge(m, src)
}
func (m *PlayerGetBonusScoreRequest) XXX_Size() int {
	return xxx_messageInfo_PlayerGetBonusScoreRequest.Size(m)
}
func (m *PlayerGetBonusScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerGetBonusScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerGetBonusScoreRequest proto.InternalMessageInfo

func (m *PlayerGetBonusScoreRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *PlayerGetBonusScoreRequest) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

// 玩家查询奖池表分数申请
type PlayerGetBonusScoreReply struct {
	// 游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 游戏场次
	GameScene int32 `protobuf:"varint,2,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	// 普通奖池表分数
	NormalBonus          int64    `protobuf:"varint,3,opt,name=NormalBonus,proto3" json:"NormalBonus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerGetBonusScoreReply) Reset()         { *m = PlayerGetBonusScoreReply{} }
func (m *PlayerGetBonusScoreReply) String() string { return proto.CompactTextString(m) }
func (*PlayerGetBonusScoreReply) ProtoMessage()    {}
func (*PlayerGetBonusScoreReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{829}
}

func (m *PlayerGetBonusScoreReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerGetBonusScoreReply.Unmarshal(m, b)
}
func (m *PlayerGetBonusScoreReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerGetBonusScoreReply.Marshal(b, m, deterministic)
}
func (m *PlayerGetBonusScoreReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerGetBonusScoreReply.Merge(m, src)
}
func (m *PlayerGetBonusScoreReply) XXX_Size() int {
	return xxx_messageInfo_PlayerGetBonusScoreReply.Size(m)
}
func (m *PlayerGetBonusScoreReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerGetBonusScoreReply.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerGetBonusScoreReply proto.InternalMessageInfo

func (m *PlayerGetBonusScoreReply) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *PlayerGetBonusScoreReply) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *PlayerGetBonusScoreReply) GetNormalBonus() int64 {
	if m != nil {
		return m.NormalBonus
	}
	return 0
}

//订单信息
type MysqlOrderInfo struct {
	AutoId     uint64 `protobuf:"varint,1,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`
	Uuid       string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	PlayerUuid string `protobuf:"bytes,3,opt,name=player_uuid,json=playerUuid,proto3" json:"player_uuid,omitempty"`
	TxnId      string `protobuf:"bytes,4,opt,name=txn_id,json=txnId,proto3" json:"txn_id,omitempty"`
	//订单金额
	OrderAmount float32 `protobuf:"fixed32,5,opt,name=order_amount,json=orderAmount,proto3" json:"order_amount,omitempty"`
	//订单状态
	OrderState OrderStatus `protobuf:"varint,6,opt,name=order_state,json=orderState,proto3,enum=OrderStatus" json:"order_state,omitempty"`
	//商品类型
	ProductType ProductType `protobuf:"varint,7,opt,name=product_type,json=productType,proto3,enum=ProductType" json:"product_type,omitempty"`
	//商品数量
	ProductNum int64 `protobuf:"varint,8,opt,name=product_num,json=productNum,proto3" json:"product_num,omitempty"`
	//商品uuid
	ProductUuid string `protobuf:"bytes,9,opt,name=product_uuid,json=productUuid,proto3" json:"product_uuid,omitempty"`
	//支付通道编号
	Channel    PayMentChannel `protobuf:"varint,10,opt,name=channel,proto3,enum=PayMentChannel" json:"channel,omitempty"`
	CreateTime int64          `protobuf:"varint,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime int64          `protobuf:"varint,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Remark     string         `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`
	//订单币种
	Currency             Currency `protobuf:"varint,14,opt,name=Currency,proto3,enum=Currency" json:"Currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MysqlOrderInfo) Reset()         { *m = MysqlOrderInfo{} }
func (m *MysqlOrderInfo) String() string { return proto.CompactTextString(m) }
func (*MysqlOrderInfo) ProtoMessage()    {}
func (*MysqlOrderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{830}
}

func (m *MysqlOrderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlOrderInfo.Unmarshal(m, b)
}
func (m *MysqlOrderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlOrderInfo.Marshal(b, m, deterministic)
}
func (m *MysqlOrderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlOrderInfo.Merge(m, src)
}
func (m *MysqlOrderInfo) XXX_Size() int {
	return xxx_messageInfo_MysqlOrderInfo.Size(m)
}
func (m *MysqlOrderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlOrderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlOrderInfo proto.InternalMessageInfo

func (m *MysqlOrderInfo) GetAutoId() uint64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *MysqlOrderInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *MysqlOrderInfo) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *MysqlOrderInfo) GetTxnId() string {
	if m != nil {
		return m.TxnId
	}
	return ""
}

func (m *MysqlOrderInfo) GetOrderAmount() float32 {
	if m != nil {
		return m.OrderAmount
	}
	return 0
}

func (m *MysqlOrderInfo) GetOrderState() OrderStatus {
	if m != nil {
		return m.OrderState
	}
	return OrderStatus_OrderStatus_None
}

func (m *MysqlOrderInfo) GetProductType() ProductType {
	if m != nil {
		return m.ProductType
	}
	return ProductType_ProductType_None
}

func (m *MysqlOrderInfo) GetProductNum() int64 {
	if m != nil {
		return m.ProductNum
	}
	return 0
}

func (m *MysqlOrderInfo) GetProductUuid() string {
	if m != nil {
		return m.ProductUuid
	}
	return ""
}

func (m *MysqlOrderInfo) GetChannel() PayMentChannel {
	if m != nil {
		return m.Channel
	}
	return PayMentChannel_PayMentChannel_None
}

func (m *MysqlOrderInfo) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *MysqlOrderInfo) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *MysqlOrderInfo) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *MysqlOrderInfo) GetCurrency() Currency {
	if m != nil {
		return m.Currency
	}
	return Currency_Currency_None
}

// Coda支付回调请求
type CodaPayNotifyRequest struct {
	TxnId                string   `protobuf:"bytes,1,opt,name=TxnId,proto3" json:"TxnId,omitempty"`
	OrderId              string   `protobuf:"bytes,2,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	TotalPrice           float32  `protobuf:"fixed32,3,opt,name=TotalPrice,proto3" json:"TotalPrice,omitempty"`
	PaymentType          string   `protobuf:"bytes,4,opt,name=PaymentType,proto3" json:"PaymentType,omitempty"`
	ResultCode           string   `protobuf:"bytes,5,opt,name=ResultCode,proto3" json:"ResultCode,omitempty"`
	Checksum             string   `protobuf:"bytes,6,opt,name=Checksum,proto3" json:"Checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CodaPayNotifyRequest) Reset()         { *m = CodaPayNotifyRequest{} }
func (m *CodaPayNotifyRequest) String() string { return proto.CompactTextString(m) }
func (*CodaPayNotifyRequest) ProtoMessage()    {}
func (*CodaPayNotifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{831}
}

func (m *CodaPayNotifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodaPayNotifyRequest.Unmarshal(m, b)
}
func (m *CodaPayNotifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodaPayNotifyRequest.Marshal(b, m, deterministic)
}
func (m *CodaPayNotifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodaPayNotifyRequest.Merge(m, src)
}
func (m *CodaPayNotifyRequest) XXX_Size() int {
	return xxx_messageInfo_CodaPayNotifyRequest.Size(m)
}
func (m *CodaPayNotifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CodaPayNotifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CodaPayNotifyRequest proto.InternalMessageInfo

func (m *CodaPayNotifyRequest) GetTxnId() string {
	if m != nil {
		return m.TxnId
	}
	return ""
}

func (m *CodaPayNotifyRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *CodaPayNotifyRequest) GetTotalPrice() float32 {
	if m != nil {
		return m.TotalPrice
	}
	return 0
}

func (m *CodaPayNotifyRequest) GetPaymentType() string {
	if m != nil {
		return m.PaymentType
	}
	return ""
}

func (m *CodaPayNotifyRequest) GetResultCode() string {
	if m != nil {
		return m.ResultCode
	}
	return ""
}

func (m *CodaPayNotifyRequest) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

// 支付回调请求回执
type PayNotifyReply struct {
	//是否处理成功
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayNotifyReply) Reset()         { *m = PayNotifyReply{} }
func (m *PayNotifyReply) String() string { return proto.CompactTextString(m) }
func (*PayNotifyReply) ProtoMessage()    {}
func (*PayNotifyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{832}
}

func (m *PayNotifyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayNotifyReply.Unmarshal(m, b)
}
func (m *PayNotifyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayNotifyReply.Marshal(b, m, deterministic)
}
func (m *PayNotifyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayNotifyReply.Merge(m, src)
}
func (m *PayNotifyReply) XXX_Size() int {
	return xxx_messageInfo_PayNotifyReply.Size(m)
}
func (m *PayNotifyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PayNotifyReply.DiscardUnknown(m)
}

var xxx_messageInfo_PayNotifyReply proto.InternalMessageInfo

func (m *PayNotifyReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// 下单回执
type CreateOrderReply struct {
	//支付链接地址
	PayUrl               string   `protobuf:"bytes,1,opt,name=payUrl,proto3" json:"payUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrderReply) Reset()         { *m = CreateOrderReply{} }
func (m *CreateOrderReply) String() string { return proto.CompactTextString(m) }
func (*CreateOrderReply) ProtoMessage()    {}
func (*CreateOrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{833}
}

func (m *CreateOrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrderReply.Unmarshal(m, b)
}
func (m *CreateOrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrderReply.Marshal(b, m, deterministic)
}
func (m *CreateOrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrderReply.Merge(m, src)
}
func (m *CreateOrderReply) XXX_Size() int {
	return xxx_messageInfo_CreateOrderReply.Size(m)
}
func (m *CreateOrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrderReply proto.InternalMessageInfo

func (m *CreateOrderReply) GetPayUrl() string {
	if m != nil {
		return m.PayUrl
	}
	return ""
}

// Coda支付通道，获取TxnId回执
type GetTxnIdReply struct {
	ResultCode           string   `protobuf:"bytes,1,opt,name=resultCode,proto3" json:"resultCode,omitempty"`
	TxnId                string   `protobuf:"bytes,2,opt,name=txnId,proto3" json:"txnId,omitempty"`
	PayUrl               string   `protobuf:"bytes,3,opt,name=payUrl,proto3" json:"payUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTxnIdReply) Reset()         { *m = GetTxnIdReply{} }
func (m *GetTxnIdReply) String() string { return proto.CompactTextString(m) }
func (*GetTxnIdReply) ProtoMessage()    {}
func (*GetTxnIdReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{834}
}

func (m *GetTxnIdReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTxnIdReply.Unmarshal(m, b)
}
func (m *GetTxnIdReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTxnIdReply.Marshal(b, m, deterministic)
}
func (m *GetTxnIdReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTxnIdReply.Merge(m, src)
}
func (m *GetTxnIdReply) XXX_Size() int {
	return xxx_messageInfo_GetTxnIdReply.Size(m)
}
func (m *GetTxnIdReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTxnIdReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTxnIdReply proto.InternalMessageInfo

func (m *GetTxnIdReply) GetResultCode() string {
	if m != nil {
		return m.ResultCode
	}
	return ""
}

func (m *GetTxnIdReply) GetTxnId() string {
	if m != nil {
		return m.TxnId
	}
	return ""
}

func (m *GetTxnIdReply) GetPayUrl() string {
	if m != nil {
		return m.PayUrl
	}
	return ""
}

//获取公告信息
type GetNoticeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNoticeRequest) Reset()         { *m = GetNoticeRequest{} }
func (m *GetNoticeRequest) String() string { return proto.CompactTextString(m) }
func (*GetNoticeRequest) ProtoMessage()    {}
func (*GetNoticeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{835}
}

func (m *GetNoticeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNoticeRequest.Unmarshal(m, b)
}
func (m *GetNoticeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNoticeRequest.Marshal(b, m, deterministic)
}
func (m *GetNoticeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNoticeRequest.Merge(m, src)
}
func (m *GetNoticeRequest) XXX_Size() int {
	return xxx_messageInfo_GetNoticeRequest.Size(m)
}
func (m *GetNoticeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNoticeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNoticeRequest proto.InternalMessageInfo

//获取公告回执
type GetNoticeReply struct {
	Data                 []*Notice `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetNoticeReply) Reset()         { *m = GetNoticeReply{} }
func (m *GetNoticeReply) String() string { return proto.CompactTextString(m) }
func (*GetNoticeReply) ProtoMessage()    {}
func (*GetNoticeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{836}
}

func (m *GetNoticeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNoticeReply.Unmarshal(m, b)
}
func (m *GetNoticeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNoticeReply.Marshal(b, m, deterministic)
}
func (m *GetNoticeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNoticeReply.Merge(m, src)
}
func (m *GetNoticeReply) XXX_Size() int {
	return xxx_messageInfo_GetNoticeReply.Size(m)
}
func (m *GetNoticeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNoticeReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetNoticeReply proto.InternalMessageInfo

func (m *GetNoticeReply) GetData() []*Notice {
	if m != nil {
		return m.Data
	}
	return nil
}

//公告详细信息
type Notice struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CreateTime           int64    `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           int64    `protobuf:"varint,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Hide                 int64    `protobuf:"varint,6,opt,name=hide,proto3" json:"hide,omitempty"`
	OrderSort            int64    `protobuf:"varint,7,opt,name=order_sort,json=orderSort,proto3" json:"order_sort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Notice) Reset()         { *m = Notice{} }
func (m *Notice) String() string { return proto.CompactTextString(m) }
func (*Notice) ProtoMessage()    {}
func (*Notice) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{837}
}

func (m *Notice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notice.Unmarshal(m, b)
}
func (m *Notice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notice.Marshal(b, m, deterministic)
}
func (m *Notice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notice.Merge(m, src)
}
func (m *Notice) XXX_Size() int {
	return xxx_messageInfo_Notice.Size(m)
}
func (m *Notice) XXX_DiscardUnknown() {
	xxx_messageInfo_Notice.DiscardUnknown(m)
}

var xxx_messageInfo_Notice proto.InternalMessageInfo

func (m *Notice) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Notice) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Notice) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Notice) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Notice) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *Notice) GetHide() int64 {
	if m != nil {
		return m.Hide
	}
	return 0
}

func (m *Notice) GetOrderSort() int64 {
	if m != nil {
		return m.OrderSort
	}
	return 0
}

//玩家赢钱推送跑马灯请求
type HorseRaceLampWinPlayer struct {
	PlayerInfos          *PlayerInfo `protobuf:"bytes,1,opt,name=PlayerInfos,proto3" json:"PlayerInfos,omitempty"`
	Num                  int64       `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *HorseRaceLampWinPlayer) Reset()         { *m = HorseRaceLampWinPlayer{} }
func (m *HorseRaceLampWinPlayer) String() string { return proto.CompactTextString(m) }
func (*HorseRaceLampWinPlayer) ProtoMessage()    {}
func (*HorseRaceLampWinPlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{838}
}

func (m *HorseRaceLampWinPlayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorseRaceLampWinPlayer.Unmarshal(m, b)
}
func (m *HorseRaceLampWinPlayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorseRaceLampWinPlayer.Marshal(b, m, deterministic)
}
func (m *HorseRaceLampWinPlayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorseRaceLampWinPlayer.Merge(m, src)
}
func (m *HorseRaceLampWinPlayer) XXX_Size() int {
	return xxx_messageInfo_HorseRaceLampWinPlayer.Size(m)
}
func (m *HorseRaceLampWinPlayer) XXX_DiscardUnknown() {
	xxx_messageInfo_HorseRaceLampWinPlayer.DiscardUnknown(m)
}

var xxx_messageInfo_HorseRaceLampWinPlayer proto.InternalMessageInfo

func (m *HorseRaceLampWinPlayer) GetPlayerInfos() *PlayerInfo {
	if m != nil {
		return m.PlayerInfos
	}
	return nil
}

func (m *HorseRaceLampWinPlayer) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

//打旋游戏 房间创建跑马灯推送
type HorseRaceLampCreateRoomRequest struct {
	//房间id
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HorseRaceLampCreateRoomRequest) Reset()         { *m = HorseRaceLampCreateRoomRequest{} }
func (m *HorseRaceLampCreateRoomRequest) String() string { return proto.CompactTextString(m) }
func (*HorseRaceLampCreateRoomRequest) ProtoMessage()    {}
func (*HorseRaceLampCreateRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{839}
}

func (m *HorseRaceLampCreateRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorseRaceLampCreateRoomRequest.Unmarshal(m, b)
}
func (m *HorseRaceLampCreateRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorseRaceLampCreateRoomRequest.Marshal(b, m, deterministic)
}
func (m *HorseRaceLampCreateRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorseRaceLampCreateRoomRequest.Merge(m, src)
}
func (m *HorseRaceLampCreateRoomRequest) XXX_Size() int {
	return xxx_messageInfo_HorseRaceLampCreateRoomRequest.Size(m)
}
func (m *HorseRaceLampCreateRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HorseRaceLampCreateRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HorseRaceLampCreateRoomRequest proto.InternalMessageInfo

func (m *HorseRaceLampCreateRoomRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

//打旋游戏 中奖推送
type HorseRaceLampPrizeRequest struct {
	PlayerInfos          *RoomPlayerInfo `protobuf:"bytes,1,opt,name=PlayerInfos,proto3" json:"PlayerInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *HorseRaceLampPrizeRequest) Reset()         { *m = HorseRaceLampPrizeRequest{} }
func (m *HorseRaceLampPrizeRequest) String() string { return proto.CompactTextString(m) }
func (*HorseRaceLampPrizeRequest) ProtoMessage()    {}
func (*HorseRaceLampPrizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{840}
}

func (m *HorseRaceLampPrizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorseRaceLampPrizeRequest.Unmarshal(m, b)
}
func (m *HorseRaceLampPrizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorseRaceLampPrizeRequest.Marshal(b, m, deterministic)
}
func (m *HorseRaceLampPrizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorseRaceLampPrizeRequest.Merge(m, src)
}
func (m *HorseRaceLampPrizeRequest) XXX_Size() int {
	return xxx_messageInfo_HorseRaceLampPrizeRequest.Size(m)
}
func (m *HorseRaceLampPrizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HorseRaceLampPrizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HorseRaceLampPrizeRequest proto.InternalMessageInfo

func (m *HorseRaceLampPrizeRequest) GetPlayerInfos() *RoomPlayerInfo {
	if m != nil {
		return m.PlayerInfos
	}
	return nil
}

//打旋游戏 中奖回执
type HorseRaceLampPrizeReply struct {
	IsSuccess bool `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	//当前服务器时间戳
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HorseRaceLampPrizeReply) Reset()         { *m = HorseRaceLampPrizeReply{} }
func (m *HorseRaceLampPrizeReply) String() string { return proto.CompactTextString(m) }
func (*HorseRaceLampPrizeReply) ProtoMessage()    {}
func (*HorseRaceLampPrizeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{841}
}

func (m *HorseRaceLampPrizeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorseRaceLampPrizeReply.Unmarshal(m, b)
}
func (m *HorseRaceLampPrizeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorseRaceLampPrizeReply.Marshal(b, m, deterministic)
}
func (m *HorseRaceLampPrizeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorseRaceLampPrizeReply.Merge(m, src)
}
func (m *HorseRaceLampPrizeReply) XXX_Size() int {
	return xxx_messageInfo_HorseRaceLampPrizeReply.Size(m)
}
func (m *HorseRaceLampPrizeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HorseRaceLampPrizeReply.DiscardUnknown(m)
}

var xxx_messageInfo_HorseRaceLampPrizeReply proto.InternalMessageInfo

func (m *HorseRaceLampPrizeReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *HorseRaceLampPrizeReply) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

//打旋游戏 房间创建跑马灯回执
type HorseRaceLampCreateRoomReply struct {
	IsSuccess bool `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	//当前服务器时间戳
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HorseRaceLampCreateRoomReply) Reset()         { *m = HorseRaceLampCreateRoomReply{} }
func (m *HorseRaceLampCreateRoomReply) String() string { return proto.CompactTextString(m) }
func (*HorseRaceLampCreateRoomReply) ProtoMessage()    {}
func (*HorseRaceLampCreateRoomReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{842}
}

func (m *HorseRaceLampCreateRoomReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorseRaceLampCreateRoomReply.Unmarshal(m, b)
}
func (m *HorseRaceLampCreateRoomReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorseRaceLampCreateRoomReply.Marshal(b, m, deterministic)
}
func (m *HorseRaceLampCreateRoomReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorseRaceLampCreateRoomReply.Merge(m, src)
}
func (m *HorseRaceLampCreateRoomReply) XXX_Size() int {
	return xxx_messageInfo_HorseRaceLampCreateRoomReply.Size(m)
}
func (m *HorseRaceLampCreateRoomReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HorseRaceLampCreateRoomReply.DiscardUnknown(m)
}

var xxx_messageInfo_HorseRaceLampCreateRoomReply proto.InternalMessageInfo

func (m *HorseRaceLampCreateRoomReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *HorseRaceLampCreateRoomReply) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

//玩家赢钱普通推送
type HorseRaceLampWiner struct {
	//玩家昵称
	PlayerName string `protobuf:"bytes,1,opt,name=playerName,proto3" json:"playerName,omitempty"`
	//游戏类型
	GameType GameType `protobuf:"varint,2,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	//赢得的钱
	WinMoney             int64    `protobuf:"varint,3,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HorseRaceLampWiner) Reset()         { *m = HorseRaceLampWiner{} }
func (m *HorseRaceLampWiner) String() string { return proto.CompactTextString(m) }
func (*HorseRaceLampWiner) ProtoMessage()    {}
func (*HorseRaceLampWiner) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{843}
}

func (m *HorseRaceLampWiner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorseRaceLampWiner.Unmarshal(m, b)
}
func (m *HorseRaceLampWiner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorseRaceLampWiner.Marshal(b, m, deterministic)
}
func (m *HorseRaceLampWiner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorseRaceLampWiner.Merge(m, src)
}
func (m *HorseRaceLampWiner) XXX_Size() int {
	return xxx_messageInfo_HorseRaceLampWiner.Size(m)
}
func (m *HorseRaceLampWiner) XXX_DiscardUnknown() {
	xxx_messageInfo_HorseRaceLampWiner.DiscardUnknown(m)
}

var xxx_messageInfo_HorseRaceLampWiner proto.InternalMessageInfo

func (m *HorseRaceLampWiner) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *HorseRaceLampWiner) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *HorseRaceLampWiner) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

//添加跑马灯信息回执
type HorseRaceLampReply struct {
	IsSuccess bool `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	//当前服务器时间戳
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HorseRaceLampReply) Reset()         { *m = HorseRaceLampReply{} }
func (m *HorseRaceLampReply) String() string { return proto.CompactTextString(m) }
func (*HorseRaceLampReply) ProtoMessage()    {}
func (*HorseRaceLampReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{844}
}

func (m *HorseRaceLampReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HorseRaceLampReply.Unmarshal(m, b)
}
func (m *HorseRaceLampReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HorseRaceLampReply.Marshal(b, m, deterministic)
}
func (m *HorseRaceLampReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HorseRaceLampReply.Merge(m, src)
}
func (m *HorseRaceLampReply) XXX_Size() int {
	return xxx_messageInfo_HorseRaceLampReply.Size(m)
}
func (m *HorseRaceLampReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HorseRaceLampReply.DiscardUnknown(m)
}

var xxx_messageInfo_HorseRaceLampReply proto.InternalMessageInfo

func (m *HorseRaceLampReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *HorseRaceLampReply) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

//添加公告信息回执
type NoticeReply struct {
	IsSuccess            bool     `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoticeReply) Reset()         { *m = NoticeReply{} }
func (m *NoticeReply) String() string { return proto.CompactTextString(m) }
func (*NoticeReply) ProtoMessage()    {}
func (*NoticeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{845}
}

func (m *NoticeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoticeReply.Unmarshal(m, b)
}
func (m *NoticeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoticeReply.Marshal(b, m, deterministic)
}
func (m *NoticeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoticeReply.Merge(m, src)
}
func (m *NoticeReply) XXX_Size() int {
	return xxx_messageInfo_NoticeReply.Size(m)
}
func (m *NoticeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NoticeReply.DiscardUnknown(m)
}

var xxx_messageInfo_NoticeReply proto.InternalMessageInfo

func (m *NoticeReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 分页查询订单请求
type GetOrderPageListRequest struct {
	PageIndex int32 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize  int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	//玩家的shortID
	ShortId    string      `protobuf:"bytes,3,opt,name=shortId,proto3" json:"shortId,omitempty"`
	OrderState OrderStatus `protobuf:"varint,6,opt,name=order_state,json=orderState,proto3,enum=OrderStatus" json:"order_state,omitempty"`
	//商品类型
	ProductType          ProductType `protobuf:"varint,7,opt,name=product_type,json=productType,proto3,enum=ProductType" json:"product_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetOrderPageListRequest) Reset()         { *m = GetOrderPageListRequest{} }
func (m *GetOrderPageListRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrderPageListRequest) ProtoMessage()    {}
func (*GetOrderPageListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{846}
}

func (m *GetOrderPageListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrderPageListRequest.Unmarshal(m, b)
}
func (m *GetOrderPageListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrderPageListRequest.Marshal(b, m, deterministic)
}
func (m *GetOrderPageListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrderPageListRequest.Merge(m, src)
}
func (m *GetOrderPageListRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrderPageListRequest.Size(m)
}
func (m *GetOrderPageListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrderPageListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrderPageListRequest proto.InternalMessageInfo

func (m *GetOrderPageListRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetOrderPageListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetOrderPageListRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *GetOrderPageListRequest) GetOrderState() OrderStatus {
	if m != nil {
		return m.OrderState
	}
	return OrderStatus_OrderStatus_None
}

func (m *GetOrderPageListRequest) GetProductType() ProductType {
	if m != nil {
		return m.ProductType
	}
	return ProductType_ProductType_None
}

// 分页查询订单回执
type GetOrderPageListReply struct {
	PageIndex            int32               `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize             int32               `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RecordCount          int32               `protobuf:"varint,3,opt,name=RecordCount,proto3" json:"RecordCount,omitempty"`
	Data                 []*OrderDetailReply `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetOrderPageListReply) Reset()         { *m = GetOrderPageListReply{} }
func (m *GetOrderPageListReply) String() string { return proto.CompactTextString(m) }
func (*GetOrderPageListReply) ProtoMessage()    {}
func (*GetOrderPageListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{847}
}

func (m *GetOrderPageListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrderPageListReply.Unmarshal(m, b)
}
func (m *GetOrderPageListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrderPageListReply.Marshal(b, m, deterministic)
}
func (m *GetOrderPageListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrderPageListReply.Merge(m, src)
}
func (m *GetOrderPageListReply) XXX_Size() int {
	return xxx_messageInfo_GetOrderPageListReply.Size(m)
}
func (m *GetOrderPageListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrderPageListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrderPageListReply proto.InternalMessageInfo

func (m *GetOrderPageListReply) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *GetOrderPageListReply) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetOrderPageListReply) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *GetOrderPageListReply) GetData() []*OrderDetailReply {
	if m != nil {
		return m.Data
	}
	return nil
}

// 订单详细信息
type OrderDetailReply struct {
	//玩家的shortID
	ShortId    string `protobuf:"bytes,3,opt,name=shortId,proto3" json:"shortId,omitempty"`
	AutoId     uint64 `protobuf:"varint,4,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`
	Uuid       string `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	PlayerUuid string `protobuf:"bytes,6,opt,name=player_uuid,json=playerUuid,proto3" json:"player_uuid,omitempty"`
	TxnId      string `protobuf:"bytes,7,opt,name=txn_id,json=txnId,proto3" json:"txn_id,omitempty"`
	//订单金额
	OrderAmount float32 `protobuf:"fixed32,8,opt,name=order_amount,json=orderAmount,proto3" json:"order_amount,omitempty"`
	//订单状态
	OrderState OrderStatus `protobuf:"varint,9,opt,name=order_state,json=orderState,proto3,enum=OrderStatus" json:"order_state,omitempty"`
	//商品类型
	ProductType ProductType `protobuf:"varint,10,opt,name=product_type,json=productType,proto3,enum=ProductType" json:"product_type,omitempty"`
	//商品数量
	ProductNum int64 `protobuf:"varint,11,opt,name=product_num,json=productNum,proto3" json:"product_num,omitempty"`
	//商品uuid
	ProductUuid string `protobuf:"bytes,12,opt,name=product_uuid,json=productUuid,proto3" json:"product_uuid,omitempty"`
	//支付通道编号
	Channel    PayMentChannel `protobuf:"varint,13,opt,name=channel,proto3,enum=PayMentChannel" json:"channel,omitempty"`
	CreateTime int64          `protobuf:"varint,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime int64          `protobuf:"varint,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Remark     string         `protobuf:"bytes,16,opt,name=remark,proto3" json:"remark,omitempty"`
	//订单币种
	Currency             Currency `protobuf:"varint,17,opt,name=Currency,proto3,enum=Currency" json:"Currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderDetailReply) Reset()         { *m = OrderDetailReply{} }
func (m *OrderDetailReply) String() string { return proto.CompactTextString(m) }
func (*OrderDetailReply) ProtoMessage()    {}
func (*OrderDetailReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{848}
}

func (m *OrderDetailReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderDetailReply.Unmarshal(m, b)
}
func (m *OrderDetailReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderDetailReply.Marshal(b, m, deterministic)
}
func (m *OrderDetailReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderDetailReply.Merge(m, src)
}
func (m *OrderDetailReply) XXX_Size() int {
	return xxx_messageInfo_OrderDetailReply.Size(m)
}
func (m *OrderDetailReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderDetailReply.DiscardUnknown(m)
}

var xxx_messageInfo_OrderDetailReply proto.InternalMessageInfo

func (m *OrderDetailReply) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *OrderDetailReply) GetAutoId() uint64 {
	if m != nil {
		return m.AutoId
	}
	return 0
}

func (m *OrderDetailReply) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *OrderDetailReply) GetPlayerUuid() string {
	if m != nil {
		return m.PlayerUuid
	}
	return ""
}

func (m *OrderDetailReply) GetTxnId() string {
	if m != nil {
		return m.TxnId
	}
	return ""
}

func (m *OrderDetailReply) GetOrderAmount() float32 {
	if m != nil {
		return m.OrderAmount
	}
	return 0
}

func (m *OrderDetailReply) GetOrderState() OrderStatus {
	if m != nil {
		return m.OrderState
	}
	return OrderStatus_OrderStatus_None
}

func (m *OrderDetailReply) GetProductType() ProductType {
	if m != nil {
		return m.ProductType
	}
	return ProductType_ProductType_None
}

func (m *OrderDetailReply) GetProductNum() int64 {
	if m != nil {
		return m.ProductNum
	}
	return 0
}

func (m *OrderDetailReply) GetProductUuid() string {
	if m != nil {
		return m.ProductUuid
	}
	return ""
}

func (m *OrderDetailReply) GetChannel() PayMentChannel {
	if m != nil {
		return m.Channel
	}
	return PayMentChannel_PayMentChannel_None
}

func (m *OrderDetailReply) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *OrderDetailReply) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *OrderDetailReply) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *OrderDetailReply) GetCurrency() Currency {
	if m != nil {
		return m.Currency
	}
	return Currency_Currency_None
}

// 奖池相关后台操作
// 获取奖池表 (普通奖池表+机器人奖池表) 分数 申请
type GetBonusScoreRequest struct {
	// 游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 游戏场次
	GameScene            int32    `protobuf:"varint,2,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBonusScoreRequest) Reset()         { *m = GetBonusScoreRequest{} }
func (m *GetBonusScoreRequest) String() string { return proto.CompactTextString(m) }
func (*GetBonusScoreRequest) ProtoMessage()    {}
func (*GetBonusScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{849}
}

func (m *GetBonusScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBonusScoreRequest.Unmarshal(m, b)
}
func (m *GetBonusScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBonusScoreRequest.Marshal(b, m, deterministic)
}
func (m *GetBonusScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBonusScoreRequest.Merge(m, src)
}
func (m *GetBonusScoreRequest) XXX_Size() int {
	return xxx_messageInfo_GetBonusScoreRequest.Size(m)
}
func (m *GetBonusScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBonusScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBonusScoreRequest proto.InternalMessageInfo

func (m *GetBonusScoreRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GetBonusScoreRequest) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

// 后台获取奖池表 (普通奖池表+机器人奖池表+系统奖池表) 分数 回复
type GetBonusScoreReply struct {
	// 游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 游戏场次
	GameScene int32 `protobuf:"varint,2,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	// 普通奖池表分数
	NormalBonus int64 `protobuf:"varint,3,opt,name=NormalBonus,proto3" json:"NormalBonus,omitempty"`
	// 机器人奖池表分数
	RobotBonus int64 `protobuf:"varint,4,opt,name=RobotBonus,proto3" json:"RobotBonus,omitempty"`
	// 系统奖金池表分数
	SystemBonus          int64    `protobuf:"varint,5,opt,name=SystemBonus,proto3" json:"SystemBonus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBonusScoreReply) Reset()         { *m = GetBonusScoreReply{} }
func (m *GetBonusScoreReply) String() string { return proto.CompactTextString(m) }
func (*GetBonusScoreReply) ProtoMessage()    {}
func (*GetBonusScoreReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{850}
}

func (m *GetBonusScoreReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBonusScoreReply.Unmarshal(m, b)
}
func (m *GetBonusScoreReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBonusScoreReply.Marshal(b, m, deterministic)
}
func (m *GetBonusScoreReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBonusScoreReply.Merge(m, src)
}
func (m *GetBonusScoreReply) XXX_Size() int {
	return xxx_messageInfo_GetBonusScoreReply.Size(m)
}
func (m *GetBonusScoreReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBonusScoreReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetBonusScoreReply proto.InternalMessageInfo

func (m *GetBonusScoreReply) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *GetBonusScoreReply) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *GetBonusScoreReply) GetNormalBonus() int64 {
	if m != nil {
		return m.NormalBonus
	}
	return 0
}

func (m *GetBonusScoreReply) GetRobotBonus() int64 {
	if m != nil {
		return m.RobotBonus
	}
	return 0
}

func (m *GetBonusScoreReply) GetSystemBonus() int64 {
	if m != nil {
		return m.SystemBonus
	}
	return 0
}

// 增加/减少 机器人奖池表分数 申请
type IncrRobotBonusScoreRequest struct {
	// 游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 游戏场次
	GameScene int32 `protobuf:"varint,2,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	// 分数
	Score                int64    `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncrRobotBonusScoreRequest) Reset()         { *m = IncrRobotBonusScoreRequest{} }
func (m *IncrRobotBonusScoreRequest) String() string { return proto.CompactTextString(m) }
func (*IncrRobotBonusScoreRequest) ProtoMessage()    {}
func (*IncrRobotBonusScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{851}
}

func (m *IncrRobotBonusScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrRobotBonusScoreRequest.Unmarshal(m, b)
}
func (m *IncrRobotBonusScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrRobotBonusScoreRequest.Marshal(b, m, deterministic)
}
func (m *IncrRobotBonusScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrRobotBonusScoreRequest.Merge(m, src)
}
func (m *IncrRobotBonusScoreRequest) XXX_Size() int {
	return xxx_messageInfo_IncrRobotBonusScoreRequest.Size(m)
}
func (m *IncrRobotBonusScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrRobotBonusScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncrRobotBonusScoreRequest proto.InternalMessageInfo

func (m *IncrRobotBonusScoreRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *IncrRobotBonusScoreRequest) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *IncrRobotBonusScoreRequest) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

// 增加/减少 机器人奖池表分数 回复
type IncrRobotBonusScoreReply struct {
	// 是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncrRobotBonusScoreReply) Reset()         { *m = IncrRobotBonusScoreReply{} }
func (m *IncrRobotBonusScoreReply) String() string { return proto.CompactTextString(m) }
func (*IncrRobotBonusScoreReply) ProtoMessage()    {}
func (*IncrRobotBonusScoreReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{852}
}

func (m *IncrRobotBonusScoreReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrRobotBonusScoreReply.Unmarshal(m, b)
}
func (m *IncrRobotBonusScoreReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrRobotBonusScoreReply.Marshal(b, m, deterministic)
}
func (m *IncrRobotBonusScoreReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrRobotBonusScoreReply.Merge(m, src)
}
func (m *IncrRobotBonusScoreReply) XXX_Size() int {
	return xxx_messageInfo_IncrRobotBonusScoreReply.Size(m)
}
func (m *IncrRobotBonusScoreReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrRobotBonusScoreReply.DiscardUnknown(m)
}

var xxx_messageInfo_IncrRobotBonusScoreReply proto.InternalMessageInfo

func (m *IncrRobotBonusScoreReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 增加/减少 奖池表分数 申请
type IncrBonusScoreRequest struct {
	// 游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 游戏场次
	GameScene int32 `protobuf:"varint,2,opt,name=gameScene,proto3" json:"gameScene,omitempty"`
	// 分数
	Score                int64    `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncrBonusScoreRequest) Reset()         { *m = IncrBonusScoreRequest{} }
func (m *IncrBonusScoreRequest) String() string { return proto.CompactTextString(m) }
func (*IncrBonusScoreRequest) ProtoMessage()    {}
func (*IncrBonusScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{853}
}

func (m *IncrBonusScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrBonusScoreRequest.Unmarshal(m, b)
}
func (m *IncrBonusScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrBonusScoreRequest.Marshal(b, m, deterministic)
}
func (m *IncrBonusScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrBonusScoreRequest.Merge(m, src)
}
func (m *IncrBonusScoreRequest) XXX_Size() int {
	return xxx_messageInfo_IncrBonusScoreRequest.Size(m)
}
func (m *IncrBonusScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrBonusScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncrBonusScoreRequest proto.InternalMessageInfo

func (m *IncrBonusScoreRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *IncrBonusScoreRequest) GetGameScene() int32 {
	if m != nil {
		return m.GameScene
	}
	return 0
}

func (m *IncrBonusScoreRequest) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

// 增加/减少 奖池表分数 回复
type IncrBonusScoreReply struct {
	// 是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncrBonusScoreReply) Reset()         { *m = IncrBonusScoreReply{} }
func (m *IncrBonusScoreReply) String() string { return proto.CompactTextString(m) }
func (*IncrBonusScoreReply) ProtoMessage()    {}
func (*IncrBonusScoreReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{854}
}

func (m *IncrBonusScoreReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrBonusScoreReply.Unmarshal(m, b)
}
func (m *IncrBonusScoreReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrBonusScoreReply.Marshal(b, m, deterministic)
}
func (m *IncrBonusScoreReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrBonusScoreReply.Merge(m, src)
}
func (m *IncrBonusScoreReply) XXX_Size() int {
	return xxx_messageInfo_IncrBonusScoreReply.Size(m)
}
func (m *IncrBonusScoreReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrBonusScoreReply.DiscardUnknown(m)
}

var xxx_messageInfo_IncrBonusScoreReply proto.InternalMessageInfo

func (m *IncrBonusScoreReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 奖池配置总览
type AllBonusConfig struct {
	OneConfig            []*OneBonusConfig `protobuf:"bytes,1,rep,name=oneConfig,proto3" json:"oneConfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AllBonusConfig) Reset()         { *m = AllBonusConfig{} }
func (m *AllBonusConfig) String() string { return proto.CompactTextString(m) }
func (*AllBonusConfig) ProtoMessage()    {}
func (*AllBonusConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{855}
}

func (m *AllBonusConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllBonusConfig.Unmarshal(m, b)
}
func (m *AllBonusConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllBonusConfig.Marshal(b, m, deterministic)
}
func (m *AllBonusConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllBonusConfig.Merge(m, src)
}
func (m *AllBonusConfig) XXX_Size() int {
	return xxx_messageInfo_AllBonusConfig.Size(m)
}
func (m *AllBonusConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AllBonusConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AllBonusConfig proto.InternalMessageInfo

func (m *AllBonusConfig) GetOneConfig() []*OneBonusConfig {
	if m != nil {
		return m.OneConfig
	}
	return nil
}

// 奖池单个配置
type OneBonusConfig struct {
	// 奖池线
	BonusLine int64 `protobuf:"varint,1,opt,name=BonusLine,proto3" json:"BonusLine,omitempty"`
	// 奖池爆率
	Ratio                int64    `protobuf:"varint,2,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneBonusConfig) Reset()         { *m = OneBonusConfig{} }
func (m *OneBonusConfig) String() string { return proto.CompactTextString(m) }
func (*OneBonusConfig) ProtoMessage()    {}
func (*OneBonusConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{856}
}

func (m *OneBonusConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneBonusConfig.Unmarshal(m, b)
}
func (m *OneBonusConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneBonusConfig.Marshal(b, m, deterministic)
}
func (m *OneBonusConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneBonusConfig.Merge(m, src)
}
func (m *OneBonusConfig) XXX_Size() int {
	return xxx_messageInfo_OneBonusConfig.Size(m)
}
func (m *OneBonusConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_OneBonusConfig.DiscardUnknown(m)
}

var xxx_messageInfo_OneBonusConfig proto.InternalMessageInfo

func (m *OneBonusConfig) GetBonusLine() int64 {
	if m != nil {
		return m.BonusLine
	}
	return 0
}

func (m *OneBonusConfig) GetRatio() int64 {
	if m != nil {
		return m.Ratio
	}
	return 0
}

// 管理后台获取房间信息申请
type SelectRoomInfoByGameTypeRequest struct {
	// 游戏类型
	GameType             GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelectRoomInfoByGameTypeRequest) Reset()         { *m = SelectRoomInfoByGameTypeRequest{} }
func (m *SelectRoomInfoByGameTypeRequest) String() string { return proto.CompactTextString(m) }
func (*SelectRoomInfoByGameTypeRequest) ProtoMessage()    {}
func (*SelectRoomInfoByGameTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{857}
}

func (m *SelectRoomInfoByGameTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectRoomInfoByGameTypeRequest.Unmarshal(m, b)
}
func (m *SelectRoomInfoByGameTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectRoomInfoByGameTypeRequest.Marshal(b, m, deterministic)
}
func (m *SelectRoomInfoByGameTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectRoomInfoByGameTypeRequest.Merge(m, src)
}
func (m *SelectRoomInfoByGameTypeRequest) XXX_Size() int {
	return xxx_messageInfo_SelectRoomInfoByGameTypeRequest.Size(m)
}
func (m *SelectRoomInfoByGameTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectRoomInfoByGameTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SelectRoomInfoByGameTypeRequest proto.InternalMessageInfo

func (m *SelectRoomInfoByGameTypeRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

// 管理后台获取房间信息回复
type SelectRoomInfoByGameTypeReply struct {
	// 房间信息
	RoomInfos            []*RoomInfo `protobuf:"bytes,1,rep,name=RoomInfos,proto3" json:"RoomInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SelectRoomInfoByGameTypeReply) Reset()         { *m = SelectRoomInfoByGameTypeReply{} }
func (m *SelectRoomInfoByGameTypeReply) String() string { return proto.CompactTextString(m) }
func (*SelectRoomInfoByGameTypeReply) ProtoMessage()    {}
func (*SelectRoomInfoByGameTypeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{858}
}

func (m *SelectRoomInfoByGameTypeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectRoomInfoByGameTypeReply.Unmarshal(m, b)
}
func (m *SelectRoomInfoByGameTypeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectRoomInfoByGameTypeReply.Marshal(b, m, deterministic)
}
func (m *SelectRoomInfoByGameTypeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectRoomInfoByGameTypeReply.Merge(m, src)
}
func (m *SelectRoomInfoByGameTypeReply) XXX_Size() int {
	return xxx_messageInfo_SelectRoomInfoByGameTypeReply.Size(m)
}
func (m *SelectRoomInfoByGameTypeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectRoomInfoByGameTypeReply.DiscardUnknown(m)
}

var xxx_messageInfo_SelectRoomInfoByGameTypeReply proto.InternalMessageInfo

func (m *SelectRoomInfoByGameTypeReply) GetRoomInfos() []*RoomInfo {
	if m != nil {
		return m.RoomInfos
	}
	return nil
}

// 管理后台删除房间申请
type DelRoomByGameTypeRequest struct {
	// 游戏类型
	GameType GameType `protobuf:"varint,1,opt,name=gameType,proto3,enum=GameType" json:"gameType,omitempty"`
	// 房间uuid
	RoomUUID string `protobuf:"bytes,2,opt,name=RoomUUID,proto3" json:"RoomUUID,omitempty"`
	// 房间所在服务器索引
	ServerIndex          string   `protobuf:"bytes,3,opt,name=ServerIndex,proto3" json:"ServerIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelRoomByGameTypeRequest) Reset()         { *m = DelRoomByGameTypeRequest{} }
func (m *DelRoomByGameTypeRequest) String() string { return proto.CompactTextString(m) }
func (*DelRoomByGameTypeRequest) ProtoMessage()    {}
func (*DelRoomByGameTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{859}
}

func (m *DelRoomByGameTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelRoomByGameTypeRequest.Unmarshal(m, b)
}
func (m *DelRoomByGameTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelRoomByGameTypeRequest.Marshal(b, m, deterministic)
}
func (m *DelRoomByGameTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelRoomByGameTypeRequest.Merge(m, src)
}
func (m *DelRoomByGameTypeRequest) XXX_Size() int {
	return xxx_messageInfo_DelRoomByGameTypeRequest.Size(m)
}
func (m *DelRoomByGameTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelRoomByGameTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DelRoomByGameTypeRequest proto.InternalMessageInfo

func (m *DelRoomByGameTypeRequest) GetGameType() GameType {
	if m != nil {
		return m.GameType
	}
	return GameType_None
}

func (m *DelRoomByGameTypeRequest) GetRoomUUID() string {
	if m != nil {
		return m.RoomUUID
	}
	return ""
}

func (m *DelRoomByGameTypeRequest) GetServerIndex() string {
	if m != nil {
		return m.ServerIndex
	}
	return ""
}

// 管理后台删除房间回复
type DelRoomByGameTypeReply struct {
	// 是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelRoomByGameTypeReply) Reset()         { *m = DelRoomByGameTypeReply{} }
func (m *DelRoomByGameTypeReply) String() string { return proto.CompactTextString(m) }
func (*DelRoomByGameTypeReply) ProtoMessage()    {}
func (*DelRoomByGameTypeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{860}
}

func (m *DelRoomByGameTypeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelRoomByGameTypeReply.Unmarshal(m, b)
}
func (m *DelRoomByGameTypeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelRoomByGameTypeReply.Marshal(b, m, deterministic)
}
func (m *DelRoomByGameTypeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelRoomByGameTypeReply.Merge(m, src)
}
func (m *DelRoomByGameTypeReply) XXX_Size() int {
	return xxx_messageInfo_DelRoomByGameTypeReply.Size(m)
}
func (m *DelRoomByGameTypeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DelRoomByGameTypeReply.DiscardUnknown(m)
}

var xxx_messageInfo_DelRoomByGameTypeReply proto.InternalMessageInfo

func (m *DelRoomByGameTypeReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 消消乐操作请求
type ClearJoyDoRequest struct {
	// 想要进行的操作
	DoType ClearJoyDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=ClearJoyDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearJoyDoRequest) Reset()         { *m = ClearJoyDoRequest{} }
func (m *ClearJoyDoRequest) String() string { return proto.CompactTextString(m) }
func (*ClearJoyDoRequest) ProtoMessage()    {}
func (*ClearJoyDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{861}
}

func (m *ClearJoyDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearJoyDoRequest.Unmarshal(m, b)
}
func (m *ClearJoyDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearJoyDoRequest.Marshal(b, m, deterministic)
}
func (m *ClearJoyDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearJoyDoRequest.Merge(m, src)
}
func (m *ClearJoyDoRequest) XXX_Size() int {
	return xxx_messageInfo_ClearJoyDoRequest.Size(m)
}
func (m *ClearJoyDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearJoyDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearJoyDoRequest proto.InternalMessageInfo

func (m *ClearJoyDoRequest) GetDoType() ClearJoyDoType {
	if m != nil {
		return m.DoType
	}
	return ClearJoyDoType_ClearJoyDo_None
}

func (m *ClearJoyDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 消消乐-图
type ClearJoyImage struct {
	// 单排-宽度
	Width int32 `protobuf:"varint,1,opt,name=Width,proto3" json:"Width,omitempty"`
	// 高度
	Height int32 `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
	// 本体
	Body                 []int64  `protobuf:"varint,3,rep,packed,name=Body,proto3" json:"Body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearJoyImage) Reset()         { *m = ClearJoyImage{} }
func (m *ClearJoyImage) String() string { return proto.CompactTextString(m) }
func (*ClearJoyImage) ProtoMessage()    {}
func (*ClearJoyImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{862}
}

func (m *ClearJoyImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearJoyImage.Unmarshal(m, b)
}
func (m *ClearJoyImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearJoyImage.Marshal(b, m, deterministic)
}
func (m *ClearJoyImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearJoyImage.Merge(m, src)
}
func (m *ClearJoyImage) XXX_Size() int {
	return xxx_messageInfo_ClearJoyImage.Size(m)
}
func (m *ClearJoyImage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearJoyImage.DiscardUnknown(m)
}

var xxx_messageInfo_ClearJoyImage proto.InternalMessageInfo

func (m *ClearJoyImage) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *ClearJoyImage) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ClearJoyImage) GetBody() []int64 {
	if m != nil {
		return m.Body
	}
	return nil
}

// 连线游戏操作请求
type LineGameDoRequest struct {
	// 想要进行的操作
	DoType LineGameDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=LineGameDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LineGameDoRequest) Reset()         { *m = LineGameDoRequest{} }
func (m *LineGameDoRequest) String() string { return proto.CompactTextString(m) }
func (*LineGameDoRequest) ProtoMessage()    {}
func (*LineGameDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{863}
}

func (m *LineGameDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LineGameDoRequest.Unmarshal(m, b)
}
func (m *LineGameDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LineGameDoRequest.Marshal(b, m, deterministic)
}
func (m *LineGameDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LineGameDoRequest.Merge(m, src)
}
func (m *LineGameDoRequest) XXX_Size() int {
	return xxx_messageInfo_LineGameDoRequest.Size(m)
}
func (m *LineGameDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LineGameDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LineGameDoRequest proto.InternalMessageInfo

func (m *LineGameDoRequest) GetDoType() LineGameDoType {
	if m != nil {
		return m.DoType
	}
	return LineGameDoType_LineGameDo_None
}

func (m *LineGameDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 连线游戏的元素位置信息
type LineGamePosition struct {
	// x索引
	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	// y索引
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	// 元素
	Element              LineGameElementType `protobuf:"varint,3,opt,name=element,proto3,enum=LineGameElementType" json:"element,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *LineGamePosition) Reset()         { *m = LineGamePosition{} }
func (m *LineGamePosition) String() string { return proto.CompactTextString(m) }
func (*LineGamePosition) ProtoMessage()    {}
func (*LineGamePosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{864}
}

func (m *LineGamePosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LineGamePosition.Unmarshal(m, b)
}
func (m *LineGamePosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LineGamePosition.Marshal(b, m, deterministic)
}
func (m *LineGamePosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LineGamePosition.Merge(m, src)
}
func (m *LineGamePosition) XXX_Size() int {
	return xxx_messageInfo_LineGamePosition.Size(m)
}
func (m *LineGamePosition) XXX_DiscardUnknown() {
	xxx_messageInfo_LineGamePosition.DiscardUnknown(m)
}

var xxx_messageInfo_LineGamePosition proto.InternalMessageInfo

func (m *LineGamePosition) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *LineGamePosition) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *LineGamePosition) GetElement() LineGameElementType {
	if m != nil {
		return m.Element
	}
	return LineGameElementType_LineGameElementType_None
}

// 连线游戏的元素
type LineGameMap struct {
	// 行数
	RowNum int32 `protobuf:"varint,1,opt,name=rowNum,proto3" json:"rowNum,omitempty"`
	// 列数
	ColumnNum int32 `protobuf:"varint,2,opt,name=columnNum,proto3" json:"columnNum,omitempty"`
	// 本体
	ElementInfo          []*LineGamePosition `protobuf:"bytes,3,rep,name=elementInfo,proto3" json:"elementInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *LineGameMap) Reset()         { *m = LineGameMap{} }
func (m *LineGameMap) String() string { return proto.CompactTextString(m) }
func (*LineGameMap) ProtoMessage()    {}
func (*LineGameMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{865}
}

func (m *LineGameMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LineGameMap.Unmarshal(m, b)
}
func (m *LineGameMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LineGameMap.Marshal(b, m, deterministic)
}
func (m *LineGameMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LineGameMap.Merge(m, src)
}
func (m *LineGameMap) XXX_Size() int {
	return xxx_messageInfo_LineGameMap.Size(m)
}
func (m *LineGameMap) XXX_DiscardUnknown() {
	xxx_messageInfo_LineGameMap.DiscardUnknown(m)
}

var xxx_messageInfo_LineGameMap proto.InternalMessageInfo

func (m *LineGameMap) GetRowNum() int32 {
	if m != nil {
		return m.RowNum
	}
	return 0
}

func (m *LineGameMap) GetColumnNum() int32 {
	if m != nil {
		return m.ColumnNum
	}
	return 0
}

func (m *LineGameMap) GetElementInfo() []*LineGamePosition {
	if m != nil {
		return m.ElementInfo
	}
	return nil
}

// 连线游戏的元素中奖信息
type LineGameBingoInfo struct {
	// 中的是哪条线
	LineIndex int32 `protobuf:"varint,1,opt,name=lineIndex,proto3" json:"lineIndex,omitempty"`
	// 中奖的数量
	Num int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	// 中奖的位置
	Position []*LineGamePosition `protobuf:"bytes,3,rep,name=position,proto3" json:"position,omitempty"`
	// 中奖的类型，有可能包含wild，所以加这个字段
	Element LineGameElementType `protobuf:"varint,4,opt,name=element,proto3,enum=LineGameElementType" json:"element,omitempty"`
	// 这条线的中奖值
	Odds                 int32    `protobuf:"varint,5,opt,name=odds,proto3" json:"odds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LineGameBingoInfo) Reset()         { *m = LineGameBingoInfo{} }
func (m *LineGameBingoInfo) String() string { return proto.CompactTextString(m) }
func (*LineGameBingoInfo) ProtoMessage()    {}
func (*LineGameBingoInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{866}
}

func (m *LineGameBingoInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LineGameBingoInfo.Unmarshal(m, b)
}
func (m *LineGameBingoInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LineGameBingoInfo.Marshal(b, m, deterministic)
}
func (m *LineGameBingoInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LineGameBingoInfo.Merge(m, src)
}
func (m *LineGameBingoInfo) XXX_Size() int {
	return xxx_messageInfo_LineGameBingoInfo.Size(m)
}
func (m *LineGameBingoInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LineGameBingoInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LineGameBingoInfo proto.InternalMessageInfo

func (m *LineGameBingoInfo) GetLineIndex() int32 {
	if m != nil {
		return m.LineIndex
	}
	return 0
}

func (m *LineGameBingoInfo) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *LineGameBingoInfo) GetPosition() []*LineGamePosition {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *LineGameBingoInfo) GetElement() LineGameElementType {
	if m != nil {
		return m.Element
	}
	return LineGameElementType_LineGameElementType_None
}

func (m *LineGameBingoInfo) GetOdds() int32 {
	if m != nil {
		return m.Odds
	}
	return 0
}

// 连线游戏的一局的信息
type LineGameRoundInfo struct {
	// 开出的元素图
	GameMap *LineGameMap `protobuf:"bytes,1,opt,name=gameMap,proto3" json:"gameMap,omitempty"`
	// 这局的赢的值
	Win int64 `protobuf:"varint,2,opt,name=win,proto3" json:"win,omitempty"`
	// 这局的中奖信息
	BingoInfo            []*LineGameBingoInfo `protobuf:"bytes,3,rep,name=bingoInfo,proto3" json:"bingoInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LineGameRoundInfo) Reset()         { *m = LineGameRoundInfo{} }
func (m *LineGameRoundInfo) String() string { return proto.CompactTextString(m) }
func (*LineGameRoundInfo) ProtoMessage()    {}
func (*LineGameRoundInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{867}
}

func (m *LineGameRoundInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LineGameRoundInfo.Unmarshal(m, b)
}
func (m *LineGameRoundInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LineGameRoundInfo.Marshal(b, m, deterministic)
}
func (m *LineGameRoundInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LineGameRoundInfo.Merge(m, src)
}
func (m *LineGameRoundInfo) XXX_Size() int {
	return xxx_messageInfo_LineGameRoundInfo.Size(m)
}
func (m *LineGameRoundInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LineGameRoundInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LineGameRoundInfo proto.InternalMessageInfo

func (m *LineGameRoundInfo) GetGameMap() *LineGameMap {
	if m != nil {
		return m.GameMap
	}
	return nil
}

func (m *LineGameRoundInfo) GetWin() int64 {
	if m != nil {
		return m.Win
	}
	return 0
}

func (m *LineGameRoundInfo) GetBingoInfo() []*LineGameBingoInfo {
	if m != nil {
		return m.BingoInfo
	}
	return nil
}

// 连线游戏的玩耍请求
type LineGamePlayRequest struct {
	// 下注值
	WagerNum int64 `protobuf:"varint,1,opt,name=wagerNum,proto3" json:"wagerNum,omitempty"`
	// 玩的子游戏
	SubGame              LineGameSubType `protobuf:"varint,2,opt,name=subGame,proto3,enum=LineGameSubType" json:"subGame,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LineGamePlayRequest) Reset()         { *m = LineGamePlayRequest{} }
func (m *LineGamePlayRequest) String() string { return proto.CompactTextString(m) }
func (*LineGamePlayRequest) ProtoMessage()    {}
func (*LineGamePlayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{868}
}

func (m *LineGamePlayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LineGamePlayRequest.Unmarshal(m, b)
}
func (m *LineGamePlayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LineGamePlayRequest.Marshal(b, m, deterministic)
}
func (m *LineGamePlayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LineGamePlayRequest.Merge(m, src)
}
func (m *LineGamePlayRequest) XXX_Size() int {
	return xxx_messageInfo_LineGamePlayRequest.Size(m)
}
func (m *LineGamePlayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LineGamePlayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LineGamePlayRequest proto.InternalMessageInfo

func (m *LineGamePlayRequest) GetWagerNum() int64 {
	if m != nil {
		return m.WagerNum
	}
	return 0
}

func (m *LineGamePlayRequest) GetSubGame() LineGameSubType {
	if m != nil {
		return m.SubGame
	}
	return LineGameSubType_LineGameSubType_None
}

// 连线游戏的玩耍返回
type LineGamePlayReply struct {
	// 玩的子游戏
	SubGame LineGameSubType `protobuf:"varint,1,opt,name=subGame,proto3,enum=LineGameSubType" json:"subGame,omitempty"`
	// 所有局的信息
	AllInfo              []*LineGameRoundInfo `protobuf:"bytes,2,rep,name=allInfo,proto3" json:"allInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LineGamePlayReply) Reset()         { *m = LineGamePlayReply{} }
func (m *LineGamePlayReply) String() string { return proto.CompactTextString(m) }
func (*LineGamePlayReply) ProtoMessage()    {}
func (*LineGamePlayReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{869}
}

func (m *LineGamePlayReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LineGamePlayReply.Unmarshal(m, b)
}
func (m *LineGamePlayReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LineGamePlayReply.Marshal(b, m, deterministic)
}
func (m *LineGamePlayReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LineGamePlayReply.Merge(m, src)
}
func (m *LineGamePlayReply) XXX_Size() int {
	return xxx_messageInfo_LineGamePlayReply.Size(m)
}
func (m *LineGamePlayReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LineGamePlayReply.DiscardUnknown(m)
}

var xxx_messageInfo_LineGamePlayReply proto.InternalMessageInfo

func (m *LineGamePlayReply) GetSubGame() LineGameSubType {
	if m != nil {
		return m.SubGame
	}
	return LineGameSubType_LineGameSubType_None
}

func (m *LineGamePlayReply) GetAllInfo() []*LineGameRoundInfo {
	if m != nil {
		return m.AllInfo
	}
	return nil
}

// 1个附件内容
type EmailExtra struct {
	// 类型
	RewardType RewardType `protobuf:"varint,1,opt,name=rewardType,proto3,enum=RewardType" json:"rewardType,omitempty"`
	// 数量
	Num                  int64    `protobuf:"varint,2,opt,name=Num,proto3" json:"Num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailExtra) Reset()         { *m = EmailExtra{} }
func (m *EmailExtra) String() string { return proto.CompactTextString(m) }
func (*EmailExtra) ProtoMessage()    {}
func (*EmailExtra) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{870}
}

func (m *EmailExtra) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailExtra.Unmarshal(m, b)
}
func (m *EmailExtra) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailExtra.Marshal(b, m, deterministic)
}
func (m *EmailExtra) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailExtra.Merge(m, src)
}
func (m *EmailExtra) XXX_Size() int {
	return xxx_messageInfo_EmailExtra.Size(m)
}
func (m *EmailExtra) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailExtra.DiscardUnknown(m)
}

var xxx_messageInfo_EmailExtra proto.InternalMessageInfo

func (m *EmailExtra) GetRewardType() RewardType {
	if m != nil {
		return m.RewardType
	}
	return RewardType_RewardNone
}

func (m *EmailExtra) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

// 一封邮件
type OneEmailData struct {
	// 邮件的uuid
	EmailId string `protobuf:"bytes,1,opt,name=EmailId,proto3" json:"EmailId,omitempty"`
	// 发件人uuid
	SenderUuid string `protobuf:"bytes,2,opt,name=SenderUuid,proto3" json:"SenderUuid,omitempty"`
	// 发件人shortId
	SenderShortId string `protobuf:"bytes,3,opt,name=SenderShortId,proto3" json:"SenderShortId,omitempty"`
	// 发件人头像
	SenderHeadImage string `protobuf:"bytes,4,opt,name=SenderHeadImage,proto3" json:"SenderHeadImage,omitempty"`
	// 发件人名字
	SenderName string `protobuf:"bytes,5,opt,name=SenderName,proto3" json:"SenderName,omitempty"`
	// 收件人uuid
	ReceiveUuid string `protobuf:"bytes,6,opt,name=ReceiveUuid,proto3" json:"ReceiveUuid,omitempty"`
	// 收件人shortId
	ReceiveShortId string `protobuf:"bytes,7,opt,name=ReceiveShortId,proto3" json:"ReceiveShortId,omitempty"`
	// 收件人头像
	ReceiveHeadImage string `protobuf:"bytes,8,opt,name=ReceiveHeadImage,proto3" json:"ReceiveHeadImage,omitempty"`
	// 收件人名字
	ReceiveName string `protobuf:"bytes,9,opt,name=ReceiveName,proto3" json:"ReceiveName,omitempty"`
	// 发送的时间
	SendTime int64 `protobuf:"varint,10,opt,name=SendTime,proto3" json:"SendTime,omitempty"`
	// 标题
	Total string `protobuf:"bytes,11,opt,name=Total,proto3" json:"Total,omitempty"`
	// 文本内容
	TextData string `protobuf:"bytes,12,opt,name=TextData,proto3" json:"TextData,omitempty"`
	// 附件内容
	AttachData []*EmailExtra `protobuf:"bytes,13,rep,name=AttachData,proto3" json:"AttachData,omitempty"`
	// 邮件的状态
	EmailState           EmailState `protobuf:"varint,14,opt,name=emailState,proto3,enum=EmailState" json:"emailState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *OneEmailData) Reset()         { *m = OneEmailData{} }
func (m *OneEmailData) String() string { return proto.CompactTextString(m) }
func (*OneEmailData) ProtoMessage()    {}
func (*OneEmailData) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{871}
}

func (m *OneEmailData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneEmailData.Unmarshal(m, b)
}
func (m *OneEmailData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneEmailData.Marshal(b, m, deterministic)
}
func (m *OneEmailData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneEmailData.Merge(m, src)
}
func (m *OneEmailData) XXX_Size() int {
	return xxx_messageInfo_OneEmailData.Size(m)
}
func (m *OneEmailData) XXX_DiscardUnknown() {
	xxx_messageInfo_OneEmailData.DiscardUnknown(m)
}

var xxx_messageInfo_OneEmailData proto.InternalMessageInfo

func (m *OneEmailData) GetEmailId() string {
	if m != nil {
		return m.EmailId
	}
	return ""
}

func (m *OneEmailData) GetSenderUuid() string {
	if m != nil {
		return m.SenderUuid
	}
	return ""
}

func (m *OneEmailData) GetSenderShortId() string {
	if m != nil {
		return m.SenderShortId
	}
	return ""
}

func (m *OneEmailData) GetSenderHeadImage() string {
	if m != nil {
		return m.SenderHeadImage
	}
	return ""
}

func (m *OneEmailData) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

func (m *OneEmailData) GetReceiveUuid() string {
	if m != nil {
		return m.ReceiveUuid
	}
	return ""
}

func (m *OneEmailData) GetReceiveShortId() string {
	if m != nil {
		return m.ReceiveShortId
	}
	return ""
}

func (m *OneEmailData) GetReceiveHeadImage() string {
	if m != nil {
		return m.ReceiveHeadImage
	}
	return ""
}

func (m *OneEmailData) GetReceiveName() string {
	if m != nil {
		return m.ReceiveName
	}
	return ""
}

func (m *OneEmailData) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *OneEmailData) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

func (m *OneEmailData) GetTextData() string {
	if m != nil {
		return m.TextData
	}
	return ""
}

func (m *OneEmailData) GetAttachData() []*EmailExtra {
	if m != nil {
		return m.AttachData
	}
	return nil
}

func (m *OneEmailData) GetEmailState() EmailState {
	if m != nil {
		return m.EmailState
	}
	return EmailState_EmailState_None
}

// 发送邮件申请
type SendEmailRequest struct {
	// 接收人shortId
	ShortId string `protobuf:"bytes,1,opt,name=ShortId,proto3" json:"ShortId,omitempty"`
	// 邮件标题
	Total string `protobuf:"bytes,2,opt,name=Total,proto3" json:"Total,omitempty"`
	// 文本内容
	TextData string `protobuf:"bytes,3,opt,name=TextData,proto3" json:"TextData,omitempty"`
	// 附件内容
	AttachData           []*EmailExtra `protobuf:"bytes,4,rep,name=AttachData,proto3" json:"AttachData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SendEmailRequest) Reset()         { *m = SendEmailRequest{} }
func (m *SendEmailRequest) String() string { return proto.CompactTextString(m) }
func (*SendEmailRequest) ProtoMessage()    {}
func (*SendEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{872}
}

func (m *SendEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailRequest.Unmarshal(m, b)
}
func (m *SendEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailRequest.Marshal(b, m, deterministic)
}
func (m *SendEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailRequest.Merge(m, src)
}
func (m *SendEmailRequest) XXX_Size() int {
	return xxx_messageInfo_SendEmailRequest.Size(m)
}
func (m *SendEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailRequest proto.InternalMessageInfo

func (m *SendEmailRequest) GetShortId() string {
	if m != nil {
		return m.ShortId
	}
	return ""
}

func (m *SendEmailRequest) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

func (m *SendEmailRequest) GetTextData() string {
	if m != nil {
		return m.TextData
	}
	return ""
}

func (m *SendEmailRequest) GetAttachData() []*EmailExtra {
	if m != nil {
		return m.AttachData
	}
	return nil
}

// 发送邮件回复
type SendEmailReply struct {
	// 是否成功
	IsSuccess            bool     `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEmailReply) Reset()         { *m = SendEmailReply{} }
func (m *SendEmailReply) String() string { return proto.CompactTextString(m) }
func (*SendEmailReply) ProtoMessage()    {}
func (*SendEmailReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{873}
}

func (m *SendEmailReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailReply.Unmarshal(m, b)
}
func (m *SendEmailReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailReply.Marshal(b, m, deterministic)
}
func (m *SendEmailReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailReply.Merge(m, src)
}
func (m *SendEmailReply) XXX_Size() int {
	return xxx_messageInfo_SendEmailReply.Size(m)
}
func (m *SendEmailReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailReply proto.InternalMessageInfo

func (m *SendEmailReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 获取我的邮件列表申请
type GetMeEmailListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMeEmailListRequest) Reset()         { *m = GetMeEmailListRequest{} }
func (m *GetMeEmailListRequest) String() string { return proto.CompactTextString(m) }
func (*GetMeEmailListRequest) ProtoMessage()    {}
func (*GetMeEmailListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{874}
}

func (m *GetMeEmailListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMeEmailListRequest.Unmarshal(m, b)
}
func (m *GetMeEmailListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMeEmailListRequest.Marshal(b, m, deterministic)
}
func (m *GetMeEmailListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMeEmailListRequest.Merge(m, src)
}
func (m *GetMeEmailListRequest) XXX_Size() int {
	return xxx_messageInfo_GetMeEmailListRequest.Size(m)
}
func (m *GetMeEmailListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMeEmailListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMeEmailListRequest proto.InternalMessageInfo

// 获取我的邮件列表回复
type GetMeEmailListReply struct {
	// 邮件的数量
	EmailNum int64 `protobuf:"varint,1,opt,name=EmailNum,proto3" json:"EmailNum,omitempty"`
	// 邮件内容 - 此时过滤了标题和
	Data                 []*OneEmailData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetMeEmailListReply) Reset()         { *m = GetMeEmailListReply{} }
func (m *GetMeEmailListReply) String() string { return proto.CompactTextString(m) }
func (*GetMeEmailListReply) ProtoMessage()    {}
func (*GetMeEmailListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{875}
}

func (m *GetMeEmailListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMeEmailListReply.Unmarshal(m, b)
}
func (m *GetMeEmailListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMeEmailListReply.Marshal(b, m, deterministic)
}
func (m *GetMeEmailListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMeEmailListReply.Merge(m, src)
}
func (m *GetMeEmailListReply) XXX_Size() int {
	return xxx_messageInfo_GetMeEmailListReply.Size(m)
}
func (m *GetMeEmailListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMeEmailListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetMeEmailListReply proto.InternalMessageInfo

func (m *GetMeEmailListReply) GetEmailNum() int64 {
	if m != nil {
		return m.EmailNum
	}
	return 0
}

func (m *GetMeEmailListReply) GetData() []*OneEmailData {
	if m != nil {
		return m.Data
	}
	return nil
}

// 读取一封邮件申请
type ReadOneEmailRequest struct {
	// 邮件id
	EmailId              string   `protobuf:"bytes,1,opt,name=EmailId,proto3" json:"EmailId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadOneEmailRequest) Reset()         { *m = ReadOneEmailRequest{} }
func (m *ReadOneEmailRequest) String() string { return proto.CompactTextString(m) }
func (*ReadOneEmailRequest) ProtoMessage()    {}
func (*ReadOneEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{876}
}

func (m *ReadOneEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOneEmailRequest.Unmarshal(m, b)
}
func (m *ReadOneEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOneEmailRequest.Marshal(b, m, deterministic)
}
func (m *ReadOneEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOneEmailRequest.Merge(m, src)
}
func (m *ReadOneEmailRequest) XXX_Size() int {
	return xxx_messageInfo_ReadOneEmailRequest.Size(m)
}
func (m *ReadOneEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOneEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOneEmailRequest proto.InternalMessageInfo

func (m *ReadOneEmailRequest) GetEmailId() string {
	if m != nil {
		return m.EmailId
	}
	return ""
}

// 读取一封邮件回复
type ReadOneEmailReply struct {
	// 内容本体
	Data                 *OneEmailData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReadOneEmailReply) Reset()         { *m = ReadOneEmailReply{} }
func (m *ReadOneEmailReply) String() string { return proto.CompactTextString(m) }
func (*ReadOneEmailReply) ProtoMessage()    {}
func (*ReadOneEmailReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{877}
}

func (m *ReadOneEmailReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOneEmailReply.Unmarshal(m, b)
}
func (m *ReadOneEmailReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOneEmailReply.Marshal(b, m, deterministic)
}
func (m *ReadOneEmailReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOneEmailReply.Merge(m, src)
}
func (m *ReadOneEmailReply) XXX_Size() int {
	return xxx_messageInfo_ReadOneEmailReply.Size(m)
}
func (m *ReadOneEmailReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOneEmailReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOneEmailReply proto.InternalMessageInfo

func (m *ReadOneEmailReply) GetData() *OneEmailData {
	if m != nil {
		return m.Data
	}
	return nil
}

// 领取邮件附件申请
type GetEmailAttachRequest struct {
	// 邮件的uuid
	EmailId              string   `protobuf:"bytes,1,opt,name=EmailId,proto3" json:"EmailId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEmailAttachRequest) Reset()         { *m = GetEmailAttachRequest{} }
func (m *GetEmailAttachRequest) String() string { return proto.CompactTextString(m) }
func (*GetEmailAttachRequest) ProtoMessage()    {}
func (*GetEmailAttachRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{878}
}

func (m *GetEmailAttachRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEmailAttachRequest.Unmarshal(m, b)
}
func (m *GetEmailAttachRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEmailAttachRequest.Marshal(b, m, deterministic)
}
func (m *GetEmailAttachRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEmailAttachRequest.Merge(m, src)
}
func (m *GetEmailAttachRequest) XXX_Size() int {
	return xxx_messageInfo_GetEmailAttachRequest.Size(m)
}
func (m *GetEmailAttachRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEmailAttachRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEmailAttachRequest proto.InternalMessageInfo

func (m *GetEmailAttachRequest) GetEmailId() string {
	if m != nil {
		return m.EmailId
	}
	return ""
}

// 领取邮件附件回复
type GetEmailAttachReply struct {
	// 是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 领取的内容
	Data                 []*EmailExtra `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetEmailAttachReply) Reset()         { *m = GetEmailAttachReply{} }
func (m *GetEmailAttachReply) String() string { return proto.CompactTextString(m) }
func (*GetEmailAttachReply) ProtoMessage()    {}
func (*GetEmailAttachReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{879}
}

func (m *GetEmailAttachReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEmailAttachReply.Unmarshal(m, b)
}
func (m *GetEmailAttachReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEmailAttachReply.Marshal(b, m, deterministic)
}
func (m *GetEmailAttachReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEmailAttachReply.Merge(m, src)
}
func (m *GetEmailAttachReply) XXX_Size() int {
	return xxx_messageInfo_GetEmailAttachReply.Size(m)
}
func (m *GetEmailAttachReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEmailAttachReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetEmailAttachReply proto.InternalMessageInfo

func (m *GetEmailAttachReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *GetEmailAttachReply) GetData() []*EmailExtra {
	if m != nil {
		return m.Data
	}
	return nil
}

//获取挖矿进度
type GetMiningProgressRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMiningProgressRequest) Reset()         { *m = GetMiningProgressRequest{} }
func (m *GetMiningProgressRequest) String() string { return proto.CompactTextString(m) }
func (*GetMiningProgressRequest) ProtoMessage()    {}
func (*GetMiningProgressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{880}
}

func (m *GetMiningProgressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMiningProgressRequest.Unmarshal(m, b)
}
func (m *GetMiningProgressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMiningProgressRequest.Marshal(b, m, deterministic)
}
func (m *GetMiningProgressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMiningProgressRequest.Merge(m, src)
}
func (m *GetMiningProgressRequest) XXX_Size() int {
	return xxx_messageInfo_GetMiningProgressRequest.Size(m)
}
func (m *GetMiningProgressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMiningProgressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMiningProgressRequest proto.InternalMessageInfo

//返回挖矿进度
type GetMiningProgresReply struct {
	// 矿工等级
	Level int64 `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`
	// 距离可领取倒计时
	EndTime int64 `protobuf:"varint,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	// 宝石奖励
	Reward               int64    `protobuf:"varint,4,opt,name=Reward,proto3" json:"Reward,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMiningProgresReply) Reset()         { *m = GetMiningProgresReply{} }
func (m *GetMiningProgresReply) String() string { return proto.CompactTextString(m) }
func (*GetMiningProgresReply) ProtoMessage()    {}
func (*GetMiningProgresReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{881}
}

func (m *GetMiningProgresReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMiningProgresReply.Unmarshal(m, b)
}
func (m *GetMiningProgresReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMiningProgresReply.Marshal(b, m, deterministic)
}
func (m *GetMiningProgresReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMiningProgresReply.Merge(m, src)
}
func (m *GetMiningProgresReply) XXX_Size() int {
	return xxx_messageInfo_GetMiningProgresReply.Size(m)
}
func (m *GetMiningProgresReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMiningProgresReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetMiningProgresReply proto.InternalMessageInfo

func (m *GetMiningProgresReply) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *GetMiningProgresReply) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *GetMiningProgresReply) GetReward() int64 {
	if m != nil {
		return m.Reward
	}
	return 0
}

//领取挖矿奖励
type GetMiningRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMiningRequest) Reset()         { *m = GetMiningRequest{} }
func (m *GetMiningRequest) String() string { return proto.CompactTextString(m) }
func (*GetMiningRequest) ProtoMessage()    {}
func (*GetMiningRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{882}
}

func (m *GetMiningRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMiningRequest.Unmarshal(m, b)
}
func (m *GetMiningRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMiningRequest.Marshal(b, m, deterministic)
}
func (m *GetMiningRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMiningRequest.Merge(m, src)
}
func (m *GetMiningRequest) XXX_Size() int {
	return xxx_messageInfo_GetMiningRequest.Size(m)
}
func (m *GetMiningRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMiningRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMiningRequest proto.InternalMessageInfo

//领取挖矿奖励回应
type GetMiningReply struct {
	// 是否成功
	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	// 领取奖励
	Rewards int64 `protobuf:"varint,2,opt,name=Rewards,proto3" json:"Rewards,omitempty"`
	// 新的挖矿进度
	NewMining            *GetMiningProgresReply `protobuf:"bytes,3,opt,name=NewMining,proto3" json:"NewMining,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetMiningReply) Reset()         { *m = GetMiningReply{} }
func (m *GetMiningReply) String() string { return proto.CompactTextString(m) }
func (*GetMiningReply) ProtoMessage()    {}
func (*GetMiningReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{883}
}

func (m *GetMiningReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMiningReply.Unmarshal(m, b)
}
func (m *GetMiningReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMiningReply.Marshal(b, m, deterministic)
}
func (m *GetMiningReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMiningReply.Merge(m, src)
}
func (m *GetMiningReply) XXX_Size() int {
	return xxx_messageInfo_GetMiningReply.Size(m)
}
func (m *GetMiningReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMiningReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetMiningReply proto.InternalMessageInfo

func (m *GetMiningReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *GetMiningReply) GetRewards() int64 {
	if m != nil {
		return m.Rewards
	}
	return 0
}

func (m *GetMiningReply) GetNewMining() *GetMiningProgresReply {
	if m != nil {
		return m.NewMining
	}
	return nil
}

// 宝石大战操作请求
type GemWarsDoRequest struct {
	// 想要进行的操作
	DoType GemWarsDoType `protobuf:"varint,1,opt,name=doType,proto3,enum=GemWarsDoType" json:"doType,omitempty"`
	// 想要进行的操作的请求协议
	DoMessageContent     *any.Any `protobuf:"bytes,2,opt,name=doMessageContent,proto3" json:"doMessageContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GemWarsDoRequest) Reset()         { *m = GemWarsDoRequest{} }
func (m *GemWarsDoRequest) String() string { return proto.CompactTextString(m) }
func (*GemWarsDoRequest) ProtoMessage()    {}
func (*GemWarsDoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{884}
}

func (m *GemWarsDoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GemWarsDoRequest.Unmarshal(m, b)
}
func (m *GemWarsDoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GemWarsDoRequest.Marshal(b, m, deterministic)
}
func (m *GemWarsDoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GemWarsDoRequest.Merge(m, src)
}
func (m *GemWarsDoRequest) XXX_Size() int {
	return xxx_messageInfo_GemWarsDoRequest.Size(m)
}
func (m *GemWarsDoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GemWarsDoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GemWarsDoRequest proto.InternalMessageInfo

func (m *GemWarsDoRequest) GetDoType() GemWarsDoType {
	if m != nil {
		return m.DoType
	}
	return GemWarsDoType_GemWars_None
}

func (m *GemWarsDoRequest) GetDoMessageContent() *any.Any {
	if m != nil {
		return m.DoMessageContent
	}
	return nil
}

// 宝石大战下注申请
type GemWarsBetRequest struct {
	// 下注的区域
	BetArea GemWarsBetArea `protobuf:"varint,1,opt,name=BetArea,proto3,enum=GemWarsBetArea" json:"BetArea,omitempty"`
	// 下注金额
	BetBalance           int64    `protobuf:"varint,2,opt,name=BetBalance,proto3" json:"BetBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GemWarsBetRequest) Reset()         { *m = GemWarsBetRequest{} }
func (m *GemWarsBetRequest) String() string { return proto.CompactTextString(m) }
func (*GemWarsBetRequest) ProtoMessage()    {}
func (*GemWarsBetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{885}
}

func (m *GemWarsBetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GemWarsBetRequest.Unmarshal(m, b)
}
func (m *GemWarsBetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GemWarsBetRequest.Marshal(b, m, deterministic)
}
func (m *GemWarsBetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GemWarsBetRequest.Merge(m, src)
}
func (m *GemWarsBetRequest) XXX_Size() int {
	return xxx_messageInfo_GemWarsBetRequest.Size(m)
}
func (m *GemWarsBetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GemWarsBetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GemWarsBetRequest proto.InternalMessageInfo

func (m *GemWarsBetRequest) GetBetArea() GemWarsBetArea {
	if m != nil {
		return m.BetArea
	}
	return GemWarsBetArea_GemWarsBetArea_None
}

func (m *GemWarsBetRequest) GetBetBalance() int64 {
	if m != nil {
		return m.BetBalance
	}
	return 0
}

// 宝石大战下注回复
type GemWarsBetReply struct {
	// 下注是否成功
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 房间id
	RoomId               string   `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GemWarsBetReply) Reset()         { *m = GemWarsBetReply{} }
func (m *GemWarsBetReply) String() string { return proto.CompactTextString(m) }
func (*GemWarsBetReply) ProtoMessage()    {}
func (*GemWarsBetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{886}
}

func (m *GemWarsBetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GemWarsBetReply.Unmarshal(m, b)
}
func (m *GemWarsBetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GemWarsBetReply.Marshal(b, m, deterministic)
}
func (m *GemWarsBetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GemWarsBetReply.Merge(m, src)
}
func (m *GemWarsBetReply) XXX_Size() int {
	return xxx_messageInfo_GemWarsBetReply.Size(m)
}
func (m *GemWarsBetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GemWarsBetReply.DiscardUnknown(m)
}

var xxx_messageInfo_GemWarsBetReply proto.InternalMessageInfo

func (m *GemWarsBetReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *GemWarsBetReply) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

// 获得短信验证码的请求
type GetSmsCaptchaRequest struct {
	// 手机号
	MobileNum            string   `protobuf:"bytes,1,opt,name=mobileNum,proto3" json:"mobileNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSmsCaptchaRequest) Reset()         { *m = GetSmsCaptchaRequest{} }
func (m *GetSmsCaptchaRequest) String() string { return proto.CompactTextString(m) }
func (*GetSmsCaptchaRequest) ProtoMessage()    {}
func (*GetSmsCaptchaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{887}
}

func (m *GetSmsCaptchaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSmsCaptchaRequest.Unmarshal(m, b)
}
func (m *GetSmsCaptchaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSmsCaptchaRequest.Marshal(b, m, deterministic)
}
func (m *GetSmsCaptchaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSmsCaptchaRequest.Merge(m, src)
}
func (m *GetSmsCaptchaRequest) XXX_Size() int {
	return xxx_messageInfo_GetSmsCaptchaRequest.Size(m)
}
func (m *GetSmsCaptchaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSmsCaptchaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSmsCaptchaRequest proto.InternalMessageInfo

func (m *GetSmsCaptchaRequest) GetMobileNum() string {
	if m != nil {
		return m.MobileNum
	}
	return ""
}

// 获得短信验证码的返回
type GetSmsCaptchaReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSmsCaptchaReply) Reset()         { *m = GetSmsCaptchaReply{} }
func (m *GetSmsCaptchaReply) String() string { return proto.CompactTextString(m) }
func (*GetSmsCaptchaReply) ProtoMessage()    {}
func (*GetSmsCaptchaReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{888}
}

func (m *GetSmsCaptchaReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSmsCaptchaReply.Unmarshal(m, b)
}
func (m *GetSmsCaptchaReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSmsCaptchaReply.Marshal(b, m, deterministic)
}
func (m *GetSmsCaptchaReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSmsCaptchaReply.Merge(m, src)
}
func (m *GetSmsCaptchaReply) XXX_Size() int {
	return xxx_messageInfo_GetSmsCaptchaReply.Size(m)
}
func (m *GetSmsCaptchaReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSmsCaptchaReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetSmsCaptchaReply proto.InternalMessageInfo

// 绑定手机的请求
type BindMobileRequest struct {
	// 手机号
	MobileNum string `protobuf:"bytes,1,opt,name=mobileNum,proto3" json:"mobileNum,omitempty"`
	// 验证码
	Captcha string `protobuf:"bytes,2,opt,name=captcha,proto3" json:"captcha,omitempty"`
	// 密码
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindMobileRequest) Reset()         { *m = BindMobileRequest{} }
func (m *BindMobileRequest) String() string { return proto.CompactTextString(m) }
func (*BindMobileRequest) ProtoMessage()    {}
func (*BindMobileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{889}
}

func (m *BindMobileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindMobileRequest.Unmarshal(m, b)
}
func (m *BindMobileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindMobileRequest.Marshal(b, m, deterministic)
}
func (m *BindMobileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindMobileRequest.Merge(m, src)
}
func (m *BindMobileRequest) XXX_Size() int {
	return xxx_messageInfo_BindMobileRequest.Size(m)
}
func (m *BindMobileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BindMobileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BindMobileRequest proto.InternalMessageInfo

func (m *BindMobileRequest) GetMobileNum() string {
	if m != nil {
		return m.MobileNum
	}
	return ""
}

func (m *BindMobileRequest) GetCaptcha() string {
	if m != nil {
		return m.Captcha
	}
	return ""
}

func (m *BindMobileRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// 绑定手机的返回
type BindMobileReply struct {
	// 手机号
	MobileNum            string   `protobuf:"bytes,1,opt,name=mobileNum,proto3" json:"mobileNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindMobileReply) Reset()         { *m = BindMobileReply{} }
func (m *BindMobileReply) String() string { return proto.CompactTextString(m) }
func (*BindMobileReply) ProtoMessage()    {}
func (*BindMobileReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{890}
}

func (m *BindMobileReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindMobileReply.Unmarshal(m, b)
}
func (m *BindMobileReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindMobileReply.Marshal(b, m, deterministic)
}
func (m *BindMobileReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindMobileReply.Merge(m, src)
}
func (m *BindMobileReply) XXX_Size() int {
	return xxx_messageInfo_BindMobileReply.Size(m)
}
func (m *BindMobileReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BindMobileReply.DiscardUnknown(m)
}

var xxx_messageInfo_BindMobileReply proto.InternalMessageInfo

func (m *BindMobileReply) GetMobileNum() string {
	if m != nil {
		return m.MobileNum
	}
	return ""
}

func init() {
	proto.RegisterEnum("GameMode", GameMode_name, GameMode_value)
	proto.RegisterEnum("ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterEnum("BeanChangeReason", BeanChangeReason_name, BeanChangeReason_value)
	proto.RegisterEnum("ResourceChangeReason", ResourceChangeReason_name, ResourceChangeReason_value)
	proto.RegisterEnum("PlayerSourceType", PlayerSourceType_name, PlayerSourceType_value)
	proto.RegisterEnum("AuthorizationDef", AuthorizationDef_name, AuthorizationDef_value)
	proto.RegisterEnum("UserStatus", UserStatus_name, UserStatus_value)
	proto.RegisterEnum("GameType", GameType_name, GameType_value)
	proto.RegisterEnum("RoomState", RoomState_name, RoomState_value)
	proto.RegisterEnum("PlayerRoomState", PlayerRoomState_name, PlayerRoomState_value)
	proto.RegisterEnum("PokerNum", PokerNum_name, PokerNum_value)
	proto.RegisterEnum("PokerColor", PokerColor_name, PokerColor_value)
	proto.RegisterEnum("MahjongColor", MahjongColor_name, MahjongColor_value)
	proto.RegisterEnum("MahjongNum", MahjongNum_name, MahjongNum_value)
	proto.RegisterEnum("GangHuaMahjongWinType", GangHuaMahjongWinType_name, GangHuaMahjongWinType_value)
	proto.RegisterEnum("GangHuaMahjongWinKind", GangHuaMahjongWinKind_name, GangHuaMahjongWinKind_value)
	proto.RegisterEnum("GangHuaMahjongUserLastStatus", GangHuaMahjongUserLastStatus_name, GangHuaMahjongUserLastStatus_value)
	proto.RegisterEnum("JinhuaOutType", JinhuaOutType_name, JinhuaOutType_value)
	proto.RegisterEnum("PayStatus", PayStatus_name, PayStatus_value)
	proto.RegisterEnum("PayType", PayType_name, PayType_value)
	proto.RegisterEnum("RoomType", RoomType_name, RoomType_value)
	proto.RegisterEnum("CompareBullDoType", CompareBullDoType_name, CompareBullDoType_value)
	proto.RegisterEnum("CrazyBullDoType", CrazyBullDoType_name, CrazyBullDoType_value)
	proto.RegisterEnum("DoubleLinkedDoType", DoubleLinkedDoType_name, DoubleLinkedDoType_value)
	proto.RegisterEnum("BaccaratDoType", BaccaratDoType_name, BaccaratDoType_value)
	proto.RegisterEnum("CompareBullPokerType", CompareBullPokerType_name, CompareBullPokerType_value)
	proto.RegisterEnum("CrazyBullPokerType", CrazyBullPokerType_name, CrazyBullPokerType_value)
	proto.RegisterEnum("DoubleLinkedPokerType", DoubleLinkedPokerType_name, DoubleLinkedPokerType_value)
	proto.RegisterEnum("RoomSeatsChangeReason", RoomSeatsChangeReason_name, RoomSeatsChangeReason_value)
	proto.RegisterEnum("Roles", Roles_name, Roles_value)
	proto.RegisterEnum("GangHuaMahjongDoType", GangHuaMahjongDoType_name, GangHuaMahjongDoType_value)
	proto.RegisterEnum("GangHuaMahjongOperateType", GangHuaMahjongOperateType_name, GangHuaMahjongOperateType_value)
	proto.RegisterEnum("GangHuaMahjongKongType", GangHuaMahjongKongType_name, GangHuaMahjongKongType_value)
	proto.RegisterEnum("GiftType", GiftType_name, GiftType_value)
	proto.RegisterEnum("GiftStatus", GiftStatus_name, GiftStatus_value)
	proto.RegisterEnum("RewardType", RewardType_name, RewardType_value)
	proto.RegisterEnum("LeaderBoardType", LeaderBoardType_name, LeaderBoardType_value)
	proto.RegisterEnum("GameCateGoryType", GameCateGoryType_name, GameCateGoryType_value)
	proto.RegisterEnum("ProductType", ProductType_name, ProductType_value)
	proto.RegisterEnum("Currency", Currency_name, Currency_value)
	proto.RegisterEnum("TaskType", TaskType_name, TaskType_value)
	proto.RegisterEnum("TaskStatus", TaskStatus_name, TaskStatus_value)
	proto.RegisterEnum("ConfigType", ConfigType_name, ConfigType_value)
	proto.RegisterEnum("LinkUpDoType", LinkUpDoType_name, LinkUpDoType_value)
	proto.RegisterEnum("RunFastDoType", RunFastDoType_name, RunFastDoType_value)
	proto.RegisterEnum("DaXuanMongoType", DaXuanMongoType_name, DaXuanMongoType_value)
	proto.RegisterEnum("DaXuanPartPokerFlag", DaXuanPartPokerFlag_name, DaXuanPartPokerFlag_value)
	proto.RegisterEnum("DaXuanOperateStep", DaXuanOperateStep_name, DaXuanOperateStep_value)
	proto.RegisterEnum("DaXuanDoType", DaXuanDoType_name, DaXuanDoType_value)
	proto.RegisterEnum("DaXuanRoomsType", DaXuanRoomsType_name, DaXuanRoomsType_value)
	proto.RegisterEnum("RunFastPokerType", RunFastPokerType_name, RunFastPokerType_value)
	proto.RegisterEnum("RunFastOperateType", RunFastOperateType_name, RunFastOperateType_value)
	proto.RegisterEnum("ShiSanShuiDoType", ShiSanShuiDoType_name, ShiSanShuiDoType_value)
	proto.RegisterEnum("ShiSanShuiCompareStep", ShiSanShuiCompareStep_name, ShiSanShuiCompareStep_value)
	proto.RegisterEnum("ShiSanShuiPokerType", ShiSanShuiPokerType_name, ShiSanShuiPokerType_value)
	proto.RegisterEnum("IconType", IconType_name, IconType_value)
	proto.RegisterEnum("IconNum", IconNum_name, IconNum_value)
	proto.RegisterEnum("DragonTigerFightDoType", DragonTigerFightDoType_name, DragonTigerFightDoType_value)
	proto.RegisterEnum("KickBankerReason", KickBankerReason_name, KickBankerReason_value)
	proto.RegisterEnum("DragonTigerCardArea", DragonTigerCardArea_name, DragonTigerCardArea_value)
	proto.RegisterEnum("DragonTigerType", DragonTigerType_name, DragonTigerType_value)
	proto.RegisterEnum("BaccaratCardArea", BaccaratCardArea_name, BaccaratCardArea_value)
	proto.RegisterEnum("BaccaratType", BaccaratType_name, BaccaratType_value)
	proto.RegisterEnum("HundredBullDoType", HundredBullDoType_name, HundredBullDoType_value)
	proto.RegisterEnum("HundredBullCardArea", HundredBullCardArea_name, HundredBullCardArea_value)
	proto.RegisterEnum("HundredBullBetArea", HundredBullBetArea_name, HundredBullBetArea_value)
	proto.RegisterEnum("PushBobbinDoType", PushBobbinDoType_name, PushBobbinDoType_value)
	proto.RegisterEnum("PushBobbinMahjongType", PushBobbinMahjongType_name, PushBobbinMahjongType_value)
	proto.RegisterEnum("PushBobbinCardArea", PushBobbinCardArea_name, PushBobbinCardArea_value)
	proto.RegisterEnum("PushBobbinBetArea", PushBobbinBetArea_name, PushBobbinBetArea_value)
	proto.RegisterEnum("ClubMemberStatus", ClubMemberStatus_name, ClubMemberStatus_value)
	proto.RegisterEnum("ClubStatus", ClubStatus_name, ClubStatus_value)
	proto.RegisterEnum("ClubRole", ClubRole_name, ClubRole_value)
	proto.RegisterEnum("LeagueMemberRole", LeagueMemberRole_name, LeagueMemberRole_value)
	proto.RegisterEnum("LeagueStatus", LeagueStatus_name, LeagueStatus_value)
	proto.RegisterEnum("LeaguePartnerStatus", LeaguePartnerStatus_name, LeaguePartnerStatus_value)
	proto.RegisterEnum("LeagueMemberStatus", LeagueMemberStatus_name, LeagueMemberStatus_value)
	proto.RegisterEnum("LeagueClubStatus", LeagueClubStatus_name, LeagueClubStatus_value)
	proto.RegisterEnum("LeagueDoType", LeagueDoType_name, LeagueDoType_value)
	proto.RegisterEnum("JoinLeagueRequestStatus", JoinLeagueRequestStatus_name, JoinLeagueRequestStatus_value)
	proto.RegisterEnum("ClubMemberChangeNoticeType", ClubMemberChangeNoticeType_name, ClubMemberChangeNoticeType_value)
	proto.RegisterEnum("JinhuaDoType", JinhuaDoType_name, JinhuaDoType_value)
	proto.RegisterEnum("JinhuaPokerType", JinhuaPokerType_name, JinhuaPokerType_value)
	proto.RegisterEnum("JinhuaOperateType", JinhuaOperateType_name, JinhuaOperateType_value)
	proto.RegisterEnum("JinhuaRaiseType", JinhuaRaiseType_name, JinhuaRaiseType_value)
	proto.RegisterEnum("JinhuaWaitOperateType", JinhuaWaitOperateType_name, JinhuaWaitOperateType_value)
	proto.RegisterEnum("JinhuaMode", JinhuaMode_name, JinhuaMode_value)
	proto.RegisterEnum("JinhuaBankerType", JinhuaBankerType_name, JinhuaBankerType_value)
	proto.RegisterEnum("RobotAction", RobotAction_name, RobotAction_value)
	proto.RegisterEnum("ReportType", ReportType_name, ReportType_value)
	proto.RegisterEnum("AchievementType", AchievementType_name, AchievementType_value)
	proto.RegisterEnum("GetCommissionType", GetCommissionType_name, GetCommissionType_value)
	proto.RegisterEnum("BloodSlotStatus", BloodSlotStatus_name, BloodSlotStatus_value)
	proto.RegisterEnum("RedBlackDoType", RedBlackDoType_name, RedBlackDoType_value)
	proto.RegisterEnum("RedBlackPokerType", RedBlackPokerType_name, RedBlackPokerType_value)
	proto.RegisterEnum("RedBlackCardArea", RedBlackCardArea_name, RedBlackCardArea_value)
	proto.RegisterEnum("MahjongKongEnum", MahjongKongEnum_name, MahjongKongEnum_value)
	proto.RegisterEnum("MahjongOperateEnum", MahjongOperateEnum_name, MahjongOperateEnum_value)
	proto.RegisterEnum("MahjongWinSourceEnum", MahjongWinSourceEnum_name, MahjongWinSourceEnum_value)
	proto.RegisterEnum("MahjongWinEnum", MahjongWinEnum_name, MahjongWinEnum_value)
	proto.RegisterEnum("LinCangMahjongDoType", LinCangMahjongDoType_name, LinCangMahjongDoType_value)
	proto.RegisterEnum("XueZhanMahjongDoType", XueZhanMahjongDoType_name, XueZhanMahjongDoType_value)
	proto.RegisterEnum("MahjongBeforeSettleEnum", MahjongBeforeSettleEnum_name, MahjongBeforeSettleEnum_value)
	proto.RegisterEnum("BenzBMWDoType", BenzBMWDoType_name, BenzBMWDoType_value)
	proto.RegisterEnum("AgentSubIdentity", AgentSubIdentity_name, AgentSubIdentity_value)
	proto.RegisterEnum("AgentRelation", AgentRelation_name, AgentRelation_value)
	proto.RegisterEnum("PayMentChannel", PayMentChannel_name, PayMentChannel_value)
	proto.RegisterEnum("OrderStatus", OrderStatus_name, OrderStatus_value)
	proto.RegisterEnum("HorseRaceLampType", HorseRaceLampType_name, HorseRaceLampType_value)
	proto.RegisterEnum("DaXuanPokerSanHuaType", DaXuanPokerSanHuaType_name, DaXuanPokerSanHuaType_value)
	proto.RegisterEnum("DaXuanPokerTypePrizeType", DaXuanPokerTypePrizeType_name, DaXuanPokerTypePrizeType_value)
	proto.RegisterEnum("DaXuanPokerType", DaXuanPokerType_name, DaXuanPokerType_value)
	proto.RegisterEnum("ClearJoyDoType", ClearJoyDoType_name, ClearJoyDoType_value)
	proto.RegisterEnum("LineGameSubType", LineGameSubType_name, LineGameSubType_value)
	proto.RegisterEnum("LineGameMode", LineGameMode_name, LineGameMode_value)
	proto.RegisterEnum("LineGameDoType", LineGameDoType_name, LineGameDoType_value)
	proto.RegisterEnum("LineGameElementType", LineGameElementType_name, LineGameElementType_value)
	proto.RegisterEnum("EmailState", EmailState_name, EmailState_value)
	proto.RegisterEnum("GemWarsDoType", GemWarsDoType_name, GemWarsDoType_value)
	proto.RegisterEnum("GemWarsBetArea", GemWarsBetArea_name, GemWarsBetArea_value)
	proto.RegisterType((*MessageLock)(nil), "MessageLock")
	proto.RegisterType((*MessageExtroInfo)(nil), "MessageExtroInfo")
	proto.RegisterType((*HandleMessageRequest)(nil), "HandleMessageRequest")
	proto.RegisterType((*HandleMessageReply)(nil), "HandleMessageReply")
	proto.RegisterType((*ErrorMessage)(nil), "ErrorMessage")
	proto.RegisterType((*EmptyMessage)(nil), "EmptyMessage")
	proto.RegisterType((*PlayerOnlineInfo)(nil), "PlayerOnlineInfo")
	proto.RegisterType((*PlayerInfo)(nil), "PlayerInfo")
	proto.RegisterType((*ThirdPartyAccessInfo)(nil), "ThirdPartyAccessInfo")
	proto.RegisterType((*ThirdPartyUerInfo)(nil), "ThirdPartyUerInfo")
	proto.RegisterType((*WeChatAccessInfo)(nil), "WeChatAccessInfo")
	proto.RegisterType((*WeChatUserInfo)(nil), "WeChatUserInfo")
	proto.RegisterType((*FacebookAccessInfo)(nil), "FacebookAccessInfo")
	proto.RegisterType((*FacebookUserInfo)(nil), "FacebookUserInfo")
	proto.RegisterType((*ClientRequest)(nil), "ClientRequest")
	proto.RegisterType((*ClientReply)(nil), "ClientReply")
	proto.RegisterType((*LoginRequest)(nil), "LoginRequest")
	proto.RegisterType((*WeChatLoginRequest)(nil), "WeChatLoginRequest")
	proto.RegisterType((*FacebookLoginRequest)(nil), "FacebookLoginRequest")
	proto.RegisterType((*LoginReply)(nil), "LoginReply")
	proto.RegisterType((*DefaultAuthRequest)(nil), "DefaultAuthRequest")
	proto.RegisterType((*DefaultAuthReply)(nil), "DefaultAuthReply")
	proto.RegisterType((*SetGlobalConfigRequest)(nil), "SetGlobalConfigRequest")
	proto.RegisterType((*SetGlobalConfigReply)(nil), "SetGlobalConfigReply")
	proto.RegisterType((*GetGlobalConfigAllRequest)(nil), "GetGlobalConfigAllRequest")
	proto.RegisterType((*GetGlobalConfigAllReply)(nil), "GetGlobalConfigAllReply")
	proto.RegisterType((*GetGameConfigAllRequest)(nil), "GetGameConfigAllRequest")
	proto.RegisterType((*GetGameConfigAllReply)(nil), "GetGameConfigAllReply")
	proto.RegisterType((*SetGameConfigRequest)(nil), "SetGameConfigRequest")
	proto.RegisterType((*SetGameConfigReply)(nil), "SetGameConfigReply")
	proto.RegisterType((*GetGameScenesRequest)(nil), "GetGameScenesRequest")
	proto.RegisterType((*GetGameScenesReply)(nil), "GetGameScenesReply")
	proto.RegisterType((*DeleteGameSceneRequest)(nil), "DeleteGameSceneRequest")
	proto.RegisterType((*DeleteGameSceneReply)(nil), "DeleteGameSceneReply")
	proto.RegisterType((*SendSimpleChatRequest)(nil), "SendSimpleChatRequest")
	proto.RegisterType((*SendSimpleChatReply)(nil), "SendSimpleChatReply")
	proto.RegisterType((*PushSimpleChat)(nil), "PushSimpleChat")
	proto.RegisterType((*RedisMessage)(nil), "RedisMessage")
	proto.RegisterType((*MysqlAccountInfo)(nil), "MysqlAccountInfo")
	proto.RegisterType((*MysqlLeaguePartner)(nil), "MysqlLeaguePartner")
	proto.RegisterType((*MysqlLeagueClub)(nil), "MysqlLeagueClub")
	proto.RegisterType((*LeagueMemberDetail)(nil), "LeagueMemberDetail")
	proto.RegisterType((*GetClubInfoRequest)(nil), "GetClubInfoRequest")
	proto.RegisterType((*GetClubInfoReply)(nil), "GetClubInfoReply")
	proto.RegisterType((*PushPlayerIconsChange)(nil), "PushPlayerIconsChange")
	proto.RegisterType((*LinkUpPlayerInfoChange)(nil), "LinkUpPlayerInfoChange")
	proto.RegisterType((*RoomPlayerReadyNumMessege)(nil), "RoomPlayerReadyNumMessege")
	proto.RegisterType((*LinkUpWatchPlayerRequest)(nil), "LinkUpWatchPlayerRequest")
	proto.RegisterType((*LinkUpWatchPlayerReply)(nil), "LinkUpWatchPlayerReply")
	proto.RegisterType((*QueryAccountByRoleRequest)(nil), "QueryAccountByRoleRequest")
	proto.RegisterType((*QueryAccountByRoleReply)(nil), "QueryAccountByRoleReply")
	proto.RegisterType((*QueryThirdPartyAccountRequest)(nil), "QueryThirdPartyAccountRequest")
	proto.RegisterType((*QueryThirdPartyAccountReply)(nil), "QueryThirdPartyAccountReply")
	proto.RegisterType((*MysqlKVMessage)(nil), "MysqlKVMessage")
	proto.RegisterType((*RegisterRequest)(nil), "RegisterRequest")
	proto.RegisterType((*RegisterReply)(nil), "RegisterReply")
	proto.RegisterType((*GetCaptchaRequest)(nil), "GetCaptchaRequest")
	proto.RegisterType((*GetCaptchaReply)(nil), "GetCaptchaReply")
	proto.RegisterType((*LoadPlayerRequest)(nil), "LoadPlayerRequest")
	proto.RegisterType((*LoadPlayerReply)(nil), "LoadPlayerReply")
	proto.RegisterType((*NewPlayerRequest)(nil), "NewPlayerRequest")
	proto.RegisterType((*NewPlayerReply)(nil), "NewPlayerReply")
	proto.RegisterType((*SavePlayerRequest)(nil), "SavePlayerRequest")
	proto.RegisterType((*Poker)(nil), "Poker")
	proto.RegisterType((*Mahjong)(nil), "Mahjong")
	proto.RegisterType((*MahjongArray)(nil), "MahjongArray")
	proto.RegisterType((*MahjongPersonCards)(nil), "MahjongPersonCards")
	proto.RegisterType((*MahjongBeforeOperateRequest)(nil), "MahjongBeforeOperateRequest")
	proto.RegisterType((*MahjongBeforeOperateReply)(nil), "MahjongBeforeOperateReply")
	proto.RegisterType((*MahjongQuadrupletZhiRequest)(nil), "MahjongQuadrupletZhiRequest")
	proto.RegisterType((*MahjongQuadrupletZhiReply)(nil), "MahjongQuadrupletZhiReply")
	proto.RegisterType((*MahjongQuadrupletBuRequest)(nil), "MahjongQuadrupletBuRequest")
	proto.RegisterType((*MahjongQuadrupletBuReply)(nil), "MahjongQuadrupletBuReply")
	proto.RegisterType((*MahjongQuadrupletAnRequest)(nil), "MahjongQuadrupletAnRequest")
	proto.RegisterType((*MahjongQuadrupletAnReply)(nil), "MahjongQuadrupletAnReply")
	proto.RegisterType((*MahjongCanTripletRequest)(nil), "MahjongCanTripletRequest")
	proto.RegisterType((*MahjongCanTripletReply)(nil), "MahjongCanTripletReply")
	proto.RegisterType((*MahjongWinRequest)(nil), "MahjongWinRequest")
	proto.RegisterType((*MahjongWinReply)(nil), "MahjongWinReply")
	proto.RegisterType((*GameChangeStateRequest)(nil), "GameChangeStateRequest")
	proto.RegisterType((*GameChangeStateReply)(nil), "GameChangeStateReply")
	proto.RegisterType((*SyncRoomPlayerInfo)(nil), "SyncRoomPlayerInfo")
	proto.RegisterType((*RoomPlayerInfo)(nil), "RoomPlayerInfo")
	proto.RegisterType((*GangHuaMahjongInRoom)(nil), "GangHuaMahjongInRoom")
	proto.RegisterType((*RoomPayByOtherInfo)(nil), "RoomPayByOtherInfo")
	proto.RegisterType((*SettleInfo)(nil), "SettleInfo")
	proto.RegisterType((*RoomInfo)(nil), "RoomInfo")
	proto.RegisterType((*GameReview)(nil), "GameReview")
	proto.RegisterType((*Escapee)(nil), "Escapee")
	proto.RegisterType((*Driver2GameLogicInfo)(nil), "Driver2GameLogicInfo")
	proto.RegisterType((*AllPoker)(nil), "AllPoker")
	proto.RegisterType((*GetPokerTypeRequest)(nil), "GetPokerTypeRequest")
	proto.RegisterType((*GetPokerTypeReply)(nil), "GetPokerTypeReply")
	proto.RegisterType((*GetCrazyBullPokerTypeReply)(nil), "GetCrazyBullPokerTypeReply")
	proto.RegisterType((*GetDoubleLinkedPokerTypeReply)(nil), "GetDoubleLinkedPokerTypeReply")
	proto.RegisterType((*ComparePokersRequest)(nil), "ComparePokersRequest")
	proto.RegisterType((*ComparePokersReply)(nil), "ComparePokersReply")
	proto.RegisterType((*RoomCodeInfo)(nil), "RoomCodeInfo")
	proto.RegisterType((*GameCreateRoomRequest)(nil), "GameCreateRoomRequest")
	proto.RegisterType((*GameCreateRoomReply)(nil), "GameCreateRoomReply")
	proto.RegisterType((*GameJoinRoomRequest)(nil), "GameJoinRoomRequest")
	proto.RegisterType((*GameJoinRoomReply)(nil), "GameJoinRoomReply")
	proto.RegisterType((*GameExitRoomRequest)(nil), "GameExitRoomRequest")
	proto.RegisterType((*GameExitRoomReply)(nil), "GameExitRoomReply")
	proto.RegisterType((*GameStartRoomRequest)(nil), "GameStartRoomRequest")
	proto.RegisterType((*GameStartRoomReply)(nil), "GameStartRoomReply")
	proto.RegisterType((*GameOpenCardRequest)(nil), "GameOpenCardRequest")
	proto.RegisterType((*GameOpenCardReply)(nil), "GameOpenCardReply")
	proto.RegisterType((*CompareBullDoRequest)(nil), "CompareBullDoRequest")
	proto.RegisterType((*CrazyBullDoRequest)(nil), "CrazyBullDoRequest")
	proto.RegisterType((*DoubleLinkedDoRequest)(nil), "DoubleLinkedDoRequest")
	proto.RegisterType((*BaccaratDoRequest)(nil), "BaccaratDoRequest")
	proto.RegisterType((*PushUserBalanceChange)(nil), "PushUserBalanceChange")
	proto.RegisterType((*PushRoomSeatsChange)(nil), "PushRoomSeatsChange")
	proto.RegisterType((*PushPlayerStateChange)(nil), "PushPlayerStateChange")
	proto.RegisterType((*PushStartPlayerChange)(nil), "PushStartPlayerChange")
	proto.RegisterType((*PushRoomStateChange)(nil), "PushRoomStateChange")
	proto.RegisterType((*PushPlayerCardChange)(nil), "PushPlayerCardChange")
	proto.RegisterType((*PushIsDoubleLinkedBoom)(nil), "PushIsDoubleLinkedBoom")
	proto.RegisterType((*PushIsDoubleLinkedBoomPlayer)(nil), "PushIsDoubleLinkedBoomPlayer")
	proto.RegisterType((*PushPlayerBoom)(nil), "PushPlayerBoom")
	proto.RegisterType((*PushIsNotBoomPlayer)(nil), "PushIsNotBoomPlayer")
	proto.RegisterType((*PushPlayerGangHuaMahjongSendCard)(nil), "PushPlayerGangHuaMahjongSendCard")
	proto.RegisterType((*PushPlayerGangHuaMahjongCardChange)(nil), "PushPlayerGangHuaMahjongCardChange")
	proto.RegisterType((*PushGangHuaMahjongOperate)(nil), "PushGangHuaMahjongOperate")
	proto.RegisterType((*PushGangHuaMahjongOperates)(nil), "PushGangHuaMahjongOperates")
	proto.RegisterType((*PushGangHuaMahjongOperateOver)(nil), "PushGangHuaMahjongOperateOver")
	proto.RegisterType((*PushGangHuaMahjongReqSelectOpenCard)(nil), "PushGangHuaMahjongReqSelectOpenCard")
	proto.RegisterType((*PushGangHuaMahjongOpenCards)(nil), "PushGangHuaMahjongOpenCards")
	proto.RegisterType((*PushDoTimeInReady)(nil), "PushDoTimeInReady")
	proto.RegisterType((*OpenCard)(nil), "OpenCard")
	proto.RegisterType((*PushRoomSettleInfo)(nil), "PushRoomSettleInfo")
	proto.RegisterType((*PushRoomBigSettleInfo)(nil), "PushRoomBigSettleInfo")
	proto.RegisterType((*PushPlayerOpenCard)(nil), "PushPlayerOpenCard")
	proto.RegisterType((*PushRoomDoTimeChange)(nil), "PushRoomDoTimeChange")
	proto.RegisterType((*GetShortIdRequest)(nil), "GetShortIdRequest")
	proto.RegisterType((*GetShortIdReply)(nil), "GetShortIdReply")
	proto.RegisterType((*GetClubInviteCodeRequest)(nil), "GetClubInviteCodeRequest")
	proto.RegisterType((*GetClubInviteCodeReply)(nil), "GetClubInviteCodeReply")
	proto.RegisterType((*GetLeagueInviteCodeRequest)(nil), "GetLeagueInviteCodeRequest")
	proto.RegisterType((*GetLeagueInviteCodeReply)(nil), "GetLeagueInviteCodeReply")
	proto.RegisterType((*GenShortIdRequest)(nil), "GenShortIdRequest")
	proto.RegisterType((*GenShortIdReply)(nil), "GenShortIdReply")
	proto.RegisterType((*GlobalConfig)(nil), "GlobalConfig")
	proto.RegisterType((*GameConfig)(nil), "GameConfig")
	proto.RegisterType((*MysqlRBTMessage)(nil), "MysqlRBTMessage")
	proto.RegisterType((*RobotMngRequest)(nil), "RobotMngRequest")
	proto.RegisterType((*RobotMngReply)(nil), "RobotMngReply")
	proto.RegisterType((*RBTLoginRequest)(nil), "RBTLoginRequest")
	proto.RegisterType((*RBTLoginReply)(nil), "RBTLoginReply")
	proto.RegisterType((*RobotShortidRequest)(nil), "RobotShortidRequest")
	proto.RegisterType((*RobotShortidReply)(nil), "RobotShortidReply")
	proto.RegisterType((*Authorization)(nil), "Authorization")
	proto.RegisterType((*MysqlRBTNumberRequest)(nil), "MysqlRBTNumberRequest")
	proto.RegisterType((*MysqlRBTNumberReply)(nil), "MysqlRBTNumberReply")
	proto.RegisterType((*GetAccountPageListRequest)(nil), "GetAccountPageListRequest")
	proto.RegisterType((*AccountDetailReply)(nil), "AccountDetailReply")
	proto.RegisterType((*GetAccountPageListReply)(nil), "GetAccountPageListReply")
	proto.RegisterType((*GetOnlineAccountPageListReply)(nil), "GetOnlineAccountPageListReply")
	proto.RegisterType((*OnlineAccountDetail)(nil), "OnlineAccountDetail")
	proto.RegisterType((*AddAccountRequest)(nil), "AddAccountRequest")
	proto.RegisterType((*UpdateAccountRequest)(nil), "UpdateAccountRequest")
	proto.RegisterType((*GameInfoRequest)(nil), "GameInfoRequest")
	proto.RegisterType((*GameInfoReply)(nil), "GameInfoReply")
	proto.RegisterMapType((map[int32]*GameStatus)(nil), "GameInfoReply.GameMapEntry")
	proto.RegisterType((*GameStatus)(nil), "GameStatus")
	proto.RegisterType((*GameInfoGetGameSceneAndConfig)(nil), "GameInfoGetGameSceneAndConfig")
	proto.RegisterType((*GameScene)(nil), "GameScene")
	proto.RegisterMapType((map[string]*GameCfg)(nil), "GameScene.ConfigEntry")
	proto.RegisterType((*GameCfg)(nil), "GameCfg")
	proto.RegisterType((*SetAccountStatusRequest)(nil), "SetAccountStatusRequest")
	proto.RegisterType((*SetAccountStatusReply)(nil), "SetAccountStatusReply")
	proto.RegisterType((*DeleteAccountRequest)(nil), "DeleteAccountRequest")
	proto.RegisterType((*DeleteAccountReply)(nil), "DeleteAccountReply")
	proto.RegisterType((*KickPlayerRequest)(nil), "KickPlayerRequest")
	proto.RegisterType((*AccountScoreRequest)(nil), "AccountScoreRequest")
	proto.RegisterType((*AccountScoreReply)(nil), "AccountScoreReply")
	proto.RegisterType((*GetAccountInfo)(nil), "GetAccountInfo")
	proto.RegisterType((*PushPlayerGangHuaMahjongReqOutCard)(nil), "PushPlayerGangHuaMahjongReqOutCard")
	proto.RegisterType((*GangHuaMahjongDoRequest)(nil), "GangHuaMahjongDoRequest")
	proto.RegisterType((*GangHuaMahjongOperateRequest)(nil), "GangHuaMahjongOperateRequest")
	proto.RegisterType((*GangHuaMahjongOperateReply)(nil), "GangHuaMahjongOperateReply")
	proto.RegisterType((*PushGangHuaMahjongOperateReply)(nil), "PushGangHuaMahjongOperateReply")
	proto.RegisterType((*GangHuaMahjongXiaZhuangRequest)(nil), "GangHuaMahjongXiaZhuangRequest")
	proto.RegisterType((*GangHuaMahjongXiaZhuangReply)(nil), "GangHuaMahjongXiaZhuangReply")
	proto.RegisterType((*GangHuaMahjongMaiDianRequest)(nil), "GangHuaMahjongMaiDianRequest")
	proto.RegisterType((*GangHuaMahjongMaiDianReply)(nil), "GangHuaMahjongMaiDianReply")
	proto.RegisterType((*PushGangHuaMahjongBankerTimes)(nil), "PushGangHuaMahjongBankerTimes")
	proto.RegisterType((*PushGangHuaMahjongBetInfo)(nil), "PushGangHuaMahjongBetInfo")
	proto.RegisterType((*GiftInfo)(nil), "GiftInfo")
	proto.RegisterType((*GiftList)(nil), "GiftList")
	proto.RegisterType((*GiftContentInfo)(nil), "GiftContentInfo")
	proto.RegisterType((*GetGiftInfo)(nil), "GetGiftInfo")
	proto.RegisterType((*GetGiftInfoRequest)(nil), "GetGiftInfoRequest")
	proto.RegisterType((*GetGiftInfoReply)(nil), "GetGiftInfoReply")
	proto.RegisterType((*GetSignGiftRequest)(nil), "GetSignGiftRequest")
	proto.RegisterType((*GetSignGiftReply)(nil), "GetSignGiftReply")
	proto.RegisterType((*GetLeaderBoardRequest)(nil), "GetLeaderBoardRequest")
	proto.RegisterType((*GetLeaderBoardReply)(nil), "GetLeaderBoardReply")
	proto.RegisterType((*LeaderBoardInfo)(nil), "LeaderBoardInfo")
	proto.RegisterType((*LeaderBoardPlayerInfo)(nil), "LeaderBoardPlayerInfo")
	proto.RegisterType((*GetGiftConfigRequest)(nil), "GetGiftConfigRequest")
	proto.RegisterType((*GetGiftConfigReply)(nil), "GetGiftConfigReply")
	proto.RegisterType((*SetGiftConfigRequest)(nil), "SetGiftConfigRequest")
	proto.RegisterType((*SetGiftConfigReply)(nil), "SetGiftConfigReply")
	proto.RegisterType((*InsertGiftConfigRequest)(nil), "InsertGiftConfigRequest")
	proto.RegisterType((*InsertGiftConfigReply)(nil), "InsertGiftConfigReply")
	proto.RegisterType((*DeleteGiftConfigRequest)(nil), "DeleteGiftConfigRequest")
	proto.RegisterType((*DeleteGiftConfigReply)(nil), "DeleteGiftConfigReply")
	proto.RegisterType((*HorseRaceLampConfig)(nil), "HorseRaceLampConfig")
	proto.RegisterType((*HorseRaceLamp)(nil), "HorseRaceLamp")
	proto.RegisterType((*ProductConfig)(nil), "ProductConfig")
	proto.RegisterType((*GetHorseRaceLampConfigRequest)(nil), "GetHorseRaceLampConfigRequest")
	proto.RegisterType((*GetHorseRaceLampConfigReply)(nil), "GetHorseRaceLampConfigReply")
	proto.RegisterType((*GetProductConfigRequest)(nil), "GetProductConfigRequest")
	proto.RegisterType((*GetProductConfigReply)(nil), "GetProductConfigReply")
	proto.RegisterType((*UpdateHorseRaceLampConfigRequest)(nil), "UpdateHorseRaceLampConfigRequest")
	proto.RegisterType((*UpdateHorseRaceLampConfigReply)(nil), "UpdateHorseRaceLampConfigReply")
	proto.RegisterType((*UpdateProductConfigRequest)(nil), "UpdateProductConfigRequest")
	proto.RegisterType((*UpdateProductConfigReply)(nil), "UpdateProductConfigReply")
	proto.RegisterType((*InsertHorseRaceLampConfigRequest)(nil), "InsertHorseRaceLampConfigRequest")
	proto.RegisterType((*InsertHorseRaceLampConfigReply)(nil), "InsertHorseRaceLampConfigReply")
	proto.RegisterType((*InsertProductConfigRequest)(nil), "InsertProductConfigRequest")
	proto.RegisterType((*InsertProductConfigReply)(nil), "InsertProductConfigReply")
	proto.RegisterType((*DeleteHorseRaceLampConfigRequest)(nil), "DeleteHorseRaceLampConfigRequest")
	proto.RegisterType((*DeleteHorseRaceLampConfigReply)(nil), "DeleteHorseRaceLampConfigReply")
	proto.RegisterType((*DeleteProductConfigRequest)(nil), "DeleteProductConfigRequest")
	proto.RegisterType((*DeleteProductConfigReply)(nil), "DeleteProductConfigReply")
	proto.RegisterType((*ChannelConfig)(nil), "ChannelConfig")
	proto.RegisterType((*GetChannelConfigRequest)(nil), "GetChannelConfigRequest")
	proto.RegisterType((*GetChannelConfigReply)(nil), "GetChannelConfigReply")
	proto.RegisterType((*UpdateChannelConfigRequest)(nil), "UpdateChannelConfigRequest")
	proto.RegisterType((*UpdateChannelConfigReply)(nil), "UpdateChannelConfigReply")
	proto.RegisterType((*InsertChannelConfigRequest)(nil), "InsertChannelConfigRequest")
	proto.RegisterType((*InsertChannelConfigReply)(nil), "InsertChannelConfigReply")
	proto.RegisterType((*DeleteChannelConfigRequest)(nil), "DeleteChannelConfigRequest")
	proto.RegisterType((*DeleteChannelConfigReply)(nil), "DeleteChannelConfigReply")
	proto.RegisterType((*TaskConfig)(nil), "TaskConfig")
	proto.RegisterType((*GetTaskConfigRequest)(nil), "GetTaskConfigRequest")
	proto.RegisterType((*GetTaskConfigReply)(nil), "GetTaskConfigReply")
	proto.RegisterType((*UpdateTaskConfigRequest)(nil), "UpdateTaskConfigRequest")
	proto.RegisterType((*UpdateTaskConfigReply)(nil), "UpdateTaskConfigReply")
	proto.RegisterType((*InsertTaskConfigRequest)(nil), "InsertTaskConfigRequest")
	proto.RegisterType((*InsertTaskConfigReply)(nil), "InsertTaskConfigReply")
	proto.RegisterType((*DeleteTaskConfigRequest)(nil), "DeleteTaskConfigRequest")
	proto.RegisterType((*DeleteTaskConfigReply)(nil), "DeleteTaskConfigReply")
	proto.RegisterType((*TaskInfo)(nil), "TaskInfo")
	proto.RegisterType((*TaskInfoRequest)(nil), "TaskInfoRequest")
	proto.RegisterType((*TaskInfoReply)(nil), "TaskInfoReply")
	proto.RegisterType((*GetTaskInfoRewardRequest)(nil), "GetTaskInfoRewardRequest")
	proto.RegisterType((*GetTaskInfoRewardReply)(nil), "GetTaskInfoRewardReply")
	proto.RegisterType((*SpinInfoRequest)(nil), "SpinInfoRequest")
	proto.RegisterType((*SpinInfoReply)(nil), "SpinInfoReply")
	proto.RegisterType((*GetSpinRewardRequest)(nil), "GetSpinRewardRequest")
	proto.RegisterType((*GetSpinRewardReply)(nil), "GetSpinRewardReply")
	proto.RegisterType((*SpinRecord)(nil), "SpinRecord")
	proto.RegisterType((*GetSpinRecordRequest)(nil), "GetSpinRecordRequest")
	proto.RegisterType((*GetSpinRecordReply)(nil), "GetSpinRecordReply")
	proto.RegisterType((*GetClientConfigRequest)(nil), "GetClientConfigRequest")
	proto.RegisterType((*GetClientConfigReply)(nil), "GetClientConfigReply")
	proto.RegisterType((*DaXuanInRoom)(nil), "DaXuanInRoom")
	proto.RegisterType((*DaXuanPartRequest)(nil), "DaXuanPartRequest")
	proto.RegisterType((*DaXuanPokerLog)(nil), "DaXuanPokerLog")
	proto.RegisterType((*DaXuanPartReply)(nil), "DaXuanPartReply")
	proto.RegisterType((*DaXuanPassRequest)(nil), "DaXuanPassRequest")
	proto.RegisterType((*DaXuanPassReply)(nil), "DaXuanPassReply")
	proto.RegisterType((*DaXuanAllInRequest)(nil), "DaXuanAllInRequest")
	proto.RegisterType((*DaXuanAllInReply)(nil), "DaXuanAllInReply")
	proto.RegisterType((*DaXuanPlusRequest)(nil), "DaXuanPlusRequest")
	proto.RegisterType((*DaXuanPlusReply)(nil), "DaXuanPlusReply")
	proto.RegisterType((*DaXuanFollowRequest)(nil), "DaXuanFollowRequest")
	proto.RegisterType((*DaXuanFollowReply)(nil), "DaXuanFollowReply")
	proto.RegisterType((*DaXuanCallRequest)(nil), "DaXuanCallRequest")
	proto.RegisterType((*DaXuanCallReply)(nil), "DaXuanCallReply")
	proto.RegisterType((*DaXuanFoldRequest)(nil), "DaXuanFoldRequest")
	proto.RegisterType((*DaXuanFoldReply)(nil), "DaXuanFoldReply")
	proto.RegisterType((*GetRoomsDaXuanRequest)(nil), "GetRoomsDaXuanRequest")
	proto.RegisterType((*GetGameReviewRequest)(nil), "GetGameReviewRequest")
	proto.RegisterType((*UpdTransactionPasswordRequest)(nil), "UpdTransactionPasswordRequest")
	proto.RegisterType((*UpdTransactionPasswordReply)(nil), "UpdTransactionPasswordReply")
	proto.RegisterType((*GetGameReviewReply)(nil), "GetGameReviewReply")
	proto.RegisterType((*GetRecordRequest)(nil), "GetRecordRequest")
	proto.RegisterType((*GetRecordReply)(nil), "GetRecordReply")
	proto.RegisterType((*GetRoomsDaXuanReply)(nil), "GetRoomsDaXuanReply")
	proto.RegisterType((*DaXuanUpSeatRequest)(nil), "DaXuanUpSeatRequest")
	proto.RegisterType((*DaXuanUpSeatReply)(nil), "DaXuanUpSeatReply")
	proto.RegisterType((*DaXuanDownSeatRequest)(nil), "DaXuanDownSeatRequest")
	proto.RegisterType((*DaXuanDownSeatReply)(nil), "DaXuanDownSeatReply")
	proto.RegisterType((*DaXuanKeepSeatRequest)(nil), "DaXuanKeepSeatRequest")
	proto.RegisterType((*DaXuanKeepSeatReply)(nil), "DaXuanKeepSeatReply")
	proto.RegisterType((*DaXuanBackSeatRequest)(nil), "DaXuanBackSeatRequest")
	proto.RegisterType((*DaXuanBackSeatReply)(nil), "DaXuanBackSeatReply")
	proto.RegisterType((*DaXuanTopUpRequest)(nil), "DaXuanTopUpRequest")
	proto.RegisterType((*DaXuanTopUpReply)(nil), "DaXuanTopUpReply")
	proto.RegisterType((*PushTableChange)(nil), "PushTableChange")
	proto.RegisterType((*CurDoPlayerMessege)(nil), "CurDoPlayerMessege")
	proto.RegisterType((*PlayerDoTypeMessege)(nil), "PlayerDoTypeMessege")
	proto.RegisterType((*PublicPokersMessege)(nil), "PublicPokersMessege")
	proto.RegisterType((*PublicPokers)(nil), "PublicPokers")
	proto.RegisterType((*PushTopUp)(nil), "PushTopUp")
	proto.RegisterType((*RunFastInRoom)(nil), "RunFastInRoom")
	proto.RegisterType((*Get2CellsCanLinkRequest)(nil), "Get2CellsCanLinkRequest")
	proto.RegisterType((*Get2CellsCanLinkReply)(nil), "Get2CellsCanLinkReply")
	proto.RegisterType((*LinkUpClearIconRequest)(nil), "LinkUpClearIconRequest")
	proto.RegisterType((*LinkUpClearIconReply)(nil), "LinkUpClearIconReply")
	proto.RegisterType((*LinkUpDoRequest)(nil), "LinkUpDoRequest")
	proto.RegisterType((*RunFastOperateRequest)(nil), "RunFastOperateRequest")
	proto.RegisterType((*RunFastOperateReply)(nil), "RunFastOperateReply")
	proto.RegisterType((*PushPlayerSpecialCard)(nil), "PushPlayerSpecialCard")
	proto.RegisterType((*ShiSanShuiPlaceRequest)(nil), "ShiSanShuiPlaceRequest")
	proto.RegisterType((*ShiSanShuiAskForPlaceRequest)(nil), "ShiSanShuiAskForPlaceRequest")
	proto.RegisterType((*ShiSanShuiAskForPlaceReply)(nil), "ShiSanShuiAskForPlaceReply")
	proto.RegisterType((*ShiSanShuiPlaceReply)(nil), "ShiSanShuiPlaceReply")
	proto.RegisterType((*ShiSanShuiCompareLog)(nil), "ShiSanShuiCompareLog")
	proto.RegisterType((*ShiSanShuiCompareMessege)(nil), "ShiSanShuiCompareMessege")
	proto.RegisterType((*ShiSanShuiPlasedMessege)(nil), "ShiSanShuiPlasedMessege")
	proto.RegisterType((*ShiSanShuiAutoPlaceRequest)(nil), "ShiSanShuiAutoPlaceRequest")
	proto.RegisterType((*ShiSanShuiAutoPlaceReply)(nil), "ShiSanShuiAutoPlaceReply")
	proto.RegisterType((*ShiSanShuiDoRequest)(nil), "ShiSanShuiDoRequest")
	proto.RegisterType((*ShiSanShuiPlacePoker)(nil), "ShiSanShuiPlacePoker")
	proto.RegisterType((*RunFastDoRequest)(nil), "RunFastDoRequest")
	proto.RegisterType((*DaXuanDoRequest)(nil), "DaXuanDoRequest")
	proto.RegisterType((*IconPoint)(nil), "IconPoint")
	proto.RegisterType((*IconArray)(nil), "IconArray")
	proto.RegisterType((*Icon)(nil), "Icon")
	proto.RegisterType((*CrazyBetRequest)(nil), "CrazyBetRequest")
	proto.RegisterType((*CrazyRubbingCardsRequest)(nil), "CrazyRubbingCardsRequest")
	proto.RegisterType((*DoubleRubbingCardsRequest)(nil), "DoubleRubbingCardsRequest")
	proto.RegisterType((*DoubleLinkedBetRequest)(nil), "DoubleLinkedBetRequest")
	proto.RegisterType((*DoubleLinkedLaoRequest)(nil), "DoubleLinkedLaoRequest")
	proto.RegisterType((*DoubleLinkedPokerRequest)(nil), "DoubleLinkedPokerRequest")
	proto.RegisterType((*DoubleLinkedPokerReply)(nil), "DoubleLinkedPokerReply")
	proto.RegisterType((*DoubleLinkedLaoReply)(nil), "DoubleLinkedLaoReply")
	proto.RegisterType((*DoubleLinkedBetReply)(nil), "DoubleLinkedBetReply")
	proto.RegisterType((*CrazyTigerBetReply)(nil), "CrazyTigerBetReply")
	proto.RegisterType((*CrazyRubbingCardsReply)(nil), "CrazyRubbingCardsReply")
	proto.RegisterType((*DoubleRubbingCardsReply)(nil), "DoubleRubbingCardsReply")
	proto.RegisterType((*CrazyBullPlayerBet)(nil), "CrazyBullPlayerBet")
	proto.RegisterType((*CrazyBullPlayerRubbingCards)(nil), "CrazyBullPlayerRubbingCards")
	proto.RegisterType((*DoubleLinkedPlayerRubbingCards)(nil), "DoubleLinkedPlayerRubbingCards")
	proto.RegisterType((*DoubleLinkedPlayerLao)(nil), "DoubleLinkedPlayerLao")
	proto.RegisterType((*DoubleLinkedPlayerZhuangLao)(nil), "DoubleLinkedPlayerZhuangLao")
	proto.RegisterType((*DoubleLinkedPlayerBet)(nil), "DoubleLinkedPlayerBet")
	proto.RegisterType((*CrazyUpBankerRequest)(nil), "CrazyUpBankerRequest")
	proto.RegisterType((*DoubleLinkedUpBankerRequest)(nil), "DoubleLinkedUpBankerRequest")
	proto.RegisterType((*DoubleLinkedUpBankerReply)(nil), "DoubleLinkedUpBankerReply")
	proto.RegisterType((*CrazyUpBankerReply)(nil), "CrazyUpBankerReply")
	proto.RegisterType((*PushCrazyBullChangeBankers)(nil), "PushCrazyBullChangeBankers")
	proto.RegisterType((*PushDoubleLinkedChangeBankers)(nil), "PushDoubleLinkedChangeBankers")
	proto.RegisterType((*PushDaXuanBankers)(nil), "PushDaXuanBankers")
	proto.RegisterType((*PushCrazyBullBankers)(nil), "PushCrazyBullBankers")
	proto.RegisterType((*PushDoubleLinkedBankers)(nil), "PushDoubleLinkedBankers")
	proto.RegisterType((*PushDoubleLinkedMultipleuuid)(nil), "PushDoubleLinkedMultipleuuid")
	proto.RegisterType((*PushCrazyBullMultipleuuid)(nil), "PushCrazyBullMultipleuuid")
	proto.RegisterType((*DragonTigerFightDoRequest)(nil), "DragonTigerFightDoRequest")
	proto.RegisterType((*PushDragonTigerBankerMessage)(nil), "PushDragonTigerBankerMessage")
	proto.RegisterType((*PushDragonTigerPoker)(nil), "PushDragonTigerPoker")
	proto.RegisterType((*DragonTigerBetRequest)(nil), "DragonTigerBetRequest")
	proto.RegisterType((*DragonTigerBetReply)(nil), "DragonTigerBetReply")
	proto.RegisterType((*PushDragonTigerPlayerBets)(nil), "PushDragonTigerPlayerBets")
	proto.RegisterType((*PushDragonTigerPlayerBet)(nil), "PushDragonTigerPlayerBet")
	proto.RegisterType((*DragonTigerUpBankerRequest)(nil), "DragonTigerUpBankerRequest")
	proto.RegisterType((*DragonTigerUpBankerReply)(nil), "DragonTigerUpBankerReply")
	proto.RegisterType((*DragonTigerDownBankerRequest)(nil), "DragonTigerDownBankerRequest")
	proto.RegisterType((*DragonTigerDownBankerReply)(nil), "DragonTigerDownBankerReply")
	proto.RegisterType((*PushDragonTigerChangeBankers)(nil), "PushDragonTigerChangeBankers")
	proto.RegisterType((*DragonTigerWinInfo)(nil), "DragonTigerWinInfo")
	proto.RegisterType((*PushDragonTigerWinInfos)(nil), "PushDragonTigerWinInfos")
	proto.RegisterType((*PushDragonTigerReadyInit)(nil), "PushDragonTigerReadyInit")
	proto.RegisterType((*PushBaccaratReadyInit)(nil), "PushBaccaratReadyInit")
	proto.RegisterType((*PushBaccaratBankerMessage)(nil), "PushBaccaratBankerMessage")
	proto.RegisterType((*BaccaratWinInfo)(nil), "BaccaratWinInfo")
	proto.RegisterType((*PushBaccaratWinInfos)(nil), "PushBaccaratWinInfos")
	proto.RegisterType((*PushBaccaratPoker)(nil), "PushBaccaratPoker")
	proto.RegisterType((*BaccaratBetRequest)(nil), "BaccaratBetRequest")
	proto.RegisterType((*BaccaratBetReply)(nil), "BaccaratBetReply")
	proto.RegisterType((*PushBaccaratPlayerBet)(nil), "PushBaccaratPlayerBet")
	proto.RegisterType((*BaccaratUpBankerRequest)(nil), "BaccaratUpBankerRequest")
	proto.RegisterType((*BaccaratUpBankerReply)(nil), "BaccaratUpBankerReply")
	proto.RegisterType((*BaccaratDownBankerRequest)(nil), "BaccaratDownBankerRequest")
	proto.RegisterType((*BaccaratDownBankerReply)(nil), "BaccaratDownBankerReply")
	proto.RegisterType((*PushBaccaratChangeBankers)(nil), "PushBaccaratChangeBankers")
	proto.RegisterType((*HundredBullDoRequest)(nil), "HundredBullDoRequest")
	proto.RegisterType((*PushHundredBullBankerMessage)(nil), "PushHundredBullBankerMessage")
	proto.RegisterType((*HundredBullPokerCard)(nil), "HundredBullPokerCard")
	proto.RegisterType((*HundredBullPokerPublish)(nil), "HundredBullPokerPublish")
	proto.RegisterType((*HundredBullPokerHidden)(nil), "HundredBullPokerHidden")
	proto.RegisterType((*HundredBullWinInfo)(nil), "HundredBullWinInfo")
	proto.RegisterType((*PushHundredBullLocation)(nil), "PushHundredBullLocation")
	proto.RegisterType((*PushHundredBullSendPoker)(nil), "PushHundredBullSendPoker")
	proto.RegisterType((*PushHundredBullSettle)(nil), "PushHundredBullSettle")
	proto.RegisterType((*HundredBullWinRecord)(nil), "HundredBullWinRecord")
	proto.RegisterType((*PushHundredBullChangeBankers)(nil), "PushHundredBullChangeBankers")
	proto.RegisterType((*HundredBullBetRequest)(nil), "HundredBullBetRequest")
	proto.RegisterType((*HundredBullBetReply)(nil), "HundredBullBetReply")
	proto.RegisterType((*PushHundredBullPlayerBet)(nil), "PushHundredBullPlayerBet")
	proto.RegisterType((*PushHundredBullPlayerBets)(nil), "PushHundredBullPlayerBets")
	proto.RegisterType((*HundredBullUpBankerRequest)(nil), "HundredBullUpBankerRequest")
	proto.RegisterType((*HundredBullUpBankerReply)(nil), "HundredBullUpBankerReply")
	proto.RegisterType((*HundredBullDownBankerRequest)(nil), "HundredBullDownBankerRequest")
	proto.RegisterType((*HundredBullDownBankerReply)(nil), "HundredBullDownBankerReply")
	proto.RegisterType((*HundredBullGetRoomWinLogRequest)(nil), "HundredBullGetRoomWinLogRequest")
	proto.RegisterType((*HundredBullGetRoomWinLogReply)(nil), "HundredBullGetRoomWinLogReply")
	proto.RegisterType((*HundredBullGetRoomPlayersRequest)(nil), "HundredBullGetRoomPlayersRequest")
	proto.RegisterType((*HundredBullGetRoomPlayersReply)(nil), "HundredBullGetRoomPlayersReply")
	proto.RegisterType((*PushBobbinDoRequest)(nil), "PushBobbinDoRequest")
	proto.RegisterType((*PushPushBobbinBankerMessage)(nil), "PushPushBobbinBankerMessage")
	proto.RegisterType((*PushBobbinMahjong)(nil), "PushBobbinMahjong")
	proto.RegisterType((*PushBobbinWinInfo)(nil), "PushBobbinWinInfo")
	proto.RegisterType((*PushPushBobbinLocation)(nil), "PushPushBobbinLocation")
	proto.RegisterType((*PushPushBobbinSendPoker)(nil), "PushPushBobbinSendPoker")
	proto.RegisterType((*PushPushBobbinSettle)(nil), "PushPushBobbinSettle")
	proto.RegisterType((*PushBobbinWinRecord)(nil), "PushBobbinWinRecord")
	proto.RegisterType((*PushPushBobbinChangeBankers)(nil), "PushPushBobbinChangeBankers")
	proto.RegisterType((*PushBobbinBetRequest)(nil), "PushBobbinBetRequest")
	proto.RegisterType((*PushBobbinBetReply)(nil), "PushBobbinBetReply")
	proto.RegisterType((*PushPushBobbinPlayerBet)(nil), "PushPushBobbinPlayerBet")
	proto.RegisterType((*PushPushBobbinPlayerBets)(nil), "PushPushBobbinPlayerBets")
	proto.RegisterType((*PushBobbinUpBankerRequest)(nil), "PushBobbinUpBankerRequest")
	proto.RegisterType((*PushBobbinUpBankerReply)(nil), "PushBobbinUpBankerReply")
	proto.RegisterType((*PushBobbinDownBankerRequest)(nil), "PushBobbinDownBankerRequest")
	proto.RegisterType((*PushBobbinDownBankerReply)(nil), "PushBobbinDownBankerReply")
	proto.RegisterType((*PushBobbinGetRoomWinLogRequest)(nil), "PushBobbinGetRoomWinLogRequest")
	proto.RegisterType((*PushBobbinGetRoomWinLogReply)(nil), "PushBobbinGetRoomWinLogReply")
	proto.RegisterType((*PushBobbinGetRoomPlayersRequest)(nil), "PushBobbinGetRoomPlayersRequest")
	proto.RegisterType((*PushBobbinGetRoomPlayersReply)(nil), "PushBobbinGetRoomPlayersReply")
	proto.RegisterType((*BetPattern)(nil), "BetPattern")
	proto.RegisterType((*LotteryPlayerBet)(nil), "LotteryPlayerBet")
	proto.RegisterType((*ClubMember)(nil), "ClubMember")
	proto.RegisterType((*ClientClubRoomInfo)(nil), "ClientClubRoomInfo")
	proto.RegisterType((*ClubGameInfo)(nil), "ClubGameInfo")
	proto.RegisterType((*ClubSettings)(nil), "ClubSettings")
	proto.RegisterType((*ClubInfo)(nil), "ClubInfo")
	proto.RegisterType((*ClientClubMember)(nil), "ClientClubMember")
	proto.RegisterType((*ClientClubInfo)(nil), "ClientClubInfo")
	proto.RegisterType((*QueryClubInfoRequest)(nil), "QueryClubInfoRequest")
	proto.RegisterType((*QueryClubInfoReply)(nil), "QueryClubInfoReply")
	proto.RegisterType((*GetClubPageListRequest)(nil), "GetClubPageListRequest")
	proto.RegisterType((*GetClubPageListReply)(nil), "GetClubPageListReply")
	proto.RegisterType((*GetClubPageDataDetail)(nil), "GetClubPageDataDetail")
	proto.RegisterType((*ListMyClub)(nil), "ListMyClub")
	proto.RegisterType((*CreateClubRequest)(nil), "CreateClubRequest")
	proto.RegisterType((*CreateClubReply)(nil), "CreateClubReply")
	proto.RegisterType((*DismissClubRequest)(nil), "DismissClubRequest")
	proto.RegisterType((*DismissClubReply)(nil), "DismissClubReply")
	proto.RegisterType((*ClubSettingRequest)(nil), "ClubSettingRequest")
	proto.RegisterType((*ClubSettingReply)(nil), "ClubSettingReply")
	proto.RegisterType((*FreezeClubMemberRequest)(nil), "FreezeClubMemberRequest")
	proto.RegisterType((*FreezeClubMemberReply)(nil), "FreezeClubMemberReply")
	proto.RegisterType((*SetClubRoomCreatorRequest)(nil), "SetClubRoomCreatorRequest")
	proto.RegisterType((*SetClubRoomCreatorReply)(nil), "SetClubRoomCreatorReply")
	proto.RegisterType((*ApplyJoinClubRequest)(nil), "ApplyJoinClubRequest")
	proto.RegisterType((*HandleJoinClubApplyRequest)(nil), "HandleJoinClubApplyRequest")
	proto.RegisterType((*HandleJoinClubApplyReply)(nil), "HandleJoinClubApplyReply")
	proto.RegisterType((*CreateClubRoomRequest)(nil), "CreateClubRoomRequest")
	proto.RegisterType((*CreateClubRoomReply)(nil), "CreateClubRoomReply")
	proto.RegisterType((*CloseClubRoomRequest)(nil), "CloseClubRoomRequest")
	proto.RegisterType((*CloseClubRoomReply)(nil), "CloseClubRoomReply")
	proto.RegisterType((*QueryClubMemberRequest)(nil), "QueryClubMemberRequest")
	proto.RegisterType((*QueryClubMemberReply)(nil), "QueryClubMemberReply")
	proto.RegisterType((*QueryClubApplicantRequest)(nil), "QueryClubApplicantRequest")
	proto.RegisterType((*QueryClubApplicantReply)(nil), "QueryClubApplicantReply")
	proto.RegisterType((*QueryMyClubRequest)(nil), "QueryMyClubRequest")
	proto.RegisterType((*QueryUserClubsRequest)(nil), "QueryUserClubsRequest")
	proto.RegisterType((*QueryClubsByMasterIdRequest)(nil), "QueryClubsByMasterIdRequest")
	proto.RegisterType((*MyClub)(nil), "MyClub")
	proto.RegisterType((*ClubMemberQuitRequest)(nil), "ClubMemberQuitRequest")
	proto.RegisterType((*ClubMemberConfirmDropRequest)(nil), "ClubMemberConfirmDropRequest")
	proto.RegisterType((*ClubMasterDropMemberRequest)(nil), "ClubMasterDropMemberRequest")
	proto.RegisterType((*ClubMasterDropMemberReply)(nil), "ClubMasterDropMemberReply")
	proto.RegisterType((*PlayerCancelJoinClubRequest)(nil), "PlayerCancelJoinClubRequest")
	proto.RegisterType((*PlayerCancelCreateClubRequest)(nil), "PlayerCancelCreateClubRequest")
	proto.RegisterType((*PublishClubNoticeRequest)(nil), "PublishClubNoticeRequest")
	proto.RegisterType((*ListClubNoticeRequest)(nil), "ListClubNoticeRequest")
	proto.RegisterType((*ClubNotice)(nil), "ClubNotice")
	proto.RegisterType((*ListClubNotice)(nil), "ListClubNotice")
	proto.RegisterType((*ClubMemberQueryNoticeRequest)(nil), "ClubMemberQueryNoticeRequest")
	proto.RegisterType((*ClubMemberQueryNoticeReply)(nil), "ClubMemberQueryNoticeReply")
	proto.RegisterType((*ClubMasterSetManagerRequest)(nil), "ClubMasterSetManagerRequest")
	proto.RegisterType((*ClientLeaguePanelRequest)(nil), "ClientLeaguePanelRequest")
	proto.RegisterType((*ClientLeague)(nil), "ClientLeague")
	proto.RegisterType((*ClientLeaguePanelReply)(nil), "ClientLeaguePanelReply")
	proto.RegisterType((*ShowLeagueRoomRequest)(nil), "ShowLeagueRoomRequest")
	proto.RegisterType((*ShowLeagueRoomReply)(nil), "ShowLeagueRoomReply")
	proto.RegisterType((*EnterClubLobbyRequest)(nil), "EnterClubLobbyRequest")
	proto.RegisterType((*EnterClubLobbyReply)(nil), "EnterClubLobbyReply")
	proto.RegisterType((*LeagueSettings)(nil), "LeagueSettings")
	proto.RegisterType((*LeagueInfo)(nil), "LeagueInfo")
	proto.RegisterType((*LeagueDetail)(nil), "LeagueDetail")
	proto.RegisterType((*LeagueCommissionSetting)(nil), "LeagueCommissionSetting")
	proto.RegisterType((*LeagueClubInfo)(nil), "LeagueClubInfo")
	proto.RegisterType((*LeagueDoRequest)(nil), "LeagueDoRequest")
	proto.RegisterType((*ListMyLeague)(nil), "ListMyLeague")
	proto.RegisterType((*InsertLeague2MysqlRequest)(nil), "InsertLeague2MysqlRequest")
	proto.RegisterType((*GetLeagueFromMysqlRequest)(nil), "GetLeagueFromMysqlRequest")
	proto.RegisterType((*CreateLeagueRequest)(nil), "CreateLeagueRequest")
	proto.RegisterType((*CreateLeagueReply)(nil), "CreateLeagueReply")
	proto.RegisterType((*JoinLeagueRequestInfo)(nil), "JoinLeagueRequestInfo")
	proto.RegisterType((*HandleLeagueApplyRequest)(nil), "HandleLeagueApplyRequest")
	proto.RegisterType((*HandleLeagueApplyReply)(nil), "HandleLeagueApplyReply")
	proto.RegisterType((*SetManagerRequest)(nil), "SetManagerRequest")
	proto.RegisterType((*SetManagerReply)(nil), "SetManagerReply")
	proto.RegisterType((*FreezeLeagueMemberRequest)(nil), "FreezeLeagueMemberRequest")
	proto.RegisterType((*FreezeLeagueMemberReply)(nil), "FreezeLeagueMemberReply")
	proto.RegisterType((*JoinLeagueApplyRequest)(nil), "JoinLeagueApplyRequest")
	proto.RegisterType((*JoinLeagueApplyReply)(nil), "JoinLeagueApplyReply")
	proto.RegisterType((*CreateLeagueRoomRequest)(nil), "CreateLeagueRoomRequest")
	proto.RegisterType((*CreateLeagueRoomReply)(nil), "CreateLeagueRoomReply")
	proto.RegisterType((*GetLeagueInfoRequest)(nil), "GetLeagueInfoRequest")
	proto.RegisterType((*LeagueShowDetail)(nil), "LeagueShowDetail")
	proto.RegisterType((*GetLeagueInfoReply)(nil), "GetLeagueInfoReply")
	proto.RegisterType((*GetLeagueInfoByInviteRequest)(nil), "GetLeagueInfoByInviteRequest")
	proto.RegisterType((*GetLeagueInfoByInviteReply)(nil), "GetLeagueInfoByInviteReply")
	proto.RegisterType((*GetMySubClubMasterRequst)(nil), "GetMySubClubMasterRequst")
	proto.RegisterType((*GetMySubClubMasterReply)(nil), "GetMySubClubMasterReply")
	proto.RegisterType((*UpdateLeagueSettingRequest)(nil), "UpdateLeagueSettingRequest")
	proto.RegisterType((*UpdateLeagueSettingReply)(nil), "UpdateLeagueSettingReply")
	proto.RegisterType((*DissolveLeagueRequest)(nil), "DissolveLeagueRequest")
	proto.RegisterType((*DissolveLeagueReply)(nil), "DissolveLeagueReply")
	proto.RegisterType((*SetLeagueGameCommissionRequest)(nil), "SetLeagueGameCommissionRequest")
	proto.RegisterType((*SetLeagueGameCommissionReply)(nil), "SetLeagueGameCommissionReply")
	proto.RegisterType((*GetLeagueGameCommissionRequest)(nil), "GetLeagueGameCommissionRequest")
	proto.RegisterType((*GetLeagueGameCommissionReply)(nil), "GetLeagueGameCommissionReply")
	proto.RegisterType((*GiveBeanRequest)(nil), "GiveBeanRequest")
	proto.RegisterType((*GiveBeanReply)(nil), "GiveBeanReply")
	proto.RegisterType((*QuitLeagueRequest)(nil), "QuitLeagueRequest")
	proto.RegisterType((*QuitLeagueReply)(nil), "QuitLeagueReply")
	proto.RegisterType((*SetAgentRequest)(nil), "SetAgentRequest")
	proto.RegisterType((*SetAgentReply)(nil), "SetAgentReply")
	proto.RegisterType((*SetAgentProfitRateRequest)(nil), "SetAgentProfitRateRequest")
	proto.RegisterType((*SetAgentProfitRateReply)(nil), "SetAgentProfitRateReply")
	proto.RegisterType((*DissolveLeagueRoomRequest)(nil), "DissolveLeagueRoomRequest")
	proto.RegisterType((*DissolveLeagueRoomReply)(nil), "DissolveLeagueRoomReply")
	proto.RegisterType((*GetLeagueRoomListRequest)(nil), "GetLeagueRoomListRequest")
	proto.RegisterType((*GetLeagueRoomListReply)(nil), "GetLeagueRoomListReply")
	proto.RegisterType((*GetMyLeagueListRequest)(nil), "GetMyLeagueListRequest")
	proto.RegisterType((*GetMyLeagueListReply)(nil), "GetMyLeagueListReply")
	proto.RegisterType((*ClubMemberChangeNoticeRequest)(nil), "ClubMemberChangeNoticeRequest")
	proto.RegisterType((*ClubMemberChangeNoticeReply)(nil), "ClubMemberChangeNoticeReply")
	proto.RegisterType((*GetJoinLeagueRequestListRequest)(nil), "GetJoinLeagueRequestListRequest")
	proto.RegisterType((*GetJoinLeagueRequestListReply)(nil), "GetJoinLeagueRequestListReply")
	proto.RegisterType((*GetLeagueMembersRequest)(nil), "GetLeagueMembersRequest")
	proto.RegisterType((*GetLeagueMembersReply)(nil), "GetLeagueMembersReply")
	proto.RegisterType((*LeagueMemberAllInfo)(nil), "LeagueMemberAllInfo")
	proto.RegisterType((*LeagueCommissionNotice)(nil), "LeagueCommissionNotice")
	proto.RegisterType((*LeagueAgentCommissionInfo)(nil), "LeagueAgentCommissionInfo")
	proto.RegisterType((*LeagueAgentCommissionReport)(nil), "LeagueAgentCommissionReport")
	proto.RegisterType((*GetLeagueAgentCommissionInfoRequest)(nil), "GetLeagueAgentCommissionInfoRequest")
	proto.RegisterType((*GetLeagueSubAgentCommissionRequest)(nil), "GetLeagueSubAgentCommissionRequest")
	proto.RegisterType((*GetLeagueSubAgentCommissionReply)(nil), "GetLeagueSubAgentCommissionReply")
	proto.RegisterType((*LeagueSubAgentCommissionDetail)(nil), "LeagueSubAgentCommissionDetail")
	proto.RegisterType((*GetSelfInfoOfLeagueRequest)(nil), "GetSelfInfoOfLeagueRequest")
	proto.RegisterType((*GetSelfInfoOfLeagueReply)(nil), "GetSelfInfoOfLeagueReply")
	proto.RegisterType((*GetLeagueAgentCommissionRequest)(nil), "GetLeagueAgentCommissionRequest")
	proto.RegisterType((*GetLeagueAgentCommissionReply)(nil), "GetLeagueAgentCommissionReply")
	proto.RegisterType((*ReceiveLeagueAgentCommissionRequest)(nil), "ReceiveLeagueAgentCommissionRequest")
	proto.RegisterType((*ReceiveLeagueAgentCommissionReply)(nil), "ReceiveLeagueAgentCommissionReply")
	proto.RegisterType((*LeagueBeanChangeNotice)(nil), "LeagueBeanChangeNotice")
	proto.RegisterType((*EnterLeagueLobbyRequest)(nil), "EnterLeagueLobbyRequest")
	proto.RegisterType((*EnterLeagueLobbyReply)(nil), "EnterLeagueLobbyReply")
	proto.RegisterType((*QueryBeanLogRequest)(nil), "QueryBeanLogRequest")
	proto.RegisterType((*QueryBeanLogReply)(nil), "QueryBeanLogReply")
	proto.RegisterType((*JinhuaDoRequest)(nil), "JinhuaDoRequest")
	proto.RegisterType((*CompareJinhuaPokerType)(nil), "CompareJinhuaPokerType")
	proto.RegisterType((*JinhuaOperateRequest)(nil), "JinhuaOperateRequest")
	proto.RegisterType((*JinhuaOperateReply)(nil), "JinhuaOperateReply")
	proto.RegisterType((*JinhuaOperateBroadcast)(nil), "JinhuaOperateBroadcast")
	proto.RegisterType((*PushJinhuaCompareResult)(nil), "PushJinhuaCompareResult")
	proto.RegisterType((*JinhuaInRoom)(nil), "JinhuaInRoom")
	proto.RegisterType((*PushPlayerJinhuaReqOperate)(nil), "PushPlayerJinhuaReqOperate")
	proto.RegisterType((*RobotActionConfig)(nil), "RobotActionConfig")
	proto.RegisterType((*RobotActionGroupConfig)(nil), "RobotActionGroupConfig")
	proto.RegisterType((*RobotPlayerExtroInfo)(nil), "RobotPlayerExtroInfo")
	proto.RegisterType((*RobotActionGroupInfo)(nil), "RobotActionGroupInfo")
	proto.RegisterType((*RobotManagerInfo)(nil), "RobotManagerInfo")
	proto.RegisterType((*GetRobotActionConfigRequest)(nil), "GetRobotActionConfigRequest")
	proto.RegisterType((*GetRobotActionConfigReply)(nil), "GetRobotActionConfigReply")
	proto.RegisterType((*UpdateRobotActionConfigRequest)(nil), "UpdateRobotActionConfigRequest")
	proto.RegisterType((*UpdateRobotActionConfigReply)(nil), "UpdateRobotActionConfigReply")
	proto.RegisterType((*InsertRobotActionConfigRequest)(nil), "InsertRobotActionConfigRequest")
	proto.RegisterType((*InsertRobotActionConfigReply)(nil), "InsertRobotActionConfigReply")
	proto.RegisterType((*GetRobotActionGroupConfigRequest)(nil), "GetRobotActionGroupConfigRequest")
	proto.RegisterType((*GetRobotActionGroupConfigReply)(nil), "GetRobotActionGroupConfigReply")
	proto.RegisterType((*UpdateRobotActionGroupConfigRequest)(nil), "UpdateRobotActionGroupConfigRequest")
	proto.RegisterType((*UpdateRobotActionGroupConfigReply)(nil), "UpdateRobotActionGroupConfigReply")
	proto.RegisterType((*InsertRobotActionGroupConfigRequest)(nil), "InsertRobotActionGroupConfigRequest")
	proto.RegisterType((*InsertRobotActionGroupConfigReply)(nil), "InsertRobotActionGroupConfigReply")
	proto.RegisterType((*GetRobotManagerConfigRequest)(nil), "GetRobotManagerConfigRequest")
	proto.RegisterType((*GetRobotManagerConfigReply)(nil), "GetRobotManagerConfigReply")
	proto.RegisterType((*GetRobotListRequest)(nil), "GetRobotListRequest")
	proto.RegisterType((*GetRobotListReply)(nil), "GetRobotListReply")
	proto.RegisterType((*ReportMessage)(nil), "ReportMessage")
	proto.RegisterType((*GameRecordExtendData)(nil), "GameRecordExtendData")
	proto.RegisterType((*GameRecordReport)(nil), "GameRecordReport")
	proto.RegisterType((*BalanceChangeRecordReport)(nil), "BalanceChangeRecordReport")
	proto.RegisterType((*AchievementChangeRecordReport)(nil), "AchievementChangeRecordReport")
	proto.RegisterType((*GetCommissionRecordReport)(nil), "GetCommissionRecordReport")
	proto.RegisterType((*BeanChangeRecordReport)(nil), "BeanChangeRecordReport")
	proto.RegisterType((*BonusRecordReport)(nil), "BonusRecordReport")
	proto.RegisterType((*GetBonusChangeRecordPageListRequest)(nil), "GetBonusChangeRecordPageListRequest")
	proto.RegisterType((*GetBonusChangeRecordPageListReply)(nil), "GetBonusChangeRecordPageListReply")
	proto.RegisterType((*GetBeanChangeRecordPageListRequest)(nil), "GetBeanChangeRecordPageListRequest")
	proto.RegisterType((*GetBeanChangeRecordPageListReply)(nil), "GetBeanChangeRecordPageListReply")
	proto.RegisterType((*GiveAwayRecordReport)(nil), "GiveAwayRecordReport")
	proto.RegisterType((*GetSplitTablesRequest)(nil), "GetSplitTablesRequest")
	proto.RegisterType((*GetSplitTablesReply)(nil), "GetSplitTablesReply")
	proto.RegisterType((*GetGameRecordPageListRequest)(nil), "GetGameRecordPageListRequest")
	proto.RegisterType((*GetGameRecordPageListReply)(nil), "GetGameRecordPageListReply")
	proto.RegisterType((*GetBalanceChangeRecordPageListRequest)(nil), "GetBalanceChangeRecordPageListRequest")
	proto.RegisterType((*GetBalanceChangeRecordPageListReply)(nil), "GetBalanceChangeRecordPageListReply")
	proto.RegisterType((*GetAchievementChangeRecordPageListRequest)(nil), "GetAchievementChangeRecordPageListRequest")
	proto.RegisterType((*GetAchievementChangeRecordPageListReply)(nil), "GetAchievementChangeRecordPageListReply")
	proto.RegisterType((*GetGetCommissionRecordPageListRequest)(nil), "GetGetCommissionRecordPageListRequest")
	proto.RegisterType((*GetRoomCardConsumptionTotalByChangeRecordRequest)(nil), "GetRoomCardConsumptionTotalByChangeRecordRequest")
	proto.RegisterType((*GetRoomCardConsumptionTotalByChangeRecordReply)(nil), "GetRoomCardConsumptionTotalByChangeRecordReply")
	proto.RegisterType((*GetRoomCardConsumptionByChangeRecordRequest)(nil), "GetRoomCardConsumptionByChangeRecordRequest")
	proto.RegisterType((*GetRoomCardConsumptionByChangeRecordReply)(nil), "GetRoomCardConsumptionByChangeRecordReply")
	proto.RegisterType((*GetPlatProfitRequest)(nil), "GetPlatProfitRequest")
	proto.RegisterType((*GetPlatProfitReply)(nil), "GetPlatProfitReply")
	proto.RegisterType((*GetRoomCardConsumptionByChangeRecordItem)(nil), "GetRoomCardConsumptionByChangeRecordItem")
	proto.RegisterType((*GetRoomCardChangeRecordRequest)(nil), "GetRoomCardChangeRecordRequest")
	proto.RegisterType((*GetRoomCardChangeRecordReply)(nil), "GetRoomCardChangeRecordReply")
	proto.RegisterType((*GetGetCommissionRecordPageListReply)(nil), "GetGetCommissionRecordPageListReply")
	proto.RegisterType((*GetGiveAwayRecordPageListRequest)(nil), "GetGiveAwayRecordPageListRequest")
	proto.RegisterType((*GetGiveAwayRecordPageListReply)(nil), "GetGiveAwayRecordPageListReply")
	proto.RegisterType((*GetRoomCardConsumptionRequest)(nil), "GetRoomCardConsumptionRequest")
	proto.RegisterType((*GetRoomCardConsumptionReply)(nil), "GetRoomCardConsumptionReply")
	proto.RegisterType((*GetGameRoundCountRequest)(nil), "GetGameRoundCountRequest")
	proto.RegisterType((*GetGameRoundCountReply)(nil), "GetGameRoundCountReply")
	proto.RegisterType((*GameRoundCountDetail)(nil), "GameRoundCountDetail")
	proto.RegisterType((*GetChargeStatisticsRequest)(nil), "GetChargeStatisticsRequest")
	proto.RegisterType((*GetChargeStatisticsReply)(nil), "GetChargeStatisticsReply")
	proto.RegisterType((*GetRegistStatisticsRequest)(nil), "GetRegistStatisticsRequest")
	proto.RegisterType((*GetRegistStatisticsReply)(nil), "GetRegistStatisticsReply")
	proto.RegisterType((*BloodSlotRedisStruct)(nil), "BloodSlotRedisStruct")
	proto.RegisterType((*BloodSlotConfig)(nil), "BloodSlotConfig")
	proto.RegisterType((*LinesConfig)(nil), "LinesConfig")
	proto.RegisterType((*BloodSlotInfo)(nil), "BloodSlotInfo")
	proto.RegisterType((*GetBloodSlotConfigRequest)(nil), "GetBloodSlotConfigRequest")
	proto.RegisterType((*GetBloodSlotConfigReply)(nil), "GetBloodSlotConfigReply")
	proto.RegisterType((*GetOneBloodSlotConfigRequest)(nil), "GetOneBloodSlotConfigRequest")
	proto.RegisterType((*GetOneBloodSlotConfigReply)(nil), "GetOneBloodSlotConfigReply")
	proto.RegisterType((*UpdateBloodSlotConfigRequest)(nil), "UpdateBloodSlotConfigRequest")
	proto.RegisterType((*UpdateBloodSlotConfigReply)(nil), "UpdateBloodSlotConfigReply")
	proto.RegisterType((*AlertBloodSlotConfigRequest)(nil), "AlertBloodSlotConfigRequest")
	proto.RegisterType((*AlertBloodSlotConfigReply)(nil), "AlertBloodSlotConfigReply")
	proto.RegisterType((*DeleteBloodSlotConfigRequest)(nil), "DeleteBloodSlotConfigRequest")
	proto.RegisterType((*DeleteBloodSlotConfigReply)(nil), "DeleteBloodSlotConfigReply")
	proto.RegisterType((*RedBlackDoRequest)(nil), "RedBlackDoRequest")
	proto.RegisterType((*PushRedBlackBankerMessage)(nil), "PushRedBlackBankerMessage")
	proto.RegisterType((*CompareRedBlackPoker)(nil), "CompareRedBlackPoker")
	proto.RegisterType((*RedBlackWinInfo)(nil), "RedBlackWinInfo")
	proto.RegisterType((*PushRedBlackPoker)(nil), "PushRedBlackPoker")
	proto.RegisterType((*RedBlackBetRequest)(nil), "RedBlackBetRequest")
	proto.RegisterType((*RedBlackBetReply)(nil), "RedBlackBetReply")
	proto.RegisterType((*RedBlackUpBankerRequest)(nil), "RedBlackUpBankerRequest")
	proto.RegisterType((*RedBlackUpBankerReply)(nil), "RedBlackUpBankerReply")
	proto.RegisterType((*RedBlackDownBankerRequest)(nil), "RedBlackDownBankerRequest")
	proto.RegisterType((*RedBlackDownBankerReply)(nil), "RedBlackDownBankerReply")
	proto.RegisterType((*PushRedBlackReadyInit)(nil), "PushRedBlackReadyInit")
	proto.RegisterType((*PushRedBlackPlayerBets)(nil), "PushRedBlackPlayerBets")
	proto.RegisterType((*PushRedBlackPlayerBet)(nil), "PushRedBlackPlayerBet")
	proto.RegisterType((*PushRedBlackChangeBankers)(nil), "PushRedBlackChangeBankers")
	proto.RegisterType((*PushRedBlackWinInfos)(nil), "PushRedBlackWinInfos")
	proto.RegisterType((*MahjongPlayerInfo)(nil), "MahjongPlayerInfo")
	proto.RegisterType((*LinCangMahjongDoRequest)(nil), "LinCangMahjongDoRequest")
	proto.RegisterType((*LinCangMahjongDoReply)(nil), "LinCangMahjongDoReply")
	proto.RegisterType((*XueZhanMahjongDoRequest)(nil), "XueZhanMahjongDoRequest")
	proto.RegisterType((*XueZhanMahjongDoReply)(nil), "XueZhanMahjongDoReply")
	proto.RegisterType((*MahjongOutputInfo)(nil), "MahjongOutputInfo")
	proto.RegisterType((*MahjongPongInfo)(nil), "MahjongPongInfo")
	proto.RegisterType((*MahjongKongInfo)(nil), "MahjongKongInfo")
	proto.RegisterType((*MahjongWinInfo)(nil), "MahjongWinInfo")
	proto.RegisterType((*MahjongBeforeSettleInfo)(nil), "MahjongBeforeSettleInfo")
	proto.RegisterType((*MahjongReadyDetail)(nil), "MahjongReadyDetail")
	proto.RegisterType((*MahjongDoubles)(nil), "MahjongDoubles")
	proto.RegisterType((*MahjongTriples)(nil), "MahjongTriples")
	proto.RegisterType((*MahjongQuadruples)(nil), "MahjongQuadruples")
	proto.RegisterType((*MahjongGameInfo)(nil), "MahjongGameInfo")
	proto.RegisterType((*LinCangMahjongPlayerSettle)(nil), "LinCangMahjongPlayerSettle")
	proto.RegisterType((*LinCangMahjongSettle)(nil), "LinCangMahjongSettle")
	proto.RegisterType((*LinCangMahjongCardCreateRoomConfig)(nil), "LinCangMahjongCardCreateRoomConfig")
	proto.RegisterType((*MahjongIfOutputRequest)(nil), "MahjongIfOutputRequest")
	proto.RegisterType((*MahjongIfOutputReply)(nil), "MahjongIfOutputReply")
	proto.RegisterType((*MahjongCanReadyRequest)(nil), "MahjongCanReadyRequest")
	proto.RegisterType((*MahjongCanReadyReply)(nil), "MahjongCanReadyReply")
	proto.RegisterType((*MahjongReadyTypeAndScoreRequest)(nil), "MahjongReadyTypeAndScoreRequest")
	proto.RegisterType((*MahjongReadyTypeAndScoreReply)(nil), "MahjongReadyTypeAndScoreReply")
	proto.RegisterType((*MahjongGetReadyTypeAndScore)(nil), "MahjongGetReadyTypeAndScore")
	proto.RegisterType((*MahjongDealMahjongRequest)(nil), "MahjongDealMahjongRequest")
	proto.RegisterType((*MahjongDealMahjongReply)(nil), "MahjongDealMahjongReply")
	proto.RegisterType((*MahjongDrawMahjongRequest)(nil), "MahjongDrawMahjongRequest")
	proto.RegisterType((*MahjongReadyInfoIfOutput)(nil), "MahjongReadyInfoIfOutput")
	proto.RegisterType((*MahjongDrawMahjongReply)(nil), "MahjongDrawMahjongReply")
	proto.RegisterType((*MahjongOutputMahjongRequest)(nil), "MahjongOutputMahjongRequest")
	proto.RegisterType((*MahjongWaitOperateRecord)(nil), "MahjongWaitOperateRecord")
	proto.RegisterType((*MahjongHasBeenOperatedRecord)(nil), "MahjongHasBeenOperatedRecord")
	proto.RegisterType((*MahjongOutputMahjongReply)(nil), "MahjongOutputMahjongReply")
	proto.RegisterType((*MahjongPongOperateRequest)(nil), "MahjongPongOperateRequest")
	proto.RegisterType((*MahjongPongOperateReply)(nil), "MahjongPongOperateReply")
	proto.RegisterType((*MahjongKongOperateRequest)(nil), "MahjongKongOperateRequest")
	proto.RegisterType((*MahjongKongOperateReply)(nil), "MahjongKongOperateReply")
	proto.RegisterType((*MahjongWinOperateRequest)(nil), "MahjongWinOperateRequest")
	proto.RegisterType((*MahjongWinOperateReply)(nil), "MahjongWinOperateReply")
	proto.RegisterType((*MahjongSettleDetail)(nil), "MahjongSettleDetail")
	proto.RegisterType((*MahjongPlayDicesNotice)(nil), "MahjongPlayDicesNotice")
	proto.RegisterType((*MahjongDealNotice)(nil), "MahjongDealNotice")
	proto.RegisterType((*MahjongBlankSuitNotice)(nil), "MahjongBlankSuitNotice")
	proto.RegisterType((*MahjongBlankSuitRequest)(nil), "MahjongBlankSuitRequest")
	proto.RegisterType((*MahjongBlankSuitReply)(nil), "MahjongBlankSuitReply")
	proto.RegisterType((*MahjongAllPlayerBlankSuitNotice)(nil), "MahjongAllPlayerBlankSuitNotice")
	proto.RegisterType((*MahjongPlayerSendCardNotice)(nil), "MahjongPlayerSendCardNotice")
	proto.RegisterType((*LinCangMahjongOperateRequest)(nil), "LinCangMahjongOperateRequest")
	proto.RegisterType((*LinCangMahjongOperateReply)(nil), "LinCangMahjongOperateReply")
	proto.RegisterType((*XueZhanMahjongOperateRequest)(nil), "XueZhanMahjongOperateRequest")
	proto.RegisterType((*XueZhanMahjongOperateReply)(nil), "XueZhanMahjongOperateReply")
	proto.RegisterType((*MahjongOutputNotice)(nil), "MahjongOutputNotice")
	proto.RegisterType((*MahjongWaitChoiceNotice)(nil), "MahjongWaitChoiceNotice")
	proto.RegisterType((*MahjongPongNotice)(nil), "MahjongPongNotice")
	proto.RegisterType((*MahjongKongNotice)(nil), "MahjongKongNotice")
	proto.RegisterType((*MahjongKongChangeMoneyNotice)(nil), "MahjongKongChangeMoneyNotice")
	proto.RegisterType((*MahjongAfterKongNotice)(nil), "MahjongAfterKongNotice")
	proto.RegisterType((*MahjongWinNotice)(nil), "MahjongWinNotice")
	proto.RegisterType((*MahjongBeforeSettleNotice)(nil), "MahjongBeforeSettleNotice")
	proto.RegisterType((*MahjongPlayerExtendData)(nil), "MahjongPlayerExtendData")
	proto.RegisterType((*LinCangMahjongSettleNotice)(nil), "LinCangMahjongSettleNotice")
	proto.RegisterType((*BenzBMWGameInfo)(nil), "BenzBMWGameInfo")
	proto.RegisterType((*BenzBMWDoRequest)(nil), "BenzBMWDoRequest")
	proto.RegisterType((*BenzBMWBetRequest)(nil), "BenzBMWBetRequest")
	proto.RegisterType((*BenzBMWBetReply)(nil), "BenzBMWBetReply")
	proto.RegisterType((*BenzBMWUpBankerRequest)(nil), "BenzBMWUpBankerRequest")
	proto.RegisterType((*BenzBMWUpBankerReply)(nil), "BenzBMWUpBankerReply")
	proto.RegisterType((*BenzBMWDownBankerRequest)(nil), "BenzBMWDownBankerRequest")
	proto.RegisterType((*BenzBMWDownBankerReply)(nil), "BenzBMWDownBankerReply")
	proto.RegisterType((*PushBenzBMWChangeBankers)(nil), "PushBenzBMWChangeBankers")
	proto.RegisterType((*PushBenzBMWBankerMessage)(nil), "PushBenzBMWBankerMessage")
	proto.RegisterType((*OneAchievementLevelConfig)(nil), "OneAchievementLevelConfig")
	proto.RegisterType((*AgentConfig)(nil), "AgentConfig")
	proto.RegisterType((*UpdateAgentConfigRequest)(nil), "UpdateAgentConfigRequest")
	proto.RegisterType((*UpdateAgentConfigReply)(nil), "UpdateAgentConfigReply")
	proto.RegisterType((*GetAgentConfigRequest)(nil), "GetAgentConfigRequest")
	proto.RegisterType((*GetAgentConfigReply)(nil), "GetAgentConfigReply")
	proto.RegisterType((*AchievementInfo)(nil), "AchievementInfo")
	proto.RegisterType((*AgentLineCodeInfo)(nil), "AgentLineCodeInfo")
	proto.RegisterType((*OneAgentFragmentInfo)(nil), "OneAgentFragmentInfo")
	proto.RegisterType((*AgentFragment)(nil), "AgentFragment")
	proto.RegisterType((*OneAgentInfo)(nil), "OneAgentInfo")
	proto.RegisterMapType((map[string]*AgentLineCodeInfo)(nil), "OneAgentInfo.LineCodeInfosEntry")
	proto.RegisterType((*CreateAgentRelationRequest)(nil), "CreateAgentRelationRequest")
	proto.RegisterType((*CreateAgentRelationReply)(nil), "CreateAgentRelationReply")
	proto.RegisterType((*SetTopAgentRequest)(nil), "SetTopAgentRequest")
	proto.RegisterType((*SetTopAgentReply)(nil), "SetTopAgentReply")
	proto.RegisterType((*AgentAchievementInfo)(nil), "AgentAchievementInfo")
	proto.RegisterType((*GetAgentAchievementInfoRequest)(nil), "GetAgentAchievementInfoRequest")
	proto.RegisterType((*GetAgentAchievementInfoReply)(nil), "GetAgentAchievementInfoReply")
	proto.RegisterType((*CreateLineCodeRequest)(nil), "CreateLineCodeRequest")
	proto.RegisterType((*CreateLineCodeReply)(nil), "CreateLineCodeReply")
	proto.RegisterType((*GetLineCodeRequest)(nil), "GetLineCodeRequest")
	proto.RegisterType((*GetLineCodeReply)(nil), "GetLineCodeReply")
	proto.RegisterType((*AgentCommissionInfo)(nil), "AgentCommissionInfo")
	proto.RegisterType((*GetAgentCommissionInfoRequest)(nil), "GetAgentCommissionInfoRequest")
	proto.RegisterType((*GetAgentCommissionInfoReply)(nil), "GetAgentCommissionInfoReply")
	proto.RegisterType((*AgentSimpleInfo)(nil), "AgentSimpleInfo")
	proto.RegisterType((*AgentUnderInfo)(nil), "AgentUnderInfo")
	proto.RegisterType((*GetAgentUnderInfoRequest)(nil), "GetAgentUnderInfoRequest")
	proto.RegisterType((*GetAgentUnderInfoReply)(nil), "GetAgentUnderInfoReply")
	proto.RegisterType((*GetDayCommissionRequest)(nil), "GetDayCommissionRequest")
	proto.RegisterType((*GetDayCommissionReply)(nil), "GetDayCommissionReply")
	proto.RegisterType((*GetDayCommissionByTypeRequest)(nil), "GetDayCommissionByTypeRequest")
	proto.RegisterType((*GetDayCommissionByTypeReply)(nil), "GetDayCommissionByTypeReply")
	proto.RegisterType((*SaveAllianceLeaderRoomCardSettleInfo)(nil), "SaveAllianceLeaderRoomCardSettleInfo")
	proto.RegisterType((*AllianceLeaderRoomCardSettleInfo)(nil), "AllianceLeaderRoomCardSettleInfo")
	proto.RegisterType((*GetAllianceLeaderUnSettledListRequest)(nil), "GetAllianceLeaderUnSettledListRequest")
	proto.RegisterType((*GetAllianceLeaderUnSettledListReply)(nil), "GetAllianceLeaderUnSettledListReply")
	proto.RegisterType((*GetAllianceLeaderRoomCardRequest)(nil), "GetAllianceLeaderRoomCardRequest")
	proto.RegisterType((*GetAllianceLeaderRoomCardReply)(nil), "GetAllianceLeaderRoomCardReply")
	proto.RegisterType((*GetAllianceLeaderUnSettledInfoRequest)(nil), "GetAllianceLeaderUnSettledInfoRequest")
	proto.RegisterType((*GetAllianceLeaderUnSettledInfoReply)(nil), "GetAllianceLeaderUnSettledInfoReply")
	proto.RegisterType((*GetAllianceLeaderRoomCardSettleInfo)(nil), "GetAllianceLeaderRoomCardSettleInfo")
	proto.RegisterType((*SetAllianceLeaderRoomCardSettleItem)(nil), "SetAllianceLeaderRoomCardSettleItem")
	proto.RegisterType((*SetAllianceLeaderRoomCardSettleRequest)(nil), "SetAllianceLeaderRoomCardSettleRequest")
	proto.RegisterType((*SetAllianceLeaderRoomCardSettleReply)(nil), "SetAllianceLeaderRoomCardSettleReply")
	proto.RegisterType((*GetCanGetCommissionTotalRequest)(nil), "GetCanGetCommissionTotalRequest")
	proto.RegisterType((*CanGetCommissionInfo)(nil), "CanGetCommissionInfo")
	proto.RegisterType((*GetCanGetCommissionTotalReply)(nil), "GetCanGetCommissionTotalReply")
	proto.RegisterType((*GetAchievementTotalRequest)(nil), "GetAchievementTotalRequest")
	proto.RegisterType((*GetAchievementTotalReply)(nil), "GetAchievementTotalReply")
	proto.RegisterType((*GetAchievementTotalPerDayRequest)(nil), "GetAchievementTotalPerDayRequest")
	proto.RegisterType((*GetAchievementTotalPerDayReply)(nil), "GetAchievementTotalPerDayReply")
	proto.RegisterType((*AchievementTotalPerDay)(nil), "AchievementTotalPerDay")
	proto.RegisterType((*GetWeekCommissionRequest)(nil), "GetWeekCommissionRequest")
	proto.RegisterType((*GetWeekCommissionReply)(nil), "GetWeekCommissionReply")
	proto.RegisterType((*GetTopAgentInfoRequest)(nil), "GetTopAgentInfoRequest")
	proto.RegisterType((*GetTopAgentInfoReply)(nil), "GetTopAgentInfoReply")
	proto.RegisterType((*GetShortURLRequest)(nil), "GetShortURLRequest")
	proto.RegisterType((*GetShortURLReply)(nil), "GetShortURLReply")
	proto.RegisterType((*CommissionInfo)(nil), "CommissionInfo")
	proto.RegisterType((*GetMeCommissionRequest)(nil), "GetMeCommissionRequest")
	proto.RegisterType((*GetMeCommissionReply)(nil), "GetMeCommissionReply")
	proto.RegisterType((*BindParentByShortIDRequest)(nil), "BindParentByShortIDRequest")
	proto.RegisterType((*BindParentByShortIDReply)(nil), "BindParentByShortIDReply")
	proto.RegisterType((*SetPlayerToAgentRequest)(nil), "SetPlayerToAgentRequest")
	proto.RegisterType((*SetPlayerToAgentReply)(nil), "SetPlayerToAgentReply")
	proto.RegisterType((*GetChildByIdentityRequest)(nil), "GetChildByIdentityRequest")
	proto.RegisterType((*GetChildByIdentityReply)(nil), "GetChildByIdentityReply")
	proto.RegisterType((*FindChildByIdentityRequest)(nil), "FindChildByIdentityRequest")
	proto.RegisterType((*FindChildByIdentityReply)(nil), "FindChildByIdentityReply")
	proto.RegisterType((*GetAgentIdentityRequest)(nil), "GetAgentIdentityRequest")
	proto.RegisterType((*GetAgentIdentityReply)(nil), "GetAgentIdentityReply")
	proto.RegisterType((*PlayerStartPlayGameMessage)(nil), "PlayerStartPlayGameMessage")
	proto.RegisterType((*RoomCardChangeRecord)(nil), "RoomCardChangeRecord")
	proto.RegisterType((*BorrowMoneyRequest)(nil), "BorrowMoneyRequest")
	proto.RegisterType((*BorrowMoneyReply)(nil), "BorrowMoneyReply")
	proto.RegisterType((*BackMoneyRequest)(nil), "BackMoneyRequest")
	proto.RegisterType((*BackMoneyReply)(nil), "BackMoneyReply")
	proto.RegisterType((*DeployMoneyRequest)(nil), "DeployMoneyRequest")
	proto.RegisterType((*DeployMoneyReply)(nil), "DeployMoneyReply")
	proto.RegisterType((*GiveAwayRequest)(nil), "GiveAwayRequest")
	proto.RegisterType((*GiveAwayReply)(nil), "GiveAwayReply")
	proto.RegisterType((*GetPlayerInfoByShortIdRequest)(nil), "GetPlayerInfoByShortIdRequest")
	proto.RegisterType((*GetPlayerInfoByShortIdReply)(nil), "GetPlayerInfoByShortIdReply")
	proto.RegisterType((*ReHeadImgUrlRequest)(nil), "ReHeadImgUrlRequest")
	proto.RegisterType((*ReHeadImgUrlReply)(nil), "ReHeadImgUrlReply")
	proto.RegisterType((*ReNameRequest)(nil), "ReNameRequest")
	proto.RegisterType((*ReNameReply)(nil), "ReNameReply")
	proto.RegisterType((*BankSaveMoneyRequest)(nil), "BankSaveMoneyRequest")
	proto.RegisterType((*BankSaveMoneyReply)(nil), "BankSaveMoneyReply")
	proto.RegisterType((*BankWithDrawMoneyRequest)(nil), "BankWithDrawMoneyRequest")
	proto.RegisterType((*BankWithDrawMoneyReply)(nil), "BankWithDrawMoneyReply")
	proto.RegisterType((*UpdateBankPasswordRequest)(nil), "UpdateBankPasswordRequest")
	proto.RegisterType((*UpdateBankPasswordReply)(nil), "UpdateBankPasswordReply")
	proto.RegisterType((*PlayerGetBonusScoreRequest)(nil), "PlayerGetBonusScoreRequest")
	proto.RegisterType((*PlayerGetBonusScoreReply)(nil), "PlayerGetBonusScoreReply")
	proto.RegisterType((*MysqlOrderInfo)(nil), "MysqlOrderInfo")
	proto.RegisterType((*CodaPayNotifyRequest)(nil), "CodaPayNotifyRequest")
	proto.RegisterType((*PayNotifyReply)(nil), "PayNotifyReply")
	proto.RegisterType((*CreateOrderReply)(nil), "CreateOrderReply")
	proto.RegisterType((*GetTxnIdReply)(nil), "GetTxnIdReply")
	proto.RegisterType((*GetNoticeRequest)(nil), "GetNoticeRequest")
	proto.RegisterType((*GetNoticeReply)(nil), "GetNoticeReply")
	proto.RegisterType((*Notice)(nil), "Notice")
	proto.RegisterType((*HorseRaceLampWinPlayer)(nil), "HorseRaceLampWinPlayer")
	proto.RegisterType((*HorseRaceLampCreateRoomRequest)(nil), "HorseRaceLampCreateRoomRequest")
	proto.RegisterType((*HorseRaceLampPrizeRequest)(nil), "HorseRaceLampPrizeRequest")
	proto.RegisterType((*HorseRaceLampPrizeReply)(nil), "HorseRaceLampPrizeReply")
	proto.RegisterType((*HorseRaceLampCreateRoomReply)(nil), "HorseRaceLampCreateRoomReply")
	proto.RegisterType((*HorseRaceLampWiner)(nil), "HorseRaceLampWiner")
	proto.RegisterType((*HorseRaceLampReply)(nil), "HorseRaceLampReply")
	proto.RegisterType((*NoticeReply)(nil), "NoticeReply")
	proto.RegisterType((*GetOrderPageListRequest)(nil), "GetOrderPageListRequest")
	proto.RegisterType((*GetOrderPageListReply)(nil), "GetOrderPageListReply")
	proto.RegisterType((*OrderDetailReply)(nil), "OrderDetailReply")
	proto.RegisterType((*GetBonusScoreRequest)(nil), "GetBonusScoreRequest")
	proto.RegisterType((*GetBonusScoreReply)(nil), "GetBonusScoreReply")
	proto.RegisterType((*IncrRobotBonusScoreRequest)(nil), "IncrRobotBonusScoreRequest")
	proto.RegisterType((*IncrRobotBonusScoreReply)(nil), "IncrRobotBonusScoreReply")
	proto.RegisterType((*IncrBonusScoreRequest)(nil), "IncrBonusScoreRequest")
	proto.RegisterType((*IncrBonusScoreReply)(nil), "IncrBonusScoreReply")
	proto.RegisterType((*AllBonusConfig)(nil), "AllBonusConfig")
	proto.RegisterType((*OneBonusConfig)(nil), "OneBonusConfig")
	proto.RegisterType((*SelectRoomInfoByGameTypeRequest)(nil), "SelectRoomInfoByGameTypeRequest")
	proto.RegisterType((*SelectRoomInfoByGameTypeReply)(nil), "SelectRoomInfoByGameTypeReply")
	proto.RegisterType((*DelRoomByGameTypeRequest)(nil), "DelRoomByGameTypeRequest")
	proto.RegisterType((*DelRoomByGameTypeReply)(nil), "DelRoomByGameTypeReply")
	proto.RegisterType((*ClearJoyDoRequest)(nil), "ClearJoyDoRequest")
	proto.RegisterType((*ClearJoyImage)(nil), "ClearJoyImage")
	proto.RegisterType((*LineGameDoRequest)(nil), "LineGameDoRequest")
	proto.RegisterType((*LineGamePosition)(nil), "LineGamePosition")
	proto.RegisterType((*LineGameMap)(nil), "LineGameMap")
	proto.RegisterType((*LineGameBingoInfo)(nil), "LineGameBingoInfo")
	proto.RegisterType((*LineGameRoundInfo)(nil), "LineGameRoundInfo")
	proto.RegisterType((*LineGamePlayRequest)(nil), "LineGamePlayRequest")
	proto.RegisterType((*LineGamePlayReply)(nil), "LineGamePlayReply")
	proto.RegisterType((*EmailExtra)(nil), "EmailExtra")
	proto.RegisterType((*OneEmailData)(nil), "oneEmailData")
	proto.RegisterType((*SendEmailRequest)(nil), "SendEmailRequest")
	proto.RegisterType((*SendEmailReply)(nil), "SendEmailReply")
	proto.RegisterType((*GetMeEmailListRequest)(nil), "GetMeEmailListRequest")
	proto.RegisterType((*GetMeEmailListReply)(nil), "GetMeEmailListReply")
	proto.RegisterType((*ReadOneEmailRequest)(nil), "ReadOneEmailRequest")
	proto.RegisterType((*ReadOneEmailReply)(nil), "ReadOneEmailReply")
	proto.RegisterType((*GetEmailAttachRequest)(nil), "GetEmailAttachRequest")
	proto.RegisterType((*GetEmailAttachReply)(nil), "GetEmailAttachReply")
	proto.RegisterType((*GetMiningProgressRequest)(nil), "GetMiningProgressRequest")
	proto.RegisterType((*GetMiningProgresReply)(nil), "GetMiningProgresReply")
	proto.RegisterType((*GetMiningRequest)(nil), "GetMiningRequest")
	proto.RegisterType((*GetMiningReply)(nil), "GetMiningReply")
	proto.RegisterType((*GemWarsDoRequest)(nil), "GemWarsDoRequest")
	proto.RegisterType((*GemWarsBetRequest)(nil), "GemWarsBetRequest")
	proto.RegisterType((*GemWarsBetReply)(nil), "GemWarsBetReply")
	proto.RegisterType((*GetSmsCaptchaRequest)(nil), "GetSmsCaptchaRequest")
	proto.RegisterType((*GetSmsCaptchaReply)(nil), "GetSmsCaptchaReply")
	proto.RegisterType((*BindMobileRequest)(nil), "BindMobileRequest")
	proto.RegisterType((*BindMobileReply)(nil), "BindMobileReply")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 42658 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xbd, 0x5b, 0x90, 0x1c, 0x59,
	0x76, 0x18, 0x16, 0x55, 0xd5, 0xd5, 0xdd, 0x75, 0xfa, 0x9d, 0xfd, 0x40, 0xe1, 0xb9, 0xd8, 0x1c,
	0x0c, 0x06, 0x03, 0x60, 0x6a, 0x66, 0x7a, 0xde, 0xb3, 0x33, 0xb3, 0xdb, 0xdd, 0x98, 0x01, 0x7a,
	0xd0, 0x00, 0x7a, 0xb3, 0x81, 0xc1, 0xee, 0x92, 0xbb, 0xa3, 0xec, 0xaa, 0x44, 0x77, 0x0e, 0xaa,
	0x33, 0x6b, 0x32, 0xb3, 0x00, 0xf4, 0x48, 0xa2, 0x1e, 0x24, 0x65, 0x8a, 0x0a, 0xc9, 0x7c, 0x99,
	0x22, 0xa9, 0x20, 0x6d, 0xd9, 0x4b, 0xd3, 0x4b, 0x91, 0xa6, 0x64, 0x8a, 0x32, 0x6d, 0x3a, 0x6c,
	0xcb, 0x8e, 0xb0, 0x6c, 0x31, 0xc2, 0xfa, 0xb0, 0xc3, 0xb4, 0x18, 0x92, 0xfd, 0x63, 0x85, 0x65,
	0x47, 0xc8, 0x11, 0xf6, 0x8f, 0x43, 0x61, 0x39, 0xc2, 0x71, 0xcf, 0xb9, 0xef, 0xcc, 0xac, 0xaa,
	0xc6, 0x63, 0xc9, 0x75, 0xf0, 0x2f, 0xef, 0x39, 0x27, 0xef, 0xf3, 0xdc, 0x73, 0xcf, 0x3d, 0xf7,
	0xde, 0x73, 0x60, 0xe6, 0x20, 0x48, 0x53, 0x7f, 0x2f, 0x68, 0xf5, 0x92, 0x38, 0x8b, 0x4f, 0x1c,
	0xdf, 0x8b, 0xe3, 0xbd, 0x6e, 0xf0, 0x32, 0xa6, 0x76, 0xfb, 0xf7, 0x5e, 0xf6, 0xa3, 0x43, 0x42,
	0xb9, 0x31, 0x4c, 0xdd, 0x20, 0xda, 0xad, 0xb8, 0x7d, 0xdf, 0x39, 0x07, 0x33, 0xed, 0xf8, 0xa0,
	0x17, 0x47, 0x41, 0x94, 0xdd, 0xf4, 0x0f, 0x82, 0x66, 0xe5, 0x6c, 0xe5, 0x42, 0xc3, 0x33, 0x81,
	0xce, 0x09, 0x98, 0xec, 0xc6, 0xed, 0xfb, 0x48, 0x50, 0x45, 0x02, 0x99, 0x76, 0xce, 0x00, 0x84,
	0xa9, 0x17, 0xf8, 0x5d, 0x96, 0x5f, 0xb3, 0x76, 0xb6, 0x72, 0x61, 0xd2, 0xd3, 0x20, 0xee, 0xff,
	0x5b, 0x81, 0x79, 0x5e, 0xe2, 0x87, 0x8f, 0xb2, 0x24, 0xde, 0x8c, 0xee, 0xc5, 0x8e, 0x0b, 0xd3,
	0xed, 0x6e, 0x18, 0x44, 0xd9, 0x46, 0x1c, 0x45, 0x9b, 0x1d, 0x5e, 0xaa, 0x01, 0xb3, 0x68, 0x7a,
	0xbc, 0x60, 0x03, 0xe6, 0xac, 0xc0, 0x78, 0x3f, 0x0d, 0x92, 0xcd, 0x0e, 0x16, 0xdc, 0xf0, 0x78,
	0xca, 0x71, 0xa1, 0xce, 0x2a, 0x98, 0x36, 0xc7, 0xce, 0xd6, 0x2e, 0x4c, 0xad, 0x4e, 0xb7, 0xb4,
	0x36, 0x7b, 0x84, 0x72, 0x4e, 0xc0, 0x58, 0x12, 0x77, 0x83, 0x66, 0xfd, 0x6c, 0xe5, 0xc2, 0xec,
	0xea, 0x78, 0xcb, 0x8b, 0xbb, 0x41, 0xea, 0x21, 0xcc, 0x79, 0x01, 0xea, 0x6b, 0xfd, 0x6c, 0x3f,
	0x6d, 0x8e, 0x9f, 0xad, 0x5d, 0x98, 0x5d, 0x5d, 0x68, 0xb1, 0x54, 0x9c, 0x84, 0x5f, 0xf8, 0x59,
	0x18, 0x47, 0x57, 0x82, 0x7b, 0x1e, 0xe1, 0x9d, 0xb3, 0x30, 0x95, 0x06, 0xc9, 0x83, 0x20, 0xd9,
	0x8c, 0x3a, 0xc1, 0xa3, 0xe6, 0x04, 0xd6, 0x42, 0x07, 0xb9, 0xbf, 0x5f, 0x81, 0xa5, 0x6b, 0x7e,
	0xd4, 0xe9, 0x06, 0xbc, 0x0e, 0x5e, 0xf0, 0x79, 0x3f, 0x48, 0xb3, 0x11, 0xbb, 0xfe, 0x0c, 0xc0,
	0x41, 0x90, 0xed, 0xc7, 0x1d, 0xad, 0xf3, 0x35, 0x88, 0xf3, 0x1e, 0xcc, 0xf2, 0xb1, 0xdf, 0x88,
	0xa3, 0x2c, 0x88, 0x32, 0xec, 0x89, 0xa9, 0xd5, 0xa5, 0x16, 0xf1, 0x40, 0x4b, 0xf0, 0x40, 0x6b,
	0x2d, 0x3a, 0xf4, 0x2c, 0x5a, 0xe7, 0x65, 0x68, 0x04, 0x62, 0x50, 0x9a, 0x63, 0xf8, 0xe3, 0x42,
	0xcb, 0x1e, 0x2d, 0x4f, 0xd1, 0xb8, 0x7f, 0xa1, 0x02, 0x8e, 0xd5, 0x9a, 0x5e, 0xf7, 0xd0, 0x79,
	0x09, 0x20, 0x48, 0x12, 0x0e, 0xc2, 0x86, 0x4c, 0xad, 0xce, 0xb4, 0x3e, 0x4c, 0x92, 0x58, 0x00,
	0x3d, 0x8d, 0xa0, 0xa0, 0xd2, 0xd5, 0xd1, 0x2b, 0xed, 0x5e, 0x83, 0x69, 0x3d, 0x67, 0xe7, 0x0c,
	0x8c, 0xb5, 0xe3, 0x0e, 0x15, 0x3b, 0xbb, 0x0a, 0x54, 0xec, 0x46, 0xdc, 0x09, 0x3c, 0x84, 0x3b,
	0x4d, 0x98, 0xe0, 0x39, 0xf0, 0xfe, 0x13, 0x49, 0x77, 0x16, 0xa6, 0x3f, 0x3c, 0xe8, 0x65, 0x87,
	0x3c, 0x27, 0x37, 0x81, 0xf9, 0xed, 0xae, 0x7f, 0x18, 0x24, 0xb7, 0xa2, 0x6e, 0x18, 0x05, 0xc8,
	0xaa, 0x0e, 0x8c, 0xf5, 0xfb, 0xa1, 0x60, 0x51, 0xfc, 0x76, 0x2e, 0xc3, 0x42, 0x1a, 0xb7, 0xef,
	0x07, 0xd9, 0x8e, 0x36, 0xf6, 0x94, 0x77, 0x1e, 0xe1, 0x9c, 0x82, 0x46, 0x37, 0xde, 0x0b, 0xa3,
	0xdb, 0xe1, 0x41, 0x80, 0xa3, 0x53, 0xf3, 0x14, 0xc0, 0xfd, 0x6b, 0x53, 0x00, 0x54, 0x68, 0x69,
	0x71, 0x4d, 0x98, 0x48, 0xf7, 0xe3, 0x24, 0xdb, 0xec, 0x88, 0x06, 0xf0, 0x24, 0xa3, 0x8e, 0x7c,
	0x9e, 0x6b, 0xc3, 0xc3, 0x6f, 0x46, 0xed, 0xb7, 0xdb, 0x71, 0x3f, 0xca, 0x70, 0x44, 0x1b, 0x9e,
	0x48, 0x32, 0xcc, 0xae, 0xdf, 0xf5, 0xa3, 0x36, 0x31, 0x7d, 0xcd, 0x13, 0x49, 0x86, 0x09, 0x53,
	0x2f, 0xde, 0x8d, 0xb3, 0xe6, 0x38, 0xce, 0x60, 0x91, 0x74, 0x9e, 0x87, 0xc9, 0x3d, 0xff, 0x20,
	0xb8, 0x7d, 0xd8, 0x0b, 0x90, 0xbb, 0x67, 0x57, 0x1b, 0xad, 0xab, 0x1c, 0xe0, 0x49, 0x14, 0x6b,
	0x23, 0xfb, 0xde, 0x69, 0x07, 0x51, 0xd0, 0x9c, 0x3c, 0x5b, 0xb9, 0x50, 0xf7, 0x14, 0xc0, 0xb9,
	0x00, 0x73, 0x98, 0xd0, 0x7a, 0xab, 0x81, 0x55, 0xb3, 0xc1, 0xc5, 0x3d, 0x0b, 0x65, 0x3d, 0xfb,
	0x02, 0xd4, 0x7d, 0x9c, 0xa6, 0x53, 0xa5, 0xd3, 0x14, 0xf1, 0x4c, 0x4e, 0x24, 0x71, 0x7c, 0xb0,
	0xd9, 0x69, 0x4e, 0x93, 0x9c, 0xa0, 0x94, 0x94, 0x01, 0x33, 0x05, 0x32, 0xe0, 0x39, 0x18, 0x4f,
	0x33, 0x3f, 0xeb, 0xa7, 0xcd, 0x59, 0xc4, 0x4e, 0xb5, 0xee, 0xa4, 0x41, 0xb2, 0x83, 0x20, 0x8f,
	0xa3, 0xd8, 0xf4, 0xec, 0xfa, 0x69, 0xe6, 0x51, 0xe6, 0x73, 0x34, 0x3d, 0x15, 0xc4, 0x79, 0x11,
	0x1a, 0x3b, 0xe1, 0x5e, 0x74, 0x35, 0xbc, 0x97, 0xa5, 0xcd, 0x79, 0xac, 0xe5, 0x54, 0x8b, 0xa5,
	0x78, 0x3e, 0x0a, 0xeb, 0xbc, 0x0a, 0x33, 0xb7, 0xf7, 0x93, 0x20, 0xb8, 0xe2, 0x1f, 0x12, 0xf9,
	0x42, 0x9e, 0xdc, 0xa4, 0x70, 0xde, 0x82, 0xf9, 0x8f, 0xc2, 0x24, 0xcd, 0x36, 0xf6, 0xfd, 0x64,
	0x2f, 0xa0, 0xbf, 0x9e, 0xcf, 0xff, 0x95, 0x23, 0x62, 0x62, 0x6b, 0x2f, 0xc8, 0xd8, 0x37, 0x32,
	0xa5, 0x43, 0x62, 0x4b, 0x03, 0xb1, 0x01, 0xdd, 0xf1, 0xef, 0x05, 0x37, 0xe2, 0x28, 0x38, 0x6c,
	0x2e, 0x12, 0xd3, 0x4a, 0x00, 0xfb, 0xff, 0x6e, 0x18, 0xe1, 0xf7, 0x4e, 0xff, 0xa0, 0xb9, 0x84,
	0x78, 0x1d, 0xc4, 0x96, 0x8c, 0x4f, 0xc2, 0xde, 0x56, 0xf0, 0x20, 0xe8, 0x36, 0x97, 0x91, 0x1f,
	0x64, 0x9a, 0xf1, 0x54, 0xe6, 0xa7, 0xf7, 0x51, 0xe8, 0xac, 0xa0, 0x80, 0x6e, 0xb4, 0x6e, 0x73,
	0x80, 0x27, 0x51, 0x6c, 0x01, 0x60, 0x3d, 0xc9, 0x30, 0x58, 0xcb, 0x63, 0x58, 0x8a, 0x01, 0xc3,
	0xa9, 0xd1, 0x0b, 0xa3, 0x9b, 0xfd, 0x83, 0x66, 0x13, 0x4b, 0x11, 0x49, 0xf1, 0xf7, 0x4e, 0x8f,
	0x4f, 0xbc, 0xe3, 0xea, 0x6f, 0x01, 0x73, 0xde, 0x87, 0xd9, 0x84, 0x71, 0xb9, 0x14, 0x75, 0xcd,
	0x13, 0x28, 0x87, 0x96, 0x5b, 0xc8, 0xfc, 0x34, 0x2d, 0x95, 0x1c, 0xb4, 0x88, 0x9d, 0x79, 0xa8,
	0xa5, 0xc1, 0xa3, 0xe6, 0x49, 0x2c, 0x98, 0x7d, 0x32, 0x76, 0xd8, 0x0f, 0xfc, 0xce, 0xe6, 0xc1,
	0xde, 0x9d, 0xa4, 0xdb, 0x3c, 0x45, 0xec, 0xa0, 0x20, 0xac, 0xba, 0x38, 0x15, 0x93, 0xc3, 0xe6,
	0x69, 0x9a, 0x9b, 0x3c, 0xc9, 0xfa, 0xab, 0x97, 0xc4, 0x0f, 0x42, 0x36, 0x39, 0xcf, 0xd0, 0x12,
	0x2b, 0xd2, 0x6c, 0x96, 0xb7, 0xc3, 0xec, 0xb0, 0xf9, 0x25, 0x9a, 0xe5, 0xec, 0xdb, 0x79, 0x1f,
	0xe6, 0x7b, 0x58, 0xbd, 0x9d, 0xb8, 0x9f, 0xb4, 0x69, 0x7e, 0x9e, 0x45, 0x3e, 0x5d, 0x68, 0x6d,
	0x5b, 0x08, 0x2f, 0x47, 0xea, 0x6c, 0xc2, 0x52, 0xb6, 0x1f, 0x26, 0x9d, 0x6d, 0x3f, 0xc9, 0x0e,
	0xd7, 0xda, 0xed, 0x20, 0x4d, 0xb1, 0xfd, 0x5f, 0xe6, 0xed, 0xbf, 0x5d, 0x80, 0xf4, 0x0a, 0x7f,
	0x61, 0xeb, 0x18, 0xeb, 0xd4, 0x2d, 0x29, 0xe2, 0x5c, 0xec, 0x69, 0x13, 0xc8, 0x86, 0x83, 0xb1,
	0xcf, 0xb6, 0x9f, 0xa6, 0x0f, 0xe3, 0xa4, 0xd3, 0x7c, 0x8e, 0x56, 0x73, 0x1d, 0xe6, 0xbc, 0x0b,
	0x73, 0x4c, 0xec, 0x32, 0xf1, 0xb2, 0xd3, 0xdf, 0xc5, 0x26, 0x9d, 0xc3, 0x26, 0xcd, 0xb7, 0xb6,
	0x4c, 0xb8, 0x67, 0x13, 0x3a, 0xaf, 0xc0, 0x62, 0x96, 0xf8, 0x51, 0xea, 0xb7, 0xd9, 0xd4, 0x97,
	0xc5, 0x9c, 0xc7, 0x62, 0x8a, 0x50, 0x4c, 0x26, 0x1c, 0xc4, 0xbb, 0x61, 0x37, 0x68, 0xbe, 0x40,
	0x32, 0x81, 0x52, 0xee, 0x2f, 0x55, 0x60, 0xa9, 0xa8, 0xf9, 0xac, 0xcb, 0x1f, 0x06, 0x1b, 0xfb,
	0x7e, 0xa6, 0xf5, 0x57, 0x85, 0xaf, 0x99, 0x77, 0x2d, 0x84, 0x97, 0x23, 0x75, 0x36, 0xc0, 0xb9,
	0xe7, 0xb7, 0x83, 0xdd, 0x38, 0xbe, 0xaf, 0x65, 0x40, 0x0b, 0xdf, 0x62, 0xeb, 0xa3, 0x1c, 0xca,
	0x2b, 0x20, 0x77, 0xff, 0x4a, 0x05, 0x16, 0x54, 0xe5, 0xee, 0xf0, 0x45, 0xe3, 0x2d, 0x98, 0xa5,
	0xe2, 0x98, 0x84, 0xd2, 0xea, 0x35, 0xc7, 0xeb, 0x25, 0xc0, 0x9e, 0x45, 0xc6, 0x9a, 0x24, 0x0a,
	0x91, 0xbf, 0x56, 0x79, 0x93, 0x3e, 0xb2, 0x10, 0x5e, 0x8e, 0xd4, 0xfd, 0x5f, 0x2a, 0x30, 0x6f,
	0xb7, 0xdc, 0xf9, 0x32, 0x4c, 0xfb, 0x98, 0xfa, 0x34, 0x8b, 0xef, 0x07, 0x11, 0x5f, 0xc9, 0xa6,
	0x08, 0x76, 0x9b, 0x81, 0x9c, 0xd3, 0x00, 0xc1, 0xa3, 0x5e, 0x98, 0x04, 0xe9, 0xa7, 0x61, 0x84,
	0x05, 0xd6, 0x98, 0x92, 0x81, 0x90, 0xcd, 0xc8, 0x79, 0x0e, 0x66, 0x92, 0xe0, 0x5e, 0x12, 0xa4,
	0xfb, 0x3c, 0x0b, 0x5a, 0xde, 0xa6, 0x39, 0x90, 0xf2, 0x38, 0x06, 0x13, 0x71, 0x2f, 0x88, 0x3e,
	0x0d, 0x3b, 0x7c, 0x99, 0x1b, 0x67, 0xc9, 0xcd, 0x8e, 0xb3, 0x04, 0xf5, 0xb4, 0x1d, 0xf7, 0x68,
	0x8d, 0x6b, 0x78, 0x94, 0x70, 0x8e, 0xc3, 0x64, 0x3f, 0x0a, 0x63, 0xa4, 0x1f, 0xa7, 0xa9, 0x87,
	0xe9, 0xcd, 0x8e, 0xf3, 0x25, 0x98, 0xea, 0xf7, 0x3a, 0x7e, 0x16, 0x7c, 0x9a, 0x31, 0xf6, 0x9d,
	0xc0, 0xea, 0x00, 0x81, 0x70, 0x89, 0xfe, 0xc3, 0x0a, 0xcc, 0x9a, 0x1d, 0xc9, 0x98, 0x87, 0x8a,
	0xe3, 0xcd, 0x13, 0x85, 0x9f, 0x80, 0xc9, 0x28, 0x34, 0x35, 0x65, 0x91, 0x16, 0xe2, 0xa2, 0xa6,
	0xc4, 0x85, 0x3e, 0xe9, 0xc7, 0x4a, 0x26, 0x7d, 0x5d, 0x9b, 0xf4, 0x9a, 0xf8, 0x18, 0x37, 0xc5,
	0x87, 0x29, 0x78, 0x26, 0x8a, 0x04, 0x0f, 0x6f, 0x2e, 0xae, 0xce, 0xaa, 0xf5, 0xee, 0xcf, 0x57,
	0xc0, 0xc9, 0x33, 0xdf, 0x88, 0xa3, 0x88, 0xb8, 0x4f, 0x33, 0x36, 0x53, 0xa9, 0xb5, 0x0d, 0x84,
	0xe0, 0x8c, 0x34, 0x07, 0xb9, 0x66, 0x0f, 0xf2, 0xd0, 0x5e, 0xff, 0xb9, 0x0a, 0xcc, 0xdb, 0x3c,
	0xf8, 0x58, 0xfd, 0x6e, 0xf6, 0x4d, 0x2d, 0xd7, 0x37, 0x4b, 0x50, 0x0f, 0x0e, 0xfc, 0xb0, 0xcb,
	0x87, 0x80, 0x12, 0xac, 0xa4, 0xbd, 0x20, 0xea, 0x04, 0x09, 0x1f, 0x01, 0x9e, 0x72, 0x7f, 0xb6,
	0x02, 0x33, 0x1b, 0xb8, 0x07, 0xf9, 0x63, 0xa4, 0xc8, 0xbb, 0x07, 0x30, 0x25, 0x2a, 0xc5, 0xf4,
	0xf1, 0xb3, 0x30, 0xc5, 0x09, 0xb4, 0x0a, 0xe9, 0xa0, 0x27, 0x54, 0xc1, 0x7f, 0x18, 0xa6, 0x51,
	0xb4, 0x8b, 0x2e, 0xd0, 0x74, 0xce, 0x8a, 0xa9, 0x73, 0x32, 0x16, 0x17, 0xc2, 0x98, 0x0f, 0x4c,
	0x2f, 0x2f, 0x81, 0x6b, 0x86, 0x04, 0xbe, 0x0e, 0x0e, 0x4d, 0x37, 0xa3, 0x0c, 0x47, 0x53, 0xf3,
	0x1b, 0x5c, 0xb5, 0xb7, 0xb9, 0xb4, 0x9a, 0xe3, 0x52, 0xf7, 0x1d, 0x58, 0x12, 0x5c, 0x64, 0x64,
	0x37, 0x9c, 0xc1, 0xdd, 0xef, 0x55, 0x00, 0xf8, 0x3f, 0xac, 0x53, 0x2f, 0x01, 0xf4, 0xa4, 0xa2,
	0xce, 0x25, 0xec, 0x54, 0x4b, 0xe9, 0xee, 0x9e, 0x86, 0x66, 0xc3, 0x4d, 0xbb, 0x40, 0x5c, 0x12,
	0x49, 0xc4, 0x69, 0x10, 0xe7, 0x12, 0x34, 0xd6, 0xba, 0xdd, 0x8d, 0x38, 0xba, 0x17, 0xee, 0x35,
	0x6b, 0xa8, 0x04, 0xcd, 0xb4, 0xae, 0x76, 0xe3, 0x5d, 0x9f, 0x03, 0x3d, 0x85, 0xcf, 0xd5, 0x75,
	0x2c, 0x5f, 0xd7, 0x57, 0xc0, 0xb9, 0x12, 0xdc, 0xf3, 0xfb, 0xdd, 0x8c, 0xe9, 0xc0, 0xa2, 0x91,
	0x42, 0xbf, 0xad, 0xe4, 0xf5, 0x5b, 0xf7, 0x2b, 0x30, 0x6f, 0xfc, 0xc1, 0x9a, 0x28, 0x15, 0xea,
	0xca, 0x60, 0x85, 0xda, 0x5d, 0x83, 0x95, 0x9d, 0x20, 0x33, 0xea, 0xcb, 0x8b, 0x7c, 0x81, 0xc9,
	0x28, 0x06, 0xa0, 0x4c, 0x72, 0xcd, 0x12, 0x58, 0x77, 0x05, 0x96, 0x72, 0x59, 0xf4, 0xba, 0x87,
	0xee, 0x49, 0x38, 0x7e, 0xd5, 0x84, 0xaf, 0x75, 0xbb, 0x3c, 0x77, 0x77, 0x1d, 0x8e, 0x15, 0x21,
	0xa9, 0xee, 0x23, 0x16, 0xfc, 0x1d, 0xca, 0xc3, 0x3f, 0x08, 0xec, 0xec, 0x8d, 0xdd, 0x4e, 0x65,
	0xc4, 0xdd, 0x4e, 0xd5, 0xda, 0xed, 0xb8, 0x1f, 0xc0, 0x72, 0x3e, 0x7f, 0x56, 0xc3, 0xe7, 0xed,
	0x1a, 0x4e, 0xb5, 0x14, 0x95, 0xaa, 0xdf, 0xfb, 0xd4, 0x31, 0x0a, 0x23, 0x2b, 0x37, 0xd2, 0xef,
	0x4b, 0xe0, 0x58, 0xbf, 0xb3, 0x5e, 0x7d, 0x1f, 0x96, 0x78, 0xa5, 0xb0, 0x92, 0xe9, 0xd1, 0x5a,
	0xec, 0xee, 0x80, 0x63, 0xfd, 0x4e, 0x0d, 0x1a, 0xa9, 0xbb, 0x56, 0x60, 0x3c, 0xc5, 0xbf, 0x9a,
	0xd5, 0xb3, 0xb5, 0x0b, 0x75, 0x8f, 0xa7, 0xdc, 0x3b, 0xb0, 0x72, 0x25, 0xe8, 0x06, 0x59, 0x20,
	0xf3, 0x3d, 0xe2, 0x38, 0xe0, 0x52, 0xaf, 0xc6, 0x80, 0x12, 0xee, 0x0e, 0x2c, 0xe5, 0xb2, 0x3d,
	0x42, 0x6d, 0x8b, 0x33, 0xbd, 0x0e, 0xcb, 0x3b, 0x41, 0xd4, 0xd9, 0x09, 0x0f, 0x7a, 0x5d, 0x94,
	0x4d, 0xa2, 0xaa, 0x67, 0x00, 0xd8, 0x3c, 0xec, 0x65, 0x77, 0xd8, 0xb6, 0x9d, 0xaf, 0x2e, 0x0a,
	0x22, 0xc5, 0xd6, 0x98, 0x12, 0x5b, 0xee, 0x6b, 0xb0, 0x68, 0x67, 0xc6, 0x2a, 0x78, 0x0a, 0x1a,
	0x61, 0xba, 0xd3, 0xc7, 0x59, 0x8d, 0x35, 0x9c, 0xf4, 0x14, 0xc0, 0x7d, 0x04, 0xb3, 0xdb, 0xfd,
	0x74, 0x5f, 0xfd, 0xa4, 0xed, 0x6a, 0x2b, 0xd6, 0xae, 0x76, 0x32, 0x0d, 0xa2, 0x0e, 0x56, 0x88,
	0xcb, 0x5c, 0x91, 0x7e, 0xac, 0xea, 0xfe, 0x8f, 0x55, 0x98, 0xf6, 0x82, 0x4e, 0x98, 0x0a, 0x8b,
	0xcb, 0x12, 0xd4, 0x33, 0x7f, 0xb7, 0x2b, 0x64, 0x31, 0x25, 0x98, 0x7e, 0x73, 0x3f, 0x38, 0xe4,
	0x25, 0xb2, 0x4f, 0xb6, 0x0c, 0x3d, 0xf0, 0xbb, 0xfd, 0x60, 0x27, 0x4b, 0xc2, 0x68, 0x8f, 0x97,
	0xa6, 0x83, 0x58, 0x93, 0x31, 0xb9, 0x7e, 0x98, 0x51, 0x99, 0xd3, 0x9e, 0x02, 0x28, 0x6c, 0x1c,
	0x77, 0x71, 0x19, 0x9e, 0xf4, 0x14, 0xc0, 0x39, 0x0f, 0xb3, 0x5a, 0x56, 0x6b, 0x49, 0x82, 0xd6,
	0xba, 0x86, 0x67, 0x41, 0xd9, 0xd6, 0x43, 0x66, 0xc9, 0xa8, 0x26, 0xce, 0xd6, 0x2e, 0x4c, 0x7b,
	0x06, 0x8c, 0xb5, 0x88, 0x96, 0xaf, 0x49, 0x94, 0xd4, 0x94, 0x60, 0x9d, 0x85, 0x54, 0x9b, 0x51,
	0xf6, 0xe6, 0xeb, 0x68, 0xb2, 0xa8, 0x79, 0x1a, 0x04, 0x59, 0x25, 0xf3, 0x93, 0x0c, 0x2d, 0x14,
	0x8c, 0x55, 0x58, 0x82, 0x75, 0x61, 0x9a, 0xc5, 0xbd, 0xe6, 0x14, 0x02, 0xf1, 0x9b, 0x0d, 0x55,
	0xf0, 0x08, 0x97, 0x82, 0x69, 0x84, 0xf2, 0x94, 0xfb, 0x17, 0x6b, 0x30, 0x7f, 0xe3, 0x30, 0xfd,
	0xbc, 0xbb, 0x46, 0xeb, 0x25, 0xae, 0x1d, 0xc7, 0x60, 0xc2, 0xef, 0x67, 0xf1, 0xa7, 0xdc, 0x0c,
	0x34, 0xe6, 0x8d, 0xb3, 0x24, 0x99, 0x7b, 0xfa, 0x6a, 0x50, 0xc9, 0x38, 0x74, 0x1c, 0x26, 0xd1,
	0x1a, 0xf4, 0xa9, 0x1c, 0x4e, 0x69, 0x1d, 0x2a, 0xb7, 0x04, 0xe9, 0xab, 0x72, 0xdd, 0x5a, 0x95,
	0x9f, 0x83, 0x06, 0x5b, 0x1f, 0x48, 0xab, 0x1b, 0x37, 0x16, 0x8e, 0x49, 0x86, 0xc0, 0x49, 0x32,
	0x4c, 0x7b, 0x2b, 0xdc, 0x9f, 0x4e, 0x8e, 0xbe, 0x3f, 0xd5, 0xb4, 0xfb, 0x86, 0xa1, 0xe8, 0xe9,
	0x7a, 0x3c, 0xe4, 0xf4, 0xf8, 0x76, 0x12, 0xc8, 0x3a, 0x4d, 0x51, 0x9d, 0x08, 0x84, 0x75, 0x52,
	0xfa, 0xc6, 0xb4, 0xa1, 0x6f, 0xfc, 0x5e, 0x15, 0x1c, 0x1c, 0x84, 0xad, 0xc0, 0xdf, 0xeb, 0x07,
	0x6c, 0x6b, 0x15, 0x05, 0x49, 0xf9, 0x30, 0x9c, 0x01, 0xe8, 0x22, 0xe5, 0x9d, 0x3b, 0x9b, 0x57,
	0x84, 0x2a, 0xa7, 0x20, 0x8c, 0xed, 0xc3, 0xe8, 0x41, 0x98, 0xc5, 0x09, 0x12, 0x70, 0xb6, 0xd7,
	0x40, 0x8c, 0xa2, 0x47, 0xa5, 0x20, 0x05, 0x5f, 0xcf, 0x35, 0x10, 0x59, 0xe4, 0xd6, 0xf6, 0x98,
	0x62, 0x56, 0x17, 0x16, 0x39, 0x4c, 0xb2, 0x7f, 0x7d, 0xf6, 0xb1, 0x9d, 0xc4, 0xf7, 0x42, 0xb2,
	0xd7, 0xd5, 0x3d, 0x1d, 0x84, 0xf2, 0x96, 0x2c, 0x57, 0x13, 0xc4, 0x6c, 0xdc, 0x58, 0x75, 0x0a,
	0x1a, 0x7e, 0xaf, 0xd7, 0x3d, 0x44, 0x3e, 0x24, 0x46, 0x57, 0x00, 0xc6, 0x13, 0x9f, 0xc5, 0x7c,
	0x0b, 0x4f, 0xac, 0x2e, 0xd3, 0x0c, 0xf7, 0x79, 0x3f, 0x24, 0x63, 0x11, 0x10, 0x4e, 0xa4, 0xdd,
	0xbf, 0x52, 0x83, 0x39, 0xad, 0xf7, 0x36, 0xba, 0xfd, 0xdd, 0xf2, 0xae, 0x63, 0x2c, 0xc9, 0x4a,
	0xe4, 0xfd, 0x56, 0xf7, 0x44, 0xd2, 0xea, 0xd4, 0x5a, 0x51, 0xa7, 0x0e, 0xe9, 0xb2, 0x13, 0x30,
	0xd9, 0xee, 0xf6, 0x77, 0x11, 0xcd, 0x99, 0x5a, 0xa4, 0xb5, 0x2e, 0x19, 0x37, 0xba, 0xe4, 0x34,
	0x00, 0x56, 0x40, 0x67, 0x63, 0xad, 0x4f, 0x4e, 0x42, 0x83, 0xf5, 0x01, 0x61, 0x27, 0xad, 0x4e,
	0x39, 0x09, 0x0d, 0xd6, 0x09, 0x84, 0x6c, 0x98, 0xbd, 0xe2, 0x5c, 0x80, 0x39, 0xcc, 0x86, 0xc9,
	0x20, 0xde, 0x60, 0xc0, 0xc5, 0xcf, 0x06, 0x33, 0x4a, 0xad, 0x15, 0x5b, 0x61, 0x9a, 0xa1, 0x39,
	0xb3, 0xe1, 0xd9, 0x60, 0x3a, 0x11, 0xa1, 0x06, 0x21, 0xd9, 0x34, 0x92, 0x19, 0x30, 0xf7, 0x5f,
	0x56, 0xc1, 0xa1, 0x81, 0xb8, 0x11, 0x1c, 0xec, 0x06, 0xc9, 0x95, 0x20, 0x63, 0xbb, 0x19, 0xb3,
	0x77, 0x2b, 0xb9, 0xde, 0xc5, 0xdd, 0x09, 0xa3, 0xd7, 0x59, 0x5a, 0x41, 0x98, 0xe4, 0x41, 0x45,
	0x92, 0x36, 0xaf, 0x64, 0x20, 0xbd, 0x24, 0xfb, 0x74, 0x0c, 0x27, 0xf6, 0x62, 0x4b, 0x2f, 0xd8,
	0x32, 0x94, 0xea, 0xdc, 0x55, 0xb7, 0x3a, 0xf2, 0x22, 0xcc, 0x13, 0xd5, 0xc6, 0xbe, 0x1f, 0xed,
	0xe1, 0x5c, 0xc5, 0x61, 0xaa, 0x79, 0x39, 0x38, 0xab, 0xc8, 0x6e, 0xe0, 0x47, 0x7c, 0xa8, 0xf0,
	0x5b, 0x98, 0xfa, 0x98, 0x58, 0xd1, 0x58, 0xdb, 0x80, 0x19, 0xcc, 0xd1, 0xb0, 0x98, 0xe3, 0x3c,
	0xcc, 0xf6, 0xfc, 0x24, 0x88, 0x32, 0xaa, 0xf9, 0xa6, 0x90, 0x2c, 0x16, 0x94, 0x75, 0x52, 0x0f,
	0x67, 0x98, 0xe7, 0x67, 0x52, 0xbe, 0x28, 0x08, 0xd3, 0xc1, 0xaf, 0x06, 0x19, 0x9b, 0x00, 0xb8,
	0x1d, 0x90, 0x3a, 0xb8, 0x2a, 0xb9, 0x62, 0x96, 0xec, 0x7e, 0x13, 0xe6, 0x8d, 0x3f, 0x98, 0x16,
	0x60, 0x0e, 0x45, 0x05, 0xc7, 0x58, 0x1f, 0x8a, 0xe7, 0x61, 0x82, 0x52, 0xa4, 0x4e, 0x31, 0x35,
	0x90, 0x65, 0x40, 0xb5, 0xf4, 0x04, 0xce, 0xfd, 0xd1, 0x0a, 0x2c, 0x33, 0x7d, 0x81, 0xef, 0x4f,
	0xda, 0x71, 0xc4, 0xbb, 0xb1, 0x54, 0x6d, 0xb8, 0x00, 0x8d, 0x24, 0x48, 0x33, 0x24, 0xe5, 0x59,
	0x43, 0x8b, 0xa5, 0xb6, 0xe3, 0x30, 0xca, 0x3c, 0x85, 0x64, 0x94, 0x78, 0x3e, 0x82, 0x94, 0xb5,
	0x3c, 0xa5, 0x44, 0xba, 0x3e, 0xac, 0x6c, 0x85, 0xd1, 0xfd, 0x3b, 0x3d, 0xb5, 0x4d, 0x1a, 0x52,
	0x8b, 0x97, 0xf5, 0xe3, 0x10, 0x5e, 0x8d, 0xb9, 0x96, 0x17, 0xc7, 0x07, 0xfa, 0x4e, 0x4b, 0x7d,
	0xbb, 0xb7, 0xe0, 0xb8, 0xc2, 0x7a, 0x81, 0xdf, 0x39, 0xbc, 0xd9, 0x3f, 0x60, 0x9a, 0x4a, 0x30,
	0xa0, 0x94, 0x13, 0x30, 0x99, 0x70, 0x52, 0xbe, 0x39, 0x93, 0x69, 0xb7, 0x05, 0x4d, 0xaa, 0xf3,
	0x5d, 0x3f, 0x6b, 0xef, 0x8b, 0x7c, 0xe5, 0x26, 0xd4, 0x3e, 0x9e, 0x71, 0x0f, 0x44, 0x1b, 0x0d,
	0x7a, 0x36, 0x94, 0x4d, 0x98, 0x48, 0x0d, 0x75, 0x4e, 0x24, 0x9d, 0x77, 0x60, 0xee, 0xa1, 0xa2,
	0xd6, 0xec, 0x6e, 0xb9, 0xa6, 0xda, 0x74, 0xee, 0xd7, 0xe0, 0xf8, 0xd7, 0xfb, 0x41, 0x72, 0xc8,
	0x35, 0x86, 0xf5, 0x43, 0xb6, 0x36, 0x8b, 0xfa, 0x8d, 0xb2, 0x78, 0xbb, 0xdb, 0x70, 0xac, 0x28,
	0x07, 0x56, 0xe3, 0x37, 0x70, 0xa7, 0x29, 0x34, 0x11, 0xb1, 0xd1, 0x58, 0x68, 0xd9, 0x3a, 0x8a,
	0x67, 0x90, 0xb9, 0x3f, 0x53, 0x81, 0xd3, 0x98, 0xa5, 0x61, 0x38, 0x65, 0x78, 0x51, 0xb1, 0x22,
	0x7d, 0xa0, 0xf2, 0x58, 0xfa, 0x40, 0xb5, 0x54, 0x1f, 0xa8, 0x99, 0x96, 0xad, 0xdb, 0x70, 0xb2,
	0xac, 0x4e, 0x4f, 0xd0, 0xd4, 0xdf, 0xa8, 0xc0, 0x2c, 0x92, 0x5c, 0xff, 0x44, 0xa8, 0xc3, 0xa7,
	0x01, 0x50, 0x03, 0xfe, 0x34, 0x52, 0xc6, 0x96, 0x06, 0x42, 0xd0, 0xd4, 0xa2, 0x2d, 0x86, 0xd5,
	0x42, 0x75, 0xae, 0x56, 0xa2, 0xce, 0x8d, 0xe5, 0x0e, 0xfb, 0x42, 0xc6, 0x28, 0x75, 0x54, 0x93,
	0xf1, 0xdb, 0xd6, 0xc3, 0xc6, 0x73, 0x56, 0xb4, 0x1f, 0xad, 0xc2, 0x9c, 0x17, 0xec, 0x85, 0x69,
	0xa6, 0x98, 0xf8, 0xf1, 0xac, 0x35, 0x4c, 0xca, 0x86, 0x51, 0xb0, 0x11, 0x77, 0xf4, 0x25, 0xda,
	0x80, 0xa1, 0x84, 0x44, 0x99, 0xa9, 0xad, 0xd1, 0x1a, 0x84, 0x69, 0x20, 0x6d, 0xbf, 0x97, 0xb5,
	0xf7, 0xfd, 0x4d, 0xa1, 0x78, 0x2a, 0x00, 0x5b, 0xe2, 0x3f, 0x09, 0x92, 0xf0, 0xde, 0xe1, 0x27,
	0x4c, 0xc5, 0xe6, 0x26, 0x4e, 0x1d, 0x84, 0x56, 0x95, 0x83, 0x74, 0x83, 0xfe, 0x10, 0x66, 0x4e,
	0x05, 0xd1, 0x34, 0xbc, 0x49, 0x43, 0xc3, 0x7b, 0x1f, 0x66, 0x54, 0x27, 0xb0, 0xc1, 0x3f, 0xd2,
	0x31, 0xab, 0xbb, 0x08, 0x0b, 0x4c, 0x4c, 0x53, 0x21, 0xc2, 0x14, 0xb1, 0x01, 0x73, 0x3a, 0x90,
	0x6f, 0xe0, 0x54, 0xf3, 0x2a, 0x76, 0xf3, 0x1c, 0x18, 0xeb, 0xf8, 0x99, 0x2f, 0xb4, 0x77, 0xf6,
	0xed, 0xbe, 0x00, 0x0b, 0x5b, 0xb1, 0xdf, 0x19, 0x2e, 0x64, 0x3e, 0x80, 0x39, 0x9d, 0x30, 0x6f,
	0x8f, 0xaa, 0x0e, 0xb4, 0x47, 0xb9, 0x7f, 0x58, 0x83, 0xf9, 0x9b, 0xc1, 0xc3, 0xa1, 0x05, 0x19,
	0x0c, 0x38, 0xc2, 0x69, 0xb3, 0xb4, 0x18, 0x8d, 0x0d, 0x39, 0x82, 0x75, 0x41, 0x0a, 0x20, 0xeb,
	0xca, 0x85, 0xda, 0x55, 0x68, 0x8c, 0x39, 0x6e, 0x32, 0x26, 0xb7, 0x9d, 0x4f, 0x94, 0x1d, 0xb5,
	0x4d, 0x0e, 0x3a, 0x6a, 0x6b, 0x94, 0x1f, 0xb5, 0x41, 0x89, 0xd5, 0x7d, 0x6a, 0xc8, 0x51, 0xdb,
	0xf4, 0x93, 0x1f, 0xb5, 0xcd, 0x1c, 0xfd, 0xa8, 0x4d, 0xb1, 0xf7, 0xac, 0xc5, 0xde, 0xb3, 0xda,
	0xd8, 0x1e, 0x99, 0x37, 0xbe, 0x03, 0x0b, 0x3b, 0xfe, 0x83, 0xc0, 0xe4, 0x8d, 0x23, 0x59, 0x3b,
	0x4f, 0x41, 0xe3, 0x5e, 0x9c, 0xb4, 0x03, 0x96, 0x0d, 0x96, 0x36, 0xe9, 0x29, 0x80, 0xfb, 0x43,
	0x50, 0xdf, 0x8e, 0xef, 0x07, 0x89, 0xf3, 0x3c, 0x4c, 0xf6, 0xd8, 0x07, 0x5b, 0x75, 0x85, 0x05,
	0x66, 0x9b, 0x03, 0x3c, 0x89, 0xc2, 0xa2, 0xd9, 0xf7, 0x46, 0xdc, 0x8d, 0x13, 0xcc, 0x6e, 0x96,
	0x15, 0x2d, 0x41, 0x9e, 0x86, 0x76, 0x43, 0x98, 0xb8, 0xe1, 0xef, 0x7f, 0x16, 0x47, 0x7b, 0xec,
	0xbf, 0x03, 0xfa, 0x54, 0x05, 0x4c, 0xb5, 0x6e, 0x48, 0x90, 0xa7, 0xa1, 0x9d, 0x57, 0x61, 0x9a,
	0x63, 0xf4, 0x62, 0x66, 0x5a, 0x3a, 0xd0, 0x33, 0x48, 0xdc, 0x55, 0xf9, 0xcb, 0x5a, 0x92, 0xf8,
	0x87, 0x8e, 0x0b, 0x13, 0x3c, 0x43, 0xbe, 0x78, 0x4c, 0x8a, 0xbf, 0x3d, 0x81, 0x70, 0x7f, 0x83,
	0xed, 0x2d, 0xe9, 0x7b, 0x3b, 0x48, 0xd2, 0x38, 0xda, 0xf0, 0x93, 0x4e, 0xea, 0x5c, 0x86, 0xe9,
	0x7d, 0x3f, 0xea, 0x70, 0x4c, 0x9a, 0xfb, 0xdf, 0xc0, 0x3a, 0xaf, 0xc0, 0xec, 0xe7, 0x7d, 0xbf,
	0x93, 0xf4, 0x7b, 0xdd, 0x20, 0x0b, 0xd2, 0xb5, 0x88, 0xeb, 0x45, 0x8a, 0xde, 0xc2, 0x3b, 0xab,
	0x30, 0xa7, 0x43, 0xbe, 0xb5, 0x1f, 0x72, 0x3d, 0x4d, 0xfd, 0x62, 0x13, 0xd8, 0xa5, 0xac, 0xf7,
	0xf9, 0xed, 0xa9, 0x92, 0x52, 0xd6, 0xfb, 0xce, 0x79, 0x68, 0x64, 0x49, 0x48, 0xc9, 0x66, 0xdd,
	0x22, 0x56, 0x28, 0xe7, 0x02, 0x40, 0x14, 0x3c, 0xe4, 0x08, 0x9c, 0xda, 0x3a, 0xa1, 0x86, 0x73,
	0x33, 0x38, 0xc9, 0x3f, 0xd7, 0x83, 0x7b, 0x71, 0x12, 0xdc, 0xea, 0x05, 0x89, 0x9f, 0x49, 0xf5,
	0xe6, 0x45, 0xa8, 0xb7, 0x59, 0xff, 0x71, 0x7e, 0x5c, 0x6c, 0xe5, 0xbb, 0xd6, 0x23, 0x0a, 0xdc,
	0x54, 0x04, 0xdd, 0x5b, 0xbd, 0x00, 0xc1, 0x6c, 0x2d, 0x4c, 0xf9, 0x96, 0x33, 0x07, 0x77, 0xff,
	0x8d, 0x0a, 0x1c, 0x2f, 0x2e, 0x96, 0xcd, 0xa5, 0x57, 0x60, 0x96, 0x8f, 0x66, 0x7a, 0x9d, 0x8d,
	0x7d, 0x94, 0x1b, 0x2d, 0x0b, 0xcf, 0xe6, 0xe9, 0x86, 0x1f, 0xdd, 0xe5, 0x67, 0x9b, 0x93, 0x1e,
	0x4f, 0x39, 0x2d, 0x98, 0xe1, 0x94, 0x8c, 0x70, 0xbd, 0xcf, 0x8f, 0x78, 0x54, 0x46, 0x26, 0xda,
	0xed, 0xcb, 0xde, 0xf8, 0xba, 0xec, 0xf8, 0x6f, 0xed, 0x87, 0xea, 0xe0, 0x69, 0xf2, 0xa0, 0x8c,
	0x81, 0x24, 0x86, 0x55, 0xdf, 0x8f, 0xe2, 0x6c, 0x3f, 0x48, 0xc4, 0x00, 0x54, 0xad, 0x52, 0x2d,
	0xbc, 0xbb, 0x23, 0x7b, 0xc3, 0x2a, 0x96, 0xf5, 0xc6, 0x3c, 0xd4, 0xda, 0x7e, 0xc4, 0xf5, 0x59,
	0xf6, 0x69, 0x54, 0xa3, 0x5a, 0x56, 0x0d, 0x37, 0x82, 0x13, 0xb9, 0x4c, 0xd7, 0xfb, 0xa2, 0x29,
	0x26, 0x87, 0x54, 0xca, 0x39, 0x84, 0xf1, 0xdc, 0x6d, 0xc9, 0x73, 0x76, 0x71, 0x0a, 0xe5, 0x6e,
	0x43, 0xb3, 0xb0, 0xbc, 0xe2, 0x36, 0x68, 0x53, 0xd9, 0xee, 0x1d, 0x39, 0x95, 0x93, 0x82, 0x16,
	0xac, 0xc9, 0xf3, 0xa4, 0xa3, 0xcd, 0xe8, 0x51, 0x5b, 0xe1, 0x15, 0xb4, 0x62, 0x2d, 0x7a, 0xb2,
	0x91, 0x48, 0x64, 0x9e, 0x1b, 0x7e, 0xc4, 0x8b, 0x7a, 0xd6, 0x2c, 0x75, 0x13, 0x56, 0x0a, 0xca,
	0x7c, 0xfc, 0xb1, 0xf8, 0x4f, 0xaa, 0xb0, 0xc0, 0x81, 0x77, 0xd5, 0x99, 0xde, 0x11, 0xc4, 0xc3,
	0x91, 0x9b, 0xe0, 0x9c, 0x63, 0x3a, 0xe4, 0x81, 0x1f, 0x62, 0x3e, 0x6c, 0x81, 0x21, 0x5b, 0x88,
	0x09, 0x74, 0xce, 0xc3, 0xac, 0xb0, 0x3b, 0x04, 0x09, 0xda, 0xd8, 0x49, 0x0b, 0xb6, 0xa0, 0x58,
	0x7e, 0xb7, 0x7b, 0xab, 0x9f, 0x49, 0x86, 0xb1, 0xe5, 0xa7, 0x85, 0x67, 0x0a, 0xcf, 0xae, 0x1f,
	0xdd, 0xe7, 0xb9, 0x92, 0x7e, 0xa4, 0x41, 0x0a, 0x05, 0xde, 0x44, 0x89, 0xc0, 0xfb, 0xcf, 0x2a,
	0x30, 0xa7, 0x77, 0x5f, 0xf1, 0x40, 0xbc, 0x02, 0x13, 0x0f, 0x43, 0x3c, 0xcc, 0xe7, 0xab, 0xe3,
	0x4a, 0xeb, 0xaa, 0x1f, 0xed, 0x5d, 0xeb, 0xfb, 0xea, 0x5f, 0x54, 0x7a, 0x04, 0x99, 0xb3, 0x0a,
	0x93, 0x0f, 0xc3, 0xe8, 0x7a, 0x18, 0x75, 0xc8, 0x2e, 0x50, 0xf8, 0x0b, 0x43, 0x7b, 0x92, 0x8e,
	0x29, 0x6a, 0xf1, 0xc3, 0xe8, 0x4a, 0xe2, 0x3f, 0xc4, 0xae, 0x9a, 0xf4, 0x44, 0x12, 0x6d, 0x46,
	0xfd, 0x34, 0x63, 0xc2, 0x90, 0x1b, 0x41, 0x65, 0xda, 0xbd, 0x06, 0x2b, 0x78, 0xc4, 0x85, 0xc6,
	0x84, 0x9d, 0x4c, 0x5b, 0x23, 0x5a, 0xd0, 0x78, 0xe8, 0x47, 0x78, 0xf7, 0x4d, 0x6c, 0x31, 0xe7,
	0xb9, 0xde, 0xc2, 0xb6, 0xd6, 0x44, 0xab, 0x48, 0xdc, 0x15, 0x58, 0xca, 0xe5, 0xd4, 0xeb, 0x1e,
	0xba, 0xbf, 0x50, 0x01, 0x67, 0xe7, 0x30, 0x6a, 0x9b, 0xfb, 0x71, 0xb4, 0x1c, 0xc4, 0xf1, 0x81,
	0x6e, 0xce, 0x11, 0x69, 0xfb, 0x36, 0x70, 0x35, 0x77, 0x1b, 0x18, 0x37, 0x48, 0xc4, 0x04, 0x9a,
	0x95, 0x53, 0x41, 0xf0, 0x2e, 0x01, 0x56, 0x64, 0x9d, 0x5f, 0xd4, 0x1c, 0xa3, 0xcb, 0x54, 0x06,
	0xd0, 0xfd, 0x47, 0xcf, 0xc3, 0xac, 0x55, 0xad, 0x27, 0xbf, 0x37, 0x2a, 0xce, 0x8a, 0xc7, 0x0a,
	0xee, 0x42, 0x3e, 0xce, 0xcd, 0xd1, 0x33, 0x30, 0x8e, 0x6a, 0x5a, 0x8a, 0x07, 0x2e, 0x53, 0xab,
	0xe3, 0xa4, 0xc1, 0x79, 0x1c, 0x9a, 0x13, 0x98, 0x93, 0xc3, 0x04, 0xa6, 0x52, 0x35, 0xe6, 0xcb,
	0x55, 0x8d, 0xbc, 0xaa, 0xb4, 0x70, 0x74, 0x55, 0x69, 0xf1, 0xe8, 0xaa, 0xd2, 0xd2, 0x10, 0x55,
	0xe9, 0x1c, 0xcc, 0xec, 0xed, 0xef, 0xa8, 0x79, 0x88, 0xb7, 0x19, 0x27, 0x3d, 0x13, 0xe8, 0xb4,
	0xc0, 0x31, 0x00, 0x34, 0x8b, 0x4f, 0xe1, 0x2c, 0x2e, 0xc0, 0x38, 0xef, 0xc2, 0x5c, 0xcf, 0xe4,
	0x6c, 0xdc, 0xec, 0x14, 0x71, 0xbc, 0x4d, 0xe8, 0x9c, 0x83, 0x46, 0xdc, 0xcf, 0xb6, 0x69, 0x88,
	0xc0, 0x18, 0x22, 0x85, 0x70, 0x2e, 0xc2, 0x54, 0xac, 0x09, 0xa9, 0x29, 0xab, 0x99, 0x3a, 0x92,
	0xed, 0x02, 0x1e, 0x86, 0xd1, 0xad, 0x64, 0x2b, 0x4e, 0x69, 0x87, 0x54, 0xf3, 0x14, 0x00, 0x65,
	0x83, 0x1f, 0x66, 0xd7, 0xc3, 0xf6, 0x7d, 0x7e, 0xdf, 0x76, 0x05, 0x6d, 0x5d, 0x3b, 0x81, 0x9f,
	0x71, 0xd3, 0xa4, 0x17, 0xf8, 0x69, 0x1c, 0x79, 0x92, 0x8e, 0xed, 0x9d, 0xda, 0xf1, 0x41, 0xcf,
	0x4f, 0x82, 0xf5, 0x7e, 0xb7, 0x8b, 0x55, 0x42, 0x71, 0x44, 0x37, 0x72, 0x97, 0x5b, 0x1b, 0x05,
	0x48, 0xaf, 0xf0, 0x17, 0x67, 0x35, 0x9f, 0xd5, 0xad, 0x4e, 0x27, 0xc5, 0x3b, 0xbb, 0x33, 0x5e,
	0x21, 0xce, 0xb9, 0xc1, 0x86, 0x83, 0x3a, 0x72, 0xcb, 0x4f, 0xf9, 0x75, 0x5a, 0xbc, 0xce, 0x3a,
	0xbb, 0x7a, 0xda, 0x12, 0x6c, 0x77, 0x52, 0x9d, 0xc8, 0x2b, 0xf8, 0x11, 0xaf, 0x41, 0xef, 0x8b,
	0x25, 0x29, 0x0e, 0xa3, 0x2c, 0x6d, 0xbe, 0x88, 0x43, 0x6b, 0x83, 0x9d, 0xd7, 0x61, 0x59, 0x82,
	0xd6, 0x13, 0x94, 0xf1, 0xc4, 0x0a, 0x74, 0xc9, 0xb5, 0x18, 0xe9, 0x5c, 0x04, 0x08, 0x85, 0x11,
	0x36, 0xe5, 0x37, 0x6b, 0x75, 0xbb, 0xac, 0x86, 0x65, 0x25, 0x90, 0xd1, 0x92, 0x75, 0x61, 0x37,
	0x60, 0x9b, 0x75, 0xcf, 0x67, 0x73, 0xeb, 0x05, 0x2a, 0xa1, 0x10, 0xc9, 0xc4, 0x17, 0xb5, 0x6a,
	0x3d, 0xc8, 0xd2, 0xe6, 0xf1, 0xb3, 0xb5, 0x0b, 0x35, 0x4f, 0x83, 0x38, 0x1b, 0xe0, 0xb4, 0x13,
	0xff, 0x8b, 0x43, 0x73, 0xb4, 0x4e, 0xf0, 0xe3, 0x81, 0x8d, 0x1c, 0xca, 0x2b, 0x20, 0x67, 0x93,
	0xc0, 0x84, 0xe2, 0x38, 0x9d, 0xc4, 0x71, 0x2a, 0xc0, 0x38, 0xb7, 0x60, 0x85, 0x8f, 0xde, 0xc7,
	0x61, 0xb4, 0xdf, 0xf7, 0x55, 0xc1, 0xa7, 0x71, 0x49, 0x3f, 0x26, 0xd8, 0xc4, 0x42, 0x7b, 0x25,
	0xbf, 0xb1, 0x71, 0xfa, 0x0c, 0x41, 0x1b, 0x7e, 0xb7, 0xeb, 0xc5, 0xfd, 0xa8, 0x83, 0x57, 0x72,
	0x67, 0x3c, 0x1b, 0xcc, 0xfa, 0x83, 0x40, 0xd8, 0x1f, 0x5f, 0x22, 0xeb, 0x9b, 0x82, 0xb0, 0x05,
	0x81, 0x52, 0x94, 0xcb, 0x59, 0xcc, 0x45, 0x07, 0x31, 0xb9, 0x20, 0xbb, 0x05, 0xdb, 0xf9, 0x65,
	0x12, 0xf8, 0x06, 0x50, 0xd5, 0x68, 0x33, 0xdd, 0xd8, 0x0f, 0xda, 0xf7, 0x83, 0x0e, 0xde, 0xb2,
	0x9d, 0xf4, 0x6c, 0xb0, 0xf3, 0x26, 0xac, 0x48, 0x90, 0xdf, 0xed, 0x86, 0xd1, 0x1e, 0x63, 0xbe,
	0x30, 0x8e, 0xf0, 0xc6, 0xed, 0xa4, 0x57, 0x82, 0x75, 0x2e, 0xc3, 0x82, 0x1a, 0x9e, 0xae, 0x7f,
	0x88, 0x75, 0x39, 0x87, 0x75, 0xc9, 0x23, 0x58, 0xad, 0x29, 0x9f, 0x8f, 0xfd, 0xf6, 0xfd, 0x5e,
	0x9c, 0x35, 0x9f, 0xa7, 0x5a, 0x1b, 0x40, 0x7e, 0x86, 0xd9, 0xed, 0x6e, 0x46, 0x78, 0x0f, 0x97,
	0xce, 0x30, 0x59, 0xd2, 0x79, 0x05, 0x16, 0x37, 0xd3, 0x7c, 0x79, 0x17, 0x90, 0xaa, 0x08, 0xc5,
	0x96, 0xdd, 0xab, 0x41, 0xb6, 0x1e, 0x47, 0xfd, 0xb4, 0x79, 0x91, 0x0c, 0xf6, 0x22, 0xed, 0x7c,
	0x00, 0x27, 0xe4, 0x84, 0xb8, 0x12, 0x3f, 0x8c, 0xd6, 0x71, 0x4e, 0x70, 0x7d, 0xa0, 0x79, 0x09,
	0x19, 0x7a, 0x00, 0x85, 0xea, 0xb3, 0xdb, 0x71, 0x86, 0xd7, 0x85, 0xd2, 0xfe, 0x41, 0x0f, 0xfb,
	0xec, 0x32, 0x96, 0x54, 0x82, 0x75, 0x5c, 0x98, 0xfe, 0x2c, 0x0e, 0x23, 0x26, 0xc4, 0xf0, 0xdc,
	0xe9, 0x25, 0x3a, 0x77, 0xd2, 0x61, 0xac, 0x0f, 0x98, 0xe0, 0x65, 0xfa, 0x62, 0x8b, 0x0e, 0x3c,
	0x79, 0xd2, 0xf9, 0x00, 0x16, 0x64, 0x9d, 0x84, 0x12, 0xd6, 0x7c, 0x19, 0x39, 0x76, 0xbe, 0x65,
	0xc1, 0xbd, 0x3c, 0xa9, 0x6e, 0x2c, 0x7b, 0xc5, 0x34, 0x96, 0x5d, 0xd6, 0x72, 0xfe, 0x58, 0x28,
	0x50, 0xaf, 0x62, 0xdf, 0xe6, 0x11, 0xce, 0x12, 0xd4, 0x7b, 0x4c, 0x26, 0x34, 0x57, 0xe9, 0xea,
	0x03, 0x26, 0xd8, 0x08, 0x5d, 0x49, 0xfc, 0xbd, 0x38, 0xba, 0x1d, 0xee, 0x05, 0x89, 0xb8, 0xd9,
	0xdf, 0x7c, 0x0d, 0x69, 0x8a, 0x50, 0xec, 0x0f, 0x39, 0x39, 0x71, 0x85, 0xc1, 0xe3, 0x90, 0xe6,
	0xeb, 0xf4, 0x47, 0x01, 0x8a, 0xf5, 0x7b, 0x98, 0xd2, 0xe4, 0xdb, 0xc9, 0xe2, 0xde, 0x5a, 0xa7,
	0x23, 0xd8, 0xe9, 0x0d, 0xe2, 0xd5, 0x62, 0xac, 0xf3, 0x09, 0x9c, 0x56, 0x13, 0x51, 0xf1, 0xb0,
	0xe7, 0x87, 0x29, 0x59, 0xe7, 0xde, 0xe4, 0x6b, 0x20, 0xfd, 0x2d, 0xe1, 0xde, 0xe0, 0xdf, 0x9c,
	0xd7, 0x05, 0x57, 0xdf, 0xea, 0x67, 0x98, 0xcf, 0x5b, 0x98, 0xcf, 0x2c, 0xcf, 0x87, 0x43, 0x3d,
	0x93, 0x88, 0xad, 0x51, 0xe9, 0x7e, 0xb8, 0xe3, 0x47, 0x3b, 0xfb, 0xfd, 0x70, 0xbb, 0xeb, 0xb7,
	0x03, 0x94, 0x24, 0xcd, 0xb7, 0xb9, 0x7d, 0x6f, 0xa7, 0x00, 0xe9, 0x15, 0xfe, 0xc2, 0x54, 0x78,
	0xb9, 0x5e, 0x6e, 0xf4, 0x93, 0x9d, 0x2c, 0xe8, 0x35, 0xd7, 0xe8, 0x20, 0xd4, 0x86, 0x33, 0x29,
	0x29, 0x67, 0xc9, 0xa6, 0xbc, 0x35, 0xf4, 0x0e, 0x76, 0x5c, 0x01, 0x86, 0xad, 0x7f, 0x5e, 0xd0,
	0x59, 0xef, 0xfa, 0xed, 0xfb, 0xb7, 0xa2, 0xee, 0xa1, 0x1c, 0xd1, 0x77, 0x31, 0xff, 0x42, 0x9c,
	0xb0, 0xba, 0x7e, 0xa5, 0xcc, 0xea, 0xfa, 0xde, 0x20, 0xab, 0xeb, 0xfb, 0xe5, 0x56, 0xd7, 0x0f,
	0x4a, 0xac, 0xae, 0x5f, 0xd5, 0xac, 0xae, 0x17, 0x61, 0x7e, 0xdd, 0x6f, 0xb7, 0xfd, 0xc4, 0xcf,
	0x64, 0x5d, 0xbf, 0x46, 0x7d, 0x61, 0xc3, 0x9d, 0x2d, 0x58, 0xee, 0xc4, 0xfd, 0xdd, 0x6e, 0xc0,
	0x56, 0xad, 0xa0, 0xa3, 0x16, 0x80, 0xab, 0x5c, 0xcf, 0xb8, 0x52, 0x84, 0xf5, 0x8a, 0x7f, 0x62,
	0x4b, 0x63, 0x0e, 0x81, 0xe2, 0x69, 0x1d, 0xc5, 0x77, 0x31, 0x92, 0xfd, 0xa5, 0x97, 0xa2, 0x86,
	0x64, 0x03, 0x87, 0xa4, 0x18, 0xc9, 0xa6, 0xc0, 0x66, 0x6a, 0xd4, 0x4e, 0xc8, 0xc2, 0x2b, 0x34,
	0x05, 0x8a, 0xb1, 0xac, 0x77, 0x74, 0x38, 0xfe, 0xf1, 0x21, 0xf5, 0x8e, 0x0d, 0x67, 0x23, 0x5f,
	0x58, 0xc2, 0x47, 0x34, 0xf2, 0x85, 0xf9, 0xbf, 0x09, 0x2b, 0x7a, 0x33, 0xb5, 0xf9, 0x7c, 0x8d,
	0x44, 0x62, 0x31, 0x96, 0x2d, 0x54, 0x3a, 0x66, 0xcb, 0x8f, 0x9b, 0x9b, 0xf8, 0x83, 0x0d, 0x66,
	0xe2, 0xa2, 0x63, 0x74, 0x09, 0xcd, 0x9a, 0x8f, 0x69, 0x09, 0x28, 0x40, 0xb1, 0x76, 0xe4, 0xba,
	0x9e, 0xc9, 0xd5, 0xeb, 0xa4, 0xc1, 0x15, 0xe1, 0x58, 0x3f, 0x5d, 0xeb, 0x47, 0x9d, 0x24, 0xe8,
	0xdc, 0xf5, 0xb3, 0x20, 0x59, 0x0f, 0xbb, 0xdd, 0xe6, 0x16, 0xf5, 0x93, 0x0d, 0x67, 0x62, 0x93,
	0xc3, 0x36, 0xe2, 0x83, 0x83, 0x30, 0x4d, 0xd9, 0x0a, 0x70, 0x83, 0x96, 0xc0, 0x1c, 0x82, 0xb5,
	0x94, 0x03, 0x71, 0x11, 0xba, 0xed, 0x3f, 0x6a, 0xde, 0xa4, 0x96, 0x5a, 0x60, 0xe7, 0x3d, 0x38,
	0x5e, 0xd0, 0x1c, 0xd2, 0x9a, 0x9a, 0xb7, 0xb0, 0xf2, 0xe5, 0x04, 0x6c, 0xde, 0x6c, 0xa6, 0x3b,
	0xdd, 0x5b, 0xc9, 0x4e, 0xb7, 0xb9, 0x4d, 0x9b, 0x60, 0x91, 0x76, 0xbe, 0x06, 0x0b, 0xdc, 0x20,
	0xa2, 0x9d, 0x23, 0x7f, 0x1d, 0xe5, 0x8e, 0x23, 0x6d, 0x1f, 0xca, 0x62, 0x9f, 0x27, 0x66, 0xb9,
	0xef, 0xc5, 0xdd, 0xce, 0x7a, 0xe0, 0x47, 0x4d, 0x8f, 0x96, 0x55, 0x91, 0x56, 0x2a, 0xa2, 0x76,
	0xae, 0x8d, 0xb6, 0x87, 0x1d, 0x9c, 0xa6, 0xc5, 0x48, 0xd6, 0xe3, 0x96, 0xc4, 0xeb, 0x34, 0x6f,
	0x63, 0xbd, 0x73, 0x70, 0x56, 0x82, 0x94, 0x54, 0x5e, 0x7f, 0x77, 0x37, 0x8c, 0xf6, 0xd0, 0x48,
	0xd3, 0xbc, 0x83, 0x55, 0x29, 0x46, 0x3a, 0xef, 0x42, 0x53, 0xe7, 0x59, 0xe3, 0xc7, 0x4f, 0xf0,
	0xc7, 0x52, 0xbc, 0xf3, 0x26, 0x38, 0x57, 0xfc, 0x6f, 0xf4, 0xfd, 0x68, 0x3b, 0x09, 0x1f, 0xf8,
	0x19, 0x17, 0xd5, 0x77, 0x8d, 0xdd, 0x4f, 0x01, 0x85, 0xf3, 0x3a, 0x2c, 0x70, 0x68, 0x7f, 0xb7,
	0x1b, 0xb6, 0xe9, 0xb7, 0x6f, 0x18, 0xbf, 0xe5, 0x09, 0x9c, 0x15, 0x18, 0xdf, 0x4c, 0xd9, 0xfe,
	0xa6, 0xf9, 0x4d, 0xb2, 0x03, 0x53, 0x8a, 0xf1, 0x0e, 0xd3, 0x42, 0xd8, 0xb7, 0xd0, 0x52, 0xbe,
	0x45, 0xea, 0x9c, 0x05, 0xa6, 0x1c, 0x3e, 0x8a, 0xbb, 0x9d, 0xe6, 0x0f, 0x89, 0x1c, 0x58, 0x8a,
	0x8d, 0xdb, 0xf5, 0x20, 0xe8, 0x61, 0xde, 0x3f, 0x4c, 0x5c, 0x21, 0xd2, 0x4c, 0x2d, 0x11, 0xdf,
	0xa8, 0x96, 0x7c, 0x9b, 0xd4, 0x12, 0x1d, 0x66, 0x3e, 0xef, 0xfb, 0x8e, 0xfd, 0xbc, 0xef, 0x14,
	0x34, 0x98, 0xfa, 0xba, 0x81, 0xca, 0xc5, 0xa7, 0x84, 0x95, 0x00, 0x56, 0xf6, 0xba, 0xdf, 0xbe,
	0x8f, 0x65, 0xff, 0x29, 0x2a, 0x5b, 0xa4, 0x59, 0xd9, 0x6b, 0xdd, 0xee, 0x5d, 0xb9, 0x0b, 0xf4,
	0xa9, 0x6c, 0x1d, 0xe6, 0xdc, 0x81, 0x66, 0x87, 0xba, 0x4a, 0x88, 0xdc, 0xed, 0x24, 0xfc, 0x82,
	0x56, 0xee, 0x5d, 0x14, 0xd8, 0xc7, 0x5b, 0x57, 0x4a, 0x08, 0xbc, 0xd2, 0x5f, 0x9d, 0xaf, 0xc1,
	0xc9, 0x22, 0x1c, 0x3f, 0xc9, 0x6f, 0xb6, 0xb1, 0x26, 0x83, 0x48, 0x9c, 0xb7, 0x60, 0x56, 0x43,
	0x6f, 0xc5, 0x7b, 0xcd, 0x0e, 0xbf, 0x93, 0x71, 0xc5, 0x00, 0x7b, 0x16, 0x19, 0xf6, 0x48, 0x90,
	0xa5, 0x37, 0xfb, 0x07, 0x69, 0x33, 0xa0, 0x59, 0x24, 0xd2, 0xbc, 0x47, 0x54, 0x67, 0xdf, 0x93,
	0x3d, 0xa2, 0xfa, 0x9b, 0x6d, 0xab, 0xfa, 0x51, 0x98, 0xee, 0xe3, 0x78, 0xed, 0xd1, 0x36, 0x42,
	0x41, 0x58, 0x1e, 0x2c, 0xbf, 0xad, 0xe0, 0x5e, 0x76, 0x3b, 0x38, 0xe8, 0x35, 0xf7, 0x29, 0x0f,
	0x1d, 0xc6, 0xea, 0xf0, 0xa1, 0x9f, 0xdd, 0x88, 0xa3, 0xbd, 0xb8, 0x19, 0x52, 0x1d, 0x44, 0x9a,
	0xad, 0xca, 0x5d, 0x3f, 0xcd, 0xd6, 0x83, 0xac, 0xf9, 0x19, 0x99, 0x6f, 0x78, 0x12, 0xef, 0xc7,
	0x04, 0xf7, 0xd8, 0xde, 0xe4, 0x3e, 0x22, 0x78, 0x0a, 0x6f, 0xdb, 0xe1, 0x9c, 0xbe, 0xe1, 0xb3,
	0x0c, 0xbb, 0xf4, 0xc0, 0x53, 0x03, 0xb1, 0x35, 0x57, 0xeb, 0x95, 0x1d, 0x3f, 0xba, 0xd6, 0xf7,
	0x71, 0x08, 0x0f, 0xc4, 0x9a, 0x5b, 0x84, 0xf5, 0x8a, 0x7f, 0x72, 0x7f, 0x7f, 0x1c, 0x96, 0xcc,
	0xfd, 0xf4, 0x26, 0xea, 0xd0, 0x05, 0xf6, 0xd4, 0x4a, 0xa1, 0x3d, 0xf5, 0x1c, 0xcc, 0xb4, 0xfb,
	0x89, 0x46, 0x56, 0xe5, 0x8f, 0x70, 0x74, 0x20, 0xeb, 0x88, 0xa4, 0x1f, 0x45, 0xe2, 0x32, 0xf2,
	0xa4, 0x27, 0x92, 0xce, 0x26, 0x2c, 0xf8, 0xf7, 0xb2, 0x20, 0xb9, 0xd5, 0xcf, 0x98, 0xa4, 0xb8,
	0xd5, 0x63, 0x7b, 0x61, 0x7a, 0x11, 0x7f, 0xb2, 0xb5, 0xdd, 0x4f, 0xf7, 0xcd, 0xda, 0xf1, 0x03,
	0xa2, 0xd4, 0xcb, 0xff, 0xe5, 0xdc, 0x82, 0xf9, 0x5d, 0x3a, 0x45, 0x92, 0x50, 0xb4, 0x9a, 0x4d,
	0xad, 0x3e, 0xd7, 0x52, 0x37, 0xb2, 0xcc, 0xfc, 0xbc, 0xe0, 0x73, 0x4e, 0xed, 0xe5, 0x7e, 0x76,
	0xd6, 0xe1, 0x98, 0x49, 0xbd, 0xe5, 0xa7, 0xd9, 0xeb, 0x68, 0x45, 0x9a, 0xb0, 0xec, 0x31, 0x65,
	0x84, 0xce, 0x0f, 0xc3, 0x0a, 0xf6, 0x58, 0x3f, 0xdd, 0xf7, 0x82, 0xcf, 0x75, 0x43, 0xd4, 0x24,
	0x56, 0xed, 0x5c, 0x41, 0x23, 0x89, 0x30, 0x68, 0x67, 0x82, 0xd6, 0x2b, 0xc9, 0x83, 0xf5, 0xeb,
	0xde, 0xfe, 0x95, 0xa0, 0xdf, 0x26, 0xfb, 0xd3, 0xa4, 0x27, 0x92, 0x6c, 0x5c, 0xae, 0xee, 0xd3,
	0xf1, 0x97, 0x7a, 0xcc, 0x5d, 0xf3, 0x4c, 0x20, 0x3e, 0xa8, 0xd8, 0xbf, 0x1b, 0x46, 0xf8, 0x5a,
	0x89, 0xce, 0xde, 0x15, 0x80, 0xf1, 0x00, 0x26, 0xd6, 0x0f, 0x6f, 0x71, 0x43, 0xf1, 0x34, 0x16,
	0x62, 0x41, 0xf3, 0x16, 0xfa, 0x99, 0x22, 0x0b, 0xfd, 0x0b, 0xd0, 0x10, 0xf5, 0xde, 0x69, 0xce,
	0xf2, 0xe7, 0xc7, 0xb2, 0x85, 0x0a, 0x67, 0x6c, 0xa3, 0xae, 0xfa, 0x07, 0xc1, 0xad, 0x07, 0x41,
	0x82, 0xe6, 0x22, 0x7d, 0x1b, 0x25, 0x10, 0x64, 0xba, 0x53, 0xdc, 0x41, 0xa7, 0x0d, 0xcd, 0x79,
	0x61, 0xba, 0xb3, 0x31, 0xce, 0xbb, 0x30, 0x77, 0x60, 0x6d, 0xfe, 0x16, 0x4a, 0x36, 0x7f, 0x36,
	0xa1, 0x78, 0x75, 0x4e, 0xbb, 0x58, 0xfe, 0x7a, 0x5b, 0x83, 0xb8, 0xff, 0xb8, 0x02, 0x0e, 0xda,
	0x87, 0xfd, 0xc3, 0xf5, 0xc3, 0x5b, 0xd9, 0xbe, 0x3a, 0xa5, 0xc7, 0x13, 0x0d, 0xcd, 0x76, 0xad,
	0x00, 0x86, 0x61, 0xbb, 0x6a, 0x19, 0xb6, 0xf5, 0xa7, 0x13, 0xb5, 0xf2, 0xa7, 0x13, 0x96, 0xfd,
	0x7b, 0x2c, 0x6f, 0xff, 0xbe, 0x00, 0x8d, 0x9e, 0x7f, 0xc8, 0x0d, 0x69, 0x75, 0xee, 0xb0, 0x61,
	0x5b, 0x40, 0x3c, 0x85, 0x64, 0x92, 0xa9, 0x47, 0xfb, 0x66, 0xba, 0xd4, 0xc4, 0x53, 0xee, 0x7f,
	0x30, 0x05, 0xb0, 0x13, 0x64, 0x59, 0x37, 0x50, 0xef, 0xac, 0x58, 0x4a, 0xbf, 0x2d, 0xa9, 0x20,
	0x6c, 0xa9, 0xa5, 0x94, 0x5a, 0x93, 0xaa, 0x68, 0xb6, 0xb2, 0xc1, 0x2a, 0xa7, 0x9b, 0x64, 0x19,
	0xd7, 0x72, 0x42, 0x2e, 0x5c, 0x81, 0xf1, 0x90, 0xb6, 0x3d, 0x63, 0x88, 0xe3, 0x29, 0x26, 0x9c,
	0x51, 0x06, 0xac, 0x4b, 0x03, 0x39, 0xcb, 0xde, 0x80, 0xe9, 0x96, 0x78, 0x7a, 0xa3, 0x20, 0x2d,
	0xf1, 0x2f, 0x40, 0xc3, 0xe7, 0xc6, 0x2c, 0x61, 0x28, 0x6f, 0xb4, 0xd6, 0x38, 0xc4, 0x53, 0xb8,
	0x52, 0x53, 0xe8, 0x24, 0x1e, 0xb3, 0x3c, 0x15, 0x53, 0x68, 0xe3, 0x6c, 0xad, 0xd4, 0x14, 0xfa,
	0x9a, 0x50, 0xec, 0xd7, 0x64, 0x6d, 0xc1, 0xae, 0xad, 0x4d, 0x51, 0xbe, 0x2f, 0x9b, 0xe2, 0x67,
	0x43, 0x4f, 0x67, 0x5f, 0x36, 0x8d, 0xf5, 0x2e, 0xd9, 0x97, 0x95, 0x5b, 0x07, 0x67, 0xb0, 0xfe,
	0x47, 0xb6, 0x0e, 0x96, 0x6d, 0x43, 0x66, 0xa9, 0xf7, 0x0a, 0xb7, 0x21, 0xc5, 0x76, 0xd1, 0x39,
	0xec, 0x85, 0x27, 0xb4, 0x8b, 0xce, 0x63, 0xb1, 0x45, 0x76, 0xd1, 0x77, 0x34, 0x7a, 0x35, 0x6a,
	0x0b, 0xf6, 0xa8, 0x15, 0x10, 0xd9, 0x6d, 0x5c, 0xeb, 0x76, 0xbf, 0x85, 0xa7, 0x4b, 0x0e, 0x32,
	0x6f, 0x21, 0x8e, 0x89, 0x4b, 0x3d, 0x27, 0xfa, 0x61, 0x11, 0x7f, 0xc8, 0x23, 0x18, 0x3b, 0x77,
	0x99, 0x4c, 0x8e, 0xf6, 0xb8, 0xb4, 0xa3, 0x39, 0xcd, 0xcf, 0x51, 0x96, 0x5b, 0x5b, 0x05, 0x48,
	0xaf, 0xf0, 0x17, 0x63, 0x87, 0xb4, 0x7c, 0xb6, 0x66, 0xec, 0x90, 0x18, 0xdb, 0xa2, 0xc2, 0xa1,
	0x3a, 0x60, 0x25, 0xcf, 0xb6, 0x26, 0x05, 0x5b, 0x6f, 0x34, 0x05, 0x8f, 0x8d, 0xed, 0x31, 0xec,
	0x64, 0x0b, 0xaa, 0x32, 0x57, 0x43, 0xda, 0x2c, 0xc9, 0x5c, 0x8d, 0xa2, 0xcc, 0x5c, 0xf6, 0xd1,
	0x71, 0x7a, 0xb5, 0x64, 0x42, 0x71, 0x27, 0x8d, 0x10, 0xa5, 0x89, 0x9f, 0x20, 0xc1, 0x65, 0x81,
	0xad, 0x6a, 0x7c, 0xd4, 0xf5, 0xf7, 0x9a, 0x27, 0x07, 0x55, 0x83, 0x51, 0x68, 0x17, 0xa3, 0x4f,
	0x91, 0x34, 0xe3, 0x17, 0xa3, 0x1d, 0x18, 0xf3, 0xa3, 0x2c, 0x68, 0x9e, 0xc6, 0xb2, 0xf0, 0xbb,
	0x78, 0x9b, 0x79, 0x06, 0x8b, 0x18, 0x6d, 0x9b, 0xe9, 0xfe, 0xde, 0x73, 0x30, 0x89, 0x1e, 0x51,
	0xca, 0x8e, 0x2a, 0x5f, 0xb6, 0xee, 0xab, 0x15, 0xdf, 0xfa, 0xd6, 0x6e, 0x9c, 0xb5, 0x60, 0xba,
	0xdd, 0xd7, 0x8e, 0xbd, 0x6a, 0x7c, 0x2d, 0x51, 0x07, 0x5e, 0x06, 0xde, 0x79, 0x05, 0x66, 0xa2,
	0xe0, 0x51, 0xa6, 0x7e, 0x18, 0xcb, 0xfd, 0x60, 0x12, 0xb0, 0x1e, 0xea, 0xc4, 0xda, 0x7b, 0x05,
	0x9e, 0x62, 0xb2, 0xbc, 0x13, 0xd3, 0x02, 0x47, 0x6f, 0x49, 0x44, 0x92, 0xad, 0x20, 0x49, 0xd0,
	0x09, 0xd3, 0xdb, 0xf8, 0x36, 0x8e, 0xdf, 0x4e, 0x55, 0x10, 0xe7, 0x39, 0x18, 0xa7, 0x47, 0x9a,
	0xfc, 0xac, 0xd3, 0x78, 0xbf, 0xc9, 0x51, 0xc6, 0x52, 0xdb, 0x18, 0xf1, 0x09, 0x2a, 0xd8, 0x0e,
	0x77, 0xce, 0x80, 0xf6, 0xee, 0xa9, 0xe0, 0x25, 0x94, 0x03, 0x63, 0x9d, 0xc0, 0xef, 0x70, 0x3d,
	0x0a, 0xbf, 0x8b, 0x9c, 0xf4, 0xcc, 0x14, 0x3b, 0xe9, 0x39, 0x05, 0x8d, 0xb0, 0x13, 0x74, 0x89,
	0x29, 0x67, 0xa9, 0x6c, 0x09, 0x70, 0x2e, 0xc3, 0x0c, 0x5d, 0xcf, 0xf3, 0x93, 0xce, 0xb5, 0xc0,
	0xef, 0xa1, 0x98, 0x53, 0xdb, 0x64, 0x13, 0xe9, 0x7c, 0x0d, 0x56, 0x4c, 0xa5, 0x53, 0xfe, 0x66,
	0x1f, 0xf2, 0x96, 0xd0, 0x31, 0xa5, 0x83, 0xd4, 0x1e, 0xaa, 0xf3, 0x02, 0x6d, 0x55, 0x34, 0x10,
	0x6b, 0xed, 0x95, 0xb0, 0x1d, 0xa0, 0xf4, 0xaa, 0x7b, 0xf8, 0xed, 0x7c, 0x55, 0x3b, 0x8b, 0xa3,
	0xad, 0x06, 0x7a, 0xb9, 0x61, 0xa2, 0xa7, 0x68, 0x1f, 0xe2, 0xd9, 0xd4, 0xce, 0x2b, 0xb0, 0xc8,
	0x34, 0x2e, 0xed, 0xda, 0x00, 0xf6, 0x35, 0xb9, 0xc2, 0x29, 0x42, 0x31, 0x16, 0x14, 0x9e, 0x81,
	0x88, 0x05, 0x97, 0xf3, 0x2c, 0x68, 0x10, 0x30, 0x59, 0xd1, 0xee, 0x27, 0x49, 0x10, 0x65, 0x78,
	0x58, 0xb4, 0xd9, 0x69, 0xae, 0xd0, 0xe6, 0xc7, 0x84, 0x3a, 0x17, 0x01, 0x36, 0xd5, 0xc1, 0x9f,
	0x9b, 0x3f, 0xf8, 0x53, 0x58, 0xe7, 0x23, 0x61, 0xd5, 0x59, 0xef, 0xc6, 0x71, 0x67, 0xa7, 0x1b,
	0x8b, 0x63, 0xcd, 0xef, 0x70, 0xa3, 0xb9, 0x05, 0xf7, 0x8a, 0xc9, 0x19, 0x8b, 0xad, 0xab, 0xeb,
	0x28, 0xe4, 0xce, 0x45, 0x83, 0xb0, 0x69, 0x42, 0xa9, 0xb4, 0x79, 0x8e, 0x54, 0x1e, 0x9e, 0x64,
	0xad, 0xa2, 0xcf, 0x9b, 0xf1, 0x43, 0x3a, 0x17, 0xa3, 0xd3, 0x23, 0x0b, 0xca, 0x06, 0xf6, 0x86,
	0xff, 0x68, 0x3d, 0xc8, 0x3c, 0x3f, 0x0b, 0xe3, 0xe6, 0x05, 0x94, 0x48, 0x3a, 0xc8, 0x59, 0x85,
	0x79, 0xed, 0x24, 0x82, 0x8c, 0x32, 0x2f, 0x1a, 0xdc, 0x96, 0xc3, 0x3b, 0x1f, 0xda, 0x07, 0x1b,
	0x74, 0xfb, 0xff, 0x22, 0xfe, 0xb6, 0xd8, 0xca, 0xe3, 0xbc, 0x22, 0x7a, 0xb6, 0xda, 0x69, 0xe0,
	0xb5, 0x6e, 0x97, 0x6d, 0xae, 0x2f, 0x61, 0x15, 0xf3, 0x08, 0x61, 0xf0, 0xa1, 0x06, 0x7e, 0x1d,
	0x0d, 0x3e, 0x97, 0x95, 0xc1, 0x47, 0x03, 0x33, 0x4a, 0xb6, 0x69, 0xbb, 0x1b, 0x46, 0x91, 0xe0,
	0xe8, 0x55, 0x3a, 0x23, 0xb6, 0xc0, 0xce, 0xab, 0x30, 0xcd, 0xcf, 0xf2, 0x88, 0x7d, 0x5f, 0xe3,
	0x5e, 0xd7, 0x3e, 0xd6, 0x80, 0x9e, 0x41, 0xe2, 0xbc, 0x0e, 0x33, 0x49, 0x3f, 0xfa, 0xc8, 0x4f,
	0x33, 0xfe, 0xcf, 0xeb, 0xf8, 0xcf, 0x6c, 0xcb, 0xd3, 0xa1, 0x9e, 0x49, 0x64, 0x9c, 0x34, 0xdc,
	0xe8, 0x77, 0xb3, 0xb0, 0xd7, 0x0d, 0xd2, 0xe6, 0x1b, 0x38, 0xa8, 0x05, 0x18, 0xc3, 0xaa, 0x27,
	0xa0, 0x28, 0xf0, 0xdf, 0x24, 0xbb, 0x61, 0x21, 0x92, 0x29, 0x04, 0xc2, 0x70, 0x2a, 0xb4, 0x18,
	0x7c, 0xe4, 0xf6, 0x16, 0x57, 0x08, 0x6c, 0x24, 0xee, 0xd6, 0x0a, 0x7f, 0x61, 0x43, 0xac, 0xc1,
	0xe5, 0x10, 0xbf, 0xcd, 0x87, 0x38, 0x8f, 0xf3, 0x8a, 0xe8, 0x35, 0x7b, 0x30, 0xd7, 0x5c, 0xd8,
	0x10, 0xbf, 0x43, 0x43, 0x9c, 0x43, 0x30, 0xa1, 0x88, 0x9d, 0x87, 0x0c, 0x4d, 0x87, 0x2a, 0x0a,
	0xc0, 0xa4, 0x3a, 0x5b, 0x60, 0x51, 0xaa, 0x7f, 0x85, 0x4b, 0x75, 0x8f, 0x03, 0x3c, 0x89, 0x32,
	0xde, 0x8a, 0xbd, 0x67, 0xbd, 0x52, 0xe3, 0xfb, 0xb3, 0x8d, 0xb8, 0x13, 0xf0, 0xb3, 0x15, 0x99,
	0x66, 0x7b, 0x10, 0xea, 0x55, 0x3e, 0xe3, 0x3e, 0xa0, 0x97, 0x81, 0x3a, 0x8c, 0x4d, 0x3b, 0x46,
	0x7f, 0xc3, 0x4f, 0x33, 0xbe, 0x05, 0xa4, 0xe3, 0x16, 0x0b, 0x4a, 0x74, 0xfd, 0xa8, 0xb3, 0x93,
	0xf9, 0x09, 0x19, 0x10, 0xe9, 0xd8, 0xc5, 0x82, 0x9a, 0x5b, 0xb9, 0xb5, 0x41, 0x5b, 0x39, 0x17,
	0xa6, 0xf1, 0x65, 0xf4, 0x36, 0x7f, 0x9f, 0xb7, 0x4e, 0xe6, 0x2b, 0x1d, 0xc6, 0x26, 0x7b, 0xc2,
	0x57, 0x7b, 0xa6, 0x70, 0x6d, 0xd0, 0xab, 0x56, 0x0d, 0xe4, 0xb8, 0x30, 0xd1, 0xf3, 0x0f, 0xb1,
	0x07, 0xaf, 0x60, 0x69, 0x93, 0xac, 0x34, 0xba, 0x7f, 0xc6, 0x11, 0xa2, 0x8d, 0x6b, 0x74, 0x70,
	0xcc, 0x32, 0xfa, 0x10, 0x33, 0xb2, 0xa0, 0xac, 0x46, 0x07, 0xd8, 0xe2, 0x6d, 0xa2, 0xa2, 0xa3,
	0x10, 0x03, 0xc6, 0xfa, 0xdb, 0xf7, 0x39, 0xfe, 0x2a, 0x19, 0xd4, 0x44, 0xda, 0x79, 0x0f, 0x8e,
	0x17, 0x72, 0x31, 0x6a, 0xe4, 0x74, 0x42, 0x52, 0x4e, 0xe0, 0xbc, 0x0a, 0x33, 0x7e, 0xb7, 0xab,
	0x36, 0xb1, 0xcd, 0x4d, 0xae, 0x0e, 0x28, 0x90, 0x67, 0x52, 0x68, 0xd6, 0x02, 0xa6, 0x0b, 0xe0,
	0x4f, 0x1f, 0x9b, 0xd6, 0x02, 0x01, 0xf7, 0x6c, 0x42, 0xe7, 0x1a, 0x3d, 0x04, 0x5c, 0x8f, 0x77,
	0x77, 0xc3, 0x48, 0x18, 0x86, 0xd8, 0xd4, 0xba, 0xce, 0x55, 0xb8, 0x1c, 0xd6, 0x2b, 0xfe, 0xc1,
	0x59, 0x07, 0x47, 0x21, 0xe4, 0xbc, 0xda, 0xca, 0x65, 0x23, 0xa6, 0x55, 0x01, 0x35, 0x53, 0xab,
	0xf8, 0x54, 0xba, 0x81, 0x53, 0x89, 0xa7, 0xd8, 0xd0, 0x89, 0x33, 0x48, 0x8e, 0xdf, 0x46, 0xbc,
	0x05, 0x65, 0xea, 0x85, 0x80, 0x90, 0xc0, 0xff, 0xba, 0xa9, 0x5e, 0x18, 0x48, 0x67, 0x03, 0x16,
	0x0c, 0x00, 0xb2, 0x8f, 0xc7, 0x45, 0x0a, 0xdf, 0xf8, 0x19, 0x04, 0x5e, 0x9e, 0xde, 0x79, 0x0f,
	0xe6, 0x05, 0x50, 0x36, 0x7a, 0x07, 0xf3, 0x98, 0x6f, 0x59, 0x08, 0x2f, 0x47, 0xe9, 0x5c, 0x87,
	0x65, 0x75, 0xf0, 0xc1, 0x8b, 0xdc, 0x8a, 0xf7, 0xd2, 0xe6, 0x6d, 0x5e, 0x8d, 0x22, 0xac, 0x57,
	0xfc, 0x8f, 0xe3, 0x41, 0x33, 0x87, 0x10, 0x27, 0xc5, 0x77, 0xb8, 0xe1, 0x35, 0x47, 0xc0, 0xb0,
	0x5e, 0xe9, 0x7f, 0xce, 0x05, 0x98, 0xfa, 0xd6, 0x7e, 0xdf, 0x8f, 0xf6, 0xa8, 0x3f, 0x3f, 0x31,
	0xfa, 0x53, 0x47, 0xb1, 0x8e, 0xd0, 0xce, 0x5e, 0xa9, 0x23, 0xee, 0xf2, 0x8e, 0xb0, 0x10, 0x5e,
	0x8e, 0x92, 0xd6, 0x7d, 0x82, 0xf1, 0x11, 0xfe, 0x06, 0x8d, 0xb0, 0x09, 0x75, 0xce, 0x41, 0xe3,
	0x1b, 0x21, 0xdf, 0xab, 0x34, 0xbf, 0x69, 0x5e, 0x4c, 0x93, 0x08, 0x67, 0x1d, 0x4e, 0xe9, 0xd6,
	0x83, 0xdc, 0x2c, 0xfc, 0x16, 0xce, 0xc2, 0x81, 0x34, 0xf6, 0x99, 0xad, 0x5a, 0xdc, 0x7e, 0x08,
	0xe5, 0x67, 0x31, 0xd2, 0x3e, 0x7f, 0x32, 0x96, 0xb8, 0x1f, 0x46, 0x91, 0x5a, 0x8a, 0xc7, 0x6b,
	0x15, 0x1a, 0x4e, 0xc8, 0xeb, 0x6f, 0x63, 0x79, 0x45, 0x28, 0xb6, 0xfa, 0x8a, 0xc5, 0xc6, 0x8f,
	0xee, 0x0b, 0x23, 0x13, 0x1d, 0xca, 0x14, 0x60, 0xd0, 0xe0, 0x85, 0x82, 0x55, 0x5d, 0x33, 0xfd,
	0x53, 0xa4, 0xc6, 0x5b, 0x60, 0xdc, 0xc8, 0x84, 0xed, 0x80, 0xc9, 0x37, 0x9f, 0x6f, 0x64, 0x28,
	0x29, 0x94, 0x10, 0x9c, 0xbd, 0x01, 0xad, 0x01, 0xbb, 0x74, 0xb6, 0x69, 0x81, 0x9d, 0x1b, 0xb0,
	0xa4, 0x69, 0x3b, 0xeb, 0x01, 0x22, 0x83, 0xb4, 0xd9, 0xc6, 0x61, 0x3b, 0x8e, 0x32, 0x41, 0x57,
	0xc1, 0xc4, 0x55, 0x31, 0xaf, 0xf0, 0x37, 0xe7, 0x8a, 0x9a, 0xae, 0x2a, 0xaf, 0x0e, 0xe6, 0xb5,
	0xd2, 0x22, 0xbb, 0x33, 0x9f, 0x9c, 0x32, 0xa3, 0xfc, 0x0f, 0xac, 0x52, 0xda, 0xfa, 0xac, 0x32,
	0x0a, 0xb4, 0x4a, 0xe9, 0x8a, 0x83, 0xaa, 0x54, 0xd1, 0x6f, 0x8e, 0x07, 0xc7, 0xd0, 0x6c, 0x2f,
	0x65, 0x99, 0xca, 0xf1, 0x1e, 0xe6, 0xd8, 0x6c, 0x99, 0x78, 0x95, 0x61, 0xd9, 0x8f, 0xce, 0x9b,
	0xb0, 0x72, 0xa0, 0x4c, 0xf4, 0xba, 0xb6, 0x47, 0xa7, 0x3f, 0x25, 0x58, 0xc6, 0xb1, 0x39, 0x0c,
	0x2a, 0xe0, 0xfb, 0xa4, 0x5b, 0x15, 0x22, 0xad, 0xd7, 0xff, 0x61, 0xee, 0xf5, 0x3f, 0xe3, 0x4a,
	0xb4, 0x0f, 0x08, 0x5e, 0xa5, 0xaa, 0x7c, 0xc6, 0x2f, 0xfb, 0xe4, 0x51, 0xa8, 0xd0, 0x22, 0xf8,
	0x4e, 0xaf, 0xc7, 0x6b, 0x70, 0x9f, 0xb8, 0xcc, 0x02, 0x3b, 0x6f, 0xc1, 0x2c, 0x6d, 0x20, 0x6e,
	0xc7, 0x3d, 0xf4, 0x5e, 0xda, 0xec, 0x16, 0xef, 0xee, 0x2d, 0x32, 0x5a, 0x10, 0xfc, 0xce, 0x21,
	0x91, 0x30, 0x2e, 0x3d, 0xa0, 0xb5, 0xdc, 0x84, 0xe2, 0x36, 0x21, 0xec, 0x76, 0xc3, 0x2b, 0xb4,
	0x59, 0x8f, 0x68, 0xff, 0xa7, 0x81, 0x98, 0xa6, 0x4c, 0xe6, 0x0f, 0xae, 0xf5, 0xc6, 0x5c, 0x53,
	0xbe, 0xa2, 0x01, 0x3d, 0x83, 0xc4, 0x59, 0x82, 0x3a, 0xed, 0xe2, 0x7b, 0x38, 0x33, 0x29, 0x81,
	0x4a, 0x3f, 0x51, 0xa5, 0x57, 0xc2, 0x8f, 0xc3, 0xfe, 0x5d, 0x3f, 0xda, 0x6b, 0x7e, 0x4e, 0x27,
	0x02, 0x39, 0x04, 0x53, 0x58, 0x3e, 0xe7, 0xa7, 0xfc, 0x09, 0xdf, 0xcb, 0x7e, 0x98, 0xb6, 0xfd,
	0x5e, 0x10, 0x78, 0x02, 0x51, 0xe4, 0xf2, 0x32, 0x1d, 0xd5, 0xe5, 0xe5, 0x25, 0x00, 0xb6, 0x33,
	0xf7, 0x82, 0x07, 0x61, 0xf0, 0xb0, 0x99, 0x69, 0x26, 0x05, 0x02, 0x79, 0x1a, 0x9a, 0x15, 0xb4,
	0x1b, 0x44, 0x5f, 0xac, 0xdf, 0xb8, 0x2b, 0x15, 0x88, 0x3e, 0x57, 0x20, 0xd6, 0x4d, 0xb8, 0x67,
	0x13, 0xba, 0xbf, 0x5b, 0x05, 0x50, 0xd9, 0xaa, 0x4b, 0xa0, 0xda, 0x71, 0x9c, 0x06, 0x61, 0x9a,
	0xb0, 0x6e, 0x6c, 0x47, 0x4d, 0x58, 0x99, 0xd9, 0x9b, 0x30, 0x21, 0x6e, 0x79, 0x91, 0x4f, 0x40,
	0x91, 0x74, 0xce, 0x03, 0x6c, 0x33, 0x09, 0x45, 0x66, 0xba, 0x31, 0x43, 0xf0, 0x6b, 0x18, 0xe7,
	0x15, 0x00, 0xb9, 0x36, 0xd3, 0xb3, 0x09, 0xd6, 0x5d, 0xd6, 0x89, 0xb1, 0xa7, 0xd1, 0x38, 0xab,
	0xd0, 0x50, 0xb6, 0x31, 0x72, 0xe9, 0xbd, 0x24, 0x7e, 0x10, 0xf9, 0x32, 0x9c, 0xa7, 0xc8, 0x58,
	0x2b, 0xe8, 0x90, 0x2f, 0x8c, 0xc9, 0xdb, 0xc4, 0xa4, 0xa7, 0x00, 0xce, 0x3c, 0xd4, 0x76, 0x03,
	0xe1, 0x2d, 0x88, 0x7d, 0x32, 0x8e, 0xa1, 0xb3, 0xd2, 0x06, 0x2e, 0x6a, 0x94, 0x70, 0xff, 0x41,
	0x05, 0x26, 0xf8, 0xa0, 0x0f, 0xed, 0x37, 0xfb, 0xec, 0xbc, 0x5a, 0x70, 0x76, 0x6e, 0x9e, 0x14,
	0xd7, 0x72, 0x27, 0xc5, 0xc6, 0xb9, 0xfe, 0x98, 0x7d, 0xae, 0xbf, 0x02, 0xe3, 0xeb, 0x41, 0xc6,
	0xa6, 0x12, 0x37, 0x69, 0x51, 0x2a, 0x77, 0x46, 0x3d, 0x9e, 0x3f, 0xa3, 0x76, 0x0f, 0x98, 0xa4,
	0x0f, 0x1f, 0x04, 0xc9, 0x2a, 0x63, 0x85, 0xad, 0x78, 0x2f, 0x6c, 0xa3, 0x76, 0xc9, 0x77, 0x36,
	0xda, 0x2b, 0x51, 0xda, 0xd9, 0x90, 0x33, 0x5f, 0x81, 0x72, 0x5a, 0xa6, 0x13, 0xee, 0x32, 0x47,
	0x83, 0xd2, 0x35, 0xf7, 0x1f, 0xd4, 0x60, 0x52, 0x58, 0x2f, 0xb5, 0xa7, 0x04, 0x95, 0xc2, 0xa7,
	0x04, 0x65, 0x67, 0x23, 0xd5, 0xa3, 0x5f, 0x13, 0x2f, 0x3f, 0x2e, 0xa8, 0x3d, 0xde, 0x65, 0xe2,
	0x0f, 0xf9, 0xb5, 0x48, 0xab, 0x6a, 0x63, 0xe5, 0x77, 0xa2, 0x8b, 0xe8, 0xcb, 0x8f, 0x52, 0xea,
	0x8f, 0x73, 0xc5, 0xed, 0xdd, 0xbc, 0xe5, 0x7a, 0xbc, 0x64, 0x1e, 0xe5, 0x0c, 0xd8, 0x1f, 0xe4,
	0xcd, 0xcd, 0x13, 0x03, 0xa6, 0x94, 0x4d, 0xec, 0xbe, 0x01, 0x8b, 0x57, 0x83, 0x4c, 0x15, 0x20,
	0xfd, 0xa8, 0x0d, 0x1c, 0x63, 0xf7, 0xb7, 0x2a, 0xf8, 0x08, 0x5f, 0xfb, 0xaf, 0xd7, 0x3d, 0x2c,
	0x1d, 0xf9, 0xca, 0xd3, 0x1c, 0xf9, 0xea, 0x63, 0x8d, 0xbc, 0xeb, 0xc3, 0x89, 0xab, 0x41, 0x56,
	0x30, 0xc0, 0x58, 0xf3, 0xe2, 0x23, 0xa1, 0xca, 0x91, 0xae, 0xca, 0xbb, 0xff, 0x4e, 0x05, 0x4e,
	0x5f, 0x0d, 0xb2, 0xe2, 0xb1, 0xc7, 0x62, 0x4a, 0xf9, 0xa6, 0xf2, 0x54, 0xaf, 0x46, 0x92, 0xac,
	0x2a, 0x46, 0xba, 0x5f, 0x85, 0x25, 0xde, 0x75, 0x24, 0xc1, 0x95, 0xab, 0x48, 0xed, 0xec, 0xb3,
	0x52, 0x7e, 0xf6, 0xe9, 0xbe, 0x02, 0x8e, 0x95, 0x01, 0x6b, 0xda, 0x09, 0x7c, 0x6c, 0x46, 0xaa,
	0x4a, 0x85, 0x5c, 0x8c, 0x8b, 0xb4, 0xfb, 0xf7, 0x2a, 0x30, 0xed, 0x71, 0xeb, 0xc8, 0xd0, 0x67,
	0x5b, 0xba, 0x65, 0xa5, 0x6a, 0x59, 0x56, 0xac, 0x23, 0xed, 0x5a, 0xfe, 0x48, 0x5b, 0x37, 0xd8,
	0x8f, 0x95, 0x1b, 0xec, 0x75, 0x0b, 0x50, 0xbd, 0xd4, 0x02, 0xe4, 0xfe, 0xcf, 0x15, 0x58, 0xc6,
	0x53, 0x01, 0x34, 0xd6, 0xa3, 0x66, 0x72, 0x34, 0x9f, 0x88, 0xea, 0x90, 0xa1, 0x5a, 0x7e, 0xc8,
	0xa0, 0xdb, 0x99, 0x6a, 0x96, 0x9d, 0xc9, 0x54, 0x16, 0xc7, 0x72, 0xca, 0xe2, 0x29, 0x68, 0x48,
	0xc7, 0x8a, 0xd8, 0x92, 0xba, 0xa7, 0x00, 0xac, 0xbf, 0x74, 0xe5, 0x88, 0xde, 0x84, 0xe9, 0x20,
	0x37, 0x86, 0x45, 0xbb, 0x81, 0x47, 0xf0, 0xce, 0xf8, 0x2a, 0x4c, 0x27, 0xda, 0xb8, 0xf2, 0xb9,
	0x39, 0xd3, 0xd2, 0x07, 0xdb, 0x33, 0x48, 0xdc, 0xdf, 0xa9, 0x51, 0x89, 0x1f, 0xf3, 0x7b, 0xf9,
	0xa2, 0x43, 0x8d, 0x23, 0x94, 0x8a, 0x7d, 0x84, 0xd2, 0x02, 0x47, 0x5c, 0xe4, 0xc7, 0xf7, 0x6c,
	0x5b, 0xe1, 0x41, 0x98, 0xf1, 0x17, 0xe4, 0x05, 0x18, 0x83, 0x89, 0x6a, 0x16, 0x13, 0xe9, 0xcc,
	0x37, 0x96, 0x67, 0xbe, 0x52, 0xaf, 0x65, 0x2f, 0x91, 0xc3, 0x2f, 0xd1, 0x0d, 0xdc, 0xa1, 0x8f,
	0xd6, 0x2f, 0x06, 0xda, 0x1a, 0xb9, 0x89, 0x22, 0x17, 0x6a, 0x3a, 0x2f, 0x4f, 0xe6, 0x79, 0xf9,
	0x2c, 0x4c, 0x85, 0xda, 0xe8, 0xd1, 0x5d, 0x1e, 0x1d, 0xe4, 0xac, 0xc3, 0xe2, 0x43, 0x3f, 0xca,
	0x2c, 0xe5, 0x14, 0x4f, 0xa0, 0x8a, 0x94, 0xd6, 0x22, 0x62, 0x63, 0xa8, 0xa7, 0xca, 0x7d, 0x8e,
	0xbe, 0x0b, 0x0b, 0xe6, 0xb0, 0x71, 0x36, 0x19, 0x41, 0xdd, 0x70, 0xdf, 0xa3, 0x21, 0xff, 0xf0,
	0x51, 0x98, 0x1d, 0x7d, 0x0e, 0xa1, 0xbf, 0x17, 0xe3, 0xef, 0x5e, 0xf7, 0x50, 0xbc, 0x13, 0x45,
	0x03, 0xa8, 0x96, 0xa7, 0xbb, 0x04, 0x8e, 0x05, 0x27, 0x7f, 0xab, 0x58, 0x01, 0x79, 0xaf, 0x88,
	0x57, 0xe0, 0x3c, 0x40, 0xdc, 0x0b, 0xa2, 0xed, 0xa2, 0x95, 0x4e, 0xc3, 0x88, 0x1a, 0xa8, 0xdf,
	0x59, 0x9e, 0x3f, 0x56, 0x91, 0x82, 0x94, 0x2d, 0x03, 0x57, 0xa4, 0x8b, 0xb1, 0x8b, 0x78, 0x54,
	0xa9, 0x1a, 0xe5, 0xb4, 0x0c, 0x32, 0x6c, 0x1d, 0xa7, 0x70, 0xbe, 0x06, 0xf3, 0x9d, 0xf8, 0xc6,
	0xe8, 0xae, 0x9f, 0x73, 0xd4, 0xee, 0x9f, 0xaf, 0x68, 0x07, 0x02, 0xaa, 0x12, 0x17, 0xac, 0x4a,
	0xcc, 0xb7, 0x34, 0xa2, 0xa7, 0x5c, 0x85, 0xbf, 0x54, 0x31, 0x2d, 0x37, 0xaa, 0x16, 0x97, 0xac,
	0x5a, 0x2c, 0xb6, 0x4c, 0xba, 0xa7, 0x5c, 0x91, 0x1f, 0x81, 0x05, 0x61, 0xbd, 0x52, 0x75, 0x78,
	0xc1, 0xaa, 0xc3, 0x5c, 0x4b, 0xd1, 0x3c, 0xe5, 0xf2, 0xf7, 0xc8, 0xb6, 0x7b, 0x27, 0x95, 0x77,
	0x8d, 0x94, 0x7b, 0x35, 0x1e, 0x19, 0xa9, 0x62, 0x44, 0x46, 0xd2, 0x5e, 0xf2, 0x56, 0xcd, 0x97,
	0xbc, 0xa7, 0xa0, 0x91, 0xca, 0x1d, 0x00, 0x77, 0xd7, 0x2e, 0x01, 0xee, 0x6f, 0x54, 0x60, 0x11,
	0x0d, 0x30, 0xe6, 0x8b, 0xcd, 0x52, 0x07, 0x6b, 0x2c, 0xb7, 0xc0, 0xcf, 0xd4, 0x43, 0xe8, 0xba,
	0xa7, 0x00, 0xd6, 0x71, 0x7f, 0xad, 0xd8, 0xf3, 0x99, 0x79, 0xdc, 0x3f, 0x9e, 0xe0, 0xe3, 0x50,
	0xbe, 0xc4, 0x96, 0x3d, 0x1d, 0xe5, 0x54, 0xee, 0x6f, 0x1a, 0xde, 0xef, 0xf0, 0x34, 0x75, 0x48,
	0x85, 0x55, 0x87, 0x55, 0x8d, 0x0e, 0x5b, 0x85, 0x29, 0xba, 0x90, 0xa9, 0xdf, 0x33, 0xc8, 0x3f,
	0xaf, 0xd5, 0x89, 0xd8, 0x0e, 0x15, 0xaf, 0x7f, 0xe9, 0x37, 0x0d, 0xf2, 0xbf, 0x68, 0x34, 0xee,
	0x5f, 0xe6, 0xf5, 0xdd, 0x51, 0x36, 0xba, 0x21, 0xf5, 0xbd, 0x0c, 0x0b, 0xb2, 0x48, 0xf1, 0x8b,
	0x88, 0x41, 0x94, 0x43, 0x38, 0x17, 0x61, 0x5e, 0x94, 0x26, 0x89, 0x69, 0x95, 0xca, 0xc1, 0xdd,
	0xdf, 0xd1, 0x87, 0x7a, 0x84, 0x9e, 0xbb, 0x6c, 0xf6, 0x50, 0x35, 0x77, 0xaa, 0x6d, 0xf4, 0xcd,
	0x45, 0xa3, 0x6f, 0xf2, 0xd7, 0x36, 0x34, 0x2c, 0x6b, 0xa3, 0x4a, 0x7d, 0x18, 0xe1, 0xa3, 0x67,
	0xbe, 0xab, 0xcd, 0x23, 0xdc, 0xff, 0x69, 0x1c, 0x96, 0xd4, 0x98, 0x33, 0xb1, 0xf9, 0x98, 0x43,
	0x7e, 0x16, 0xa6, 0x76, 0xb5, 0x1b, 0x05, 0xe4, 0xe7, 0x41, 0x07, 0x39, 0xe7, 0xa0, 0xb1, 0xef,
	0x47, 0xa4, 0xe2, 0x5a, 0x96, 0x0a, 0x85, 0x70, 0xce, 0xc2, 0x44, 0xc8, 0xcd, 0xd8, 0x75, 0x83,
	0x46, 0x80, 0x1d, 0x17, 0x26, 0xc5, 0x53, 0x6b, 0xdc, 0x80, 0x29, 0x12, 0x09, 0x47, 0x7f, 0xaf,
	0xdd, 0x2e, 0x35, 0x65, 0x93, 0x6e, 0xfc, 0x36, 0x3c, 0x1d, 0x34, 0xe0, 0x6a, 0x60, 0xe5, 0xe9,
	0x5d, 0x0d, 0x2c, 0x7f, 0x25, 0x5d, 0xbc, 0x93, 0x81, 0xa7, 0xf1, 0xe8, 0x77, 0xaa, 0xf4, 0xd1,
	0x6f, 0x0b, 0x1c, 0xf3, 0x45, 0xd5, 0x7a, 0x1c, 0x1f, 0xf0, 0xfb, 0x2c, 0x05, 0x98, 0xf2, 0x7d,
	0xd0, 0xcc, 0x53, 0xdd, 0x07, 0xcd, 0x0e, 0x7a, 0x22, 0x86, 0xa1, 0xf2, 0xe4, 0xbd, 0xeb, 0x39,
	0x11, 0x2a, 0x4f, 0xde, 0xa2, 0x46, 0xfc, 0x96, 0x1f, 0x13, 0x3f, 0xcc, 0x0b, 0xbc, 0x80, 0x94,
	0xde, 0x3c, 0x5c, 0x18, 0xf0, 0x00, 0xaa, 0x05, 0x8e, 0xf1, 0x54, 0x8b, 0xae, 0xc9, 0x39, 0xd4,
	0xaf, 0x79, 0x0c, 0x53, 0x47, 0x43, 0x71, 0x99, 0x6e, 0x91, 0x1e, 0x77, 0x88, 0xb4, 0xfb, 0x33,
	0x15, 0x58, 0x61, 0x13, 0xcc, 0x7c, 0x93, 0x86, 0xdd, 0x5b, 0x36, 0xc5, 0x8a, 0x3c, 0x56, 0xaf,
	0xc0, 0x78, 0x98, 0xee, 0xb2, 0xe1, 0xa2, 0x3b, 0xf8, 0x3c, 0xc5, 0x96, 0xa6, 0xc0, 0x98, 0xe3,
	0x22, 0x89, 0x6f, 0x07, 0x45, 0x63, 0xb9, 0xf3, 0x58, 0x91, 0x76, 0x7f, 0x04, 0x4e, 0x15, 0xd7,
	0x89, 0x4b, 0xbe, 0xa7, 0x51, 0x33, 0xbd, 0xfc, 0x31, 0xab, 0x7c, 0x8f, 0xdc, 0xb2, 0x73, 0x9b,
	0xff, 0x51, 0xfb, 0x62, 0x09, 0xea, 0x5f, 0x68, 0x3e, 0x20, 0x29, 0xc1, 0xb6, 0x48, 0xd4, 0xa6,
	0x9b, 0x71, 0xf6, 0x94, 0x9b, 0xb2, 0x04, 0x75, 0x86, 0x4f, 0xf9, 0x25, 0x66, 0x4a, 0xb8, 0xdf,
	0xad, 0xc0, 0xd9, 0xb2, 0xa7, 0x09, 0x3b, 0x41, 0xd4, 0x41, 0xf6, 0x2c, 0x2b, 0x5e, 0xbb, 0x10,
	0x57, 0x35, 0x2f, 0xc4, 0xe5, 0x2e, 0xe4, 0xd7, 0x8b, 0x2e, 0xe4, 0x8f, 0xee, 0x1d, 0xec, 0x5f,
	0x54, 0xc1, 0x2d, 0xab, 0xe6, 0x33, 0x95, 0xf7, 0x17, 0x61, 0x4a, 0xf3, 0x46, 0x92, 0xf3, 0x8b,
	0xa6, 0x23, 0x9d, 0xf3, 0xd0, 0x90, 0xa7, 0xe6, 0xfc, 0xdd, 0x87, 0xe6, 0xa9, 0x44, 0xa2, 0xe4,
	0xad, 0xb4, 0x49, 0xed, 0x56, 0x5a, 0xae, 0xc3, 0x1a, 0x43, 0x5f, 0x30, 0xc0, 0x80, 0x17, 0x0c,
	0xe7, 0x60, 0x26, 0xc1, 0x3f, 0x45, 0x75, 0xf8, 0x83, 0x08, 0x03, 0xa8, 0xcf, 0xbb, 0x59, 0x63,
	0xde, 0xb9, 0xff, 0xbc, 0x0a, 0xc7, 0x4b, 0xdf, 0xbe, 0x38, 0xef, 0xc1, 0x14, 0xff, 0xe4, 0x56,
	0xb2, 0xda, 0x85, 0xd9, 0xd5, 0x13, 0xad, 0x42, 0x62, 0x14, 0xa6, 0x3a, 0xf9, 0x80, 0xd9, 0xfe,
	0x1a, 0x4c, 0xde, 0x8f, 0xa3, 0x3d, 0xed, 0xb1, 0xc1, 0x31, 0x2b, 0xd3, 0xeb, 0x1c, 0xed, 0x49,
	0xc2, 0x02, 0x7f, 0x4e, 0xf5, 0x21, 0xfe, 0x9c, 0x4e, 0xc0, 0x64, 0xdc, 0xcb, 0xf4, 0x8b, 0x9c,
	0x32, 0xcd, 0x38, 0xa5, 0x4d, 0x0e, 0xdc, 0x26, 0x69, 0xf6, 0x50, 0x8a, 0xfe, 0xc1, 0x36, 0x74,
	0xf8, 0xe6, 0x58, 0xa6, 0x59, 0x77, 0xa4, 0xf8, 0x5a, 0x26, 0xc0, 0x17, 0x3f, 0xb4, 0xfe, 0x0d,
	0xec, 0x0e, 0x8d, 0x9c, 0xcd, 0xc0, 0x13, 0xe5, 0xcf, 0x8c, 0x4a, 0x59, 0xfa, 0x15, 0xa8, 0xc7,
	0x3d, 0xe5, 0x43, 0xec, 0x44, 0xf9, 0x53, 0x25, 0x8f, 0x08, 0x19, 0x4f, 0x1c, 0xf4, 0xbb, 0x59,
	0x78, 0x4b, 0xb4, 0xbd, 0x86, 0xfc, 0x67, 0x02, 0xb1, 0x03, 0xfa, 0xc9, 0x66, 0x87, 0x1e, 0x71,
	0xd4, 0x3d, 0x9e, 0x72, 0xbf, 0x57, 0x81, 0xd3, 0xa5, 0x45, 0xe0, 0x3b, 0x98, 0xa3, 0x4e, 0xbe,
	0x13, 0x30, 0x99, 0xc5, 0x77, 0xf4, 0x20, 0xae, 0x32, 0x6d, 0x73, 0xd8, 0xd8, 0xf0, 0x2e, 0xd5,
	0x12, 0xee, 0x5d, 0x78, 0x6e, 0x84, 0x37, 0x4d, 0x47, 0x17, 0x6b, 0xee, 0x77, 0xe0, 0x64, 0x61,
	0x1f, 0xf0, 0x97, 0x3d, 0x65, 0x19, 0x1a, 0xd3, 0xb6, 0x5a, 0x3e, 0x6d, 0xdd, 0x0d, 0x58, 0xc0,
	0x73, 0x73, 0x3c, 0xbd, 0xdc, 0x8c, 0xf0, 0xbc, 0x73, 0x50, 0xbf, 0xf2, 0x6b, 0xca, 0x55, 0xfd,
	0x9a, 0xb2, 0xfb, 0x11, 0x4c, 0xca, 0x26, 0xd2, 0x59, 0x56, 0xb4, 0x15, 0xb7, 0xfd, 0xae, 0xb0,
	0x74, 0x49, 0x80, 0x73, 0x0a, 0xc6, 0x50, 0x21, 0xb1, 0x1d, 0xa0, 0x21, 0xd4, 0xfd, 0xe5, 0x0a,
	0x5d, 0xfa, 0xa1, 0xfd, 0x96, 0xbc, 0x90, 0x34, 0xc0, 0x7d, 0xf7, 0xd1, 0x2e, 0x72, 0x2f, 0x41,
	0xbd, 0x83, 0x0f, 0xc7, 0x68, 0x9d, 0xa2, 0x84, 0x73, 0x01, 0xe6, 0xe8, 0x02, 0x84, 0x3a, 0x0e,
	0x23, 0x29, 0x61, 0x83, 0xdd, 0x5d, 0xda, 0x38, 0xb1, 0x12, 0xd6, 0xc3, 0xbd, 0x11, 0x6a, 0x98,
	0xbb, 0x7d, 0x55, 0x1d, 0x76, 0xfb, 0xca, 0xed, 0x52, 0x17, 0xf0, 0xd8, 0xb0, 0xc3, 0x18, 0xc7,
	0xd8, 0x1c, 0x54, 0xcb, 0x36, 0x07, 0x9a, 0xfc, 0xab, 0x99, 0x52, 0xf7, 0x1a, 0x6d, 0x63, 0x58,
	0x8b, 0x88, 0x05, 0x86, 0x2c, 0x6b, 0x5a, 0x4e, 0x55, 0x33, 0x27, 0xf2, 0x5b, 0xbc, 0x43, 0x4f,
	0x8d, 0x84, 0xbd, 0xea, 0x12, 0xfa, 0x2d, 0x96, 0x40, 0xe1, 0xa7, 0x9c, 0x3f, 0x4f, 0xaa, 0x98,
	0x9e, 0x8f, 0x4f, 0x40, 0x53, 0x3a, 0xa8, 0x7f, 0x10, 0x66, 0xe8, 0xe9, 0x59, 0x64, 0xf4, 0x36,
	0xac, 0x14, 0xe0, 0xf8, 0xfb, 0xb4, 0x50, 0x82, 0xc4, 0x49, 0xa7, 0x82, 0xb8, 0xa7, 0xf0, 0x64,
	0x84, 0xa2, 0x05, 0xe4, 0xf3, 0x7d, 0x17, 0xcb, 0xcc, 0x63, 0x47, 0xc9, 0xf9, 0x2a, 0x6b, 0x71,
	0x64, 0xb6, 0x98, 0x75, 0x5c, 0x37, 0x88, 0xf6, 0xb2, 0x7d, 0xce, 0xfb, 0x3c, 0x45, 0x4e, 0xe0,
	0x3b, 0x61, 0x7a, 0x5d, 0x46, 0xad, 0x91, 0x69, 0x77, 0x81, 0xf5, 0x52, 0xa4, 0xf7, 0x92, 0x1b,
	0xc2, 0xb4, 0x1e, 0x50, 0x6a, 0x60, 0x98, 0x96, 0x48, 0x05, 0x79, 0x23, 0xef, 0x6a, 0x4b, 0x50,
	0xc7, 0xc0, 0x31, 0x42, 0xd1, 0xc3, 0x04, 0x3d, 0xbf, 0x3d, 0xf0, 0x93, 0xfb, 0x22, 0x86, 0x21,
	0xa5, 0xdc, 0x7f, 0xbf, 0x42, 0x27, 0xee, 0xc3, 0x4a, 0x3a, 0x4d, 0x57, 0x00, 0x3e, 0x4d, 0x0b,
	0x23, 0x51, 0x31, 0x55, 0x04, 0xd1, 0xd9, 0x90, 0x77, 0x7b, 0xa2, 0xc2, 0x63, 0x45, 0x15, 0xae,
	0x17, 0x57, 0x78, 0xdc, 0xa8, 0xf0, 0x6f, 0x56, 0x78, 0x10, 0x10, 0x6f, 0xfd, 0xf6, 0x0f, 0x82,
	0x5b, 0xf4, 0xab, 0x30, 0x87, 0xb6, 0xfb, 0x1b, 0xd1, 0x9e, 0xc6, 0x25, 0xc9, 0x6e, 0x26, 0x3c,
	0x07, 0xd7, 0x3c, 0x9e, 0x62, 0xc2, 0xf3, 0x86, 0xff, 0xc8, 0x23, 0x14, 0xbf, 0xce, 0x20, 0x01,
	0xee, 0x1c, 0xcc, 0xa8, 0x8c, 0x18, 0x97, 0x3c, 0x0f, 0x73, 0xde, 0xfa, 0x6d, 0x3b, 0x72, 0x5d,
	0xce, 0x9f, 0xf7, 0x7b, 0x30, 0xa3, 0xc8, 0x8e, 0xec, 0xb1, 0x79, 0x19, 0x16, 0xb1, 0x54, 0xe4,
	0xcf, 0x50, 0x4e, 0xed, 0x97, 0x60, 0xc1, 0x04, 0x0f, 0x9e, 0xdc, 0x3d, 0x98, 0x31, 0xbc, 0x75,
	0x97, 0xf3, 0x99, 0xf0, 0x0d, 0x58, 0x2d, 0xf0, 0x0d, 0xe8, 0xc0, 0x98, 0xdf, 0xe9, 0x08, 0x73,
	0x12, 0x7e, 0x97, 0xf2, 0xf5, 0x31, 0x58, 0x16, 0x5c, 0x72, 0xb3, 0x8f, 0xf1, 0x2a, 0x64, 0xcd,
	0x17, 0x6d, 0x04, 0xab, 0x7b, 0xc9, 0x98, 0xb8, 0xff, 0xac, 0x82, 0x41, 0xe2, 0xf8, 0xc3, 0xfd,
	0x6d, 0x7f, 0x2f, 0xd8, 0x0a, 0xd3, 0x4c, 0x3b, 0xd8, 0xe9, 0xf9, 0x7b, 0x81, 0x7e, 0x32, 0xa8,
	0x00, 0xe4, 0xe3, 0x7e, 0x2f, 0xd8, 0x09, 0xbf, 0x10, 0x33, 0x46, 0xa6, 0xcd, 0xf0, 0x09, 0xb5,
	0x12, 0x2f, 0xe5, 0xa7, 0xa0, 0x21, 0xc2, 0x03, 0x08, 0x66, 0x54, 0x00, 0xe7, 0x55, 0x80, 0x54,
	0xf9, 0x09, 0xaf, 0x97, 0xf9, 0x09, 0xd7, 0x88, 0xca, 0xdd, 0x9e, 0xbb, 0xdf, 0xab, 0x83, 0xc3,
	0xb3, 0xa6, 0x40, 0x2e, 0xd4, 0x2d, 0xcf, 0x3e, 0x40, 0x94, 0xd1, 0x11, 0xf5, 0xd1, 0x82, 0x40,
	0xe5, 0x66, 0x99, 0x16, 0x42, 0x7b, 0xa2, 0x3c, 0x84, 0xb6, 0x10, 0x3e, 0x93, 0x66, 0x0c, 0x73,
	0x61, 0xa5, 0x6e, 0x94, 0xfa, 0x9b, 0x84, 0xf2, 0x48, 0xe5, 0x53, 0x23, 0x3e, 0x9c, 0x9a, 0x1e,
	0x21, 0x52, 0x79, 0xc9, 0x23, 0x28, 0xe9, 0xf8, 0x7e, 0x76, 0xe4, 0xd8, 0xe3, 0x73, 0xc6, 0xb2,
	0x6d, 0x86, 0x0e, 0x9f, 0xcf, 0x85, 0x0e, 0x37, 0x19, 0x69, 0x61, 0x14, 0x46, 0xd2, 0xa2, 0x64,
	0x38, 0xa5, 0x51, 0x32, 0x16, 0x07, 0x46, 0xcd, 0x5a, 0xca, 0xbd, 0x15, 0x3b, 0x0f, 0x73, 0xac,
	0x56, 0x9f, 0x62, 0xc8, 0x7a, 0x22, 0x5a, 0x2e, 0x88, 0xf0, 0xec, 0xfe, 0x4a, 0x05, 0xe3, 0x2a,
	0xe6, 0xe6, 0x24, 0x0f, 0x8c, 0xf0, 0x98, 0x33, 0xf2, 0x2c, 0x4c, 0x25, 0x41, 0x3b, 0x4e, 0x3a,
	0xf4, 0xda, 0x8c, 0xef, 0xcd, 0x35, 0x90, 0xf3, 0x02, 0x0f, 0xab, 0x30, 0xc6, 0x9f, 0x77, 0xe4,
	0xe7, 0x0b, 0x8f, 0xb5, 0xf0, 0xab, 0x74, 0x59, 0x82, 0x62, 0xfb, 0x7f, 0xdf, 0xab, 0x79, 0x81,
	0x57, 0x93, 0x2c, 0xc1, 0x4b, 0x2d, 0xa3, 0x1a, 0xbc, 0xb2, 0x54, 0xcf, 0xdf, 0xaf, 0xc1, 0x62,
	0x01, 0xf6, 0xa8, 0xd1, 0x1a, 0xb4, 0xc9, 0x5d, 0x1b, 0x30, 0xb9, 0xc7, 0x46, 0x9b, 0xdc, 0xf5,
	0x01, 0x93, 0x7b, 0x7c, 0xf8, 0xe4, 0x9e, 0x28, 0x9e, 0xdc, 0x93, 0xa5, 0x93, 0xbb, 0x51, 0x3e,
	0xb9, 0x61, 0xc4, 0xc9, 0x3d, 0x35, 0xc2, 0xe4, 0x9e, 0x2e, 0x9e, 0xdc, 0x6a, 0xce, 0xce, 0x58,
	0x7b, 0x07, 0x7d, 0x4e, 0xce, 0x8e, 0x30, 0x27, 0xdd, 0x1f, 0xab, 0xc2, 0xc2, 0x5a, 0xa7, 0x63,
	0x85, 0xc3, 0x79, 0xbc, 0x10, 0x2c, 0x23, 0x2d, 0x4f, 0xcf, 0x59, 0x61, 0xb9, 0x06, 0x8e, 0x4b,
	0xbd, 0x78, 0x5c, 0xc6, 0xd1, 0x3e, 0x5c, 0x34, 0x2e, 0x13, 0xe6, 0xb8, 0x48, 0x29, 0xd8, 0x18,
	0x12, 0x30, 0xf6, 0xdf, 0xab, 0xc0, 0xd2, 0x1d, 0x64, 0x1e, 0xab, 0x27, 0x8a, 0xb8, 0x7a, 0x70,
	0x1f, 0x88, 0xe6, 0xd5, 0x86, 0x37, 0x6f, 0xac, 0x28, 0x52, 0x49, 0x7d, 0x48, 0x55, 0x99, 0xea,
	0x2f, 0xee, 0xc2, 0x72, 0xf5, 0xe4, 0x5f, 0xaf, 0xc0, 0x8c, 0x82, 0x51, 0xf4, 0xa0, 0x09, 0x06,
	0xb8, 0xe1, 0xf7, 0xf8, 0x29, 0xfe, 0xc9, 0x96, 0x41, 0xd0, 0xe2, 0xd8, 0x0f, 0xa3, 0x2c, 0x39,
	0xf4, 0x04, 0xed, 0x89, 0xab, 0x30, 0xad, 0x23, 0x44, 0xcc, 0x4c, 0x92, 0x35, 0x18, 0x33, 0xf3,
	0xcb, 0x42, 0xef, 0x16, 0x2a, 0x20, 0xbf, 0x5c, 0xc0, 0x9a, 0x47, 0x98, 0x77, 0xab, 0x6f, 0x57,
	0xdc, 0x7b, 0xb4, 0x41, 0x50, 0xce, 0x32, 0x36, 0xf1, 0x1c, 0x81, 0xbb, 0xef, 0xe6, 0x29, 0xc7,
	0x85, 0xf1, 0x1d, 0x15, 0x79, 0x75, 0x6a, 0x15, 0x5a, 0x2a, 0x26, 0x2a, 0xc7, 0xe0, 0x95, 0x51,
	0x26, 0x31, 0x34, 0xdb, 0xa7, 0x02, 0xb8, 0x1b, 0x70, 0x5a, 0xb4, 0x4b, 0x0f, 0x00, 0xbb, 0x16,
	0x75, 0xf8, 0xde, 0x44, 0x15, 0x51, 0x29, 0x2b, 0xc2, 0xfd, 0xf9, 0x8a, 0x76, 0x67, 0x88, 0xed,
	0x2c, 0xf4, 0x3b, 0x37, 0x75, 0x71, 0xdf, 0x66, 0x7c, 0x43, 0xbf, 0xb7, 0xb4, 0xa2, 0xf2, 0x69,
	0x11, 0x82, 0xba, 0x92, 0x53, 0x9d, 0xd8, 0x80, 0x29, 0x0d, 0xac, 0x77, 0x24, 0x0f, 0x3e, 0x7a,
	0xc6, 0xec, 0xc8, 0x49, 0xba, 0x07, 0x75, 0x6f, 0x4f, 0xef, 0xc5, 0xb7, 0x68, 0x14, 0x37, 0xee,
	0xa1, 0x1b, 0x4c, 0x0a, 0x3b, 0xc4, 0x63, 0x9a, 0x7e, 0x22, 0xf6, 0x3b, 0x5e, 0x70, 0xe0, 0xdf,
	0x17, 0x9b, 0x39, 0x9e, 0x72, 0x3d, 0x38, 0xb6, 0x23, 0xd7, 0x3a, 0x3e, 0x3a, 0x03, 0x18, 0x5a,
	0x31, 0x6d, 0xb5, 0x94, 0x69, 0xdd, 0x6d, 0x58, 0xce, 0xe7, 0x59, 0x16, 0xac, 0x68, 0xa4, 0x1c,
	0x2f, 0x8a, 0x48, 0xb8, 0xc3, 0xe7, 0x9c, 0x7b, 0x01, 0x1c, 0x8b, 0xb6, 0xa4, 0x68, 0xf7, 0x05,
	0x58, 0xb8, 0x1e, 0x8a, 0x27, 0x18, 0x83, 0xb2, 0xfc, 0x2a, 0x2c, 0x8a, 0xd6, 0xb4, 0xe3, 0x44,
	0xde, 0xf4, 0xa4, 0x00, 0xfd, 0x89, 0x1c, 0x7f, 0x4c, 0x14, 0xa9, 0xae, 0xee, 0x5d, 0x58, 0x30,
	0x33, 0x60, 0x55, 0x1a, 0xf9, 0x77, 0x5d, 0xa0, 0xd5, 0x8c, 0x85, 0xc6, 0x3d, 0x07, 0xb3, 0x4a,
	0x55, 0x29, 0x73, 0x4a, 0xe0, 0xfe, 0xdd, 0x4a, 0xf9, 0x71, 0x83, 0x72, 0xd8, 0xa4, 0x1b, 0x0a,
	0x2b, 0xe6, 0xf9, 0xc7, 0x3a, 0xcc, 0x72, 0x67, 0x4e, 0x3d, 0xea, 0x4f, 0xce, 0x8b, 0x27, 0x5a,
	0xa5, 0xd1, 0x46, 0x3c, 0xeb, 0x8f, 0x72, 0x3b, 0x91, 0xb6, 0x48, 0x8d, 0xe9, 0x8b, 0x94, 0xfb,
	0x93, 0x15, 0xdb, 0x5f, 0x94, 0xba, 0x9a, 0xf2, 0x92, 0x75, 0x35, 0xc5, 0x7e, 0xed, 0xfe, 0x2c,
	0x2e, 0x0b, 0x9d, 0x2a, 0xb6, 0x47, 0xf3, 0x1a, 0xbd, 0x07, 0x53, 0xb1, 0x66, 0xe3, 0xad, 0x0c,
	0xb7, 0xf1, 0x6a, 0xe4, 0x23, 0xc5, 0x8a, 0x38, 0x05, 0x27, 0x4a, 0x6a, 0xc0, 0xf6, 0xeb, 0xff,
	0xaa, 0x06, 0x67, 0xca, 0x8d, 0xe6, 0x38, 0x04, 0x4f, 0x56, 0x45, 0x8d, 0x3d, 0x6a, 0x26, 0x7b,
	0x58, 0xbe, 0xd5, 0xc7, 0x06, 0xf9, 0x56, 0xb7, 0xbd, 0xe5, 0x57, 0x07, 0x7a, 0xcb, 0x57, 0xac,
	0x51, 0x37, 0xf4, 0x17, 0xc3, 0x8b, 0xfe, 0xf8, 0x51, 0xbc, 0xe8, 0x4f, 0x1c, 0xdd, 0x8b, 0xfe,
	0xe4, 0xd1, 0xbd, 0xe8, 0x37, 0x86, 0x78, 0xd1, 0xc7, 0x08, 0x9c, 0xc1, 0x95, 0x58, 0xb9, 0x12,
	0xab, 0x7b, 0x1a, 0x84, 0xe5, 0xd8, 0x43, 0xd7, 0x69, 0xa5, 0x0e, 0xeb, 0x2d, 0xbc, 0xfb, 0x35,
	0x38, 0x63, 0x8e, 0xe3, 0x37, 0x42, 0x9f, 0x9e, 0x3c, 0x6a, 0x01, 0xbe, 0x3b, 0xf2, 0x91, 0x3e,
	0x9f, 0xe1, 0x1a, 0xc4, 0xfd, 0xc0, 0x66, 0x70, 0x2d, 0x07, 0x6e, 0xb2, 0x1c, 0xf8, 0xff, 0x9b,
	0xf6, 0xff, 0x37, 0xfc, 0xf0, 0x4a, 0xe8, 0x47, 0x9a, 0x5d, 0xaa, 0x47, 0x8e, 0x1d, 0xb8, 0xf5,
	0x92, 0x52, 0xee, 0xeb, 0x36, 0x5b, 0xcb, 0xff, 0xb8, 0xe5, 0xa4, 0xf0, 0xaf, 0x9f, 0x2d, 0x3c,
	0xc0, 0x59, 0xd7, 0xbc, 0xc8, 0xb3, 0x25, 0xcf, 0x30, 0x33, 0xf3, 0xfd, 0xa8, 0x3c, 0x25, 0xd5,
	0x63, 0x29, 0xe9, 0xa0, 0x11, 0xce, 0x51, 0xd5, 0x61, 0xc5, 0x98, 0x71, 0x58, 0xf1, 0xbd, 0x4a,
	0xd1, 0x41, 0xe3, 0x7a, 0x90, 0x09, 0x4b, 0x7e, 0x61, 0x8d, 0x4e, 0x41, 0x03, 0x0f, 0x91, 0xf4,
	0x3b, 0x66, 0x12, 0x60, 0xf5, 0x7b, 0xcd, 0xee, 0x77, 0xad, 0x87, 0xc6, 0xf4, 0x1e, 0xa2, 0x5b,
	0x18, 0xeb, 0xfd, 0x43, 0xf4, 0x97, 0xc1, 0xe3, 0x8e, 0x68, 0x10, 0xf7, 0xc7, 0x2b, 0x30, 0x79,
	0x35, 0xbc, 0x27, 0x43, 0x75, 0xef, 0x85, 0xf7, 0xb2, 0x4f, 0xe5, 0xca, 0x31, 0xce, 0x92, 0x9b,
	0xb8, 0x3e, 0xef, 0x98, 0xeb, 0x33, 0xfb, 0x47, 0xac, 0xcf, 0x5c, 0x6d, 0x7b, 0x0e, 0x26, 0x84,
	0x54, 0xad, 0xf1, 0xbb, 0xac, 0x8c, 0x0a, 0x37, 0xa4, 0x02, 0x23, 0x54, 0x10, 0x65, 0x4b, 0xa3,
	0x94, 0xbb, 0x4a, 0xd5, 0xc0, 0x87, 0xd9, 0xe7, 0xa1, 0xce, 0xca, 0x15, 0x3a, 0xd8, 0x3c, 0x66,
	0xc3, 0x33, 0x40, 0x95, 0x94, 0xd0, 0xee, 0x36, 0xcc, 0x59, 0x18, 0xe7, 0x12, 0x40, 0x12, 0x3c,
	0xf4, 0x93, 0x8e, 0x26, 0xdb, 0xa6, 0x5a, 0x9e, 0x04, 0x79, 0x1a, 0x9a, 0x69, 0x59, 0x91, 0xb4,
	0x82, 0xb2, 0x4f, 0xf7, 0xdb, 0x30, 0xc5, 0xf4, 0x42, 0xd1, 0x1f, 0xe7, 0xa1, 0x81, 0xfd, 0x91,
	0x19, 0x37, 0x6c, 0xc3, 0x7b, 0x19, 0xdf, 0xa8, 0xf1, 0x2f, 0x49, 0x17, 0xaa, 0x03, 0x18, 0xa2,
	0xa3, 0x7b, 0xbc, 0x7b, 0xfc, 0x0b, 0x2f, 0xd7, 0xaa, 0xec, 0x85, 0x3a, 0xfe, 0x55, 0x0c, 0x9b,
	0xab, 0xa0, 0xdc, 0x7e, 0x2a, 0x73, 0x14, 0xfd, 0x30, 0xdd, 0xd2, 0xc9, 0x1a, 0x22, 0xd7, 0xd4,
	0xbd, 0x8b, 0xd9, 0xee, 0x84, 0x7b, 0x11, 0xc3, 0xaa, 0xcb, 0xb9, 0xa3, 0x55, 0xfe, 0x38, 0xe0,
	0xf7, 0xa7, 0x69, 0x7f, 0x57, 0x1c, 0x0d, 0xb2, 0xf4, 0x4e, 0x7f, 0xd7, 0xfd, 0x85, 0x0a, 0x56,
	0x4d, 0xe5, 0xcc, 0xcd, 0x0a, 0x9b, 0x76, 0x5c, 0x7f, 0xe5, 0x02, 0xba, 0x3c, 0x37, 0xb3, 0x42,
	0xb5, 0xf2, 0x0a, 0x69, 0x7c, 0x34, 0x56, 0xc6, 0x47, 0xee, 0x31, 0x58, 0xa6, 0x63, 0x95, 0x4e,
	0x90, 0xac, 0xc7, 0xea, 0x4e, 0xb2, 0x7b, 0x1d, 0x1f, 0xe4, 0x18, 0x08, 0x56, 0xeb, 0xd7, 0x61,
	0x5a, 0x83, 0x29, 0xd6, 0xd2, 0x80, 0x74, 0xd9, 0x5e, 0xa7, 0x72, 0xff, 0x56, 0x05, 0xe6, 0x2c,
	0x0a, 0xe7, 0x1c, 0x8c, 0x19, 0xf7, 0x82, 0x35, 0x3c, 0x36, 0x64, 0x8c, 0xbf, 0x49, 0x32, 0xcb,
	0x13, 0xdb, 0x00, 0x0d, 0xa8, 0x59, 0xc3, 0x0d, 0x5a, 0xe7, 0x4d, 0x80, 0x9d, 0xa0, 0x7b, 0x8f,
	0xff, 0x49, 0x73, 0xa9, 0xec, 0x4f, 0x8d, 0xd2, 0xfd, 0xef, 0x2a, 0xb0, 0x5c, 0x48, 0xc5, 0x56,
	0x6d, 0xcf, 0x8f, 0xee, 0x87, 0x3c, 0x1a, 0x59, 0xcd, 0x13, 0x49, 0xa6, 0x29, 0x6a, 0x0e, 0x46,
	0xf1, 0x9b, 0x6d, 0x58, 0x3f, 0x09, 0x7b, 0x5b, 0xc1, 0x83, 0xa0, 0xcb, 0x25, 0x8d, 0x4c, 0x33,
	0xfa, 0x9b, 0xda, 0x5e, 0xf4, 0x26, 0x3f, 0x5c, 0xf9, 0x44, 0x3f, 0x5c, 0xa1, 0xcd, 0x06, 0x3a,
	0x32, 0x23, 0xcb, 0x0f, 0x7f, 0x38, 0x21, 0xd3, 0x6c, 0xe6, 0xed, 0xa8, 0x00, 0x98, 0x3b, 0xc1,
	0x23, 0x56, 0xc3, 0x6b, 0x81, 0xdf, 0x51, 0xd1, 0x2f, 0x45, 0x12, 0x6f, 0xaa, 0x13, 0xdf, 0xf3,
	0x67, 0x1f, 0x7c, 0xa0, 0xdf, 0x90, 0x93, 0x49, 0xc0, 0xd9, 0x38, 0x7f, 0xc9, 0x94, 0x1d, 0xda,
	0x34, 0xe4, 0x42, 0xe3, 0x2d, 0x58, 0xda, 0x29, 0xc8, 0x4e, 0xff, 0xb1, 0x52, 0xf8, 0xe3, 0x2a,
	0x38, 0x3b, 0xf9, 0xf2, 0x06, 0xce, 0x06, 0xf7, 0x5d, 0x38, 0xb6, 0x19, 0xa5, 0x41, 0xf2, 0x38,
	0xe5, 0xbd, 0x01, 0xcb, 0xf9, 0x7f, 0x87, 0x17, 0xf9, 0x22, 0x1c, 0xa3, 0x9d, 0x4f, 0xbe, 0xc8,
	0x59, 0xa8, 0x4a, 0xc9, 0x5e, 0x0d, 0x3b, 0xac, 0x84, 0x3c, 0xe9, 0xf0, 0x12, 0xfe, 0xa0, 0x06,
	0x8b, 0xd7, 0xe2, 0x24, 0x0d, 0x3c, 0xbf, 0x1d, 0x6c, 0xf9, 0x07, 0x3d, 0xbe, 0x77, 0x2e, 0x09,
	0xda, 0xd4, 0xd6, 0x34, 0x6d, 0xf4, 0xa0, 0x4f, 0x0b, 0x81, 0x65, 0xa9, 0xad, 0xe5, 0x2c, 0xb5,
	0x96, 0xc9, 0x6e, 0x2c, 0x67, 0xb2, 0x3b, 0x05, 0x8d, 0x7b, 0x09, 0x6b, 0x5a, 0xd4, 0x3e, 0xe4,
	0x16, 0x3d, 0x05, 0x60, 0x6b, 0x59, 0xbb, 0xa3, 0x9b, 0xf2, 0xc7, 0xdb, 0xb4, 0xd1, 0x78, 0x03,
	0xa6, 0xf9, 0xb3, 0x4c, 0x92, 0x44, 0x13, 0xfc, 0x91, 0x81, 0xd1, 0x24, 0x52, 0x7c, 0x39, 0x9d,
	0x50, 0x7c, 0x0f, 0xe2, 0x07, 0x41, 0x27, 0x4c, 0x85, 0x9d, 0x8f, 0x27, 0x29, 0x8e, 0xe9, 0x83,
	0xe0, 0x5e, 0xc6, 0xad, 0xfb, 0x3c, 0x85, 0x97, 0xc6, 0xa5, 0xd7, 0x19, 0xe0, 0x57, 0xd0, 0xa5,
	0xc3, 0x19, 0x19, 0x3b, 0x4b, 0xf3, 0x12, 0xab, 0x41, 0x0c, 0x1b, 0xe1, 0x74, 0xb9, 0x8d, 0x90,
	0x9e, 0x8d, 0xd1, 0x35, 0xf7, 0x19, 0xba, 0xcc, 0x27, 0xd2, 0xce, 0xcb, 0xd0, 0xe8, 0xf5, 0xbb,
	0x5d, 0x6a, 0xe6, 0x6c, 0x69, 0x33, 0x27, 0x19, 0x11, 0x5a, 0xf7, 0xfe, 0x70, 0x0c, 0x66, 0x0c,
	0xfc, 0x9f, 0x8c, 0xe9, 0x0f, 0xfa, 0x98, 0xca, 0xd7, 0x5a, 0x6c, 0x14, 0xe7, 0xb4, 0xd7, 0x5a,
	0xfc, 0xbe, 0x66, 0x2f, 0x09, 0xbf, 0x08, 0xf0, 0xbc, 0xa6, 0xe6, 0x51, 0x62, 0xa0, 0x47, 0xf3,
	0x85, 0xc7, 0xf6, 0x68, 0xee, 0xfe, 0x5f, 0x15, 0x98, 0xd9, 0x4e, 0xe2, 0x4e, 0xbf, 0xcd, 0x65,
	0x0d, 0xba, 0xe5, 0x26, 0x80, 0xf6, 0x86, 0x5c, 0x07, 0x39, 0x2d, 0x49, 0xa1, 0xbd, 0x80, 0x9e,
	0x6e, 0x6d, 0x2b, 0x98, 0xa7, 0x13, 0xd0, 0x8e, 0x0a, 0x93, 0xea, 0x72, 0xab, 0x06, 0x71, 0xce,
	0xc1, 0xcc, 0xad, 0x24, 0xdc, 0x0b, 0x23, 0xbf, 0xbb, 0x9d, 0x84, 0x3c, 0xfe, 0x5b, 0xd5, 0x33,
	0x81, 0x8e, 0x0b, 0xd3, 0xdb, 0x49, 0x90, 0x06, 0x51, 0x46, 0x44, 0xe3, 0x48, 0x64, 0xc0, 0xd8,
	0x50, 0x6e, 0xa0, 0xdb, 0xba, 0xf6, 0x21, 0xe7, 0xb6, 0x46, 0x4b, 0x00, 0x3c, 0x89, 0x72, 0xbf,
	0x84, 0x87, 0x34, 0x05, 0xd2, 0x52, 0xac, 0x62, 0x31, 0x9c, 0x2c, 0x23, 0xa0, 0xcd, 0xfa, 0xac,
	0x81, 0x13, 0xeb, 0xda, 0x52, 0xab, 0xe8, 0x17, 0x8b, 0x96, 0xcd, 0xde, 0x4c, 0x5d, 0xa4, 0xc1,
	0x6f, 0xf7, 0x38, 0x9e, 0x6b, 0x19, 0x03, 0xa1, 0x62, 0x80, 0x2f, 0xe7, 0x51, 0xac, 0x16, 0x17,
	0x31, 0xda, 0x09, 0x83, 0x8a, 0xf2, 0x67, 0x5b, 0x26, 0x99, 0xc4, 0xbb, 0xdf, 0x81, 0xb3, 0x64,
	0x19, 0x2f, 0x6f, 0xb4, 0xf3, 0xae, 0x25, 0x66, 0xf8, 0x1a, 0x58, 0xdc, 0x28, 0x93, 0xd4, 0x7d,
	0x1d, 0xce, 0x0c, 0xc8, 0x9f, 0x5b, 0xf9, 0x72, 0xad, 0xfe, 0x08, 0x4e, 0xd0, 0x5f, 0x45, 0x0d,
	0x77, 0x2e, 0xc0, 0x04, 0xaf, 0x3f, 0xaf, 0x89, 0xdd, 0x3c, 0x81, 0x76, 0x4f, 0x40, 0xb3, 0x30,
	0x9f, 0x5e, 0xf7, 0x90, 0xb5, 0x9c, 0x16, 0xec, 0x67, 0xd7, 0xf2, 0x01, 0xf9, 0x0f, 0x68, 0x39,
	0xfd, 0xf5, 0xe4, 0x2d, 0x2f, 0xcc, 0x87, 0xb5, 0x7c, 0x1b, 0xce, 0x92, 0x22, 0x31, 0xa0, 0xe5,
	0x97, 0x61, 0xc1, 0xc0, 0x6a, 0x53, 0x3e, 0x8f, 0x60, 0x6d, 0x1d, 0x90, 0x63, 0x59, 0x5b, 0x3f,
	0x80, 0x13, 0xf4, 0x57, 0x61, 0x5b, 0x87, 0x8a, 0x1b, 0xd6, 0xc6, 0xc2, 0xff, 0x59, 0x1b, 0xbf,
	0x5b, 0x81, 0x99, 0x8d, 0x7d, 0x3f, 0x8a, 0x82, 0xae, 0x12, 0x5f, 0x6d, 0x02, 0xe8, 0xf9, 0x69,
	0x20, 0xe7, 0x2d, 0x98, 0xed, 0xf9, 0x87, 0x37, 0x82, 0x28, 0xe3, 0x7f, 0x72, 0x09, 0x36, 0xd7,
	0xda, 0x36, 0xc0, 0x9e, 0x45, 0xa6, 0x65, 0x7d, 0x53, 0x05, 0xb6, 0xd4, 0x41, 0xda, 0x19, 0xc9,
	0x98, 0x7e, 0x46, 0xc2, 0xa7, 0xb7, 0x51, 0x51, 0x73, 0x7a, 0x5b, 0x28, 0x3e, 0xbd, 0x79, 0xd6,
	0x6a, 0x7a, 0x9b, 0x64, 0x12, 0xaf, 0x26, 0x52, 0x51, 0x11, 0x8c, 0x9d, 0x38, 0xa5, 0x64, 0x27,
	0x93, 0x4e, 0xa0, 0xd5, 0x44, 0xca, 0xd7, 0x47, 0xb1, 0xec, 0x93, 0x97, 0x51, 0x98, 0x0f, 0x2b,
	0x43, 0xb2, 0x4a, 0x61, 0x19, 0x43, 0x87, 0x56, 0xb1, 0x4a, 0x41, 0xde, 0xbf, 0x55, 0x05, 0xb8,
	0xed, 0xa7, 0xf7, 0x37, 0xe4, 0xf3, 0xf4, 0xcc, 0x4f, 0xef, 0x6b, 0x39, 0xc9, 0x34, 0x5b, 0x46,
	0xd8, 0xb7, 0xb6, 0xba, 0x35, 0x5a, 0xb7, 0x39, 0xc0, 0x93, 0xa8, 0x51, 0x3d, 0xd6, 0x1b, 0x07,
	0xc6, 0x63, 0xf6, 0x81, 0xf1, 0x29, 0x68, 0x60, 0x86, 0x61, 0xd6, 0x15, 0x5b, 0x35, 0x05, 0x60,
	0xba, 0x10, 0x4b, 0x28, 0x17, 0xf5, 0x22, 0xe9, 0xbc, 0x0f, 0xf3, 0x2c, 0x93, 0x0d, 0x3f, 0x0b,
	0xae, 0xc6, 0x09, 0xf9, 0x2c, 0x9c, 0xe0, 0xa7, 0x8e, 0x57, 0x2d, 0x84, 0x97, 0x23, 0x65, 0xab,
	0x29, 0xcb, 0x89, 0x6c, 0x30, 0x9b, 0x1d, 0xbe, 0xbd, 0x33, 0x60, 0x7c, 0x8f, 0xa7, 0xfa, 0x4c,
	0xb0, 0xec, 0x5b, 0xb8, 0xc7, 0xd3, 0xe1, 0x8c, 0x5f, 0xbf, 0x0c, 0x75, 0xf6, 0xb7, 0x60, 0xd6,
	0xa9, 0x96, 0x46, 0x40, 0x18, 0xf7, 0x3d, 0x38, 0x46, 0xec, 0x95, 0xcb, 0x53, 0xff, 0xbb, 0x52,
	0xf2, 0xf7, 0x31, 0x58, 0xce, 0xff, 0xcd, 0x46, 0x56, 0xee, 0xe7, 0xf2, 0xd9, 0x7e, 0x09, 0xc6,
	0xd8, 0xcf, 0x45, 0xb9, 0x22, 0x82, 0x65, 0x9a, 0xff, 0x97, 0x65, 0xfa, 0x86, 0xd8, 0xb1, 0xe5,
	0x33, 0x1d, 0xc0, 0x3a, 0x2c, 0xbf, 0xfc, 0x6f, 0x2c, 0xbf, 0x03, 0x98, 0x64, 0x20, 0xe1, 0x28,
	0xa2, 0x94, 0xf7, 0x2e, 0x01, 0xb0, 0x6f, 0xcb, 0xb0, 0x77, 0x5b, 0x82, 0x3c, 0x0d, 0xad, 0xb3,
	0x47, 0xcd, 0x60, 0x0f, 0x77, 0x01, 0xe6, 0x44, 0x71, 0xea, 0x2e, 0xed, 0x8c, 0x02, 0xb1, 0x11,
	0x7b, 0x81, 0x58, 0x6f, 0x53, 0xb3, 0x66, 0x11, 0x9f, 0x93, 0x29, 0x4b, 0xe2, 0xdc, 0x37, 0xf1,
	0xb6, 0xac, 0xfa, 0xf9, 0xa1, 0xf6, 0xda, 0x7c, 0x50, 0x67, 0xbc, 0x87, 0xb7, 0x77, 0xed, 0xff,
	0x58, 0xd1, 0x36, 0xfb, 0x55, 0x0a, 0xd8, 0x6f, 0x01, 0xe6, 0x76, 0x7a, 0xdc, 0xd3, 0x1f, 0x6f,
	0xc2, 0x8b, 0x30, 0xa3, 0x40, 0xe2, 0xe2, 0x61, 0x2f, 0x8c, 0xc4, 0xed, 0xbd, 0xba, 0x27, 0x92,
	0x9c, 0x79, 0x19, 0xb5, 0x51, 0x5f, 0x77, 0x95, 0xcc, 0x72, 0x1a, 0x9c, 0xef, 0xad, 0xd3, 0x9e,
	0xe9, 0xe8, 0x43, 0x01, 0xdc, 0xab, 0x00, 0xf4, 0x43, 0x3b, 0x4e, 0x3a, 0x03, 0xee, 0x55, 0x48,
	0xeb, 0x41, 0xd5, 0xb6, 0x90, 0x71, 0xeb, 0x81, 0x5e, 0x29, 0x96, 0x97, 0xa8, 0xd4, 0x57, 0xb4,
	0x4a, 0x11, 0x9c, 0xfc, 0x10, 0x4c, 0xd0, 0xed, 0x1e, 0x35, 0xa7, 0x34, 0x12, 0x81, 0x73, 0x3f,
	0xe4, 0x77, 0xa4, 0x43, 0xb6, 0x54, 0x19, 0x8c, 0x7a, 0x09, 0x80, 0x9c, 0x71, 0x70, 0xd3, 0x58,
	0x0d, 0x79, 0x69, 0x43, 0x82, 0x3c, 0x0d, 0xed, 0xfe, 0xf7, 0x15, 0xac, 0x9c, 0x99, 0x0f, 0xab,
	0xc6, 0x6b, 0x30, 0xb3, 0xa7, 0xdd, 0x49, 0x16, 0x95, 0x99, 0x69, 0xe9, 0x37, 0x95, 0x3d, 0x93,
	0xc6, 0xb9, 0x04, 0x53, 0x7b, 0xd2, 0x7e, 0x91, 0xe6, 0xcd, 0xaf, 0x3a, 0xd6, 0x79, 0x09, 0xa6,
	0x32, 0x39, 0x5d, 0x28, 0xaa, 0xb7, 0x35, 0x59, 0x75, 0xbc, 0xd5, 0xac, 0xb1, 0xc1, 0xcd, 0xfa,
	0xcd, 0x1a, 0x4c, 0x5f, 0xb1, 0xdc, 0xae, 0x1d, 0x60, 0x04, 0x23, 0xb2, 0xb9, 0x51, 0x82, 0x41,
	0xb7, 0xb7, 0xe3, 0xb8, 0xcb, 0x35, 0x17, 0x4a, 0x38, 0x1f, 0xc1, 0x52, 0xbb, 0x9f, 0xd0, 0xef,
	0xfc, 0xf0, 0x0d, 0xdd, 0x60, 0xd6, 0xf8, 0x16, 0x2f, 0x87, 0xf1, 0x0a, 0xe9, 0x19, 0x7b, 0x31,
	0x78, 0xac, 0x05, 0x6b, 0x57, 0x00, 0xb6, 0x3f, 0xda, 0xf2, 0xd3, 0x8c, 0xa3, 0x69, 0x0d, 0xd0,
	0x20, 0xce, 0x4b, 0x02, 0xaf, 0x39, 0xe8, 0x10, 0x9e, 0xe5, 0xf8, 0x61, 0xaa, 0x46, 0xc0, 0xf8,
	0x73, 0x8b, 0x47, 0x62, 0x9a, 0x20, 0xa1, 0xc0, 0x93, 0xce, 0x9b, 0x30, 0xc3, 0x3e, 0x31, 0x60,
	0x93, 0xf6, 0x7a, 0x57, 0x38, 0x64, 0x92, 0x70, 0xcf, 0x24, 0x63, 0x73, 0x1c, 0x13, 0xe2, 0xb5,
	0x58, 0xcd, 0x93, 0x69, 0xe7, 0x26, 0x1c, 0xa3, 0xbd, 0x34, 0x95, 0x7e, 0x23, 0x48, 0xd3, 0x60,
	0x8f, 0x1e, 0x3d, 0x00, 0xdf, 0x14, 0x6d, 0xe7, 0xf1, 0x5e, 0xd9, 0x4f, 0xee, 0x81, 0x8c, 0x82,
	0xe6, 0x27, 0x9a, 0xd5, 0x1c, 0x7a, 0xca, 0x6d, 0x9b, 0xe5, 0xd2, 0xa2, 0x67, 0xb8, 0x6d, 0xeb,
	0x29, 0xb7, 0x6d, 0xb5, 0x32, 0xb7, 0x6d, 0x8a, 0xc6, 0xfd, 0xc3, 0x0a, 0xcc, 0x9a, 0x91, 0xb7,
	0x1e, 0xb3, 0xb0, 0xea, 0xf0, 0xc2, 0x9c, 0x55, 0x68, 0xf4, 0xa4, 0x43, 0xab, 0xda, 0x20, 0x1f,
	0x71, 0x3d, 0xdd, 0x47, 0x9c, 0x8a, 0xce, 0x30, 0x66, 0xc7, 0x49, 0x33, 0xc2, 0x61, 0xd7, 0xad,
	0x70, 0xd8, 0xee, 0x7d, 0xe1, 0x41, 0x91, 0xfa, 0x92, 0x4d, 0xe6, 0x67, 0xd7, 0x93, 0x8b, 0x6a,
	0xe0, 0x52, 0x71, 0x51, 0xc5, 0x7d, 0x59, 0xd5, 0x20, 0x4d, 0x47, 0x31, 0x63, 0x2e, 0x89, 0xe0,
	0x79, 0x18, 0xc4, 0x57, 0x64, 0xf3, 0x0a, 0xcc, 0x1b, 0xd0, 0xe1, 0xf9, 0xbc, 0x26, 0x6b, 0xd3,
	0x55, 0xd7, 0x66, 0xce, 0x00, 0xac, 0x07, 0x99, 0xf0, 0x6f, 0x4a, 0xf3, 0x5f, 0x83, 0x68, 0xb5,
	0xed, 0xf6, 0x47, 0xaa, 0xed, 0x1b, 0xc2, 0xa9, 0xe5, 0x47, 0x71, 0xb7, 0x1b, 0x3f, 0x1c, 0xb5,
	0x9c, 0x57, 0x45, 0xe5, 0xc4, 0x6f, 0x47, 0x68, 0x0f, 0x06, 0x86, 0x3e, 0x6a, 0x7b, 0xe8, 0xa7,
	0xe1, 0xa5, 0x2c, 0x6a, 0x15, 0xeb, 0xe4, 0xc6, 0x90, 0x80, 0xc3, 0x73, 0xb9, 0x8a, 0x5b, 0x1a,
	0x26, 0x6c, 0x53, 0xfa, 0x51, 0xd4, 0xb7, 0x05, 0x8d, 0x84, 0x41, 0x8d, 0x93, 0x1a, 0x4e, 0x22,
	0xe0, 0x9e, 0x22, 0x11, 0x87, 0x0c, 0xca, 0xdb, 0xa4, 0xba, 0x2a, 0x77, 0xfa, 0x4e, 0xaf, 0x73,
	0x3b, 0xf1, 0xa3, 0xd4, 0x6f, 0x67, 0x61, 0x8c, 0xec, 0xf5, 0x50, 0x2d, 0xa8, 0xce, 0x9b, 0xb0,
	0x12, 0x05, 0x0f, 0x0b, 0x08, 0xf8, 0x92, 0x5d, 0x82, 0x65, 0xff, 0xc5, 0xdd, 0xa2, 0x8c, 0xb9,
	0x51, 0xb5, 0x04, 0xeb, 0xbe, 0x01, 0x27, 0xcb, 0x2a, 0xc4, 0x4f, 0xca, 0xf9, 0x4d, 0x2a, 0x7e,
	0x77, 0x8e, 0x5f, 0x9e, 0xa2, 0x75, 0x5f, 0x6f, 0xe0, 0x11, 0xfc, 0x0f, 0x39, 0x78, 0x0c, 0x68,
	0x2a, 0x12, 0x3f, 0x56, 0xc1, 0x5b, 0x47, 0xba, 0x16, 0x61, 0xbe, 0x96, 0xab, 0x0c, 0x7f, 0x2d,
	0xb7, 0x06, 0x8b, 0x69, 0xd8, 0x09, 0xba, 0x61, 0x14, 0xa4, 0xdb, 0x43, 0xdf, 0xd9, 0x15, 0xd1,
	0xba, 0x6f, 0xe2, 0x71, 0x9f, 0xc1, 0x01, 0xfc, 0x18, 0x08, 0x07, 0x57, 0x2a, 0x9b, 0xb2, 0x55,
	0x04, 0x77, 0xef, 0x8a, 0xf9, 0x74, 0xa7, 0xa7, 0x47, 0xa8, 0x3c, 0xc3, 0x76, 0x6e, 0xbb, 0x5d,
	0xed, 0xd2, 0x74, 0xcd, 0xd3, 0x20, 0x6c, 0x63, 0x48, 0x3f, 0x90, 0x75, 0x96, 0x96, 0x70, 0x1d,
	0xe4, 0xde, 0x12, 0x8c, 0x2d, 0x32, 0x1e, 0x7e, 0x66, 0x6a, 0xb8, 0xb9, 0xac, 0x5a, 0x6e, 0x2e,
	0x51, 0xcf, 0xe7, 0x0b, 0xb0, 0x11, 0x4d, 0xd3, 0xfd, 0xba, 0x68, 0x82, 0x42, 0x8c, 0x54, 0xd6,
	0xa6, 0x90, 0x52, 0x58, 0x16, 0x62, 0x45, 0x96, 0xb2, 0x2c, 0x11, 0x5e, 0x53, 0x20, 0x5e, 0x13,
	0x65, 0x29, 0xc4, 0xf0, 0xd9, 0x29, 0x73, 0x13, 0x01, 0x35, 0x73, 0xb9, 0x29, 0xc4, 0xf0, 0xdc,
	0xde, 0x16, 0xf2, 0xfa, 0x76, 0xdc, 0xbb, 0xd3, 0x13, 0x03, 0xe6, 0xc2, 0x34, 0xa6, 0x4d, 0xd1,
	0x64, 0xc0, 0xdc, 0x9b, 0x42, 0xa6, 0xf3, 0x3f, 0x9f, 0x74, 0x44, 0x7e, 0xbb, 0x0a, 0x73, 0xdb,
	0xfd, 0x74, 0x1f, 0xf9, 0x42, 0x3d, 0x67, 0x2c, 0xbc, 0xd5, 0x61, 0x32, 0x54, 0x35, 0xc7, 0x50,
	0xa6, 0x1b, 0xd5, 0x5a, 0xce, 0x8d, 0x2a, 0x9e, 0xa2, 0x12, 0x2b, 0x71, 0x4b, 0x8f, 0x4c, 0x9b,
	0xb5, 0xac, 0xdb, 0xee, 0x51, 0x47, 0x70, 0x83, 0xea, 0x9c, 0x83, 0x19, 0x2a, 0x4b, 0x9c, 0xbd,
	0xd2, 0xcd, 0x76, 0x13, 0xa8, 0xea, 0x78, 0x53, 0xbd, 0x6c, 0xd1, 0x20, 0x2a, 0x17, 0xfe, 0xc0,
	0x10, 0x35, 0x37, 0x99, 0x0b, 0x07, 0xba, 0xff, 0x4d, 0x05, 0x9c, 0x0d, 0xa6, 0x89, 0x12, 0x98,
	0x6b, 0x62, 0xa5, 0x1d, 0x87, 0x97, 0x6b, 0xb4, 0xa3, 0x69, 0x9e, 0x1a, 0x70, 0x83, 0xf0, 0x45,
	0xf9, 0x9c, 0x3d, 0xe5, 0xaa, 0xba, 0xa5, 0xba, 0x4a, 0x34, 0x6b, 0xd1, 0x01, 0x46, 0x5e, 0x41,
	0x37, 0x27, 0xfc, 0x35, 0x80, 0x82, 0x58, 0xcb, 0xdd, 0x78, 0x6e, 0xb9, 0xfb, 0xc3, 0x0a, 0x2c,
	0x16, 0xe8, 0x9a, 0x47, 0x6e, 0x8c, 0x5e, 0xe5, 0x5a, 0x91, 0xb6, 0x6d, 0x54, 0x59, 0xab, 0xd2,
	0x98, 0x5d, 0xa5, 0x21, 0xcc, 0x20, 0xb7, 0x22, 0xe3, 0xb9, 0xad, 0x48, 0xbf, 0xdb, 0xe5, 0xda,
	0x3b, 0x25, 0xdc, 0x3f, 0x05, 0x8b, 0x5a, 0xd8, 0xdf, 0x74, 0x58, 0xdb, 0x5e, 0x85, 0xe9, 0x9e,
	0x46, 0xce, 0xa5, 0xf7, 0x4c, 0x4b, 0xcf, 0xc3, 0x33, 0x48, 0xdc, 0x75, 0x98, 0xd6, 0xb1, 0x85,
	0xa7, 0x8c, 0xca, 0x83, 0x6a, 0xb5, 0xd0, 0x83, 0xea, 0x8f, 0x57, 0xa0, 0x81, 0x93, 0x90, 0xcd,
	0xe9, 0x41, 0xd3, 0xaf, 0x67, 0x47, 0x51, 0xd5, 0x20, 0x66, 0xaf, 0xd5, 0x86, 0x4d, 0xa1, 0xb1,
	0x02, 0x4f, 0xc2, 0x01, 0xcc, 0x18, 0xf1, 0x66, 0x46, 0x8e, 0xf1, 0x7a, 0x99, 0x02, 0x28, 0xdd,
	0xea, 0x67, 0xdb, 0x45, 0xed, 0x34, 0x91, 0xee, 0xfb, 0x68, 0xd7, 0x5d, 0xdd, 0x08, 0xba, 0xdd,
	0x74, 0xc3, 0x8f, 0xb6, 0xc2, 0xe8, 0xbe, 0x12, 0x81, 0xea, 0x72, 0x9c, 0x1d, 0x2b, 0x49, 0x5c,
	0x94, 0x8b, 0x51, 0x51, 0xb2, 0x7e, 0x27, 0xdb, 0x2f, 0x84, 0x82, 0x7a, 0x8d, 0xeb, 0x00, 0x46,
	0xb0, 0x25, 0x85, 0x35, 0x68, 0xd7, 0xb9, 0xe5, 0xa1, 0x98, 0x76, 0xdd, 0xed, 0xc1, 0x0a, 0x79,
	0x40, 0xdf, 0xe8, 0x06, 0x7e, 0xc2, 0x68, 0x94, 0x7b, 0xbf, 0x67, 0x53, 0xe2, 0x7f, 0x5c, 0x81,
	0xa5, 0x5c, 0x91, 0xc3, 0x45, 0xfd, 0x2b, 0x30, 0x23, 0x33, 0xd9, 0x0a, 0xa3, 0x40, 0xbe, 0x2d,
	0x50, 0xa5, 0x98, 0x04, 0xce, 0x05, 0x98, 0x6b, 0xc7, 0x07, 0xbd, 0x6e, 0xc0, 0xb4, 0x2f, 0x4f,
	0xce, 0xdd, 0xba, 0x67, 0x83, 0x9d, 0x0b, 0xd0, 0x48, 0x82, 0x34, 0x63, 0x39, 0x89, 0x0b, 0xb1,
	0x7a, 0xbe, 0x0a, 0xe9, 0x7e, 0x01, 0x73, 0x54, 0x77, 0x75, 0xb9, 0xf9, 0x79, 0xeb, 0x72, 0xf3,
	0x4c, 0x4b, 0x50, 0x3c, 0xe5, 0x4b, 0xcd, 0x19, 0x2c, 0x73, 0x0e, 0xb6, 0x2e, 0x33, 0xbf, 0x51,
	0x74, 0x53, 0x78, 0xb1, 0x65, 0x12, 0xe7, 0xaf, 0x08, 0x9f, 0x83, 0x46, 0x5c, 0xc2, 0xd4, 0x0a,
	0x81, 0x8f, 0x7e, 0xad, 0x52, 0x7b, 0xdd, 0x43, 0xf7, 0x9e, 0xe1, 0xe9, 0xae, 0x17, 0xb4, 0x43,
	0xbf, 0x3b, 0xd0, 0x3f, 0xc1, 0x1b, 0x38, 0xc3, 0xdb, 0x81, 0x70, 0x50, 0x50, 0xb1, 0xa2, 0x90,
	0x6c, 0x4b, 0xa4, 0xa7, 0x11, 0xba, 0xb7, 0x60, 0xc5, 0xa2, 0x51, 0xad, 0x06, 0xf5, 0x0f, 0xe7,
	0xcf, 0xb2, 0x0c, 0xd5, 0xb7, 0x7b, 0x06, 0x4e, 0x29, 0x9a, 0xb5, 0xf4, 0xfe, 0x47, 0x71, 0xa2,
	0x67, 0xeb, 0x9e, 0x82, 0x13, 0x25, 0x78, 0xd6, 0xec, 0x3d, 0x58, 0xca, 0x55, 0x87, 0x1e, 0xe6,
	0x3c, 0x4e, 0x65, 0x06, 0x38, 0x51, 0xf8, 0x95, 0x8a, 0x5e, 0x92, 0x0a, 0xc6, 0xe2, 0xbc, 0x0d,
	0x53, 0x5a, 0x80, 0x15, 0xe9, 0x50, 0xb9, 0x38, 0xfc, 0x8a, 0x4e, 0xca, 0x54, 0x14, 0x1e, 0xd4,
	0x41, 0x86, 0xda, 0x15, 0x69, 0xb4, 0x10, 0xc5, 0x29, 0xa2, 0xf8, 0xb3, 0x3d, 0x9e, 0xc4, 0xc8,
	0x39, 0x07, 0xd2, 0xd4, 0x50, 0xf7, 0x78, 0xca, 0xfd, 0x17, 0x95, 0x82, 0xa0, 0x30, 0xc3, 0xd6,
	0xa0, 0x17, 0x61, 0x82, 0x84, 0x7a, 0x5a, 0xb6, 0x79, 0x10, 0x78, 0xe7, 0x22, 0x8c, 0xa5, 0xca,
	0xb0, 0x56, 0xd6, 0x40, 0xa4, 0x71, 0x2e, 0x41, 0x7d, 0x67, 0x3f, 0x8e, 0x33, 0x3e, 0x77, 0x4b,
	0x82, 0xdb, 0x10, 0x8d, 0xf3, 0x06, 0x2e, 0x04, 0xd7, 0xe2, 0x83, 0x80, 0x7b, 0x24, 0xac, 0x17,
	0x3b, 0x82, 0x34, 0xa9, 0xdc, 0x10, 0x8e, 0x19, 0xc3, 0x99, 0x06, 0x9d, 0x61, 0xad, 0x1d, 0xb6,
	0xa8, 0xad, 0xc0, 0x38, 0x72, 0x7a, 0x87, 0xdf, 0xf7, 0xe5, 0x29, 0x8b, 0x05, 0xfb, 0x59, 0x6c,
	0x30, 0x68, 0xaa, 0xf7, 0xbb, 0x86, 0x65, 0x6c, 0xf8, 0x3e, 0xcc, 0xfa, 0x02, 0x32, 0x02, 0x2b,
	0x5a, 0xc4, 0x03, 0xd8, 0xf1, 0x2f, 0x56, 0x60, 0x51, 0x65, 0xa1, 0x84, 0xdf, 0x8b, 0x96, 0xf0,
	0x5b, 0x68, 0xe9, 0x54, 0x4f, 0x59, 0x00, 0xfe, 0x93, 0x6a, 0x6e, 0xf6, 0x49, 0x97, 0x87, 0x24,
	0xad, 0x5e, 0xb5, 0xec, 0x57, 0x02, 0xec, 0xbc, 0x09, 0x53, 0xf4, 0xc9, 0xaa, 0xf2, 0x2a, 0x3f,
	0x44, 0x59, 0xd2, 0x7b, 0x45, 0x5a, 0xb0, 0x74, 0x42, 0x95, 0xf3, 0x2a, 0xb7, 0x41, 0x5b, 0x39,
	0xaf, 0x9a, 0x39, 0xaf, 0xf2, 0xd7, 0x8f, 0x43, 0x73, 0x5e, 0x55, 0x39, 0xbf, 0x66, 0xbb, 0x69,
	0xe4, 0x60, 0x33, 0xe7, 0xd7, 0xb8, 0x95, 0x77, 0x68, 0xce, 0xf8, 0x5f, 0xda, 0x0b, 0xb2, 0xd0,
	0xef, 0xde, 0x56, 0x77, 0xac, 0x4a, 0xfe, 0xd3, 0x08, 0xdd, 0x3f, 0x03, 0xf3, 0x5c, 0xd2, 0xab,
	0xf1, 0x3d, 0x6f, 0x8d, 0xaf, 0x0c, 0xda, 0xf7, 0xd4, 0x07, 0xf7, 0x0b, 0x61, 0x53, 0x1a, 0xb4,
	0xb2, 0x1a, 0x3a, 0xf7, 0xd3, 0x2b, 0x7b, 0x1d, 0x1a, 0x72, 0xb5, 0x77, 0xa6, 0xa1, 0xf2, 0x0d,
	0x7e, 0xe0, 0x53, 0xf9, 0x06, 0x4b, 0x7d, 0x93, 0x5f, 0x90, 0xae, 0x7c, 0xd3, 0x39, 0x0e, 0x63,
	0x4c, 0xc7, 0xe0, 0x77, 0x7d, 0xeb, 0xa8, 0x23, 0x78, 0x08, 0x72, 0xcf, 0x53, 0x1e, 0x6b, 0x49,
	0xe2, 0x1f, 0x4a, 0x3a, 0xe2, 0x46, 0x83, 0xee, 0xeb, 0x30, 0xc6, 0x52, 0x8e, 0x0b, 0x13, 0x2c,
	0x2d, 0xce, 0xa9, 0x66, 0x57, 0x27, 0x91, 0xea, 0x66, 0xff, 0xc0, 0x13, 0x08, 0xe7, 0x79, 0x98,
	0x64, 0x9f, 0xc6, 0xa9, 0xf3, 0x26, 0x07, 0x78, 0x12, 0xe5, 0xbe, 0x0a, 0x73, 0xe4, 0xef, 0x32,
	0xc8, 0x46, 0xb5, 0x03, 0x7e, 0x00, 0x4d, 0xfc, 0xc5, 0xeb, 0xef, 0xee, 0x86, 0xe4, 0xc6, 0x2e,
	0xd5, 0xb6, 0xea, 0x3a, 0x58, 0x6c, 0xd5, 0x75, 0x98, 0xfb, 0x55, 0x38, 0x4e, 0x9e, 0x0f, 0x1f,
	0x37, 0x83, 0xb7, 0x61, 0xc5, 0x70, 0x9d, 0x38, 0x7a, 0xd5, 0x2f, 0x9a, 0x7f, 0x6e, 0xf9, 0x92,
	0x5f, 0xe6, 0xa1, 0xb6, 0xe5, 0x8b, 0x53, 0x1c, 0xf6, 0xe9, 0x5e, 0x31, 0x83, 0x66, 0xd1, 0x04,
	0x1b, 0xf0, 0x62, 0x52, 0x3a, 0x46, 0xac, 0xea, 0x8e, 0x11, 0x7f, 0xb2, 0x6a, 0x16, 0xc9, 0xb3,
	0xe1, 0x66, 0x3c, 0x2e, 0xfa, 0x27, 0x0c, 0xd1, 0x3f, 0x72, 0xe6, 0x4c, 0xe6, 0x3e, 0x0c, 0x23,
	0xcd, 0xf5, 0x8c, 0x48, 0xb2, 0xf5, 0xba, 0x1b, 0xa7, 0x59, 0x5f, 0x9d, 0x10, 0xc9, 0x34, 0xdb,
	0x75, 0x7d, 0x51, 0xe4, 0xe3, 0x95, 0x43, 0x19, 0xfe, 0x51, 0x91, 0x83, 0x57, 0x0e, 0x25, 0x73,
	0xc5, 0x3a, 0x51, 0x4c, 0x0a, 0x73, 0x05, 0xa5, 0x99, 0x1e, 0xfe, 0x48, 0x7a, 0xf9, 0xa4, 0xc3,
	0x1d, 0x05, 0x70, 0x5f, 0x87, 0xa5, 0x5c, 0xf7, 0x0f, 0x37, 0x0a, 0x59, 0x7f, 0xe1, 0x70, 0x0f,
	0xff, 0x6b, 0x95, 0xbb, 0xfc, 0x16, 0xf1, 0xba, 0x46, 0xf9, 0xe7, 0x4d, 0x58, 0x29, 0xe0, 0xec,
	0xe1, 0xff, 0xbd, 0x05, 0xc7, 0x8a, 0x38, 0x7a, 0xf8, 0x8f, 0x8f, 0x34, 0xbf, 0xe4, 0x32, 0x06,
	0x97, 0x16, 0x70, 0x90, 0xfb, 0x90, 0xe1, 0x61, 0xe6, 0x8a, 0x5e, 0x8c, 0x4a, 0xbb, 0xcd, 0x7a,
	0x90, 0xd1, 0xc9, 0x4a, 0xcd, 0xd3, 0x20, 0x1a, 0x93, 0x8d, 0xe9, 0x4c, 0xe6, 0xf6, 0xe1, 0xa4,
	0x55, 0xb2, 0x5e, 0x77, 0xe7, 0x22, 0x93, 0xe7, 0x2a, 0x2d, 0x05, 0x69, 0xcd, 0xcb, 0xc1, 0xcb,
	0x9c, 0x79, 0xf2, 0x62, 0x6b, 0x46, 0xb1, 0x8f, 0xe0, 0x8c, 0x31, 0x1b, 0xbe, 0x7f, 0x25, 0x7f,
	0x6e, 0xfa, 0x5f, 0xa7, 0x92, 0xb7, 0xfc, 0x38, 0x3f, 0xf3, 0x87, 0x64, 0x6b, 0xf4, 0xe3, 0x40,
	0x47, 0xaf, 0x29, 0x9c, 0xcc, 0x17, 0x49, 0x0f, 0xed, 0x9e, 0xbc, 0x60, 0xe5, 0x2e, 0xb5, 0xae,
	0xbb, 0x4b, 0x75, 0xff, 0x74, 0x51, 0x3b, 0xbf, 0x5f, 0x5c, 0xf5, 0x36, 0x2c, 0x21, 0x57, 0xdd,
	0xe9, 0xd1, 0x93, 0x35, 0xed, 0xae, 0x95, 0xd7, 0x4f, 0xf7, 0x3f, 0x09, 0xbb, 0x5d, 0x7f, 0x4f,
	0x8c, 0xa7, 0x0e, 0x72, 0xbf, 0x6a, 0xf6, 0xd5, 0xd1, 0x33, 0x78, 0x47, 0xac, 0x2a, 0x76, 0x06,
	0xa3, 0x8b, 0x8a, 0xa3, 0xfc, 0xf3, 0xe7, 0xb9, 0xf7, 0x4b, 0x39, 0x89, 0xc8, 0x46, 0x2c, 0x62,
	0x20, 0x96, 0xa9, 0xf5, 0x76, 0xd8, 0xdb, 0x6a, 0x41, 0xd8, 0xdb, 0x22, 0x6f, 0x62, 0x0e, 0x8c,
	0xc5, 0x9d, 0x4e, 0xca, 0xad, 0x53, 0xf8, 0x2d, 0x1f, 0x46, 0xea, 0xcd, 0x1e, 0xad, 0x16, 0xab,
	0xa6, 0x44, 0xb5, 0x6a, 0x53, 0x88, 0x1b, 0xb9, 0x56, 0xdf, 0xe6, 0xae, 0x20, 0xb9, 0xed, 0x7f,
	0x70, 0x45, 0x4a, 0xc2, 0xf8, 0x55, 0x4b, 0xc3, 0xf8, 0xb9, 0xdf, 0xad, 0x90, 0xaf, 0x41, 0xd9,
	0xef, 0xc3, 0x8a, 0x28, 0x8d, 0xed, 0x5c, 0x1d, 0x14, 0xdb, 0x59, 0xb4, 0xac, 0xa6, 0x5a, 0xc6,
	0x24, 0x93, 0x4e, 0xc3, 0x6f, 0x5f, 0xb0, 0xa9, 0x91, 0x83, 0xbb, 0xbf, 0x59, 0xa1, 0x10, 0x8c,
	0x45, 0xf1, 0x31, 0xcb, 0x6a, 0x3a, 0x28, 0x4a, 0x67, 0x75, 0x48, 0x94, 0xce, 0x27, 0xad, 0xef,
	0x2e, 0xf9, 0xa4, 0x2e, 0xcd, 0xbf, 0xac, 0xce, 0x45, 0x65, 0x54, 0x4b, 0xca, 0xf8, 0x94, 0x5e,
	0xcc, 0x16, 0x77, 0xf8, 0xd3, 0x28, 0xe0, 0xaf, 0x55, 0xe0, 0xb8, 0x16, 0xa4, 0xf3, 0xa3, 0x70,
	0x6f, 0x5f, 0xdb, 0x8e, 0xbc, 0x6c, 0xed, 0x08, 0x8e, 0xb5, 0xf2, 0xb4, 0x4f, 0x79, 0x6f, 0xf0,
	0x8b, 0x55, 0xde, 0xad, 0x5a, 0xe4, 0x50, 0x64, 0x02, 0xe1, 0x70, 0xd0, 0x85, 0x69, 0x72, 0xa8,
	0xa0, 0xbd, 0xb5, 0x6e, 0x78, 0x06, 0x8c, 0x89, 0xbe, 0xb5, 0x7b, 0x99, 0xf8, 0x93, 0x73, 0x82,
	0x0e, 0x72, 0x36, 0x60, 0x91, 0x89, 0x2c, 0xbf, 0x1d, 0x08, 0xf9, 0x85, 0x71, 0x27, 0x6a, 0x7c,
	0x57, 0x7d, 0x3d, 0x6c, 0xdf, 0xd7, 0x11, 0x5e, 0x11, 0x35, 0x5b, 0xc8, 0x64, 0x74, 0x7b, 0xee,
	0x31, 0x5c, 0xc6, 0xb5, 0xd7, 0x22, 0xe3, 0xd7, 0xcd, 0xc8, 0xf8, 0x56, 0xc4, 0xfb, 0xf1, 0x7c,
	0xc4, 0xfb, 0x12, 0x2d, 0xd7, 0xdd, 0xa5, 0x79, 0x9c, 0x8b, 0x76, 0x5f, 0x2e, 0xb3, 0xf2, 0x91,
	0xf3, 0xab, 0x83, 0x23, 0xe7, 0xbb, 0x7b, 0xb0, 0x6c, 0x06, 0x6d, 0x55, 0x57, 0x07, 0x26, 0xd6,
	0x83, 0x6c, 0x2d, 0x09, 0x7c, 0xce, 0x0c, 0x4b, 0x3a, 0x33, 0x30, 0x05, 0x83, 0xe1, 0x3c, 0x41,
	0x64, 0xed, 0x2b, 0xaa, 0xb9, 0x7d, 0xc5, 0xe7, 0x46, 0x88, 0xfe, 0xd1, 0xb4, 0x4d, 0xad, 0xa5,
	0x55, 0xa3, 0xa5, 0xf2, 0xa8, 0x6d, 0xdd, 0x70, 0x05, 0x62, 0x02, 0xdd, 0xcf, 0x68, 0x36, 0x15,
	0x85, 0xaa, 0x4d, 0x9d, 0x37, 0x60, 0x92, 0xc7, 0xbc, 0x15, 0x07, 0x06, 0x03, 0x02, 0xdb, 0x4a,
	0xd2, 0xb2, 0x1a, 0xb9, 0xff, 0x55, 0x05, 0x9a, 0x65, 0xbf, 0x1b, 0x7a, 0x45, 0xed, 0x09, 0xf5,
	0x0a, 0x8b, 0x9d, 0xc6, 0x06, 0xb1, 0x53, 0x7d, 0x70, 0xa7, 0x8d, 0x17, 0x75, 0xda, 0x29, 0x38,
	0xa1, 0xb5, 0xc1, 0x52, 0x32, 0xdc, 0x6d, 0x68, 0x16, 0x62, 0x47, 0x1a, 0xca, 0xc4, 0xe8, 0x38,
	0xee, 0xd8, 0xe4, 0x0c, 0x9c, 0xd2, 0x72, 0xbc, 0x22, 0x9f, 0xf2, 0x8b, 0x12, 0x3d, 0xa3, 0x3e,
	0x3a, 0xfe, 0xf1, 0xcb, 0xdc, 0xce, 0xc9, 0x9c, 0xd1, 0x94, 0x02, 0x6d, 0x92, 0x57, 0x8d, 0x49,
	0xee, 0xfe, 0xe7, 0x15, 0x70, 0xb4, 0xec, 0x78, 0x78, 0x6c, 0x36, 0x89, 0xee, 0x86, 0xd1, 0xf0,
	0x49, 0xc4, 0x89, 0x9c, 0x0b, 0x30, 0x4e, 0x36, 0x63, 0x6e, 0x8f, 0x98, 0xd7, 0xc9, 0x49, 0xf2,
	0x12, 0xde, 0xb9, 0x00, 0x53, 0x84, 0xa2, 0x69, 0x4e, 0x16, 0x13, 0x19, 0xdf, 0x5b, 0x43, 0x39,
	0xe7, 0x01, 0x34, 0x79, 0x30, 0x66, 0x10, 0x6a, 0x18, 0xf7, 0x11, 0x5f, 0x8e, 0x73, 0xad, 0x28,
	0x77, 0x7e, 0xfd, 0xa1, 0x31, 0xa7, 0x65, 0xf4, 0xf0, 0x2a, 0x77, 0xda, 0x97, 0xc7, 0x79, 0x45,
	0xf4, 0xee, 0x4f, 0xe7, 0xe7, 0x0e, 0xba, 0xc7, 0xde, 0x8c, 0xc2, 0xec, 0xe9, 0xf9, 0xa4, 0xbe,
	0x0c, 0x0b, 0x5a, 0x01, 0x7c, 0x3e, 0xd2, 0xfc, 0xca, 0x23, 0xdc, 0x9f, 0xe0, 0xb1, 0x7b, 0x44,
	0x90, 0xa7, 0x67, 0x50, 0xa1, 0x7c, 0xe8, 0xf4, 0x5a, 0x51, 0xe8, 0x74, 0xf7, 0xe7, 0xb9, 0xc3,
	0x7e, 0x01, 0xfe, 0x93, 0xf5, 0x91, 0xcb, 0xdc, 0xdf, 0xa9, 0xc0, 0x9c, 0x15, 0x90, 0xde, 0xb9,
	0x64, 0xcf, 0xb8, 0x05, 0x19, 0xa7, 0x2b, 0x3f, 0xdd, 0x9e, 0xb7, 0xa6, 0xdb, 0x8c, 0xa4, 0xb5,
	0xe7, 0x9a, 0x1e, 0x4b, 0xbf, 0x56, 0x1e, 0x4b, 0xdf, 0x88, 0x72, 0x3f, 0x56, 0x12, 0xe5, 0xde,
	0xed, 0xd2, 0xba, 0x9e, 0x8b, 0xa5, 0x5f, 0xc6, 0x59, 0x45, 0x11, 0xfa, 0xab, 0xa3, 0x46, 0xe8,
	0x77, 0xff, 0x34, 0xed, 0x36, 0x04, 0x7c, 0xb0, 0x0a, 0x61, 0x35, 0xb5, 0x3a, 0x62, 0x53, 0x6b,
	0x65, 0x4d, 0xf5, 0xc1, 0x91, 0x6c, 0xab, 0x74, 0x8b, 0x4b, 0xb6, 0x6e, 0x51, 0x34, 0x48, 0xa3,
	0x2a, 0x16, 0x91, 0xea, 0x9d, 0xef, 0x8b, 0x56, 0xf1, 0x5f, 0x5a, 0x92, 0xe1, 0x07, 0x73, 0x99,
	0x3f, 0x0e, 0xc7, 0x44, 0x03, 0xec, 0x35, 0xfe, 0x06, 0x2c, 0xe7, 0x51, 0x8f, 0xbf, 0xd8, 0x9e,
	0x84, 0xe3, 0x2a, 0x52, 0x9e, 0xbd, 0xba, 0xdf, 0x52, 0xd5, 0x78, 0x3a, 0x4b, 0xfb, 0x0d, 0x53,
	0x56, 0x3e, 0xe9, 0xba, 0xfe, 0x63, 0x15, 0x58, 0xba, 0xd6, 0x8f, 0x3a, 0x49, 0xd0, 0x19, 0x16,
	0x9d, 0xd1, 0x20, 0x7b, 0x46, 0xbb, 0x24, 0xad, 0x8c, 0x3f, 0x59, 0x05, 0xf8, 0x2a, 0xf0, 0x5f,
	0x98, 0x43, 0x84, 0x72, 0x07, 0xaf, 0x4a, 0xbc, 0x07, 0xd3, 0x98, 0xc0, 0x3b, 0x56, 0xe9, 0x3e,
	0x3f, 0xab, 0x6d, 0xb6, 0x6c, 0x62, 0x8e, 0xf7, 0x0c, 0x6a, 0xe7, 0x1d, 0x7e, 0x3c, 0x78, 0x2d,
	0xec, 0x74, 0x82, 0x48, 0x86, 0x8b, 0xb6, 0x7f, 0x26, 0xb4, 0xa7, 0xd3, 0x3a, 0xaf, 0xf2, 0xc8,
	0xf4, 0xda, 0x3b, 0xc5, 0xc2, 0x90, 0x69, 0x8a, 0xca, 0xfd, 0x2a, 0x1c, 0x2b, 0xa9, 0x16, 0x13,
	0xb4, 0xf4, 0x52, 0x22, 0x4c, 0x33, 0xeb, 0xfc, 0x55, 0x21, 0xdc, 0x0f, 0x60, 0xa5, 0xb8, 0x6a,
	0x23, 0xfe, 0xff, 0xeb, 0x15, 0x70, 0xb4, 0x0c, 0xc4, 0x72, 0x7a, 0x06, 0x60, 0xad, 0xdb, 0x65,
	0x72, 0xf8, 0x6e, 0x18, 0x71, 0xb1, 0xa6, 0x41, 0x90, 0xa7, 0x28, 0xc5, 0x23, 0x46, 0xe3, 0xb0,
	0x69, 0x20, 0x8d, 0x82, 0x77, 0x87, 0x4e, 0x21, 0x9e, 0x6b, 0x52, 0xd8, 0x5d, 0xc5, 0x31, 0x0a,
	0xc0, 0x84, 0xe7, 0x6d, 0xe5, 0xab, 0x18, 0xbf, 0xdd, 0x5f, 0xe6, 0xa6, 0x23, 0xad, 0xc2, 0x5b,
	0x71, 0x9b, 0xdc, 0xdd, 0x7f, 0x00, 0x73, 0x56, 0x8c, 0x43, 0xf9, 0xb8, 0xbc, 0x20, 0xfe, 0xa1,
	0x67, 0x13, 0x3b, 0x17, 0xa1, 0xae, 0x2c, 0x6c, 0x4c, 0x61, 0xd7, 0x0a, 0x91, 0x8b, 0x53, 0x5d,
	0x7a, 0x3e, 0x2b, 0x34, 0xa4, 0xff, 0x1a, 0x57, 0x68, 0xb5, 0x5f, 0x77, 0x02, 0x11, 0x23, 0xe4,
	0x49, 0x2b, 0xf8, 0x9a, 0x3e, 0x9e, 0x55, 0x7e, 0x23, 0xa3, 0x68, 0x02, 0x68, 0xc3, 0x5b, 0x5a,
	0xd3, 0xdf, 0xad, 0xd2, 0x62, 0x66, 0xd4, 0x34, 0xcb, 0xba, 0xc1, 0x1f, 0x4d, 0x35, 0x5f, 0xc6,
	0x3b, 0x34, 0xa4, 0xe1, 0xd0, 0x96, 0x66, 0xb1, 0x95, 0xe7, 0x4a, 0x4f, 0x12, 0x39, 0x6f, 0xc1,
	0xac, 0xa9, 0x61, 0x73, 0xad, 0x2b, 0xa7, 0x78, 0x5b, 0x64, 0xa5, 0xab, 0x67, 0x41, 0x8c, 0x9a,
	0xf1, 0xe2, 0x18, 0x35, 0x7d, 0x43, 0xec, 0xdc, 0x95, 0xaf, 0x15, 0x07, 0x6c, 0x96, 0xf2, 0x4d,
	0x51, 0x9b, 0xa5, 0x82, 0x66, 0x16, 0xd1, 0x8b, 0xbd, 0xab, 0xce, 0x95, 0x4f, 0xb8, 0xc6, 0xdd,
	0x83, 0x65, 0x7d, 0x5d, 0x51, 0x6a, 0xda, 0x4b, 0xb6, 0x9a, 0x66, 0xd4, 0x92, 0xa3, 0x46, 0x57,
	0xd4, 0xae, 0x1b, 0x1d, 0xf0, 0x64, 0xba, 0x9a, 0xfb, 0xb3, 0xd5, 0xdc, 0x14, 0x7b, 0x3c, 0x45,
	0xec, 0x14, 0x34, 0xe4, 0x8f, 0x5c, 0x3a, 0x29, 0xc0, 0x13, 0xa8, 0x61, 0x5a, 0xe7, 0x8d, 0x8f,
	0xd6, 0x79, 0xe4, 0x2d, 0x45, 0x7b, 0x46, 0xa8, 0x41, 0x94, 0x56, 0x67, 0x7a, 0x59, 0x37, 0x81,
	0xc2, 0xe2, 0x55, 0xd4, 0x29, 0xe5, 0x16, 0xaf, 0x22, 0xea, 0x11, 0x2c, 0x5e, 0xa7, 0xe0, 0x84,
	0xf6, 0xa7, 0xad, 0x44, 0xbe, 0x0d, 0xcd, 0x42, 0xec, 0xf0, 0x63, 0xa3, 0x33, 0x70, 0xca, 0x50,
	0xa5, 0x6c, 0x95, 0xf1, 0x5d, 0xa3, 0xdc, 0x23, 0x69, 0x8d, 0xee, 0x97, 0xe1, 0x4b, 0xda, 0xbf,
	0xfc, 0xc5, 0xcc, 0xdd, 0x30, 0xda, 0x8a, 0xe5, 0x5b, 0xfb, 0x04, 0x4e, 0x97, 0x93, 0x0c, 0xe7,
	0xd7, 0xd7, 0xa0, 0x21, 0x45, 0x81, 0xbc, 0x86, 0x59, 0x24, 0x27, 0x3c, 0x45, 0xe7, 0xba, 0x70,
	0x36, 0x5f, 0x26, 0x8d, 0x45, 0xaa, 0x3c, 0xe4, 0x9c, 0x19, 0x40, 0x33, 0xbc, 0x62, 0x47, 0x35,
	0x4f, 0xe0, 0x9d, 0x34, 0x64, 0x82, 0x78, 0x77, 0x37, 0x8c, 0x06, 0xdd, 0x49, 0xd3, 0xa9, 0x9e,
	0xb2, 0xe2, 0xfb, 0x0b, 0x55, 0x0a, 0xcb, 0xa6, 0x8a, 0xf8, 0x13, 0xbd, 0x97, 0xcf, 0xbf, 0x98,
	0xef, 0xeb, 0xb1, 0x57, 0x44, 0xfc, 0x43, 0xcc, 0x0e, 0x3f, 0xa5, 0xba, 0x87, 0xd9, 0x49, 0x90,
	0xf3, 0xb6, 0xa4, 0xd0, 0xee, 0x3d, 0xad, 0xb4, 0x72, 0x59, 0xd1, 0x05, 0x36, 0x2d, 0xe1, 0xfe,
	0xfd, 0x8a, 0x5e, 0xe2, 0xd3, 0xd3, 0x10, 0xdf, 0xce, 0x6b, 0x88, 0x03, 0x6a, 0xf4, 0x64, 0x9a,
	0xe3, 0x6f, 0xf1, 0x68, 0xb7, 0x2a, 0xf3, 0xa7, 0xa6, 0x38, 0xbe, 0x68, 0x2a, 0x8e, 0x8b, 0x5a,
	0x03, 0x6c, 0xbd, 0x51, 0x44, 0x09, 0xa5, 0xe5, 0x86, 0xa2, 0x84, 0x96, 0xdd, 0x17, 0xf8, 0x9c,
	0x54, 0x5d, 0x95, 0xd9, 0xd3, 0xd3, 0x24, 0xcb, 0x24, 0xfb, 0x7f, 0x58, 0xe5, 0x31, 0xb7, 0xb5,
	0x32, 0x9f, 0x8a, 0x4e, 0xf8, 0xba, 0xc9, 0x9d, 0x24, 0x84, 0x9c, 0xfc, 0x48, 0x9b, 0x1c, 0xdb,
	0xca, 0x29, 0x85, 0xfa, 0x2f, 0x7f, 0xac, 0x74, 0xc2, 0xcf, 0x75, 0x91, 0x39, 0x5c, 0x25, 0x5c,
	0xa7, 0x10, 0x84, 0x46, 0x43, 0xd2, 0x82, 0x6e, 0x11, 0x6d, 0x2c, 0xa0, 0x76, 0x6f, 0xd9, 0x02,
	0xf2, 0x49, 0xd5, 0xc1, 0x0e, 0xb7, 0x4e, 0x92, 0xb4, 0x55, 0xda, 0xe0, 0x65, 0x5b, 0x1b, 0xd4,
	0x6b, 0x78, 0x64, 0x65, 0xf0, 0x63, 0xbd, 0xe9, 0x4f, 0xa8, 0x0b, 0xfe, 0x74, 0xd5, 0x9e, 0x23,
	0x7f, 0xbc, 0x54, 0xc1, 0xcb, 0xb6, 0x2a, 0x38, 0xac, 0xe7, 0x46, 0xd3, 0x04, 0xd7, 0x8b, 0x34,
	0x41, 0xd1, 0xbf, 0xfb, 0xa4, 0x1e, 0x17, 0x74, 0x49, 0xea, 0xbc, 0x9e, 0x53, 0x04, 0x9b, 0xad,
	0x12, 0xe2, 0x11, 0xf4, 0xc0, 0x93, 0xdc, 0xe2, 0x86, 0x3f, 0xda, 0x6a, 0xe0, 0x5b, 0x34, 0x32,
	0x36, 0x72, 0xb8, 0xa6, 0x76, 0x9a, 0xd8, 0x5a, 0xa8, 0x15, 0xb6, 0x12, 0xf8, 0x8e, 0x5e, 0xe8,
	0xd1, 0x74, 0xc0, 0xb3, 0x14, 0x1a, 0x80, 0x7e, 0x2d, 0x54, 0x01, 0x7b, 0xb4, 0xc5, 0x2a, 0xa4,
	0x18, 0xce, 0xa5, 0xab, 0x79, 0x0d, 0x70, 0xa9, 0x55, 0x20, 0x15, 0x74, 0x05, 0xf0, 0xcb, 0xf0,
	0xa5, 0x5c, 0x89, 0x96, 0xfe, 0x17, 0xd1, 0x4d, 0xa6, 0x62, 0x92, 0x67, 0xa0, 0xfe, 0xbd, 0x89,
	0x13, 0x78, 0xdb, 0xcf, 0xb2, 0x20, 0x89, 0xd8, 0x74, 0xe9, 0xc4, 0x71, 0xc2, 0x6f, 0x95, 0xe1,
	0x37, 0x7f, 0x4c, 0x29, 0x5f, 0x06, 0x53, 0xc2, 0x6d, 0xc3, 0xfc, 0x56, 0xcc, 0x7e, 0x3a, 0x54,
	0x53, 0xc7, 0xd1, 0x7c, 0x45, 0xd7, 0xb8, 0x67, 0xe8, 0x25, 0xa8, 0xef, 0x64, 0xfe, 0x9e, 0x88,
	0xc1, 0x42, 0x09, 0xe7, 0x79, 0x98, 0xd8, 0x0d, 0xd0, 0x83, 0x8f, 0x74, 0x4a, 0xa3, 0x6a, 0xe1,
	0x09, 0x9c, 0xfb, 0x6f, 0x55, 0x01, 0x36, 0xba, 0xfd, 0xdd, 0x1b, 0xc1, 0xc1, 0x2e, 0x5e, 0xc7,
	0x05, 0xfa, 0xba, 0x73, 0x67, 0xf3, 0x8a, 0x08, 0x20, 0xaa, 0x20, 0x4c, 0x65, 0x35, 0xdc, 0x3b,
	0x2d, 0xb4, 0xd4, 0xcf, 0x96, 0xf7, 0xf6, 0xd3, 0x30, 0xe6, 0xc5, 0x5d, 0xe5, 0x5e, 0x8c, 0x11,
	0x32, 0x80, 0x87, 0x60, 0x0c, 0x13, 0xd8, 0xeb, 0x75, 0x0f, 0x35, 0x77, 0xf7, 0x0a, 0xc0, 0x54,
	0xc0, 0x8f, 0x63, 0x8a, 0x9c, 0x26, 0x6e, 0x3a, 0x8a, 0x34, 0xfb, 0x73, 0x2b, 0xf0, 0x1f, 0xa0,
	0x7f, 0x57, 0xbe, 0x7c, 0x28, 0x00, 0x9b, 0xd4, 0x1b, 0x7e, 0xb4, 0x81, 0x2e, 0x62, 0xd9, 0xa0,
	0xf0, 0x90, 0x4c, 0x26, 0xd0, 0xb9, 0x08, 0xf3, 0x54, 0x4d, 0x92, 0xf1, 0x98, 0x15, 0xcd, 0xfe,
	0x1c, 0xdc, 0xfd, 0x11, 0x70, 0xb8, 0x67, 0x21, 0x6c, 0x01, 0x3d, 0xfb, 0x77, 0x9e, 0x87, 0x49,
	0xf6, 0x7d, 0xdb, 0x70, 0x86, 0x2e, 0x3d, 0xa8, 0x09, 0x94, 0x9c, 0xeb, 0x57, 0x8c, 0xb9, 0xce,
	0x3a, 0x12, 0x30, 0x82, 0x2d, 0xc6, 0x2e, 0x93, 0xee, 0xed, 0xa5, 0x53, 0x01, 0x0d, 0xe9, 0xbe,
	0x04, 0xd3, 0xac, 0x64, 0x11, 0x67, 0x88, 0x75, 0x6c, 0x71, 0xa9, 0x08, 0x76, 0x1f, 0x10, 0x39,
	0x53, 0x34, 0xc2, 0x68, 0x0f, 0x9f, 0x9e, 0xdf, 0x0c, 0x82, 0xce, 0xc6, 0x7e, 0xd0, 0xbe, 0x2f,
	0xb8, 0x59, 0x02, 0x9c, 0xf3, 0x30, 0xbb, 0x81, 0x0e, 0x7f, 0xa2, 0x9b, 0xc1, 0xc3, 0xab, 0x22,
	0x2c, 0xeb, 0xa4, 0x67, 0x41, 0x99, 0xcc, 0x66, 0x3f, 0x6d, 0x27, 0xe1, 0x03, 0x3f, 0x13, 0xd1,
	0x88, 0x75, 0x90, 0xfb, 0xa3, 0x35, 0x98, 0xa4, 0x68, 0xb7, 0x14, 0x2f, 0x46, 0xe3, 0x20, 0xfc,
	0x66, 0xbc, 0xa5, 0xe2, 0xd5, 0x8a, 0x57, 0x46, 0x0a, 0x22, 0x3d, 0x81, 0xd7, 0x34, 0x4f, 0xe0,
	0x8c, 0x1f, 0xfd, 0x34, 0xe3, 0xfc, 0x38, 0xc6, 0xf9, 0x51, 0x42, 0xb4, 0x38, 0x02, 0x75, 0xee,
	0x6e, 0x0c, 0xdb, 0x6e, 0x72, 0x22, 0x5b, 0x07, 0xa4, 0xcb, 0x60, 0xf1, 0xf8, 0x5a, 0x41, 0x58,
	0x0f, 0x6d, 0x74, 0xe3, 0x94, 0xd0, 0xb4, 0x4c, 0x28, 0x80, 0x73, 0x49, 0x4c, 0x09, 0x9c, 0x4b,
	0x93, 0x7c, 0x2e, 0x29, 0xb6, 0xf7, 0x34, 0xb4, 0xf3, 0x22, 0x71, 0x05, 0x92, 0x36, 0xf8, 0xbb,
	0x65, 0x06, 0x60, 0x0d, 0x24, 0xe5, 0x4a, 0xa0, 0x19, 0x29, 0xeb, 0x59, 0x24, 0x05, 0x4e, 0xaa,
	0x8f, 0xb3, 0x27, 0xd1, 0x8c, 0x54, 0x0c, 0x27, 0x3a, 0x01, 0x16, 0xa4, 0x02, 0xe8, 0x49, 0x34,
	0x7a, 0xd8, 0x57, 0xdc, 0xca, 0x67, 0xf5, 0x6b, 0x30, 0xab, 0x52, 0x9a, 0x6f, 0x0e, 0xa3, 0x19,
	0x16, 0x09, 0x6b, 0x37, 0x7f, 0x91, 0xee, 0x67, 0x7e, 0x61, 0xc4, 0x55, 0x85, 0x66, 0xbb, 0xc7,
	0x2d, 0x3f, 0xc5, 0x32, 0xb5, 0x97, 0xf4, 0x06, 0xcc, 0xfd, 0xbf, 0xab, 0xac, 0x1a, 0xa2, 0x6a,
	0xdf, 0x57, 0x36, 0x91, 0xf8, 0x9b, 0x2a, 0xaa, 0x9b, 0x06, 0xd1, 0xd8, 0x68, 0xbc, 0x9c, 0x8d,
	0x5e, 0x35, 0x18, 0x81, 0x22, 0xbe, 0x30, 0xf9, 0x67, 0x76, 0xb6, 0xc1, 0x0e, 0x2f, 0x6b, 0xec,
	0x30, 0xc9, 0xcd, 0x93, 0x79, 0x59, 0x52, 0xc2, 0x14, 0x8d, 0xd1, 0x99, 0x02, 0x06, 0x33, 0x85,
	0x07, 0x4b, 0x5f, 0xef, 0x07, 0xc9, 0xa1, 0xe8, 0x77, 0xcd, 0x01, 0x1e, 0x03, 0x69, 0x43, 0x20,
	0xd3, 0x56, 0x28, 0xe9, 0x6a, 0x2e, 0x94, 0xf4, 0x1d, 0x70, 0xac, 0x3c, 0xd9, 0xd2, 0x39, 0x28,
	0xc7, 0xe7, 0x60, 0x4c, 0x0b, 0xde, 0x3b, 0xd7, 0x32, 0x79, 0xc1, 0x43, 0xa4, 0xfb, 0x37, 0xaa,
	0x32, 0x6c, 0xf6, 0xd3, 0x8b, 0x5b, 0x7b, 0x02, 0x26, 0xdb, 0xa2, 0x56, 0x3c, 0x88, 0x7e, 0xbb,
	0xb8, 0x9d, 0x63, 0x76, 0x3b, 0xb5, 0x48, 0x62, 0x45, 0x12, 0x86, 0x07, 0xd4, 0xe3, 0x05, 0x20,
	0x77, 0x8d, 0xab, 0x02, 0x84, 0x33, 0x8b, 0x03, 0xe4, 0x34, 0x1e, 0x4f, 0x4b, 0xb8, 0xc4, 0x30,
	0x80, 0x8a, 0x4a, 0xb8, 0xbc, 0x98, 0xd4, 0xa9, 0x84, 0xcb, 0x8b, 0x5f, 0x11, 0x8e, 0xee, 0xf4,
	0xde, 0x79, 0xd6, 0xa1, 0x39, 0x2f, 0x1a, 0x11, 0x44, 0x57, 0x5a, 0x5a, 0x05, 0xd8, 0xdc, 0x37,
	0x82, 0x73, 0xfe, 0x93, 0x1a, 0xf9, 0x84, 0xcd, 0xe1, 0xff, 0x64, 0x45, 0xf8, 0x23, 0x5a, 0x11,
	0xf2, 0xfc, 0x37, 0x3d, 0x12, 0xff, 0xcd, 0x14, 0xf1, 0xdf, 0x1b, 0x00, 0xac, 0xf8, 0x1b, 0x38,
	0xeb, 0x9d, 0x17, 0x00, 0xe8, 0x4b, 0x3b, 0x10, 0x9d, 0x68, 0x11, 0xc8, 0xd3, 0x50, 0xee, 0x0b,
	0xb0, 0x40, 0x9d, 0x8b, 0x18, 0xf5, 0xac, 0xed, 0xa6, 0x8a, 0x7c, 0x8e, 0xdf, 0xee, 0x87, 0x30,
	0xa7, 0x13, 0x72, 0xb7, 0xcc, 0x47, 0xe5, 0x1b, 0x0c, 0xd6, 0x17, 0xa6, 0x07, 0x61, 0x9a, 0x5a,
	0x05, 0xda, 0x39, 0xb9, 0xe7, 0x61, 0xde, 0xa0, 0x2c, 0x29, 0xd1, 0xfd, 0x21, 0xa6, 0x03, 0xca,
	0xee, 0x1d, 0x45, 0x7e, 0xea, 0x23, 0x54, 0x1d, 0x2c, 0x9e, 0xaf, 0xb1, 0x25, 0x5b, 0xcb, 0x7c,
	0x98, 0x20, 0x6d, 0xc2, 0x84, 0xd8, 0x9d, 0x90, 0xb2, 0x26, 0x92, 0xee, 0x01, 0x1c, 0xfb, 0x28,
	0x09, 0x82, 0x2f, 0x02, 0x8d, 0x19, 0x47, 0x93, 0xf5, 0x9a, 0xd6, 0x5f, 0xcd, 0x69, 0xfd, 0x2b,
	0x30, 0x4e, 0xd9, 0x72, 0xbd, 0x8f, 0xa7, 0xdc, 0xfb, 0xb0, 0x9c, 0x2f, 0x6e, 0x58, 0xed, 0x1f,
	0xb7, 0xb0, 0x3f, 0x0b, 0xc7, 0x77, 0x02, 0xb9, 0x6e, 0x22, 0x9b, 0xc4, 0x4f, 0xa5, 0x75, 0xb9,
	0x1d, 0x43, 0xad, 0x60, 0xc7, 0xe0, 0xfe, 0x69, 0x0c, 0x69, 0x99, 0x2b, 0xfe, 0x49, 0x5b, 0x3b,
	0x5a, 0xe1, 0x6f, 0xc2, 0x12, 0xee, 0x8d, 0xd8, 0x1e, 0x48, 0x67, 0x69, 0x73, 0x22, 0x54, 0x72,
	0x13, 0xa1, 0x0b, 0x27, 0xae, 0xf9, 0x51, 0xa7, 0x1b, 0x88, 0x1f, 0x31, 0x97, 0xc7, 0xe9, 0xb4,
	0x9a, 0x55, 0x6f, 0x07, 0xc6, 0xb6, 0xfd, 0x34, 0xe5, 0xd5, 0xc5, 0x6f, 0xf7, 0xdf, 0xae, 0x40,
	0xb3, 0xb0, 0xb8, 0x61, 0x9d, 0xf4, 0x16, 0xcc, 0x30, 0xca, 0xb0, 0xed, 0x47, 0x99, 0x66, 0xcf,
	0x2c, 0x50, 0xae, 0x4c, 0x3a, 0x4b, 0x25, 0xab, 0x8d, 0xa0, 0x92, 0xb9, 0x7f, 0x0e, 0x96, 0x35,
	0x11, 0x13, 0xc7, 0x07, 0xa3, 0xf4, 0x86, 0xbe, 0xd9, 0xab, 0x96, 0x6f, 0xf6, 0x9e, 0x93, 0x41,
	0x5a, 0xc5, 0x96, 0x1b, 0xdd, 0x59, 0x93, 0x1f, 0x58, 0x8e, 0x72, 0x5f, 0x82, 0x45, 0xbb, 0x02,
	0xfa, 0x03, 0xdd, 0x2b, 0x86, 0x79, 0xf1, 0x8a, 0xfb, 0x31, 0x2c, 0xe1, 0xca, 0x73, 0x94, 0xea,
	0x96, 0x6c, 0x3a, 0xdd, 0xcb, 0x4c, 0x8a, 0x19, 0x79, 0x0d, 0x2a, 0xf9, 0x75, 0x58, 0x91, 0x1a,
	0xde, 0xc8, 0xb2, 0xc4, 0x0d, 0x34, 0x5d, 0x73, 0x54, 0x91, 0x60, 0x0e, 0x63, 0x75, 0x94, 0x61,
	0x7c, 0x0b, 0x8e, 0xcb, 0x62, 0x24, 0x4f, 0x8c, 0x52, 0xbf, 0x08, 0x8e, 0x15, 0xfd, 0xf8, 0xac,
	0x58, 0xd4, 0x5d, 0xe2, 0x7a, 0x32, 0x5f, 0x16, 0xa5, 0xc3, 0xba, 0x65, 0x84, 0xde, 0x49, 0x83,
	0x84, 0xc1, 0x53, 0xad, 0xea, 0xfd, 0xd4, 0x30, 0xbf, 0xc8, 0xb4, 0xfb, 0x3e, 0x9c, 0x94, 0x55,
	0x4f, 0xd7, 0x0f, 0x49, 0xe9, 0xd9, 0xec, 0x68, 0xc2, 0xe0, 0x40, 0x69, 0x46, 0x5c, 0x18, 0x28,
	0x88, 0xfb, 0x93, 0x35, 0x18, 0xe7, 0x2b, 0xf7, 0xa0, 0x96, 0x9e, 0xa7, 0xcd, 0x62, 0x6e, 0x81,
	0xb5, 0xa0, 0x22, 0x0f, 0x4d, 0x41, 0x93, 0x69, 0x91, 0x47, 0x4e, 0x51, 0xb3, 0xa0, 0xce, 0x65,
	0x58, 0x50, 0x10, 0x52, 0x32, 0xae, 0xf0, 0xed, 0x59, 0x1e, 0x61, 0xe6, 0xaa, 0xe9, 0xda, 0x16,
	0xd4, 0xa4, 0xbb, 0x16, 0xf8, 0xe2, 0xbc, 0xcf, 0x82, 0x4a, 0x0b, 0xd5, 0x64, 0xb1, 0x85, 0xea,
	0x1c, 0xcc, 0xdc, 0xea, 0x05, 0x11, 0x29, 0x6b, 0x4c, 0x71, 0x6a, 0xa0, 0x6e, 0x6c, 0x02, 0x9d,
	0x37, 0x60, 0x5a, 0x37, 0x7f, 0xf1, 0xf0, 0xeb, 0x05, 0x76, 0x31, 0x83, 0x8c, 0x31, 0x80, 0xa2,
	0xf8, 0x7a, 0x3f, 0x1c, 0x89, 0x77, 0xdf, 0x85, 0x53, 0xea, 0x27, 0x14, 0x27, 0xc9, 0xc1, 0x95,
	0x24, 0xee, 0x8d, 0xf2, 0xef, 0x37, 0xe1, 0xa4, 0x6a, 0x3e, 0xfb, 0xe9, 0xa9, 0xa9, 0x07, 0xee,
	0x4d, 0x38, 0x5e, 0x9c, 0x35, 0x9b, 0x54, 0xe6, 0xdc, 0xae, 0x8c, 0x32, 0xb7, 0xdf, 0x81, 0x93,
	0x64, 0x5a, 0xd8, 0xf0, 0xa3, 0x76, 0xd0, 0xb5, 0x17, 0xbd, 0x41, 0xad, 0xfc, 0x0a, 0x9c, 0xd6,
	0x7f, 0xcd, 0x6b, 0x9d, 0x83, 0x7e, 0xbe, 0x09, 0x4d, 0x7e, 0x55, 0x10, 0x19, 0x39, 0xce, 0x42,
	0xe5, 0xc4, 0x69, 0x88, 0xb8, 0x25, 0x62, 0x21, 0x6e, 0x29, 0xe5, 0x1e, 0x83, 0x65, 0xd6, 0x9e,
	0x5c, 0x66, 0xee, 0x0f, 0x93, 0xcd, 0x95, 0x80, 0x03, 0xb3, 0xd6, 0x27, 0x59, 0xd5, 0x9a, 0x64,
	0xaa, 0xd8, 0x9a, 0x51, 0xec, 0xfb, 0x30, 0x6b, 0x16, 0xcb, 0x36, 0x2c, 0xf4, 0xa5, 0x8d, 0x01,
	0x6d, 0x58, 0x78, 0xbd, 0x34, 0xb4, 0xc9, 0x64, 0x28, 0x6f, 0x46, 0xee, 0x09, 0x77, 0x0d, 0x4e,
	0x94, 0xfc, 0xcb, 0x58, 0xe1, 0x39, 0x59, 0x61, 0xdd, 0xfc, 0xc4, 0x29, 0x44, 0xed, 0xff, 0xac,
	0xce, 0xa7, 0x3b, 0x41, 0x76, 0xc3, 0x8f, 0xfc, 0xbd, 0xa7, 0xa3, 0xc6, 0xba, 0x30, 0xbd, 0x13,
	0x64, 0x6b, 0x29, 0xcf, 0x92, 0xeb, 0x2e, 0x06, 0xcc, 0x3d, 0x01, 0x4d, 0xe2, 0xcd, 0xad, 0xc0,
	0xdf, 0xeb, 0x07, 0xdb, 0x7e, 0x14, 0x08, 0x9f, 0xc5, 0xee, 0x3f, 0xae, 0xc0, 0xb4, 0x8e, 0x64,
	0x05, 0x76, 0xf1, 0x4b, 0x97, 0xb8, 0x0a, 0xa2, 0xf0, 0xda, 0xf8, 0x69, 0x10, 0x4b, 0x62, 0xd7,
	0x6c, 0x89, 0xad, 0xf0, 0x5a, 0x84, 0x44, 0x0d, 0xe2, 0xbc, 0x08, 0xe3, 0x07, 0x87, 0x28, 0xc2,
	0xea, 0x5c, 0xea, 0x50, 0xc5, 0xf8, 0x9c, 0x62, 0xa2, 0x8c, 0x13, 0xb0, 0xac, 0x32, 0xf4, 0x2e,
	0x8a, 0x92, 0x6c, 0x9c, 0xc2, 0xbd, 0x2a, 0x88, 0x7b, 0x17, 0x56, 0x0a, 0xda, 0xcd, 0x03, 0x8a,
	0xab, 0x88, 0x01, 0x75, 0x8f, 0x12, 0xce, 0x0b, 0x30, 0x41, 0x0d, 0x51, 0xfe, 0x19, 0xf5, 0xff,
	0x3d, 0x81, 0xc5, 0xe7, 0x3f, 0x3b, 0xfb, 0xf1, 0x43, 0x0e, 0xd7, 0x34, 0x98, 0x61, 0xbd, 0xa7,
	0xc7, 0x28, 0xa9, 0x96, 0xc7, 0x28, 0x71, 0x60, 0xac, 0xe7, 0xef, 0x05, 0xdc, 0x72, 0x81, 0xdf,
	0xaa, 0xce, 0x63, 0x5a, 0x9d, 0xdd, 0x7f, 0x17, 0x7d, 0x43, 0x99, 0x55, 0xe1, 0x21, 0x88, 0xbf,
	0xaf, 0x15, 0xc1, 0xc1, 0x88, 0x33, 0xbf, 0x4b, 0x83, 0x51, 0xe7, 0x83, 0x21, 0x21, 0xee, 0x0d,
	0x58, 0xfe, 0x30, 0xca, 0x48, 0x33, 0xd8, 0x8a, 0x77, 0x77, 0x47, 0xd2, 0xd8, 0x9b, 0x30, 0x11,
	0xa6, 0xf8, 0x9b, 0xd8, 0x15, 0xf2, 0xa4, 0xfb, 0x6d, 0x58, 0xb4, 0xb3, 0x1b, 0xa6, 0xee, 0x5c,
	0x84, 0xf9, 0x2e, 0xa3, 0xe4, 0xc2, 0x14, 0xeb, 0x49, 0x96, 0xa3, 0x1c, 0xdc, 0xfd, 0x0c, 0x66,
	0xa9, 0x47, 0x47, 0x3c, 0x72, 0x68, 0xc2, 0xc4, 0x66, 0x8a, 0x7a, 0xa8, 0xa8, 0x28, 0x4f, 0x8e,
	0x70, 0xc8, 0xf0, 0xbb, 0x55, 0x00, 0x2a, 0x6c, 0x90, 0xfd, 0x78, 0x90, 0xe1, 0x92, 0xfd, 0x13,
	0x69, 0x46, 0xa5, 0x28, 0x3f, 0x11, 0xc7, 0x72, 0x13, 0xf1, 0x79, 0xcb, 0xa8, 0x34, 0xc3, 0x27,
	0x5a, 0xde, 0xac, 0xd4, 0xce, 0x99, 0x95, 0xb4, 0x68, 0x85, 0x17, 0x61, 0x3e, 0xb5, 0x4f, 0x9d,
	0xc8, 0xba, 0x94, 0x83, 0x0b, 0xaf, 0x9f, 0x77, 0x64, 0x28, 0x43, 0x7e, 0x3e, 0x65, 0x41, 0xd9,
	0x44, 0xec, 0xa0, 0x85, 0x2d, 0x45, 0xfd, 0x64, 0x4a, 0xd6, 0x8d, 0xdb, 0xe5, 0x04, 0xd6, 0xfd,
	0xab, 0x55, 0x8c, 0x20, 0x2b, 0x31, 0xce, 0x25, 0x98, 0x4c, 0x85, 0x85, 0xa2, 0xc2, 0x6d, 0xb2,
	0xe6, 0x40, 0x7a, 0x92, 0xc0, 0x79, 0x1e, 0xea, 0x6d, 0xa6, 0x76, 0xca, 0x03, 0x4f, 0xa2, 0x94,
	0xd6, 0x5b, 0xc2, 0x3a, 0xd7, 0xc0, 0x69, 0xc7, 0x07, 0x07, 0x61, 0x9a, 0x86, 0x71, 0x24, 0xed,
	0x1f, 0x35, 0x7e, 0x34, 0xce, 0xff, 0xb1, 0x09, 0xbc, 0x82, 0x7f, 0x9c, 0x77, 0x61, 0xfa, 0xb3,
	0x38, 0x14, 0x4e, 0x3e, 0x53, 0x69, 0x7d, 0x64, 0xda, 0x00, 0x9f, 0xc0, 0x84, 0xa2, 0x78, 0xb7,
	0x3a, 0xad, 0xf3, 0x9c, 0x70, 0xd6, 0x5d, 0x2f, 0x32, 0xb8, 0x71, 0x87, 0xdd, 0x3f, 0x51, 0x81,
	0x63, 0x25, 0x15, 0x32, 0x66, 0x7c, 0xa5, 0x7c, 0xc6, 0xb3, 0xf1, 0x96, 0xff, 0x8a, 0xab, 0x19,
	0x0a, 0x52, 0x30, 0x86, 0xb5, 0xa2, 0x31, 0x74, 0xff, 0x51, 0x55, 0x4c, 0x21, 0x79, 0x32, 0xa2,
	0x9b, 0xac, 0x2b, 0x79, 0x93, 0xb5, 0xc6, 0xad, 0xd5, 0x1c, 0xb7, 0xbe, 0x28, 0x4d, 0xd6, 0x35,
	0x63, 0x59, 0x28, 0x30, 0x5c, 0xa3, 0xf5, 0x17, 0x7b, 0x4d, 0x3b, 0x87, 0xd5, 0x41, 0x85, 0x3c,
	0x5b, 0x2f, 0xe1, 0x59, 0x73, 0xea, 0x8d, 0xe7, 0xa6, 0xde, 0x59, 0x98, 0xa2, 0x14, 0xd5, 0x9c,
	0xb4, 0x72, 0x1d, 0xc4, 0x7a, 0x8c, 0x27, 0x4d, 0x3b, 0xb8, 0x05, 0xe5, 0x71, 0x19, 0x7b, 0x71,
	0x92, 0xb1, 0x9e, 0x6f, 0xc8, 0xb8, 0x8c, 0x1c, 0x82, 0xee, 0x4f, 0x89, 0xd7, 0x07, 0xb9, 0x3f,
	0xe5, 0x14, 0x4f, 0xf9, 0xa6, 0x65, 0x0b, 0xa6, 0xc9, 0x48, 0x6a, 0x6b, 0x09, 0xd2, 0x8b, 0xbd,
	0x5c, 0x5e, 0xf0, 0xc8, 0xe3, 0x3d, 0x38, 0x4e, 0x71, 0x9c, 0x88, 0x7e, 0xf5, 0xc6, 0x61, 0xfa,
	0x79, 0x57, 0x8b, 0x02, 0x85, 0xc6, 0x77, 0xa1, 0x31, 0x29, 0xe1, 0xc7, 0x2d, 0xee, 0x2f, 0xc3,
	0x71, 0x0a, 0x4f, 0xbd, 0xd7, 0x0f, 0x3e, 0x4a, 0xe2, 0x03, 0xe3, 0xef, 0x02, 0xef, 0x5e, 0xee,
	0x8b, 0xc2, 0xfe, 0x60, 0xcc, 0x22, 0x29, 0x16, 0x2b, 0x4a, 0x2c, 0xba, 0x57, 0x85, 0xdd, 0x56,
	0x90, 0x0e, 0x30, 0xc8, 0x0e, 0x3c, 0x2c, 0xfa, 0xfb, 0x63, 0xb0, 0x5c, 0x38, 0x71, 0xd9, 0x52,
	0xc1, 0xb9, 0x4d, 0x66, 0xa9, 0x00, 0xd6, 0xca, 0x5c, 0xcd, 0xad, 0xcc, 0x16, 0x43, 0xd5, 0xf2,
	0x0c, 0x75, 0x01, 0xe6, 0x78, 0x76, 0xfc, 0xe4, 0x52, 0x88, 0x77, 0x1b, 0xec, 0xbc, 0x62, 0x1d,
	0xf4, 0x34, 0xf3, 0xa2, 0x66, 0xf0, 0xe4, 0x19, 0x1f, 0x6d, 0xf2, 0x94, 0x09, 0x7c, 0x7d, 0xc6,
	0x4f, 0x5a, 0x33, 0x5e, 0x3f, 0x5f, 0x6a, 0x58, 0xe7, 0x4b, 0xe7, 0x61, 0xb6, 0x6d, 0xee, 0x8a,
	0x81, 0xa6, 0x8c, 0x09, 0x65, 0x7b, 0xed, 0xb6, 0xb5, 0xa5, 0xee, 0xf0, 0x90, 0xb2, 0x79, 0x84,
	0xc8, 0x55, 0xb3, 0x02, 0x4c, 0xab, 0x5c, 0x35, 0x2b, 0xc0, 0x19, 0x80, 0xfd, 0xc0, 0xef, 0x6c,
	0x1e, 0xec, 0xdd, 0x49, 0xba, 0xfc, 0xd0, 0x40, 0x83, 0x68, 0x23, 0x84, 0x55, 0x9b, 0x35, 0x46,
	0x48, 0xd4, 0xdf, 0x9a, 0xf2, 0x73, 0x45, 0x53, 0xde, 0xdd, 0x17, 0xc6, 0x45, 0x1a, 0x12, 0xc3,
	0x92, 0x39, 0x4c, 0x83, 0x6b, 0xc2, 0x84, 0xcf, 0xe8, 0xa5, 0x29, 0x53, 0x24, 0x49, 0x69, 0x53,
	0x76, 0x4c, 0xf6, 0xed, 0x7e, 0xb7, 0x02, 0x2b, 0x05, 0x45, 0x8d, 0xa2, 0x2a, 0x8a, 0xec, 0xaa,
	0x2a, 0x3b, 0xa7, 0x05, 0xce, 0x3e, 0xe6, 0xc6, 0x6b, 0xab, 0x1f, 0xb4, 0x15, 0x60, 0x58, 0x87,
	0xa4, 0x64, 0xcf, 0x0f, 0x3a, 0x1b, 0x9a, 0xf2, 0x68, 0x41, 0xdd, 0x87, 0xb0, 0x90, 0xdf, 0x1f,
	0x8d, 0xb0, 0x25, 0x39, 0xc8, 0xed, 0x91, 0x0e, 0x8c, 0x3d, 0x52, 0x5a, 0xb0, 0x47, 0xd2, 0x61,
	0xee, 0x55, 0x98, 0xd3, 0x0b, 0xa6, 0x68, 0xf8, 0x3c, 0x13, 0xed, 0x76, 0xc1, 0x92, 0xb1, 0x1b,
	0xc1, 0xf0, 0x37, 0xf7, 0x62, 0x4f, 0xa3, 0x73, 0x1f, 0xc2, 0x71, 0x32, 0xee, 0x1b, 0xdb, 0x96,
	0xa7, 0xd4, 0x92, 0x13, 0x30, 0x19, 0xa6, 0xc6, 0x49, 0x82, 0x4c, 0xbb, 0xb7, 0xc4, 0x39, 0x89,
	0x59, 0xf0, 0xe3, 0xb7, 0xe4, 0x36, 0xac, 0x28, 0x69, 0x61, 0xb3, 0x66, 0x98, 0x33, 0xd1, 0x87,
	0x86, 0x19, 0x4d, 0x4e, 0x7b, 0xe2, 0x4d, 0x99, 0x76, 0x5f, 0x81, 0xa5, 0x5c, 0xae, 0x3c, 0x74,
	0x9c, 0x60, 0x67, 0x1e, 0x3a, 0x8e, 0x27, 0xdd, 0x1f, 0xaf, 0xc0, 0x31, 0x43, 0x64, 0x1f, 0x6d,
	0xbf, 0x95, 0x94, 0x1b, 0xb9, 0x13, 0xcd, 0xc8, 0xdd, 0x2e, 0x37, 0x72, 0x13, 0xca, 0x7d, 0x59,
	0x58, 0xd9, 0xed, 0xbd, 0x56, 0x99, 0xb1, 0xf9, 0x4d, 0x3c, 0xd8, 0xd6, 0x56, 0xb7, 0xd1, 0x2a,
	0xed, 0xfe, 0xed, 0x3a, 0xcc, 0x73, 0xa5, 0x75, 0x3f, 0x7e, 0xc8, 0x35, 0xdb, 0x11, 0x58, 0x67,
	0xe0, 0x16, 0xc1, 0xdc, 0xb7, 0xd7, 0x86, 0xec, 0xdb, 0x7f, 0xa0, 0xb6, 0x0b, 0xb9, 0x73, 0xde,
	0x46, 0xc1, 0x39, 0x6f, 0xfe, 0xcc, 0x18, 0x8a, 0xce, 0x8c, 0x4d, 0xf3, 0xc4, 0x54, 0xce, 0x3c,
	0x71, 0x11, 0xe6, 0x0f, 0xa4, 0xb5, 0x95, 0xaf, 0x10, 0xb4, 0x8a, 0xe4, 0xe0, 0x6c, 0x9d, 0x38,
	0xe0, 0x66, 0x4d, 0x56, 0xde, 0x0c, 0x5d, 0x43, 0xd0, 0x40, 0xa8, 0x29, 0x48, 0x53, 0xec, 0x2c,
	0x5d, 0x71, 0x90, 0x00, 0x25, 0x0d, 0xd0, 0x1c, 0x32, 0x47, 0x5b, 0x6a, 0x05, 0x61, 0x82, 0x79,
	0x37, 0xf0, 0x23, 0x1e, 0x98, 0x1c, 0xbf, 0x8d, 0x0d, 0xd0, 0xc2, 0xb0, 0x0d, 0x50, 0xf1, 0xce,
	0xc6, 0x39, 0xfa, 0xce, 0xc6, 0x5d, 0xc3, 0xc8, 0x49, 0x3a, 0xab, 0xb3, 0x89, 0x71, 0x49, 0xed,
	0xe3, 0x48, 0xe8, 0x08, 0xad, 0x5d, 0xf1, 0xb5, 0xda, 0xcb, 0x7d, 0x00, 0xa7, 0x8c, 0x2c, 0xd6,
	0x0f, 0x69, 0x49, 0x1e, 0x51, 0xe8, 0xb8, 0x19, 0x9c, 0x28, 0xf9, 0x9f, 0x9b, 0x6c, 0x0d, 0x85,
	0xb5, 0xa4, 0x36, 0x1a, 0x91, 0xf3, 0x1c, 0x49, 0x31, 0xed, 0x64, 0x44, 0x5e, 0x04, 0x90, 0x08,
	0xf7, 0x5d, 0x8c, 0xc5, 0x79, 0xe3, 0x70, 0xa7, 0xbf, 0xab, 0x4c, 0x7c, 0xac, 0xca, 0x23, 0xcc,
	0xf3, 0x5b, 0x18, 0xae, 0x22, 0xf7, 0xaf, 0x90, 0xd8, 0x98, 0xd4, 0xac, 0x9b, 0x65, 0x12, 0x5b,
	0xd2, 0xb9, 0xa1, 0x88, 0x3b, 0x6c, 0x8c, 0xf8, 0xa8, 0xb2, 0x52, 0x67, 0x9d, 0xea, 0x10, 0xd6,
	0x51, 0xa1, 0x89, 0xad, 0xa2, 0x7a, 0xdd, 0x43, 0xf7, 0x2d, 0x58, 0xbe, 0x12, 0xa6, 0x69, 0xdc,
	0x7d, 0x60, 0xe9, 0xe3, 0xc3, 0x3a, 0x64, 0x19, 0x16, 0xed, 0x1f, 0x59, 0x7e, 0x0f, 0xe0, 0xcc,
	0x8e, 0x18, 0x59, 0x92, 0xcb, 0x82, 0xff, 0x46, 0x6d, 0xda, 0xeb, 0x46, 0xd3, 0x06, 0xb3, 0xb7,
	0x6a, 0x63, 0x06, 0xa7, 0x4a, 0xcb, 0x1d, 0x45, 0x71, 0x7a, 0xbc, 0x52, 0xf7, 0xe0, 0xcc, 0xd5,
	0x27, 0x6b, 0xed, 0x68, 0xb6, 0x3d, 0xf7, 0xcf, 0x57, 0xb4, 0x19, 0xf7, 0x38, 0xed, 0xfb, 0x1a,
	0xcc, 0x2a, 0x51, 0xa0, 0x5d, 0x83, 0x2b, 0x6f, 0xa5, 0x45, 0xef, 0x1e, 0xc0, 0xdc, 0xd5, 0xf0,
	0x41, 0xb0, 0x1e, 0xf8, 0x23, 0x37, 0xce, 0x85, 0xe9, 0x24, 0x68, 0x07, 0xe1, 0x03, 0x43, 0x49,
	0x32, 0x60, 0x6c, 0x41, 0xf6, 0x0f, 0xa4, 0x46, 0x5a, 0xf3, 0x78, 0xca, 0x9d, 0x83, 0x19, 0x55,
	0x1c, 0xe3, 0xac, 0x5b, 0xb0, 0xf0, 0xf5, 0x7e, 0x98, 0x1d, 0x89, 0x4b, 0x2d, 0xed, 0xc6, 0xd8,
	0xd4, 0xb8, 0x0b, 0x30, 0xa7, 0x67, 0xc8, 0xca, 0x08, 0x51, 0xb3, 0x5c, 0xdb, 0x0b, 0xa2, 0xec,
	0x08, 0x6a, 0x20, 0x8f, 0x54, 0xa0, 0xa9, 0x81, 0x0a, 0xc2, 0xda, 0xd7, 0xc6, 0xb3, 0x20, 0x71,
	0x9d, 0x84, 0x52, 0xee, 0x87, 0x30, 0xa3, 0x8a, 0x7a, 0x7c, 0xc5, 0xef, 0x10, 0x6f, 0xa5, 0x60,
	0x36, 0xdb, 0x49, 0x7c, 0x2f, 0xcc, 0x3c, 0x3f, 0x1b, 0xb9, 0x77, 0x4e, 0x41, 0xc3, 0x67, 0x7f,
	0x6a, 0x55, 0x57, 0x00, 0x6e, 0xe3, 0xe0, 0x59, 0xf2, 0xd1, 0xd1, 0x20, 0xee, 0x43, 0xbc, 0x91,
	0x92, 0x2b, 0x7a, 0x14, 0x6e, 0x7c, 0xb2, 0x82, 0xef, 0xc2, 0x71, 0x4b, 0xf4, 0x1c, 0x41, 0xcb,
	0x3c, 0x41, 0x5a, 0xa6, 0xce, 0x11, 0x22, 0xed, 0x1e, 0x87, 0x63, 0x45, 0x19, 0x53, 0xa0, 0xec,
	0xa6, 0x9c, 0x7f, 0xe2, 0xc2, 0xdc, 0xa8, 0xa2, 0xf2, 0x1d, 0xbc, 0x52, 0x6a, 0xff, 0x3b, 0x52,
	0x54, 0xbf, 0x26, 0xfe, 0x2a, 0x4c, 0x39, 0x5a, 0xa1, 0xee, 0x26, 0x2a, 0xac, 0x26, 0xc6, 0x58,
	0x3c, 0x8d, 0xf3, 0xce, 0xb2, 0xc5, 0x13, 0x97, 0xa2, 0xff, 0xb4, 0x02, 0xa7, 0xb5, 0x73, 0x5d,
	0x54, 0xea, 0x72, 0x67, 0x6e, 0x65, 0xb7, 0x02, 0x06, 0x4d, 0x31, 0xe7, 0x2b, 0x00, 0x11, 0x66,
	0xa4, 0x39, 0x50, 0x39, 0xd9, 0x2a, 0x2e, 0x8b, 0xa2, 0xa2, 0x2a, 0x72, 0x0c, 0x4b, 0x24, 0x29,
	0x59, 0x76, 0x64, 0x84, 0x6d, 0x78, 0x36, 0xd8, 0x3d, 0xcd, 0xcf, 0xec, 0x0a, 0xea, 0xcf, 0xc6,
	0x6e, 0x0d, 0xbe, 0x74, 0x35, 0xc8, 0x72, 0xd6, 0x94, 0xa3, 0x0c, 0xe1, 0x0f, 0xc1, 0xe9, 0xf2,
	0x2c, 0x58, 0xb7, 0xdb, 0xe6, 0xe2, 0xca, 0xe8, 0xe6, 0x62, 0xf7, 0xaf, 0x56, 0x50, 0xb9, 0xd0,
	0xa7, 0x7a, 0xfa, 0xe4, 0x97, 0x8e, 0xcd, 0x26, 0xd5, 0x8a, 0x6c, 0x12, 0x29, 0xd7, 0xc1, 0x69,
	0x07, 0x21, 0x92, 0xee, 0x2f, 0x57, 0xf0, 0x12, 0xad, 0x55, 0x9f, 0x67, 0x7d, 0xcd, 0xf7, 0x82,
	0x71, 0xcd, 0xb7, 0x58, 0xf2, 0x91, 0xc9, 0xf1, 0x5f, 0xd5, 0x61, 0xb1, 0x00, 0x6b, 0xed, 0xc8,
	0x2b, 0xb9, 0x1d, 0xb9, 0x03, 0x63, 0x09, 0xd3, 0xce, 0xa9, 0x6e, 0xf8, 0xed, 0x5c, 0xb2, 0x6c,
	0xd5, 0x8b, 0x46, 0xb9, 0xf9, 0x6b, 0xd6, 0x9f, 0x89, 0x57, 0x41, 0xfc, 0x61, 0xb8, 0x48, 0x1f,
	0xc9, 0x4e, 0x2d, 0x36, 0x03, 0xe3, 0xda, 0x66, 0xc0, 0x85, 0x69, 0x11, 0x4f, 0x4d, 0xdb, 0x68,
	0x19, 0xb0, 0x81, 0x26, 0xba, 0xf3, 0x30, 0xdb, 0xf3, 0x93, 0x20, 0xca, 0xf8, 0x13, 0x0a, 0xb1,
	0xb3, 0xb2, 0xa0, 0x96, 0x70, 0x05, 0x5b, 0xb8, 0xea, 0x6c, 0x31, 0x65, 0xb0, 0x85, 0x1e, 0xbc,
	0x7d, 0xda, 0x0c, 0xde, 0x2e, 0x6c, 0xb7, 0x33, 0xe6, 0x91, 0x96, 0x66, 0x98, 0x9b, 0xcd, 0x19,
	0xe6, 0x74, 0x93, 0xe2, 0xdc, 0x50, 0x93, 0xe2, 0xfc, 0xe8, 0x26, 0xc5, 0x85, 0xd1, 0x4d, 0x8a,
	0x4e, 0xa1, 0x49, 0x11, 0xed, 0x5f, 0xf2, 0x92, 0x0b, 0x6b, 0xee, 0xa2, 0xb0, 0x7f, 0xe9, 0x50,
	0x6b, 0x93, 0xb3, 0x94, 0xdb, 0xc5, 0x9f, 0xa3, 0x78, 0x78, 0x5b, 0xf1, 0x1e, 0x67, 0x99, 0x65,
	0x7a, 0xde, 0x69, 0x00, 0x9d, 0x57, 0x60, 0x51, 0x1f, 0x21, 0xd1, 0x8a, 0x15, 0xcc, 0xae, 0x08,
	0xe5, 0xfe, 0xf5, 0x0a, 0xac, 0xd8, 0x4a, 0x1b, 0xbf, 0x68, 0x31, 0x6c, 0xf1, 0x5b, 0x81, 0x71,
	0x26, 0xb7, 0xd5, 0xcb, 0x4f, 0x4a, 0x19, 0x5a, 0x68, 0x6d, 0xd4, 0xf3, 0xa6, 0x31, 0xfb, 0xbc,
	0xc9, 0xfd, 0xad, 0x0a, 0x1c, 0xe7, 0xc6, 0xa2, 0x3d, 0x8c, 0x84, 0xaf, 0x2b, 0x90, 0xce, 0x2a,
	0x2c, 0xb5, 0xfb, 0x07, 0xfd, 0xae, 0x9f, 0x85, 0x0f, 0xb4, 0xaa, 0xf3, 0xb7, 0x84, 0x85, 0x38,
	0xe7, 0x75, 0x58, 0xee, 0x47, 0xed, 0xb8, 0xdb, 0x0d, 0xda, 0x59, 0xd0, 0xd9, 0xb0, 0x0f, 0xbb,
	0x8a, 0x91, 0x6c, 0xe5, 0x60, 0x9d, 0xbc, 0x41, 0x28, 0xed, 0xe0, 0xcb, 0x06, 0xbb, 0xff, 0xb4,
	0x06, 0x27, 0x0b, 0x6b, 0xec, 0x05, 0xbd, 0x38, 0xc9, 0x46, 0xee, 0xd0, 0x2b, 0x46, 0x87, 0x5e,
	0xd1, 0xe7, 0x4a, 0xcd, 0x9c, 0x2b, 0x7c, 0x29, 0xd5, 0x6e, 0x54, 0xc8, 0xb4, 0x3e, 0xf7, 0xea,
	0xe6, 0xdc, 0x43, 0xd1, 0xca, 0x58, 0x61, 0xb3, 0x23, 0x1e, 0x78, 0x88, 0xb4, 0x21, 0x15, 0x26,
	0x06, 0x18, 0xee, 0x27, 0x8b, 0x67, 0x99, 0x36, 0x1f, 0x1a, 0x65, 0x26, 0xf6, 0x81, 0x12, 0xc3,
	0xe4, 0x8a, 0xa9, 0xdc, 0x29, 0xe4, 0x0a, 0x8c, 0x13, 0x35, 0x8a, 0x8d, 0x9a, 0xc7, 0x53, 0x96,
	0xf9, 0x69, 0x26, 0x67, 0x7e, 0x72, 0x61, 0x3a, 0x8d, 0xfb, 0x49, 0x3b, 0xb8, 0x43, 0x2c, 0x4b,
	0x32, 0xc4, 0x80, 0xb1, 0x3c, 0x52, 0xf4, 0x68, 0x80, 0x79, 0xcc, 0x51, 0x1e, 0x0a, 0xe2, 0x7e,
	0x08, 0xcf, 0xc9, 0x95, 0xac, 0x80, 0x27, 0x47, 0x5d, 0xfe, 0xff, 0x0c, 0xb8, 0x32, 0x9b, 0x9d,
	0xfe, 0x6e, 0x8e, 0x57, 0x46, 0x56, 0xb7, 0xd3, 0xcc, 0x4f, 0x32, 0x2d, 0x6e, 0x98, 0x02, 0x94,
	0xc7, 0x81, 0x65, 0xd3, 0xea, 0xec, 0xc0, 0xe2, 0x47, 0x54, 0xb9, 0x1f, 0xa7, 0x70, 0xe7, 0x35,
	0x63, 0x59, 0xfe, 0x52, 0xab, 0xac, 0x16, 0xc6, 0x33, 0x9c, 0xff, 0xba, 0x06, 0x67, 0x06, 0x13,
	0x0e, 0x5d, 0xac, 0x07, 0xa9, 0x95, 0xf9, 0xb5, 0xae, 0x36, 0xc2, 0x5a, 0x37, 0x36, 0x68, 0xad,
	0xab, 0x97, 0xae, 0x75, 0xe3, 0xc5, 0x6b, 0xdd, 0x44, 0xe9, 0x5a, 0x37, 0x39, 0x70, 0xad, 0x6b,
	0x0c, 0x9d, 0x85, 0x50, 0x36, 0x0b, 0x1f, 0x6b, 0x96, 0xb9, 0x30, 0x4d, 0xbd, 0x42, 0x7b, 0x34,
	0x3e, 0xcf, 0x0c, 0x18, 0xab, 0x9f, 0x34, 0xdb, 0xce, 0x92, 0x5e, 0x23, 0xef, 0x06, 0xbc, 0x87,
	0xa6, 0xba, 0x9d, 0xa0, 0x7b, 0x8f, 0x4d, 0x98, 0x5b, 0xf7, 0x8e, 0x66, 0x25, 0xba, 0x86, 0xdb,
	0xa6, 0xfc, 0xdf, 0x8c, 0x63, 0x2f, 0xc3, 0x38, 0xd9, 0x13, 0x07, 0x6e, 0x76, 0x39, 0x0d, 0x57,
	0xe2, 0x4b, 0x64, 0xf5, 0x68, 0x95, 0xd9, 0x41, 0x25, 0xbe, 0x4c, 0xdc, 0x77, 0x0f, 0x9d, 0x55,
	0xab, 0x46, 0x27, 0x5a, 0xe5, 0x92, 0x43, 0xd4, 0xeb, 0x43, 0x78, 0xce, 0x23, 0x7b, 0xc6, 0x13,
	0xd5, 0xed, 0x39, 0xf8, 0xf2, 0xe0, 0x6c, 0xd8, 0x46, 0xe6, 0x91, 0x58, 0xf8, 0xd7, 0x03, 0x3f,
	0xd2, 0xf7, 0x39, 0xa3, 0x58, 0x29, 0xda, 0xe4, 0x4d, 0x84, 0xe9, 0x9d, 0xe2, 0xa6, 0x88, 0x84,
	0x30, 0x7c, 0x12, 0xa4, 0xfd, 0x6e, 0x86, 0x78, 0xbe, 0xe5, 0x56, 0x10, 0x77, 0x07, 0x8e, 0xe1,
	0x15, 0x2e, 0xbe, 0xdb, 0xd4, 0xef, 0x84, 0x8d, 0x70, 0xf6, 0x59, 0x72, 0x2f, 0xac, 0xcd, 0xaf,
	0x99, 0x19, 0x99, 0x8e, 0x22, 0xcb, 0x8e, 0x72, 0x3b, 0xec, 0x17, 0x2b, 0xb0, 0x88, 0x37, 0x41,
	0x59, 0x3b, 0x94, 0x6b, 0x88, 0x27, 0xb6, 0xeb, 0x34, 0x61, 0xa2, 0x1b, 0xef, 0x49, 0x3f, 0x47,
	0x75, 0x4f, 0x24, 0xe5, 0x3d, 0xbc, 0xb1, 0xa2, 0x7b, 0x78, 0x75, 0xfd, 0x42, 0xe0, 0x22, 0x2c,
	0x98, 0x55, 0x63, 0x83, 0xfc, 0x05, 0xcc, 0x7d, 0x1c, 0x46, 0xfb, 0x7d, 0x7f, 0xd0, 0xd5, 0x11,
	0x41, 0xf1, 0x94, 0xaf, 0x8e, 0xfc, 0xcd, 0x0a, 0xac, 0xf0, 0x40, 0xa0, 0x54, 0x82, 0xf4, 0x6b,
	0xea, 0xbc, 0x0b, 0x73, 0x9f, 0x99, 0x20, 0x5e, 0x99, 0xf9, 0x96, 0x45, 0xea, 0xd9, 0x84, 0xe8,
	0x22, 0x99, 0x25, 0x76, 0xda, 0x71, 0x42, 0x8b, 0x4f, 0xd5, 0xd3, 0x20, 0xce, 0x25, 0x74, 0xc8,
	0x22, 0x43, 0xa9, 0x09, 0x0d, 0x54, 0x00, 0x3c, 0x1d, 0x8b, 0x5e, 0x62, 0xa9, 0x44, 0x2b, 0xba,
	0xef, 0xeb, 0x45, 0xd1, 0x7d, 0x9d, 0x96, 0x41, 0x9b, 0x0f, 0xee, 0x7b, 0x56, 0x86, 0x89, 0xd5,
	0x82, 0x8f, 0xea, 0x20, 0xa7, 0x05, 0x0d, 0xcf, 0x0f, 0x53, 0x5d, 0x3b, 0x16, 0x6d, 0x96, 0x70,
	0x4f, 0x91, 0xe4, 0xa2, 0xfa, 0x51, 0x94, 0x7b, 0x33, 0xaa, 0xdf, 0x2e, 0x38, 0x56, 0x1b, 0xc8,
	0x04, 0xf8, 0x38, 0x2d, 0x28, 0x89, 0xc5, 0xee, 0xfe, 0xc3, 0x31, 0x58, 0x31, 0x7e, 0x5d, 0x4f,
	0x62, 0xbf, 0xd3, 0xf6, 0x1f, 0xbb, 0xab, 0x06, 0x44, 0xb0, 0xef, 0xc4, 0x64, 0x13, 0xa0, 0x7d,
	0xbd, 0x48, 0xb2, 0xae, 0x68, 0x93, 0xbf, 0x9b, 0xb5, 0x88, 0xa2, 0xd8, 0xe3, 0xe2, 0xa3, 0xc3,
	0xd4, 0x44, 0x43, 0x2f, 0x36, 0x3c, 0x74, 0xbd, 0x82, 0x30, 0x65, 0x9e, 0x52, 0xb7, 0xe3, 0xcc,
	0xef, 0x22, 0x11, 0xf7, 0xd9, 0x64, 0x81, 0x9d, 0x37, 0x61, 0x45, 0x03, 0x6d, 0xc4, 0x51, 0xda,
	0x3f, 0xe8, 0xe1, 0x05, 0x2d, 0xda, 0x4c, 0x97, 0x60, 0x9d, 0xf7, 0x60, 0x9e, 0xd7, 0x48, 0x8d,
	0xf3, 0x64, 0xc9, 0x38, 0xe7, 0x28, 0xb5, 0xb8, 0xee, 0x8d, 0xa2, 0xb8, 0xee, 0x8c, 0x7d, 0x7a,
	0x72, 0xca, 0x40, 0xc9, 0x94, 0x51, 0x24, 0x9a, 0x8b, 0xa9, 0x29, 0xc3, 0xc5, 0xd4, 0x59, 0x98,
	0x62, 0x5f, 0x1f, 0xfb, 0xed, 0xfb, 0xbd, 0x58, 0xac, 0xf2, 0x3a, 0x88, 0xb5, 0x9f, 0xd7, 0x4e,
	0xbc, 0x41, 0xe8, 0x76, 0xc9, 0xa3, 0x1a, 0x5b, 0xf4, 0x67, 0xbc, 0x12, 0x6c, 0x8e, 0x61, 0x67,
	0x0b, 0x18, 0xf6, 0x1f, 0xd4, 0xc8, 0xff, 0x0f, 0x55, 0x9c, 0x4f, 0x0f, 0x0f, 0x17, 0x08, 0x56,
	0xb3, 0x87, 0xe8, 0x5f, 0x9f, 0x71, 0x43, 0xca, 0x6f, 0x98, 0xe9, 0x20, 0x14, 0xb6, 0x71, 0x2a,
	0x08, 0xf8, 0x6b, 0x3e, 0x05, 0xd1, 0xda, 0x5c, 0x33, 0xda, 0xac, 0x38, 0x6e, 0xac, 0x8c, 0xe3,
	0xea, 0x83, 0x39, 0x6e, 0x7c, 0x28, 0xc7, 0x4d, 0x8c, 0xc2, 0x71, 0x93, 0x47, 0xe5, 0xb8, 0xc6,
	0x40, 0x8e, 0xb3, 0xc6, 0x12, 0x8e, 0x32, 0x96, 0x53, 0x03, 0xc7, 0xf2, 0x2c, 0x4c, 0x85, 0xe9,
	0x96, 0x9f, 0x66, 0xb7, 0xf7, 0x93, 0xf8, 0x21, 0x72, 0xc9, 0xa4, 0xa7, 0x83, 0xdc, 0x7f, 0x38,
	0x0e, 0xd3, 0x34, 0x8a, 0x47, 0x8c, 0xef, 0x7f, 0x0e, 0x66, 0xda, 0xfd, 0x64, 0xdb, 0x0e, 0xd4,
	0x6c, 0x02, 0xd9, 0xd0, 0x24, 0xfd, 0x28, 0x0a, 0xa3, 0x3d, 0x7e, 0xe0, 0x21, 0x92, 0xce, 0x7b,
	0x30, 0xd7, 0x46, 0xa7, 0x2e, 0x42, 0xa0, 0x90, 0x3d, 0xb7, 0x58, 0xf0, 0xd8, 0xa4, 0xac, 0x96,
	0xb4, 0xac, 0x5c, 0xf5, 0x0f, 0x82, 0x5b, 0x0f, 0x78, 0x38, 0xea, 0x49, 0xcf, 0x82, 0x32, 0xba,
	0xb8, 0xaf, 0x55, 0x3b, 0x45, 0x4f, 0x8c, 0x0d, 0xcf, 0x82, 0x8a, 0x56, 0xdf, 0x95, 0x5c, 0x2a,
	0x1e, 0x69, 0x99, 0xd0, 0x1c, 0x43, 0x4d, 0x16, 0x30, 0x54, 0x13, 0x26, 0x3e, 0xe3, 0x43, 0x49,
	0xe3, 0x2e, 0x92, 0x85, 0xa2, 0x05, 0x46, 0x16, 0x2d, 0x97, 0x61, 0xc1, 0x67, 0x6a, 0x30, 0xab,
	0xc8, 0x0e, 0x5b, 0xe5, 0xa2, 0x76, 0xd0, 0x9c, 0xc2, 0xe6, 0xe4, 0x11, 0xce, 0x25, 0x00, 0xea,
	0x8b, 0x1b, 0xe2, 0xba, 0xdc, 0xec, 0xea, 0x14, 0x2f, 0x85, 0x81, 0x3c, 0x0d, 0xed, 0xbc, 0x0a,
	0xb0, 0x8b, 0x8e, 0xb6, 0xb0, 0x4a, 0x33, 0xfc, 0x9e, 0x2e, 0x11, 0xaf, 0x4b, 0x84, 0xa7, 0x11,
	0xb1, 0x5d, 0xc2, 0x81, 0xff, 0x88, 0x98, 0x90, 0xee, 0x3f, 0xc8, 0x34, 0xee, 0x32, 0x28, 0xbc,
	0x25, 0x4b, 0xa6, 0xcd, 0x39, 0x54, 0x89, 0x0c, 0x18, 0xea, 0x98, 0xac, 0x69, 0x9f, 0xf8, 0xdd,
	0x7e, 0xd0, 0x9c, 0x47, 0x0a, 0x0d, 0xe2, 0xac, 0xc2, 0xe4, 0x43, 0x3f, 0xc4, 0x80, 0x1d, 0x68,
	0xc4, 0x9b, 0x5d, 0x5d, 0xe1, 0x15, 0xba, 0xeb, 0x87, 0x46, 0x74, 0x7e, 0x49, 0xe7, 0x5c, 0x83,
	0x65, 0xc5, 0xa5, 0x1a, 0x09, 0x9a, 0xf6, 0x8a, 0x39, 0xab, 0xf8, 0x07, 0xe7, 0x75, 0x58, 0x36,
	0xa6, 0x14, 0xc7, 0x75, 0xd0, 0xf8, 0x37, 0xe9, 0x15, 0x23, 0xdd, 0xef, 0xf2, 0xc8, 0x88, 0x04,
	0xe6, 0x23, 0x1a, 0x7c, 0xce, 0xf1, 0xba, 0x9c, 0xaa, 0x98, 0x72, 0xea, 0x5d, 0x98, 0x35, 0x39,
	0x1c, 0xa5, 0x62, 0x71, 0x8d, 0x2d, 0xca, 0x01, 0x9b, 0x75, 0x25, 0x47, 0xc7, 0x8c, 0x58, 0x0a,
	0x7f, 0xbd, 0x01, 0x0b, 0x5e, 0xbc, 0x1b, 0x67, 0x6b, 0x6d, 0x26, 0x7f, 0xe8, 0xb2, 0x14, 0x1b,
	0x10, 0x1f, 0xd3, 0xda, 0xa4, 0xd7, 0x20, 0x0a, 0xaf, 0x3f, 0x1f, 0x52, 0x10, 0xe7, 0xb2, 0xc0,
	0x6b, 0x9a, 0xd1, 0x74, 0x4b, 0x2b, 0xc7, 0xd3, 0xf0, 0xac, 0x6e, 0x07, 0x21, 0x86, 0x71, 0x26,
	0x2d, 0x80, 0xa7, 0xd8, 0x44, 0x3c, 0x40, 0xf7, 0x69, 0xfb, 0x7e, 0xb2, 0x17, 0xa8, 0xd0, 0xa2,
	0x16, 0x14, 0xe9, 0xfc, 0x47, 0x3a, 0xdd, 0x38, 0xa7, 0x33, 0xa0, 0x68, 0x76, 0x8d, 0xf7, 0xc2,
	0x68, 0x93, 0x6d, 0x2d, 0x1e, 0xf8, 0x5d, 0x2e, 0xe0, 0x4d, 0xa0, 0xd3, 0x02, 0x07, 0xcf, 0x60,
	0xd0, 0xc7, 0xe8, 0x6e, 0x9c, 0x6d, 0x85, 0x07, 0x61, 0x86, 0x93, 0xbb, 0xee, 0x15, 0x60, 0x50,
	0xfc, 0x70, 0xe8, 0x4e, 0x3b, 0x88, 0x02, 0x5a, 0xed, 0xeb, 0x9e, 0x05, 0x75, 0x56, 0x61, 0xc9,
	0x84, 0xdc, 0x0d, 0xc2, 0xbd, 0x7d, 0xf2, 0xa7, 0x51, 0xf7, 0x0a, 0x71, 0x68, 0x0a, 0x21, 0x4f,
	0x7d, 0xac, 0x55, 0x53, 0xfc, 0xee, 0x90, 0x84, 0xd0, 0x3d, 0xa7, 0x47, 0x02, 0x3f, 0xcd, 0xf1,
	0x12, 0x22, 0xd6, 0xb3, 0x0f, 0xa3, 0xce, 0x76, 0x12, 0xf0, 0xab, 0x4b, 0x1a, 0x04, 0xdf, 0xa5,
	0x85, 0x91, 0x70, 0x32, 0x48, 0x1b, 0x7c, 0x0d, 0xc2, 0xfa, 0x02, 0x5b, 0x2a, 0xbc, 0xef, 0x91,
	0x5b, 0x44, 0xba, 0xc3, 0x54, 0x80, 0x61, 0x6b, 0x0c, 0x4b, 0xa4, 0x5b, 0x41, 0xb4, 0x97, 0xed,
	0xf3, 0x2b, 0x4d, 0x3a, 0x88, 0x95, 0xc8, 0x16, 0x9c, 0xf5, 0x20, 0x63, 0x35, 0x5e, 0xa0, 0x1a,
	0x29, 0x08, 0xba, 0x7b, 0x0d, 0x7a, 0x01, 0xc6, 0x79, 0xc1, 0xa9, 0x5a, 0xf7, 0x14, 0x80, 0xad,
	0xbf, 0x66, 0x80, 0xb9, 0xb4, 0xb9, 0x88, 0xdd, 0x67, 0x83, 0x9d, 0xf7, 0x8c, 0x18, 0x88, 0xeb,
	0x41, 0x76, 0x23, 0x8e, 0x82, 0x43, 0xde, 0xe5, 0x4b, 0xf8, 0x4f, 0x39, 0x01, 0xea, 0x3d, 0x41,
	0x67, 0xbd, 0xeb, 0xb7, 0xef, 0x63, 0x21, 0xcb, 0x24, 0xb4, 0x74, 0x18, 0x5b, 0x87, 0xb5, 0xb4,
	0x9e, 0xfd, 0x0a, 0x52, 0x97, 0x60, 0xd1, 0x9d, 0xb1, 0x8a, 0x65, 0x93, 0x36, 0x8f, 0x51, 0xde,
	0x3a, 0x8c, 0xe5, 0xad, 0xa5, 0xf5, 0xbc, 0x9b, 0x94, 0x77, 0x31, 0x96, 0xf1, 0xa2, 0xe1, 0x75,
	0x32, 0x6d, 0x1e, 0x27, 0x5e, 0x34, 0xa1, 0xce, 0xbb, 0xe4, 0x39, 0x52, 0x42, 0xf4, 0x12, 0x4e,
	0xe0, 0x1f, 0xa5, 0x78, 0x36, 0x06, 0xa6, 0x93, 0xf3, 0xb4, 0x79, 0x92, 0xc6, 0xc0, 0x02, 0xb3,
	0x31, 0x30, 0x41, 0x7a, 0x31, 0xa7, 0x68, 0x0c, 0x4a, 0x09, 0xdc, 0xbf, 0x57, 0x81, 0x15, 0x4d,
	0x62, 0x5c, 0x4d, 0xe2, 0x7e, 0x8f, 0x8b, 0xa7, 0x0b, 0x30, 0xe7, 0x2b, 0xa0, 0x26, 0xa3, 0x6c,
	0xb0, 0x45, 0xa9, 0x49, 0x2b, 0x1b, 0x8c, 0x2b, 0xaa, 0x26, 0x02, 0xd3, 0x3b, 0x14, 0xe5, 0x95,
	0x56, 0x54, 0x1b, 0x41, 0x77, 0x05, 0x76, 0xe3, 0x4c, 0x08, 0xad, 0xba, 0x27, 0xd3, 0xee, 0xff,
	0x51, 0x81, 0x25, 0xac, 0x38, 0x89, 0xfe, 0x0f, 0x1f, 0x65, 0x49, 0x8c, 0xc7, 0x1c, 0xa3, 0x57,
	0x9b, 0x14, 0xaa, 0x35, 0x25, 0x82, 0x95, 0x42, 0xa5, 0x80, 0x6c, 0xae, 0x30, 0xf5, 0x2d, 0xec,
	0xdc, 0xba, 0x77, 0x8f, 0xab, 0x54, 0x0a, 0xc0, 0xa4, 0x6a, 0x90, 0x24, 0xaa, 0x82, 0x3c, 0x25,
	0xd4, 0x9b, 0x5b, 0xd1, 0x56, 0x18, 0xe9, 0x87, 0x91, 0x16, 0x54, 0x1c, 0x95, 0xdc, 0xba, 0x77,
	0x4f, 0x12, 0x8e, 0xab, 0xa3, 0x12, 0x0d, 0xec, 0x7e, 0x87, 0xb7, 0x57, 0x1b, 0xa8, 0x23, 0xb6,
	0x17, 0x6f, 0x50, 0xee, 0xc6, 0x99, 0x8c, 0x6b, 0xda, 0xf0, 0x14, 0xc0, 0x0d, 0x61, 0x1e, 0xf3,
	0xe7, 0xf7, 0xba, 0xc5, 0xeb, 0x8c, 0x7b, 0x49, 0x10, 0x20, 0x9c, 0xef, 0x2b, 0x14, 0xc0, 0x79,
	0x0b, 0xa6, 0xa8, 0x08, 0xc2, 0x8b, 0xd0, 0x14, 0x45, 0xb5, 0xf4, 0x74, 0x4a, 0xf7, 0x34, 0x9c,
	0x44, 0xbf, 0x9b, 0xd6, 0x82, 0x28, 0xae, 0x56, 0xec, 0xe0, 0x93, 0x96, 0x02, 0x34, 0xdb, 0xa3,
	0xbf, 0x09, 0xd3, 0x89, 0xc2, 0x88, 0x83, 0x7e, 0xa7, 0x95, 0x27, 0x37, 0xe8, 0xdc, 0x6f, 0xc0,
	0x19, 0xba, 0x84, 0x57, 0x56, 0x6c, 0x41, 0xce, 0x95, 0x91, 0x72, 0x3e, 0x03, 0xa7, 0x4a, 0x73,
	0xee, 0x75, 0x0f, 0x59, 0xc9, 0xf4, 0xbe, 0xe7, 0x59, 0x94, 0x5c, 0x9a, 0x33, 0x2b, 0xd9, 0xc5,
	0x73, 0x8b, 0xe2, 0xe9, 0x2d, 0x3a, 0x3b, 0xc0, 0x2b, 0x74, 0x65, 0x34, 0xac, 0xc7, 0x37, 0x60,
	0x3e, 0xb1, 0xd0, 0xbc, 0xd7, 0x8f, 0xb5, 0x4a, 0xfe, 0xcb, 0xfd, 0xe0, 0x7e, 0x06, 0xcf, 0xe5,
	0x3a, 0x29, 0x5f, 0x9b, 0x92, 0xb2, 0x2a, 0x47, 0x2b, 0xeb, 0x39, 0xf8, 0xf2, 0xe0, 0xb2, 0x58,
	0xdf, 0x7c, 0x06, 0xcf, 0xe5, 0xfa, 0xee, 0x19, 0x56, 0x68, 0x70, 0x59, 0xac, 0x42, 0x67, 0xf0,
	0x86, 0xa1, 0x3e, 0x05, 0xcd, 0x81, 0xea, 0xe2, 0x41, 0x40, 0x11, 0x9e, 0x9b, 0x6c, 0x7b, 0x49,
	0xd0, 0xf3, 0x13, 0xd4, 0xcc, 0x2a, 0x5c, 0x07, 0x91, 0x10, 0xa7, 0x85, 0x16, 0xa7, 0x48, 0x70,
	0x18, 0x29, 0xbb, 0xa6, 0xb2, 0xa8, 0x13, 0xb8, 0x3f, 0x5a, 0x81, 0x45, 0x51, 0x9c, 0x7e, 0x51,
	0x67, 0x74, 0x69, 0xd3, 0x84, 0x89, 0x9e, 0x4f, 0x8a, 0x22, 0xd9, 0x86, 0x45, 0x92, 0xe5, 0x11,
	0x47, 0xc1, 0xb6, 0xbf, 0x47, 0x03, 0x24, 0x4c, 0x8e, 0x75, 0xcf, 0x06, 0xbb, 0xdf, 0x80, 0x05,
	0xb3, 0x12, 0xac, 0xa9, 0x5f, 0x86, 0x7a, 0x88, 0xee, 0xbd, 0x85, 0x23, 0x03, 0xcd, 0x27, 0x25,
	0x61, 0x98, 0x86, 0x84, 0x3b, 0x72, 0x9e, 0x3b, 0x95, 0xaf, 0x83, 0xdc, 0x47, 0x30, 0x43, 0x47,
	0xcc, 0x22, 0xfe, 0xc1, 0x25, 0x80, 0x04, 0x01, 0x9a, 0x45, 0x6e, 0xaa, 0xe5, 0x49, 0x90, 0xa7,
	0xa1, 0x9d, 0x77, 0x61, 0x86, 0x52, 0xa3, 0x98, 0x79, 0x4d, 0x52, 0xf7, 0xb7, 0x27, 0x61, 0x89,
	0xed, 0x96, 0xc9, 0x61, 0xf1, 0x87, 0x8f, 0xb2, 0x20, 0xea, 0xa0, 0x0f, 0x4d, 0x65, 0xc8, 0xaa,
	0x14, 0x1a, 0xb2, 0x0a, 0x2c, 0xc0, 0xd5, 0x51, 0x2d, 0xc0, 0x45, 0x01, 0x8d, 0xc7, 0x07, 0x07,
	0x34, 0xd6, 0x43, 0xae, 0x4e, 0x8c, 0x12, 0x72, 0xf5, 0x0c, 0x00, 0xed, 0x5c, 0x91, 0x2b, 0xf8,
	0x29, 0x9c, 0x82, 0x14, 0x39, 0x7f, 0x6f, 0x14, 0x3a, 0x7f, 0x67, 0x0b, 0x33, 0x81, 0xc4, 0x6d,
	0x0c, 0xfe, 0xfc, 0xc0, 0x00, 0x3a, 0x9b, 0xf9, 0x68, 0x65, 0x78, 0xe7, 0x6e, 0x6a, 0x50, 0x88,
	0xa4, 0xc2, 0x5f, 0xca, 0x22, 0x0a, 0x4d, 0x97, 0x07, 0x4e, 0x2a, 0xa2, 0x67, 0x4a, 0x27, 0xf1,
	0x22, 0x77, 0x94, 0x3e, 0x83, 0x9e, 0xcd, 0x0d, 0x98, 0xb3, 0xc1, 0xe3, 0xff, 0x1b, 0x01, 0xcc,
	0x70, 0x53, 0x50, 0x12, 0xdb, 0xac, 0x80, 0xdc, 0xd9, 0x80, 0x05, 0xa1, 0xf7, 0xaa, 0x3c, 0x96,
	0x79, 0xbb, 0xa5, 0x71, 0x50, 0x23, 0xf0, 0xf2, 0xf4, 0xce, 0x57, 0x60, 0x4e, 0x00, 0xc5, 0x38,
	0xaf, 0x70, 0x3b, 0x84, 0x80, 0xcb, 0x41, 0xb6, 0x29, 0xcd, 0xa0, 0x95, 0xc7, 0x4a, 0x82, 0x56,
	0xb2, 0x22, 0xb4, 0x28, 0x9a, 0x58, 0x44, 0xb3, 0x2c, 0x4c, 0xa5, 0x4d, 0x69, 0x47, 0xd0, 0x3c,
	0x5e, 0x1e, 0x41, 0xf3, 0x1a, 0x8f, 0x23, 0xa9, 0x47, 0x3e, 0x40, 0x56, 0x38, 0x51, 0x1a, 0x17,
	0xa1, 0xf8, 0x87, 0x92, 0x38, 0x02, 0x27, 0x4b, 0x63, 0x25, 0x14, 0x50, 0x3b, 0xaf, 0xc2, 0x8c,
	0x2f, 0x82, 0x7f, 0xe1, 0x5d, 0xe2, 0x53, 0x5c, 0x4e, 0x29, 0x90, 0x67, 0x52, 0x30, 0x79, 0x45,
	0x86, 0x1e, 0xb2, 0x55, 0x9c, 0xa6, 0x1d, 0x9d, 0x06, 0x72, 0xbf, 0x5b, 0x87, 0x79, 0x25, 0x35,
	0xf8, 0xed, 0x98, 0x11, 0x9f, 0xa9, 0x9f, 0x82, 0x06, 0xfb, 0xc6, 0x3d, 0x2f, 0x97, 0x85, 0x0a,
	0x20, 0x32, 0x41, 0xa3, 0x95, 0x7e, 0xf7, 0x08, 0x4d, 0x56, 0x12, 0xa5, 0x9d, 0xc7, 0x29, 0x73,
	0xb0, 0x06, 0x61, 0x73, 0x96, 0x52, 0x3b, 0xc6, 0x89, 0xbe, 0x09, 0x54, 0x54, 0x6b, 0xc6, 0xe9,
	0xbe, 0x09, 0x34, 0xef, 0x4a, 0x4c, 0xd8, 0x77, 0x25, 0xcc, 0x3b, 0x27, 0x93, 0xf6, 0x9d, 0x13,
	0x56, 0xc6, 0x2e, 0x8f, 0x5a, 0x43, 0x3b, 0x6e, 0x92, 0x32, 0x26, 0x90, 0xed, 0x2d, 0x32, 0x6e,
	0x47, 0xe6, 0xf6, 0x5f, 0x99, 0x66, 0xe5, 0x3f, 0x94, 0x32, 0x8a, 0x8e, 0xfa, 0x15, 0x80, 0xe5,
	0x4f, 0xa5, 0x89, 0xfc, 0xe9, 0x28, 0xc0, 0x04, 0x3a, 0x6f, 0x00, 0x04, 0x52, 0xb6, 0xa3, 0x51,
	0x80, 0xcd, 0xcd, 0x22, 0xc1, 0xef, 0x69, 0x84, 0x78, 0x1d, 0xbf, 0x9f, 0xc5, 0xfc, 0xba, 0x4d,
	0xcd, 0xe3, 0x29, 0xe3, 0x71, 0xde, 0x1c, 0x1f, 0x25, 0xe1, 0x77, 0x4e, 0x7b, 0x9c, 0xa7, 0x0c,
	0x50, 0xf3, 0x86, 0x21, 0xbf, 0x09, 0x13, 0x49, 0xdc, 0x8f, 0x3a, 0xf2, 0x7e, 0x9e, 0x48, 0x5a,
	0xf7, 0x1a, 0x9c, 0xdc, 0xbd, 0x86, 0xcb, 0xb0, 0xc0, 0x8d, 0xa9, 0xda, 0xed, 0xaf, 0x45, 0x24,
	0xcb, 0x23, 0xdc, 0x7f, 0x5e, 0x85, 0xe3, 0xbc, 0x07, 0x78, 0xe8, 0x12, 0x9d, 0x5f, 0x4d, 0x1e,
	0xaa, 0x0c, 0xe7, 0xa1, 0xea, 0x48, 0x3c, 0x54, 0x2b, 0xe2, 0x21, 0x79, 0xe2, 0xae, 0xdd, 0x16,
	0xd5, 0x20, 0xce, 0x3b, 0x30, 0xdd, 0xe6, 0x35, 0xc4, 0x10, 0x45, 0xf4, 0x52, 0x6f, 0xb9, 0xe5,
	0x05, 0x74, 0xc1, 0x69, 0x43, 0x43, 0x7a, 0x06, 0x69, 0x9e, 0xc1, 0xc6, 0x8b, 0x18, 0xcc, 0x15,
	0x05, 0xac, 0x1d, 0x48, 0xb7, 0xbf, 0x35, 0xcf, 0x80, 0x31, 0x9a, 0x7b, 0x61, 0xe4, 0x77, 0xcd,
	0x00, 0x14, 0x06, 0x4c, 0xe3, 0x88, 0x86, 0xce, 0x11, 0xee, 0x4f, 0x8d, 0xc1, 0xe9, 0xb5, 0xf6,
	0x7e, 0x18, 0x3c, 0x08, 0x0e, 0x82, 0x28, 0x2b, 0xe8, 0xee, 0x13, 0x30, 0x79, 0x2f, 0x89, 0x0f,
	0xb4, 0xce, 0x96, 0x69, 0x26, 0x71, 0xd8, 0xb7, 0xd9, 0xd1, 0x3a, 0x48, 0x50, 0x98, 0x9d, 0xac,
	0x83, 0x58, 0xcd, 0x32, 0xe3, 0x74, 0x88, 0x52, 0x6c, 0xfa, 0x64, 0xb1, 0x29, 0x06, 0x14, 0x80,
	0xb0, 0xe6, 0xf4, 0x57, 0x00, 0x6b, 0xd8, 0x26, 0x86, 0x0e, 0xdb, 0xe4, 0xe8, 0xc3, 0x66, 0x0f,
	0x48, 0xa3, 0x60, 0x40, 0x54, 0x67, 0x83, 0x31, 0xfd, 0xce, 0xc1, 0x58, 0xc6, 0xa6, 0xde, 0x14,
	0x57, 0xb8, 0xb4, 0x8e, 0x27, 0xd7, 0xfb, 0x19, 0xb7, 0xd0, 0xb3, 0xfe, 0x41, 0x03, 0xc8, 0xb4,
	0xea, 0x70, 0x71, 0xcf, 0x88, 0x7d, 0x5f, 0xb3, 0x1f, 0xcb, 0x5b, 0x50, 0xea, 0x54, 0xed, 0xad,
	0x3c, 0x4f, 0xb1, 0xda, 0x67, 0xb1, 0xf6, 0x37, 0xdd, 0xd9, 0x35, 0x60, 0xee, 0x8f, 0x57, 0x71,
	0xe7, 0xac, 0x5f, 0x5b, 0xf9, 0x23, 0x9a, 0x7d, 0x4d, 0x98, 0xd8, 0x0b, 0x74, 0x9f, 0x22, 0x22,
	0xe9, 0x5c, 0x26, 0x0c, 0xeb, 0xcc, 0x3a, 0x3f, 0x23, 0x30, 0xaa, 0x8c, 0xdd, 0x29, 0x48, 0x70,
	0xe9, 0x0a, 0x32, 0x3e, 0x60, 0x3c, 0xd6, 0x83, 0x04, 0x68, 0xa3, 0x35, 0x61, 0x4c, 0x8d, 0xbf,
	0x39, 0x0e, 0x2b, 0xea, 0x8a, 0x8e, 0xd1, 0x09, 0x2b, 0x30, 0xbe, 0x17, 0x3e, 0x08, 0xd4, 0xfb,
	0x63, 0x4a, 0x0d, 0xf5, 0x34, 0x71, 0x5e, 0x74, 0x9e, 0x16, 0xd3, 0x62, 0xbc, 0xc5, 0x12, 0xa9,
	0xa7, 0x61, 0xac, 0x6b, 0x2b, 0x63, 0xb9, 0x6b, 0x2b, 0x56, 0x27, 0x5f, 0x29, 0x5a, 0x26, 0xaf,
	0x8c, 0xb8, 0x4c, 0xca, 0xb2, 0x6e, 0xaa, 0x0b, 0x71, 0x1a, 0xc4, 0xb9, 0x08, 0xf3, 0x94, 0xba,
	0x66, 0x5f, 0x8e, 0xcb, 0xc1, 0xf1, 0x65, 0x01, 0x55, 0x21, 0x78, 0xc4, 0x1d, 0x1d, 0x2a, 0x00,
	0x63, 0xde, 0x8e, 0xf4, 0x95, 0x81, 0x2d, 0xe3, 0x97, 0xe4, 0x4c, 0x28, 0x5b, 0x2c, 0x14, 0x44,
	0xb4, 0x90, 0xfb, 0x98, 0xc8, 0x21, 0x4c, 0x6a, 0xd3, 0x3b, 0x75, 0x1e, 0xe1, 0xac, 0xc2, 0x92,
	0x02, 0xe6, 0xa6, 0x51, 0x21, 0xce, 0xac, 0xb7, 0x36, 0xa9, 0x2c, 0x28, 0xeb, 0x6f, 0xad, 0x7a,
	0xc1, 0x23, 0x6e, 0x7c, 0x37, 0x81, 0x96, 0x6c, 0x9a, 0xcf, 0xc9, 0x26, 0x89, 0xc7, 0x25, 0x7f,
	0x41, 0xc7, 0xf3, 0x0d, 0x1e, 0xd0, 0x12, 0x81, 0x78, 0xbe, 0xd4, 0x2a, 0x08, 0x5a, 0xdb, 0x98,
	0xe4, 0x47, 0x34, 0x2d, 0xb1, 0x0a, 0xa0, 0x31, 0xfb, 0x92, 0x21, 0x9a, 0xde, 0xb0, 0x24, 0xe2,
	0xb2, 0x50, 0xb0, 0xb5, 0x09, 0x90, 0x97, 0x86, 0xee, 0xff, 0x39, 0x06, 0x0b, 0xeb, 0x71, 0xd4,
	0x4f, 0xed, 0xe9, 0xc1, 0x0b, 0xa9, 0xd8, 0xea, 0xc7, 0x28, 0x2e, 0xd0, 0x0c, 0x4d, 0xb3, 0x66,
	0x6b, 0x9a, 0xc3, 0x96, 0xe4, 0x55, 0x58, 0xe2, 0x4b, 0x28, 0xab, 0x17, 0xbf, 0x5f, 0x27, 0xcf,
	0xa3, 0x0a, 0x71, 0x6c, 0x84, 0x77, 0x4d, 0x6a, 0x7e, 0x2a, 0x65, 0x42, 0x9d, 0x57, 0x60, 0xd1,
	0xc7, 0x38, 0x85, 0x26, 0x31, 0xc9, 0x8d, 0x22, 0xd4, 0x93, 0xac, 0x34, 0xa7, 0xa0, 0x81, 0x99,
	0x69, 0x17, 0x4e, 0x15, 0x80, 0xb1, 0x3d, 0x35, 0x65, 0xe7, 0x30, 0xcd, 0x82, 0x03, 0x44, 0xf0,
	0xe5, 0x26, 0x8f, 0xc0, 0x37, 0x16, 0x98, 0xb7, 0x4e, 0x4d, 0x3a, 0x69, 0x1e, 0xc1, 0xa6, 0x3c,
	0xb6, 0x45, 0x27, 0x26, 0xf5, 0x34, 0x07, 0x67, 0x0b, 0x7c, 0x8a, 0x49, 0x3a, 0x6f, 0xa2, 0x8b,
	0xa9, 0x3a, 0x48, 0xba, 0x0f, 0x9a, 0xd5, 0x42, 0x7b, 0x69, 0x77, 0x76, 0xe7, 0xcc, 0x3b, 0xbb,
	0x67, 0x61, 0x8a, 0x33, 0xd4, 0x43, 0x3f, 0xe9, 0xc8, 0x63, 0x29, 0x05, 0x72, 0xff, 0x52, 0x15,
	0xaf, 0x83, 0x6b, 0x1d, 0x4d, 0xcc, 0xf7, 0xf4, 0x22, 0x3d, 0x2c, 0x41, 0x1d, 0x37, 0x0a, 0xfc,
	0x60, 0x96, 0x12, 0xce, 0x3c, 0xd4, 0x02, 0x19, 0xd7, 0x90, 0x7d, 0x0e, 0xb8, 0x79, 0x6c, 0x0a,
	0xf0, 0xf1, 0x9c, 0x00, 0xd7, 0x67, 0xc2, 0xc4, 0x88, 0x33, 0x61, 0xd2, 0x9a, 0x09, 0xee, 0xaf,
	0x55, 0xe0, 0xcb, 0x83, 0x3b, 0xe2, 0x59, 0xbf, 0xf6, 0x3a, 0xcf, 0xaf, 0x95, 0x4f, 0xf0, 0x1d,
	0x72, 0x4e, 0x14, 0xf0, 0x9b, 0xe4, 0x7f, 0xa7, 0x8a, 0x57, 0xef, 0xed, 0xd5, 0xf4, 0x8f, 0x64,
	0xc4, 0xc4, 0x8d, 0xf0, 0xba, 0x79, 0x23, 0x5c, 0x1b, 0xcb, 0xf1, 0x41, 0x63, 0x39, 0x91, 0x1b,
	0x4b, 0x73, 0xd1, 0x9f, 0xcc, 0x2d, 0xfa, 0xb6, 0x68, 0x6d, 0x8c, 0x26, 0x5a, 0xff, 0x16, 0xbd,
	0x17, 0x28, 0xef, 0xb3, 0x67, 0x3d, 0xb8, 0x97, 0x8c, 0xc1, 0x3d, 0xd6, 0x2a, 0xd6, 0x85, 0xf8,
	0x08, 0xff, 0xe5, 0x71, 0x58, 0xba, 0x1a, 0x3e, 0x08, 0xd6, 0x1e, 0xfa, 0x87, 0x25, 0xfa, 0xa2,
	0x76, 0x43, 0x77, 0x90, 0x2a, 0x53, 0x2d, 0x52, 0x65, 0x8a, 0x94, 0x90, 0xda, 0x28, 0x4a, 0xc8,
	0x98, 0xad, 0x84, 0x98, 0xea, 0x4e, 0x3d, 0xa7, 0xee, 0xe4, 0x95, 0x94, 0xf1, 0xd1, 0x95, 0x94,
	0x89, 0x32, 0x25, 0xa5, 0x4c, 0xed, 0x98, 0x1c, 0xa0, 0x76, 0xe4, 0xd4, 0x89, 0x46, 0x91, 0x3a,
	0x91, 0x57, 0x4e, 0xa0, 0x50, 0x39, 0x31, 0x97, 0xcd, 0xa9, 0x21, 0x6a, 0xc7, 0xf4, 0x10, 0xb5,
	0x63, 0x66, 0xb0, 0xda, 0x31, 0x5b, 0xa0, 0x76, 0x70, 0x85, 0x79, 0xce, 0x50, 0x98, 0x95, 0xa6,
	0x30, 0x6f, 0x68, 0x0a, 0xef, 0xc0, 0x2c, 0x8f, 0x7d, 0xd7, 0x09, 0xa2, 0x2c, 0xcc, 0x0e, 0xf9,
	0x5d, 0xa2, 0x85, 0x16, 0x5e, 0xa9, 0xdf, 0xe9, 0xef, 0x0a, 0x84, 0x67, 0x11, 0x3a, 0x6b, 0xe0,
	0xa8, 0xa6, 0xcb, 0xdf, 0x9d, 0xb2, 0xdf, 0x0b, 0x88, 0x9d, 0xf7, 0x61, 0x76, 0x4f, 0xf2, 0x32,
	0xce, 0xd9, 0xc5, 0x41, 0xcb, 0xb6, 0x45, 0xec, 0xfe, 0x05, 0x7a, 0x79, 0xbb, 0xd3, 0xeb, 0x86,
	0xd9, 0x6d, 0x7f, 0x97, 0x29, 0xf7, 0x5c, 0xc0, 0x9d, 0x87, 0x59, 0x69, 0x81, 0x4a, 0x33, 0xff,
	0xa0, 0xc7, 0x15, 0x24, 0x0b, 0xca, 0xb6, 0x69, 0xfc, 0x32, 0x10, 0x51, 0xd1, 0x55, 0x7f, 0x03,
	0x86, 0x3b, 0x60, 0x96, 0xb9, 0xe6, 0x5d, 0x48, 0x01, 0xdc, 0x37, 0xf0, 0xe0, 0xc5, 0xa8, 0x02,
	0x3f, 0xe0, 0x91, 0x34, 0xe2, 0x8e, 0xa7, 0x06, 0x71, 0xbf, 0x57, 0xc5, 0xf3, 0x23, 0x65, 0x60,
	0xfa, 0xc1, 0x10, 0xd1, 0x23, 0x2e, 0xa7, 0xba, 0x91, 0x72, 0xb2, 0xdc, 0x48, 0xa9, 0x5b, 0xc9,
	0x1a, 0xa5, 0x56, 0x32, 0xf7, 0xe7, 0xaa, 0x78, 0x96, 0x56, 0xd4, 0x57, 0xcf, 0x5a, 0x34, 0xeb,
	0xed, 0x1d, 0x1b, 0xad, 0xbd, 0xf5, 0xd1, 0xda, 0x3b, 0x5e, 0x6e, 0x15, 0x7c, 0xde, 0x58, 0x0f,
	0x16, 0x5a, 0xb6, 0x21, 0x99, 0xaf, 0x04, 0xdf, 0xab, 0xc2, 0xf3, 0x57, 0x65, 0x60, 0xd9, 0x1f,
	0xbc, 0xe5, 0xde, 0xd6, 0xd8, 0x27, 0x46, 0xd7, 0xd8, 0x5f, 0x86, 0x89, 0x04, 0xbf, 0x52, 0x8c,
	0xe7, 0x54, 0xfa, 0x97, 0xa0, 0x72, 0xff, 0x4e, 0x85, 0x54, 0xd9, 0x41, 0x7d, 0xf5, 0xac, 0x79,
	0xa9, 0x65, 0x3c, 0x0d, 0x3c, 0xd1, 0x2a, 0x35, 0xbc, 0xf2, 0xf1, 0xfd, 0x1f, 0xaa, 0xf0, 0xe2,
	0xd5, 0x20, 0x2b, 0x31, 0x1a, 0xfe, 0xff, 0x7e, 0x8c, 0xdf, 0x85, 0x39, 0xdf, 0x34, 0xdb, 0xc9,
	0x57, 0x06, 0xb6, 0x39, 0xcf, 0x26, 0xd4, 0xdd, 0x94, 0x8a, 0x87, 0xfd, 0x0a, 0xe0, 0xfe, 0x41,
	0x05, 0x5e, 0x18, 0xa5, 0x63, 0x9f, 0x35, 0x43, 0xac, 0x1a, 0x0c, 0x71, 0xa6, 0x35, 0xd0, 0x3c,
	0x4c, 0x4c, 0x61, 0xb6, 0xac, 0x6e, 0xb7, 0xec, 0x9f, 0x55, 0x50, 0x24, 0x14, 0x18, 0x15, 0x7f,
	0x30, 0xd8, 0xe5, 0x3c, 0xb7, 0xdb, 0x4e, 0x94, 0x9a, 0x1a, 0x11, 0xef, 0xfe, 0xd3, 0x0a, 0xbc,
	0xc2, 0x43, 0x01, 0x6f, 0xf8, 0xac, 0x3b, 0xe5, 0x5b, 0x01, 0x7a, 0x6c, 0x70, 0x68, 0xf6, 0x1f,
	0x35, 0x59, 0x56, 0xbc, 0x52, 0x50, 0xf1, 0x6a, 0x61, 0xc5, 0x6b, 0xa5, 0x15, 0x37, 0x7d, 0x80,
	0x0c, 0x1e, 0x16, 0x5d, 0x5c, 0x8d, 0x8f, 0x24, 0xae, 0x3a, 0xd0, 0x3a, 0x42, 0xf3, 0x38, 0x9f,
	0xaa, 0x0a, 0x54, 0xec, 0x0a, 0x2c, 0x41, 0x1d, 0x4f, 0xcb, 0x44, 0xc4, 0x62, 0x4c, 0xb8, 0x7f,
	0xbb, 0x02, 0x97, 0x8a, 0x8b, 0x29, 0xee, 0x40, 0xad, 0x63, 0x2a, 0xa5, 0x1d, 0x53, 0x1d, 0xd0,
	0x31, 0xb5, 0x01, 0x1d, 0x33, 0x36, 0x52, 0xc7, 0xfc, 0x44, 0x05, 0x65, 0xe2, 0x08, 0x55, 0x1e,
	0xde, 0x29, 0xef, 0x1b, 0xd3, 0xef, 0xc5, 0xd6, 0x28, 0xf9, 0x6e, 0x66, 0xc1, 0x01, 0x17, 0xcf,
	0x2b, 0xe8, 0x51, 0x68, 0xbb, 0xeb, 0x0b, 0x77, 0x4e, 0xfc, 0xe2, 0xcf, 0x2f, 0x55, 0xd1, 0x61,
	0xa0, 0x8e, 0x10, 0x37, 0x7e, 0x24, 0x88, 0xb3, 0xa0, 0x06, 0x41, 0x1f, 0x8e, 0xf8, 0x92, 0xd7,
	0x0c, 0x1d, 0x6f, 0x02, 0xad, 0xe3, 0xbf, 0x5a, 0xee, 0xf8, 0xef, 0x2c, 0x4c, 0xb1, 0x3c, 0xc5,
	0x4b, 0x19, 0xee, 0x20, 0x5c, 0x03, 0x31, 0x0a, 0xa6, 0x8f, 0x08, 0x0a, 0x32, 0xd6, 0xe9, 0x20,
	0xb5, 0x51, 0x14, 0x34, 0xfc, 0xbc, 0xcc, 0x00, 0xb2, 0x21, 0xef, 0xf7, 0xe8, 0x85, 0x22, 0x59,
	0xe5, 0x44, 0x92, 0x09, 0x8f, 0x6e, 0xfc, 0x90, 0x50, 0x74, 0x42, 0x26, 0xd3, 0xee, 0xcf, 0x57,
	0xe1, 0xc2, 0xa8, 0xfd, 0x4c, 0x5c, 0xdb, 0xf1, 0x0f, 0xc5, 0x84, 0xc5, 0x04, 0x1b, 0xd4, 0xc3,
	0x20, 0xcd, 0x82, 0x84, 0x61, 0xf8, 0xcb, 0x7c, 0x09, 0xb0, 0x76, 0xc1, 0xb5, 0x61, 0xbb, 0x60,
	0x31, 0x91, 0x87, 0x9d, 0x9a, 0xd4, 0x87, 0x1b, 0xf4, 0xc7, 0x47, 0x32, 0xe8, 0x4f, 0x14, 0xef,
	0xa5, 0xdd, 0xff, 0xb5, 0xc2, 0x2f, 0xf6, 0xf1, 0x8e, 0x29, 0x98, 0x7e, 0x7f, 0x94, 0x66, 0xb6,
	0xf2, 0x07, 0xfe, 0xda, 0x14, 0x9e, 0x18, 0x69, 0x0a, 0xff, 0x6a, 0x85, 0xdf, 0x9c, 0x2b, 0x6a,
	0xe9, 0xb3, 0x5e, 0x72, 0x5f, 0x34, 0xe6, 0xfc, 0x72, 0xab, 0xb0, 0x16, 0xdc, 0x94, 0x46, 0x2a,
	0xe3, 0xc0, 0xb5, 0xf4, 0xfb, 0xad, 0x32, 0x96, 0x9e, 0x16, 0xf2, 0x3a, 0xff, 0x3f, 0x64, 0xca,
	0x32, 0xed, 0x43, 0x7f, 0x9c, 0xcc, 0xb5, 0x18, 0xab, 0x7f, 0x3d, 0xb8, 0x12, 0x47, 0x71, 0x82,
	0x9c, 0x84, 0xb1, 0xfa, 0x39, 0xa0, 0xc0, 0x1c, 0x30, 0x71, 0x14, 0x73, 0xc0, 0xaf, 0xd1, 0x1c,
	0x2a, 0x6b, 0xfd, 0xf7, 0x9b, 0xb7, 0x8a, 0xac, 0x74, 0x7c, 0x9c, 0xfa, 0xe8, 0x5a, 0xa1, 0x40,
	0x0a, 0x6a, 0x63, 0xa4, 0xae, 0xd4, 0x54, 0x06, 0xb8, 0x1f, 0xa9, 0x9a, 0x2f, 0x9a, 0x06, 0x2e,
	0xb7, 0xee, 0xb7, 0xf9, 0x45, 0xee, 0x82, 0x62, 0x59, 0xe7, 0xe0, 0xdb, 0x6e, 0xf5, 0x26, 0x93,
	0x8a, 0xd5, 0x41, 0x66, 0xf6, 0x55, 0x3b, 0xfb, 0x5f, 0xa8, 0xa0, 0xfb, 0x0a, 0xdc, 0xae, 0xc6,
	0xfd, 0x88, 0xba, 0xe5, 0x49, 0x5b, 0x74, 0x9e, 0x2c, 0xf3, 0x9f, 0x66, 0x43, 0x9c, 0x2d, 0x19,
	0x55, 0x1b, 0xb3, 0xab, 0xf6, 0xaf, 0x55, 0xd0, 0x33, 0xa0, 0x5d, 0x35, 0xbe, 0x30, 0xdf, 0x56,
	0xd1, 0x7d, 0xf8, 0xc2, 0xac, 0x20, 0x4c, 0xc0, 0x09, 0x4f, 0xbf, 0xe2, 0xca, 0xbc, 0x99, 0x8d,
	0xe5, 0xed, 0x77, 0xc8, 0x18, 0x7c, 0x87, 0x5f, 0x27, 0xb5, 0x7e, 0x37, 0xdb, 0x39, 0x38, 0x88,
	0x89, 0xfa, 0x57, 0xb8, 0xa6, 0x50, 0x10, 0x37, 0x41, 0x5b, 0xc9, 0x06, 0xbe, 0xef, 0xda, 0xc9,
	0xfc, 0x2c, 0x4c, 0xb3, 0xb0, 0x9d, 0x3e, 0x5b, 0xbe, 0xfa, 0x16, 0x8e, 0x7b, 0xbe, 0x4c, 0xce,
	0x54, 0xf4, 0xd8, 0x0c, 0xbb, 0x54, 0x30, 0x95, 0x06, 0x1a, 0xc2, 0x54, 0xd4, 0x1e, 0x2f, 0xd8,
	0x0b, 0x29, 0xa0, 0xc3, 0xf7, 0xaf, 0x3d, 0xf9, 0x32, 0x79, 0x7b, 0x08, 0xa1, 0xf3, 0x8b, 0x0e,
	0x1a, 0xd2, 0x9e, 0xef, 0x55, 0x60, 0x69, 0xbd, 0x1b, 0xc7, 0x9d, 0x9d, 0x6e, 0x9c, 0x79, 0x41,
	0x27, 0x4c, 0x77, 0xb2, 0xa4, 0xdf, 0xce, 0x1c, 0x97, 0xc7, 0x5b, 0xa7, 0xeb, 0xea, 0xb3, 0x2d,
	0x49, 0xa4, 0xc2, 0xad, 0x3b, 0x17, 0x64, 0xc4, 0x52, 0xba, 0xc1, 0x3c, 0xaf, 0xa8, 0xcc, 0xb0,
	0xa5, 0xa3, 0xba, 0x28, 0x33, 0xce, 0xbd, 0xc6, 0xec, 0x73, 0xaf, 0x3f, 0x07, 0x73, 0x56, 0xfe,
	0xce, 0x05, 0x98, 0x0c, 0xfc, 0x6c, 0x2b, 0x8c, 0x02, 0x71, 0xef, 0x79, 0xba, 0x85, 0x29, 0x5e,
	0xbe, 0xc4, 0x32, 0xca, 0xb8, 0xcf, 0x29, 0xab, 0x45, 0x94, 0x02, 0x8b, 0xcf, 0x3e, 0xfd, 0xe4,
	0xfe, 0x6d, 0xff, 0x91, 0x78, 0xa0, 0xc9, 0x93, 0xee, 0x1e, 0x4c, 0x69, 0xbf, 0x38, 0x2b, 0x30,
	0x1e, 0xf5, 0x99, 0x3a, 0x2c, 0x8e, 0xbb, 0x29, 0x45, 0x26, 0xf5, 0xc0, 0xcf, 0xe8, 0x64, 0x54,
	0xba, 0x6b, 0x11, 0x10, 0xe4, 0xc1, 0x38, 0x60, 0xcb, 0x87, 0xe6, 0x39, 0x57, 0x07, 0xb9, 0x7f,
	0xb9, 0x02, 0x33, 0x46, 0x87, 0xb3, 0xae, 0xe6, 0x9e, 0x0e, 0x85, 0xdf, 0x0e, 0x89, 0xb7, 0xdc,
	0x1c, 0x2e, 0x41, 0xfd, 0x01, 0xbe, 0xd1, 0xe5, 0x9b, 0x2b, 0x4c, 0x88, 0xb7, 0x38, 0x7a, 0x89,
	0x0a, 0x80, 0xd7, 0x19, 0x0f, 0x7a, 0xf4, 0xb4, 0x97, 0xbb, 0x46, 0x14, 0x69, 0x77, 0x1d, 0x6f,
	0x05, 0xd9, 0x03, 0x2b, 0x7d, 0x9b, 0x8c, 0x72, 0x87, 0xd4, 0xfd, 0x69, 0xf2, 0x91, 0x99, 0xcb,
	0x84, 0x71, 0xf0, 0x88, 0xd7, 0x50, 0x6f, 0xc1, 0x31, 0xeb, 0xf7, 0xb5, 0xa8, 0x43, 0x17, 0x6c,
	0x85, 0x1c, 0x2c, 0xe2, 0x63, 0xaf, 0xec, 0x2f, 0xb7, 0x8d, 0x7a, 0xdf, 0xad, 0x28, 0x78, 0xa2,
	0xa6, 0x0d, 0xbe, 0x1e, 0xcb, 0xf6, 0xb4, 0x27, 0x4a, 0x4a, 0x39, 0x42, 0xdb, 0x07, 0x5f, 0xc1,
	0xbd, 0x01, 0x2b, 0xc5, 0x6d, 0xc4, 0x71, 0x2e, 0xed, 0x98, 0x92, 0x9f, 0xdc, 0x03, 0xf1, 0x20,
	0xa9, 0xa4, 0x5f, 0xca, 0x8b, 0xab, 0x3c, 0x4e, 0x71, 0xef, 0x0a, 0x4f, 0xea, 0x85, 0x1d, 0x84,
	0x0a, 0x9a, 0x08, 0x57, 0x5e, 0x11, 0x0a, 0x9a, 0x08, 0x58, 0xde, 0x85, 0x93, 0x6b, 0xdd, 0x20,
	0xc9, 0xbe, 0x3f, 0x35, 0x7d, 0x07, 0x8e, 0x17, 0x97, 0x36, 0xbc, 0xa2, 0x6d, 0x38, 0x75, 0x25,
	0xe8, 0x06, 0xd9, 0x33, 0xe5, 0xb5, 0x77, 0xe1, 0x44, 0x49, 0x21, 0xc3, 0x2b, 0xf8, 0x23, 0xea,
	0x49, 0x80, 0x72, 0x5c, 0xf4, 0x82, 0xe5, 0xb8, 0x68, 0xae, 0xa5, 0x68, 0x9e, 0xb2, 0xeb, 0xa2,
	0x9f, 0xaf, 0xc2, 0xf1, 0xed, 0x7e, 0xba, 0x2f, 0xdf, 0xe3, 0xe2, 0xe5, 0x75, 0xf1, 0xba, 0xc6,
	0x85, 0xe9, 0x75, 0x7e, 0x3b, 0x96, 0x81, 0xb9, 0xed, 0xc4, 0x80, 0x31, 0xa1, 0xba, 0x86, 0xf7,
	0x70, 0x88, 0x84, 0x5f, 0x49, 0xd5, 0x40, 0xce, 0x06, 0x2c, 0xb2, 0xae, 0xf0, 0xdb, 0xfc, 0x17,
	0xae, 0xd3, 0x8b, 0x28, 0x67, 0xd7, 0x43, 0x51, 0x2c, 0xd7, 0xe7, 0x8b, 0xa8, 0x99, 0xa4, 0xbc,
	0x19, 0x3f, 0x24, 0x37, 0x0a, 0x5c, 0x52, 0x8a, 0x34, 0x5b, 0x38, 0x88, 0x96, 0x42, 0xc7, 0x35,
	0x3c, 0x91, 0x64, 0x95, 0xbb, 0xe1, 0x3f, 0x5a, 0x0f, 0xf8, 0x92, 0x30, 0x8e, 0x2f, 0x3b, 0x74,
	0x90, 0x8c, 0x6c, 0x22, 0x1c, 0x59, 0xf0, 0x94, 0xfb, 0x4b, 0x55, 0x58, 0x2a, 0x7a, 0x92, 0xe1,
	0x5c, 0x86, 0x19, 0x03, 0x60, 0x3d, 0xfb, 0x31, 0x91, 0xce, 0xd7, 0x8a, 0x9e, 0x7c, 0x54, 0xb9,
	0x59, 0x33, 0x87, 0x29, 0x7a, 0xef, 0x71, 0x01, 0xa6, 0x76, 0xc2, 0x68, 0xaf, 0x1b, 0x50, 0x69,
	0x24, 0x5a, 0xe4, 0x7b, 0x0a, 0x0d, 0xe5, 0x9c, 0x83, 0x06, 0xfb, 0x83, 0xe8, 0xc6, 0x0c, 0x3a,
	0x85, 0x70, 0x5c, 0x98, 0x14, 0x7e, 0xa1, 0x70, 0x57, 0xa6, 0x88, 0x24, 0xdc, 0xf2, 0x3c, 0xc5,
	0x43, 0x9c, 0x28, 0x88, 0xfb, 0x73, 0x15, 0xe3, 0x11, 0x0a, 0x2e, 0x94, 0x97, 0xd4, 0xbb, 0xa3,
	0x4a, 0xd9, 0x7b, 0x14, 0xf9, 0xe8, 0xe8, 0x4d, 0x98, 0xbe, 0x1b, 0x46, 0xa3, 0xf4, 0x88, 0x41,
	0xc7, 0x26, 0xd3, 0x56, 0xbf, 0x7d, 0x7f, 0x33, 0xbd, 0x1b, 0x46, 0xe2, 0x55, 0xaf, 0x04, 0xb8,
	0xbf, 0x52, 0x81, 0x05, 0x9d, 0x99, 0xa9, 0x31, 0x6a, 0x84, 0xf5, 0xd8, 0x35, 0x9d, 0xfc, 0x40,
	0x56, 0x07, 0x0d, 0x64, 0xe1, 0xdb, 0x9d, 0xda, 0xd1, 0xde, 0xee, 0xb8, 0x3e, 0x38, 0xda, 0xc3,
	0x77, 0x31, 0xdd, 0x2f, 0xc1, 0xc4, 0x7a, 0x90, 0x0d, 0xe9, 0x39, 0x4e, 0x81, 0xcf, 0xb5, 0xe4,
	0x01, 0x96, 0xd0, 0x71, 0x14, 0xc4, 0x8d, 0x60, 0xde, 0x28, 0x62, 0xa8, 0x08, 0xd2, 0xfa, 0xa7,
	0x6a, 0xf4, 0xcf, 0x39, 0x98, 0xa1, 0x63, 0x7a, 0x51, 0x18, 0x69, 0x2f, 0x26, 0xd0, 0x3d, 0x0e,
	0xc7, 0x44, 0x79, 0x77, 0x7a, 0x62, 0xc6, 0x92, 0x05, 0xf4, 0x06, 0x2c, 0xe7, 0x51, 0x8f, 0x5d,
	0x1f, 0xf7, 0x24, 0x1c, 0x57, 0x62, 0x90, 0x1c, 0x2b, 0xa8, 0xb2, 0x6e, 0xa9, 0x6a, 0xe8, 0xc8,
	0xc7, 0x2f, 0xed, 0x27, 0x2a, 0xf4, 0x3a, 0x49, 0xe4, 0xea, 0x05, 0x7e, 0xe7, 0x70, 0x33, 0x0a,
	0x33, 0xed, 0xb1, 0x46, 0xc5, 0x78, 0xac, 0xf1, 0xb2, 0x30, 0x03, 0xf2, 0x38, 0x11, 0x14, 0x70,
	0x93, 0x65, 0xa7, 0xbd, 0x74, 0xd4, 0x48, 0x9c, 0xf3, 0x30, 0x2b, 0x72, 0xe7, 0x2f, 0xcf, 0x6a,
	0x28, 0x9f, 0x2c, 0xa8, 0xdb, 0x81, 0x15, 0x83, 0xab, 0x95, 0xcb, 0xa5, 0x55, 0x98, 0xc4, 0x97,
	0x4c, 0x81, 0xe6, 0x3a, 0xbd, 0x90, 0xd4, 0x93, 0x74, 0xa5, 0x0d, 0xfe, 0xa9, 0xaa, 0xd9, 0x60,
	0xf9, 0x6f, 0xe9, 0x04, 0x12, 0xf7, 0x0c, 0xab, 0xda, 0x3d, 0x43, 0x26, 0x39, 0x94, 0x93, 0x28,
	0x6a, 0x8f, 0x06, 0xb1, 0x05, 0xf2, 0x58, 0xa1, 0x40, 0xe6, 0xbd, 0x51, 0x47, 0x24, 0x4f, 0xe5,
	0xd9, 0x71, 0xbc, 0x80, 0x1d, 0xf5, 0xb9, 0x34, 0x31, 0xca, 0x5c, 0xf2, 0x3b, 0x1d, 0xf3, 0x15,
	0x87, 0x06, 0x71, 0x6f, 0x98, 0x6b, 0x23, 0x19, 0x9d, 0xc4, 0xd2, 0x52, 0xd6, 0x2b, 0xda, 0x62,
	0x54, 0x35, 0x16, 0x23, 0xb7, 0x0b, 0x4b, 0x7a, 0x76, 0xf2, 0xe5, 0x59, 0x19, 0x43, 0xbd, 0xa7,
	0xa6, 0xb2, 0x7c, 0xd3, 0x46, 0x6c, 0x35, 0xdf, 0xb2, 0x10, 0x5e, 0x8e, 0xd2, 0xfd, 0xa9, 0x31,
	0x58, 0xe0, 0x6f, 0xe4, 0x14, 0xff, 0x39, 0x17, 0x00, 0xf6, 0xfd, 0xa8, 0xc3, 0xf6, 0xa9, 0x68,
	0xda, 0x61, 0xb9, 0x4d, 0xb6, 0xc4, 0xf3, 0x3a, 0x0d, 0xc7, 0xd6, 0x7e, 0x96, 0x42, 0x3f, 0x66,
	0xea, 0x35, 0xae, 0x01, 0x73, 0x2e, 0xc3, 0x74, 0xdc, 0xcf, 0x7a, 0xfd, 0x8c, 0xe7, 0x57, 0xb3,
	0xf2, 0x33, 0xb0, 0xce, 0x2b, 0x6c, 0x55, 0x89, 0xf6, 0x38, 0xed, 0x18, 0x6f, 0x89, 0xa8, 0x63,
	0x1c, 0xed, 0xd1, 0x0c, 0x51, 0x34, 0xec, 0x8f, 0xeb, 0xea, 0x8f, 0xba, 0xf9, 0xc7, 0x75, 0xf9,
	0x87, 0xa2, 0x61, 0xed, 0xdb, 0xd8, 0x8f, 0x1f, 0xf2, 0x3f, 0xc6, 0xed, 0xf6, 0x29, 0x9c, 0x73,
	0x1e, 0x1a, 0x77, 0xc3, 0x88, 0x13, 0x4e, 0x58, 0x84, 0x0a, 0xc5, 0x72, 0x8c, 0x82, 0x87, 0x1c,
	0x81, 0x4c, 0x62, 0xe4, 0xa8, 0x70, 0xce, 0x25, 0x68, 0xec, 0x76, 0xfd, 0xe8, 0xfe, 0x4e, 0x3f,
	0xcc, 0xf8, 0x3d, 0x96, 0x19, 0x41, 0xb8, 0x11, 0x77, 0xe3, 0xc4, 0x53, 0x78, 0xe7, 0x6d, 0x8c,
	0xd8, 0x97, 0x75, 0x79, 0x58, 0x5f, 0xf4, 0x74, 0xc3, 0xd4, 0x36, 0x4e, 0xbf, 0xa3, 0xe1, 0x3c,
	0x83, 0xd2, 0x79, 0x1b, 0xe0, 0xa1, 0x1f, 0x66, 0x1b, 0xfb, 0x71, 0xd8, 0xa6, 0x8b, 0x65, 0x53,
	0xab, 0x4d, 0xf1, 0xdf, 0x5d, 0x89, 0x11, 0x31, 0xe2, 0x15, 0xad, 0xfb, 0x93, 0x15, 0x38, 0xb6,
	0x15, 0x46, 0x1b, 0x7e, 0xb4, 0xc7, 0xc9, 0x95, 0xce, 0xf9, 0x92, 0xa5, 0x73, 0x2e, 0xb7, 0x6c,
	0xca, 0xa7, 0xac, 0x79, 0xee, 0xc3, 0x72, 0xbe, 0x2e, 0x4c, 0x5e, 0xbf, 0x55, 0xe4, 0x65, 0xb1,
	0xa4, 0x3a, 0x23, 0x79, 0x74, 0x64, 0xcd, 0xfe, 0x46, 0x3f, 0xf8, 0xd6, 0xbe, 0x1f, 0x8d, 0xd0,
	0x6c, 0x9b, 0xf2, 0xe9, 0x37, 0x3b, 0x5f, 0x97, 0x01, 0xcd, 0x2e, 0xac, 0xce, 0x48, 0xcd, 0xfe,
	0xbd, 0x8a, 0x14, 0x00, 0xb7, 0x70, 0x1a, 0xa2, 0x00, 0xb8, 0x0c, 0x0b, 0x34, 0x29, 0x85, 0x50,
	0x50, 0x16, 0xf0, 0x3c, 0xc2, 0xb9, 0x08, 0xf3, 0x3a, 0x50, 0x2b, 0x25, 0x07, 0x77, 0xde, 0x14,
	0x39, 0x0b, 0x96, 0xf7, 0x93, 0x0e, 0x57, 0x57, 0xd5, 0x7c, 0xc9, 0x93, 0x38, 0x4b, 0x50, 0xdf,
	0xbd, 0x16, 0x76, 0x02, 0xee, 0xf1, 0x93, 0x12, 0xee, 0xbf, 0xac, 0xc0, 0x9c, 0x25, 0x1a, 0xd0,
	0xc3, 0xa0, 0x26, 0xce, 0x54, 0xcd, 0x6d, 0x30, 0xba, 0xba, 0x96, 0x20, 0xad, 0xd6, 0x16, 0xd4,
	0x59, 0xa5, 0x1c, 0xf5, 0x1a, 0x8f, 0x59, 0x35, 0xb6, 0x09, 0x9c, 0x57, 0x60, 0xf1, 0xc0, 0xbf,
	0x1f, 0x6c, 0x5b, 0x35, 0x21, 0x8f, 0x8a, 0x45, 0x28, 0xa7, 0x05, 0x8e, 0x09, 0xc6, 0x1a, 0xd1,
	0x01, 0x5a, 0x01, 0xc6, 0xfd, 0x37, 0xab, 0xb2, 0xed, 0xd7, 0xb5, 0xb6, 0xdf, 0x2f, 0x6e, 0xfb,
	0xfd, 0x7c, 0xdb, 0xef, 0x17, 0xb6, 0xdd, 0x84, 0x3a, 0xe7, 0x60, 0x8c, 0x41, 0xa4, 0x6f, 0x56,
	0xad, 0xc4, 0x0f, 0xa3, 0xfe, 0x81, 0x87, 0x58, 0xd6, 0x43, 0xf7, 0x87, 0xf5, 0xd0, 0xfd, 0xe2,
	0x1e, 0xba, 0x5e, 0xde, 0x43, 0xd7, 0x8b, 0x7b, 0xe8, 0x7a, 0x69, 0x0f, 0x99, 0x18, 0xf7, 0xef,
	0xd6, 0x60, 0x56, 0x48, 0x3c, 0xbe, 0xff, 0x38, 0x0f, 0xb3, 0x0f, 0xc9, 0xf9, 0x97, 0xd9, 0x3f,
	0x16, 0x94, 0xe9, 0x11, 0x12, 0xa2, 0xbb, 0x0f, 0x32, 0x80, 0x8e, 0x0b, 0x13, 0x0f, 0x99, 0xc0,
	0x29, 0x60, 0x61, 0x81, 0x70, 0x5e, 0x44, 0x1a, 0x7e, 0x27, 0xb0, 0x86, 0xfb, 0x74, 0x55, 0x27,
	0xec, 0x42, 0x81, 0x77, 0x5e, 0xc3, 0xa7, 0xc9, 0x3b, 0x78, 0x76, 0x25, 0xdf, 0xac, 0x2a, 0x62,
	0x42, 0xe0, 0x2f, 0x8a, 0xae, 0x78, 0xaa, 0x8e, 0x97, 0x4f, 0xd5, 0x29, 0x02, 0x92, 0x37, 0x52,
	0x7b, 0x45, 0xd3, 0x91, 0xce, 0x65, 0x98, 0xec, 0x71, 0xc6, 0xc2, 0x8b, 0x73, 0x45, 0xeb, 0xb0,
	0xa4, 0x60, 0xd4, 0xf7, 0x05, 0x75, 0xa3, 0x64, 0x0d, 0x96, 0x14, 0x6c, 0xa3, 0xce, 0x9a, 0x80,
	0x3b, 0x47, 0xfe, 0x42, 0x5b, 0xa4, 0xdd, 0x5f, 0xac, 0xc0, 0x31, 0xfe, 0x27, 0xd9, 0x10, 0xcc,
	0xc7, 0xf4, 0xbd, 0xdc, 0xe0, 0xe9, 0x20, 0xeb, 0x25, 0x64, 0x35, 0xf7, 0x12, 0xf2, 0x3d, 0x98,
	0xde, 0xd5, 0x72, 0xe5, 0x8c, 0x2d, 0x97, 0x46, 0xbd, 0x44, 0xec, 0x6a, 0x83, 0xda, 0xfd, 0xdf,
	0x2b, 0xe0, 0x88, 0xce, 0x62, 0xba, 0x3e, 0x5f, 0x6d, 0x87, 0x57, 0x4b, 0x63, 0x95, 0x6a, 0x19,
	0xab, 0x9c, 0x83, 0x99, 0x24, 0x38, 0xf0, 0x29, 0xa5, 0x3c, 0xa7, 0x98, 0x40, 0xe7, 0x39, 0x7e,
	0xed, 0xa9, 0x84, 0x9b, 0xe8, 0xb5, 0xea, 0x4b, 0x30, 0x9e, 0x8e, 0xc0, 0x47, 0x9c, 0x08, 0xcf,
	0x6a, 0xe5, 0x2e, 0xbe, 0xee, 0x51, 0xc2, 0xdd, 0x96, 0xd3, 0xe7, 0x4a, 0xdc, 0xdf, 0xed, 0x06,
	0xe9, 0x08, 0xed, 0x3c, 0x05, 0x63, 0xed, 0xa2, 0x46, 0x22, 0x54, 0xcb, 0xf1, 0x76, 0x12, 0xf6,
	0x9e, 0x46, 0x8e, 0x3b, 0x72, 0xf9, 0xfa, 0x7a, 0xdf, 0xef, 0x24, 0xfd, 0xa7, 0x92, 0xe9, 0x6f,
	0x4f, 0x4a, 0xd1, 0x7a, 0xd5, 0x3f, 0x08, 0x38, 0x7f, 0x4f, 0x1f, 0x28, 0xe9, 0x95, 0xe6, 0xb4,
	0x62, 0x03, 0xeb, 0xac, 0xc2, 0x92, 0x96, 0xbe, 0xeb, 0x77, 0xbb, 0xba, 0x27, 0xf5, 0x42, 0x9c,
	0xf3, 0x3a, 0xcc, 0xc7, 0xbd, 0x20, 0xba, 0xa1, 0x97, 0x62, 0xeb, 0xca, 0x39, 0x0a, 0x63, 0x96,
	0x8e, 0x1d, 0x69, 0x96, 0xd6, 0x87, 0xce, 0xd2, 0x55, 0x80, 0x58, 0x2a, 0x05, 0x5c, 0x4f, 0x76,
	0x5a, 0x39, 0x75, 0xc1, 0xd3, 0xa8, 0x9c, 0xf7, 0x61, 0x3a, 0xbc, 0xa7, 0x70, 0x5c, 0xc4, 0x1c,
	0x6f, 0xe9, 0xb3, 0x86, 0x21, 0x36, 0x39, 0x91, 0x67, 0x90, 0x3b, 0x6f, 0xc0, 0x54, 0xa2, 0x26,
	0x16, 0x97, 0x3b, 0x8b, 0xad, 0xfc, 0x9c, 0xf3, 0x74, 0x3a, 0x26, 0x65, 0x3b, 0xc4, 0xa3, 0x5c,
	0xf8, 0xc8, 0x79, 0xc1, 0x59, 0xd7, 0x13, 0x78, 0x46, 0x9a, 0x11, 0xf3, 0x71, 0x75, 0x5a, 0x92,
	0x72, 0x9e, 0xf4, 0x04, 0x9e, 0xb5, 0xff, 0x73, 0xc9, 0x55, 0xdc, 0xf7, 0x8c, 0x6c, 0xbf, 0xe2,
	0x37, 0x4f, 0xa3, 0x92, 0x0b, 0xe6, 0x34, 0x4e, 0xcf, 0xb2, 0x05, 0xf3, 0x2a, 0x2c, 0x3c, 0x54,
	0x8e, 0x57, 0xe9, 0xd0, 0x1f, 0x5d, 0xca, 0x68, 0x5d, 0x75, 0xd7, 0x26, 0xf0, 0xf2, 0xff, 0x38,
	0x3b, 0xb0, 0xbc, 0xef, 0xa7, 0xeb, 0x41, 0x20, 0xbc, 0x98, 0x76, 0x78, 0x66, 0xb3, 0x98, 0xd9,
	0x69, 0x91, 0xd9, 0xb5, 0x22, 0x22, 0xaf, 0xf8, 0x5f, 0x36, 0x7f, 0xee, 0x73, 0x06, 0x63, 0x62,
	0x88, 0x1e, 0xcc, 0xea, 0x20, 0x6b, 0xbf, 0x33, 0x3f, 0x60, 0xbf, 0x43, 0xeb, 0x1f, 0xb2, 0xc2,
	0x82, 0xd9, 0xdd, 0x62, 0x57, 0x2a, 0xf0, 0x4c, 0x8f, 0xe4, 0xf5, 0x59, 0x97, 0x3b, 0x24, 0x07,
	0xd5, 0xbd, 0x1c, 0xdc, 0xdc, 0x46, 0x2d, 0x62, 0x5f, 0x8f, 0xbe, 0x8d, 0x5a, 0x1a, 0x79, 0x1b,
	0xc5, 0xd4, 0xce, 0x2b, 0x89, 0xff, 0x10, 0x5f, 0xde, 0x32, 0xb5, 0x93, 0x25, 0x10, 0xca, 0x26,
	0x17, 0xfa, 0xd4, 0x61, 0x50, 0x96, 0x70, 0x7f, 0xb5, 0x0a, 0x27, 0xcc, 0xfd, 0x87, 0x78, 0x0f,
	0xc4, 0x32, 0x7c, 0x0a, 0x4b, 0x97, 0x76, 0x53, 0xa6, 0x66, 0x5f, 0x85, 0x6d, 0xc8, 0x2d, 0x37,
	0x97, 0x02, 0xda, 0x36, 0x55, 0xa2, 0xf4, 0xc1, 0xa8, 0xf3, 0xc8, 0xb6, 0x65, 0x83, 0x71, 0x0a,
	0x1a, 0x6c, 0xc0, 0x77, 0xb4, 0x65, 0x41, 0x01, 0x8c, 0xf5, 0x7b, 0x82, 0x2e, 0xbf, 0x88, 0x34,
	0xbe, 0x66, 0x89, 0x33, 0xbf, 0xab, 0x2e, 0xf5, 0xd5, 0x3d, 0x0d, 0xe2, 0xde, 0x85, 0x25, 0xb3,
	0x9b, 0x78, 0x07, 0x7d, 0x55, 0xf8, 0x39, 0xe6, 0x2b, 0x33, 0x49, 0xd8, 0x93, 0xad, 0xf2, 0x3e,
	0xf5, 0x8c, 0x1f, 0xdc, 0x5f, 0xaf, 0x81, 0x6b, 0x12, 0xe3, 0xcd, 0x15, 0x8c, 0x7a, 0x84, 0xf7,
	0x58, 0xe8, 0x60, 0xf8, 0x2c, 0x4c, 0xed, 0xde, 0x8c, 0xb7, 0xf9, 0xa4, 0xe4, 0xc6, 0x3e, 0x1d,
	0xc4, 0x18, 0x71, 0xf7, 0xa3, 0xf0, 0x41, 0xb0, 0xdd, 0xed, 0x1f, 0xac, 0x77, 0xe3, 0x34, 0x8d,
	0x0f, 0x78, 0x7c, 0x8d, 0x1c, 0x1c, 0x73, 0xdb, 0x09, 0x1e, 0x04, 0xd1, 0x4e, 0xe6, 0x27, 0x29,
	0x37, 0x37, 0xeb, 0x20, 0x7c, 0xa3, 0x75, 0x3b, 0x88, 0x6e, 0x75, 0x3b, 0x37, 0x82, 0x88, 0xef,
	0x5f, 0x34, 0x08, 0xeb, 0x4b, 0x64, 0xab, 0x9d, 0xfb, 0x87, 0xdc, 0xef, 0xb6, 0x4c, 0x3b, 0x2e,
	0x4c, 0xef, 0x5e, 0x09, 0x53, 0xb6, 0x2a, 0x6d, 0xf9, 0x51, 0x87, 0xdf, 0x82, 0x32, 0x60, 0xf8,
	0xff, 0x35, 0x3f, 0xe9, 0xac, 0xfb, 0x74, 0x3c, 0xc1, 0xfe, 0xe7, 0x69, 0xac, 0xdd, 0x8d, 0xb0,
	0xd3, 0xe9, 0x06, 0x5b, 0x7e, 0x4a, 0x3e, 0x78, 0x59, 0xed, 0x14, 0x88, 0x8d, 0xf3, 0xee, 0x4e,
	0xd8, 0x21, 0x7c, 0x83, 0x0c, 0x9f, 0x12, 0x40, 0x9c, 0xde, 0xe5, 0x6f, 0x98, 0x91, 0xd3, 0xbb,
	0xfd, 0xd4, 0x59, 0x87, 0x53, 0x5a, 0x03, 0xd7, 0xa2, 0x8e, 0x6c, 0xcc, 0x47, 0x61, 0x82, 0x5e,
	0xba, 0x18, 0xf1, 0x40, 0x1a, 0xf7, 0x67, 0x2a, 0xb0, 0xc2, 0x47, 0x49, 0x2e, 0x05, 0xea, 0xbc,
	0x2d, 0xe1, 0xb1, 0x3a, 0xf9, 0x59, 0xa0, 0x16, 0xbc, 0x53, 0xa2, 0x72, 0xa6, 0xd4, 0xca, 0x30,
	0x53, 0xaa, 0x35, 0x03, 0x6b, 0xb9, 0x19, 0xe8, 0xfe, 0x85, 0x0a, 0x2c, 0xe5, 0x2a, 0xc5, 0xf6,
	0xdd, 0xf6, 0xaa, 0x56, 0x39, 0xda, 0xaa, 0xc6, 0x18, 0x6a, 0xc3, 0x8f, 0x76, 0x82, 0xee, 0x3d,
	0x36, 0xb2, 0xd1, 0xdd, 0x30, 0x92, 0x0c, 0x65, 0xc1, 0xdd, 0xff, 0x48, 0x75, 0xcc, 0x86, 0x1f,
	0x61, 0xce, 0xa2, 0x63, 0x2e, 0xd3, 0x41, 0xa4, 0xd6, 0x31, 0x72, 0x7d, 0x11, 0x7a, 0x8a, 0x27,
	0x29, 0x9e, 0x41, 0xff, 0x38, 0x67, 0xa0, 0xde, 0x2e, 0x94, 0x31, 0x04, 0x76, 0x6f, 0xc8, 0xee,
	0x53, 0x55, 0x67, 0xdd, 0x67, 0xad, 0xea, 0x95, 0xd1, 0x56, 0x75, 0xf7, 0xd7, 0x2a, 0xf0, 0x25,
	0x9d, 0x86, 0xed, 0x92, 0xd6, 0xa2, 0x0e, 0x8a, 0x91, 0x23, 0x32, 0x8b, 0x55, 0x83, 0xea, 0x88,
	0x7a, 0x85, 0x21, 0x58, 0x6b, 0xa5, 0x82, 0xd5, 0xfd, 0x04, 0x4e, 0x97, 0x57, 0xf4, 0x09, 0x7a,
	0xe0, 0xa7, 0x2b, 0x70, 0x52, 0x8c, 0x70, 0x90, 0xe5, 0xf2, 0x66, 0xb3, 0x57, 0xd5, 0xaf, 0x82,
	0x0e, 0x81, 0x35, 0x71, 0x7f, 0x0a, 0x1a, 0x3d, 0xa9, 0x4a, 0x56, 0x09, 0x2b, 0x01, 0x42, 0xc2,
	0xab, 0xb6, 0x71, 0x09, 0x4f, 0xd8, 0xa6, 0xda, 0xb0, 0xd0, 0x55, 0x1f, 0x91, 0x74, 0xd7, 0xe1,
	0xb8, 0xd0, 0xad, 0x02, 0xbf, 0x2b, 0x5b, 0x70, 0x94, 0xe1, 0x70, 0xbf, 0x26, 0xb7, 0x78, 0x46,
	0x1e, 0xfc, 0xd6, 0xc5, 0x28, 0x39, 0x68, 0xb5, 0x48, 0xfc, 0x87, 0x8f, 0x57, 0x8b, 0x3f, 0x07,
	0xcd, 0xb2, 0x09, 0xcc, 0xf4, 0x7d, 0x31, 0x85, 0xb1, 0x13, 0x2a, 0x96, 0x8e, 0x63, 0x60, 0x1f,
	0x93, 0xbd, 0xdc, 0x9f, 0x52, 0x5b, 0x5d, 0xa3, 0x15, 0xa3, 0xf7, 0x83, 0xd4, 0x37, 0xab, 0x25,
	0xda, 0x3c, 0xe9, 0x9b, 0x17, 0x30, 0x3e, 0x84, 0x21, 0x7f, 0x68, 0xa5, 0xb2, 0xc1, 0xee, 0x9f,
	0x91, 0x0c, 0x77, 0x4b, 0x37, 0xc2, 0x1d, 0x71, 0xba, 0x15, 0x9a, 0xf9, 0xaa, 0x43, 0xcd, 0x7c,
	0xee, 0xef, 0x54, 0xe4, 0x90, 0xe4, 0xd4, 0xdf, 0x11, 0x34, 0xa8, 0x37, 0x4c, 0xf3, 0x68, 0x95,
	0x7b, 0x5e, 0x14, 0x0d, 0x22, 0x14, 0xaa, 0xe1, 0x76, 0x9c, 0xa2, 0x27, 0x5b, 0xc3, 0xdd, 0xff,
	0xad, 0x02, 0xa7, 0x06, 0x69, 0xda, 0x23, 0xd4, 0xfd, 0xab, 0x5c, 0xfb, 0xbd, 0x35, 0x5a, 0x03,
	0x72, 0xc4, 0x4f, 0x41, 0x13, 0x39, 0x47, 0xbb, 0x43, 0x1c, 0xac, 0xba, 0x35, 0x58, 0x12, 0xa3,
	0xcd, 0x3c, 0x8b, 0x43, 0x1e, 0x6b, 0xf6, 0x6e, 0xab, 0x76, 0x3d, 0xb6, 0x0c, 0x31, 0xf2, 0x38,
	0x42, 0x2d, 0xf6, 0x65, 0x2d, 0xae, 0x3f, 0x6e, 0x2d, 0x8c, 0x3e, 0xab, 0x96, 0xf6, 0xd9, 0xaf,
	0xab, 0x89, 0x7e, 0xfd, 0xf1, 0x2a, 0xeb, 0x7c, 0x00, 0x27, 0xda, 0x3e, 0x9b, 0xa2, 0xeb, 0x87,
	0x5e, 0xbc, 0x6b, 0x9b, 0x4d, 0x49, 0xba, 0x0f, 0xa0, 0xe0, 0x22, 0x80, 0xcd, 0xf3, 0x5b, 0xbd,
	0x40, 0x19, 0x2d, 0x49, 0x04, 0xe8, 0x60, 0x77, 0x4d, 0xcd, 0xc1, 0x30, 0x7a, 0xbc, 0xb1, 0xf9,
	0xaa, 0xd4, 0x61, 0xf4, 0x2c, 0x8e, 0x30, 0x34, 0xbf, 0x54, 0x85, 0xc5, 0x82, 0xed, 0xd9, 0x53,
	0xd8, 0x45, 0xb9, 0x30, 0xed, 0xa3, 0x8b, 0x31, 0x3a, 0xa9, 0xe5, 0x17, 0x16, 0x0c, 0x98, 0x61,
	0x26, 0x19, 0x33, 0x15, 0xad, 0x02, 0x33, 0xc9, 0x11, 0x76, 0x55, 0x57, 0x60, 0x7e, 0xd7, 0xb2,
	0x69, 0xa2, 0x4e, 0x3f, 0x55, 0x6c, 0x81, 0xa4, 0x53, 0x5b, 0xfb, 0x0f, 0xf7, 0x77, 0x95, 0x8a,
	0xc8, 0x46, 0xf8, 0x4a, 0xd8, 0x0e, 0x52, 0x1e, 0xac, 0xb0, 0xec, 0x98, 0xd8, 0xf2, 0x42, 0x5a,
	0xcd, 0x79, 0x21, 0x2d, 0x35, 0x59, 0xd5, 0x06, 0x98, 0xac, 0x4e, 0xf0, 0xb0, 0x32, 0x5a, 0xd0,
	0x6e, 0x91, 0x66, 0x5b, 0x87, 0x0e, 0xab, 0x18, 0xda, 0x99, 0xea, 0x1e, 0x25, 0xdc, 0xff, 0xb6,
	0x26, 0x0d, 0x76, 0x6c, 0xe5, 0x7f, 0xe2, 0x5a, 0x8f, 0xa2, 0xb3, 0x0e, 0x76, 0x6e, 0x6a, 0xa8,
	0x78, 0xf5, 0xf2, 0xbd, 0xf3, 0x65, 0x58, 0x88, 0xb3, 0xfd, 0x20, 0x49, 0xaf, 0x71, 0x90, 0x70,
	0x48, 0x55, 0xf7, 0xf2, 0x08, 0xe7, 0x2d, 0x98, 0x8e, 0x7b, 0x99, 0x92, 0xe4, 0x13, 0xe5, 0x92,
	0xdc, 0x20, 0x2c, 0x1d, 0x86, 0xc9, 0x11, 0x87, 0xa1, 0x61, 0x0d, 0x43, 0x91, 0x55, 0x11, 0x86,
	0x5a, 0x15, 0x4d, 0xfb, 0xce, 0x54, 0xb9, 0x7d, 0xc7, 0xfd, 0x1b, 0x8a, 0x17, 0xa5, 0x75, 0x66,
	0xf8, 0xa8, 0xf6, 0x0c, 0xd1, 0x95, 0x1b, 0x33, 0xc3, 0xba, 0x53, 0x1b, 0x72, 0x48, 0x3e, 0x80,
	0x09, 0xdd, 0x8f, 0xd4, 0x51, 0x82, 0xa0, 0x57, 0x17, 0xaa, 0xb4, 0x32, 0x2a, 0x83, 0xcb, 0x70,
	0x7f, 0x04, 0xfe, 0x3f, 0xe6, 0xde, 0x34, 0xbc, 0x92, 0xe4, 0x2a, 0x10, 0xed, 0xbc, 0x8b, 0x96,
	0xd0, 0x16, 0xca, 0x52, 0xed, 0xd5, 0x55, 0x5d, 0xb7, 0xf7, 0xeb, 0x6e, 0x75, 0x77, 0xf5, 0xe2,
	0x76, 0x1b, 0x1e, 0x68, 0x29, 0xa9, 0xaa, 0x4b, 0xa5, 0x52, 0x4b, 0x2a, 0x97, 0xdd, 0x6f, 0x3c,
	0xfa, 0x52, 0xba, 0x51, 0x52, 0xa2, 0x54, 0xe6, 0x25, 0xef, 0xbd, 0xa5, 0x52, 0xe3, 0x31, 0x36,
	0x36, 0xbb, 0x1b, 0xb0, 0xf1, 0x6e, 0xec, 0xb1, 0x87, 0xc5, 0xef, 0x99, 0xcd, 0x18, 0x63, 0xf0,
	0x0c, 0xb6, 0x31, 0xf6, 0x30, 0x18, 0x6c, 0xb0, 0x19, 0x06, 0x30, 0x33, 0x2c, 0xc3, 0x9b, 0x07,
	0x66, 0x7b, 0x6f, 0xde, 0xcc, 0x63, 0x99, 0x61, 0xf1, 0xfb, 0xce, 0x39, 0xb1, 0x66, 0xe6, 0xbd,
	0x52, 0xb7, 0x1b, 0x78, 0xff, 0x32, 0xcf, 0x39, 0x11, 0x71, 0xe2, 0xc4, 0x76, 0xe2, 0xc4, 0x89,
	0x13, 0x87, 0xf3, 0xf9, 0xc0, 0x74, 0xf6, 0x8f, 0x53, 0xc7, 0xda, 0x75, 0xbd, 0x11, 0x9a, 0x8a,
	0x22, 0xe9, 0xcc, 0x72, 0x40, 0x69, 0x3b, 0xe5, 0x94, 0x7a, 0x5b, 0xca, 0x6a, 0xaf, 0x2d, 0x6b,
	0xf5, 0x4f, 0x19, 0x5a, 0x64, 0x9f, 0xfe, 0x87, 0x1f, 0xa8, 0xd9, 0x21, 0x53, 0xf9, 0x4a, 0x87,
	0x4c, 0xf5, 0x80, 0x43, 0xa6, 0x2f, 0x33, 0x64, 0x32, 0xe6, 0xcf, 0xfe, 0xbc, 0xf9, 0x53, 0x1d,
	0x1f, 0x0c, 0x14, 0x1d, 0x1f, 0xe4, 0x8c, 0x05, 0x83, 0xcf, 0xc9, 0x58, 0x50, 0xdb, 0x63, 0xa7,
	0x5c, 0x2b, 0x56, 0x66, 0x09, 0x7e, 0xb4, 0xc8, 0x07, 0x60, 0x7f, 0x25, 0xb7, 0xc6, 0xfa, 0xa5,
	0x24, 0xf2, 0x27, 0x50, 0x12, 0x51, 0x7b, 0x59, 0xd6, 0x82, 0xe9, 0x2c, 0xdd, 0xcf, 0xbb, 0xaf,
	0xd7, 0x7e, 0xc8, 0x63, 0xa7, 0x5c, 0x1f, 0x85, 0x7f, 0xb4, 0x3a, 0x3d, 0xb7, 0x71, 0xf6, 0x32,
	0x76, 0xa2, 0x0b, 0x9f, 0x5f, 0x99, 0x00, 0x7e, 0xd4, 0xa8, 0x33, 0xd4, 0xd2, 0x5f, 0xf1, 0x78,
	0x2a, 0x3c, 0xf7, 0x2d, 0x77, 0x3b, 0xf7, 0x2d, 0xdc, 0x8f, 0x55, 0xf6, 0x77, 0xbb, 0x38, 0xe8,
	0xe2, 0x98, 0xf5, 0x03, 0xeb, 0x2b, 0xf0, 0x03, 0x7b, 0x0e, 0x67, 0xcf, 0xb5, 0x37, 0x95, 0xf4,
	0xc4, 0x9d, 0x75, 0x56, 0xfa, 0x07, 0x9d, 0x83, 0x6a, 0x6c, 0xb8, 0x99, 0x84, 0x71, 0x7b, 0x55,
	0xbe, 0x2c, 0x47, 0xa6, 0x0f, 0x07, 0xe6, 0x4c, 0x1d, 0xd5, 0xcc, 0xd4, 0xf1, 0x00, 0x1b, 0x90,
	0xfd, 0x53, 0x45, 0x6f, 0x28, 0xec, 0xc4, 0x9a, 0x08, 0x84, 0xb2, 0x11, 0xc4, 0x97, 0x54, 0x93,
	0xe4, 0x84, 0x62, 0x21, 0x6b, 0xef, 0x35, 0xba, 0x13, 0xec, 0x78, 0xfe, 0x91, 0xbb, 0x50, 0xa6,
	0xf9, 0x2a, 0xbd, 0x5c, 0x07, 0x0a, 0x7c, 0x70, 0xaa, 0xdd, 0x7c, 0x70, 0xac, 0x0e, 0xd6, 0xd7,
	0xbd, 0x83, 0x3d, 0xce, 0x8e, 0x9a, 0xa4, 0x4a, 0xd1, 0x5a, 0x10, 0x71, 0x7b, 0x4b, 0xce, 0xcf,
	0xdd, 0xd0, 0xcf, 0xd1, 0x8d, 0xe1, 0x2b, 0x9c, 0xbb, 0x3f, 0x69, 0x9a, 0xe8, 0xd2, 0x0b, 0xd1,
	0x44, 0x05, 0x0e, 0x3d, 0xe5, 0x62, 0x87, 0x1e, 0xb9, 0x65, 0xb1, 0x56, 0xce, 0xfc, 0xd9, 0xa3,
	0xa6, 0x38, 0xf0, 0xb8, 0x7e, 0x9c, 0x1d, 0xdd, 0xee, 0x22, 0x76, 0x1a, 0xe2, 0xdd, 0xd0, 0xfe,
	0x24, 0x59, 0x17, 0xc9, 0x21, 0xb5, 0xbf, 0x8b, 0x71, 0xca, 0x90, 0xd0, 0x53, 0xbe, 0x8a, 0xbe,
	0x5b, 0x3b, 0x19, 0x92, 0xe2, 0xce, 0x3b, 0x78, 0xc0, 0xce, 0xcb, 0x7a, 0xcd, 0x3d, 0xcf, 0x68,
	0x53, 0x0e, 0x8e, 0x3c, 0xdc, 0x11, 0xe2, 0xb3, 0x6a, 0xfb, 0xb7, 0xe6, 0x86, 0x21, 0x46, 0x55,
	0x8b, 0x2e, 0xaf, 0x2a, 0x10, 0x5d, 0x0b, 0xdf, 0x09, 0xc2, 0x98, 0x28, 0xc8, 0xf1, 0xd9, 0x06,
	0xd5, 0x3e, 0x60, 0xb4, 0x69, 0xbc, 0x1c, 0x73, 0xb0, 0x4e, 0xb4, 0x8f, 0xa6, 0x29, 0x4f, 0x1f,
	0x6c, 0xc3, 0x80, 0xdc, 0xfa, 0xe7, 0xe0, 0x8a, 0xd6, 0x31, 0x13, 0x54, 0x0c, 0xad, 0x63, 0x27,
	0xb8, 0xca, 0xb8, 0xd9, 0xe7, 0xee, 0xc3, 0xa5, 0xb5, 0x47, 0x2e, 0xf5, 0x3e, 0x06, 0xae, 0xbd,
	0xdf, 0xd3, 0x66, 0x19, 0x7b, 0x2f, 0xbc, 0x4f, 0x01, 0xf7, 0x49, 0xb7, 0x98, 0xd2, 0x3e, 0xfe,
	0x3c, 0xe4, 0x1f, 0x93, 0x8d, 0x17, 0x4f, 0x4d, 0xe1, 0xc6, 0x8b, 0xcf, 0xb4, 0x56, 0x25, 0xdf,
	0x5a, 0x5f, 0x34, 0x56, 0x1d, 0xfd, 0x52, 0x9d, 0xf5, 0xd8, 0x43, 0x21, 0x9f, 0xfb, 0x99, 0x27,
	0x72, 0x31, 0x47, 0xca, 0x45, 0x31, 0x47, 0xdc, 0x68, 0x22, 0x95, 0x5c, 0x34, 0x91, 0xaf, 0x65,
	0xe3, 0x3b, 0x59, 0xb7, 0x6e, 0x69, 0x9c, 0xd0, 0x0e, 0x0c, 0xd6, 0x29, 0x50, 0x9e, 0xb8, 0xf6,
	0xac, 0x97, 0xd5, 0x05, 0x0f, 0xd4, 0x0c, 0x05, 0x53, 0x5a, 0xd5, 0x9d, 0xd2, 0x1e, 0x55, 0x4f,
	0x7c, 0x38, 0x97, 0x20, 0x8b, 0x8a, 0x5a, 0xb6, 0x08, 0x6b, 0x5f, 0xf6, 0xd8, 0xd8, 0xb4, 0x88,
	0x9f, 0x99, 0xbe, 0x7c, 0x4d, 0xfb, 0xe4, 0x9c, 0x20, 0x5b, 0x92, 0xfd, 0x08, 0x82, 0xfa, 0xc7,
	0x93, 0x53, 0xf2, 0xe0, 0xb7, 0x3d, 0x6f, 0x1c, 0x18, 0x32, 0x4b, 0xff, 0xcb, 0x41, 0x5b, 0xc8,
	0x33, 0x10, 0x1b, 0x44, 0xcf, 0x41, 0xe0, 0xaf, 0xec, 0x28, 0xd4, 0x0b, 0x5c, 0x60, 0xb6, 0xd2,
	0xd5, 0x7c, 0xa5, 0x4f, 0xab, 0x27, 0x81, 0x2d, 0x97, 0x45, 0x0b, 0x82, 0xdc, 0xe2, 0x9f, 0xfb,
	0xa0, 0x84, 0x0d, 0xab, 0xbd, 0x8a, 0x71, 0x29, 0x00, 0xe3, 0x99, 0x7c, 0x57, 0xc6, 0x33, 0x79,
	0x74, 0x52, 0x93, 0xbc, 0xc0, 0x2e, 0xc9, 0x21, 0x1b, 0x97, 0x59, 0x5b, 0x97, 0x92, 0xee, 0x62,
	0xa3, 0xeb, 0x1a, 0xa8, 0xef, 0x26, 0x55, 0x97, 0x33, 0x50, 0x0a, 0x8b, 0xad, 0x20, 0xee, 0xb5,
	0xa4, 0x3c, 0xa2, 0xb6, 0xa3, 0x5b, 0x5a, 0x5f, 0x4e, 0xea, 0xd6, 0xdd, 0x9c, 0x6b, 0x3b, 0xa5,
	0xec, 0xb5, 0x9d, 0x83, 0x5d, 0x4e, 0x3a, 0xc6, 0x8e, 0xc8, 0xe2, 0xb2, 0x77, 0x93, 0x16, 0xd8,
	0x44, 0x0e, 0xf3, 0xbc, 0xb9, 0xa9, 0x9d, 0x60, 0xc7, 0x74, 0xe3, 0x64, 0x6f, 0x26, 0x2d, 0x6a,
	0x1e, 0xb2, 0x17, 0x93, 0x9e, 0x5f, 0x59, 0x0b, 0xf2, 0x79, 0x52, 0xca, 0xf3, 0x2b, 0xbd, 0x93,
	0xf2, 0x96, 0x92, 0x93, 0x9d, 0x7b, 0xfd, 0xb3, 0x5b, 0x76, 0xd9, 0x6b, 0xa1, 0xa5, 0xfd, 0xaf,
	0x85, 0x96, 0x0f, 0x7c, 0x2d, 0xb4, 0xf2, 0xbc, 0xaf, 0x85, 0x56, 0xbb, 0x5f, 0x0b, 0xed, 0xeb,
	0x79, 0x2d, 0xb4, 0x3f, 0x77, 0x0b, 0xa9, 0xb6, 0xc2, 0x8e, 0x5f, 0x89, 0x85, 0x15, 0x89, 0x6f,
	0x41, 0xdc, 0x10, 0x91, 0x74, 0x33, 0xe1, 0xac, 0xbc, 0x13, 0xaa, 0xc0, 0x28, 0xf0, 0x89, 0x90,
	0x40, 0xa9, 0x79, 0xf0, 0xe9, 0xfb, 0xac, 0xb2, 0x99, 0x44, 0x0d, 0xd9, 0x2f, 0xf1, 0xbb, 0xf6,
	0x0a, 0x36, 0x84, 0xe1, 0x70, 0x65, 0x36, 0x3e, 0xab, 0x58, 0x31, 0x9a, 0xf1, 0xdb, 0x7f, 0x8c,
	0x0d, 0x04, 0x51, 0x84, 0x85, 0xc9, 0xd5, 0xf4, 0xc4, 0x64, 0x57, 0x46, 0x96, 0x35, 0x6d, 0xed,
	0x49, 0x76, 0x8c, 0x6e, 0x73, 0x5b, 0x05, 0xa8, 0xa1, 0x3c, 0xc9, 0x86, 0x02, 0x03, 0x95, 0xa6,
	0xf9, 0xe1, 0x49, 0x9b, 0xd2, 0x26, 0x80, 0x51, 0x53, 0x90, 0x57, 0x33, 0xda, 0xab, 0x1d, 0xc5,
	0x38, 0xbb, 0xf9, 0x22, 0x6a, 0xe7, 0x31, 0xfa, 0x6d, 0x96, 0x3e, 0x5f, 0x72, 0xb9, 0x77, 0xc9,
	0xdf, 0xe2, 0xb1, 0x31, 0xab, 0xaa, 0xb8, 0x12, 0x14, 0x49, 0x89, 0xb3, 0x72, 0x2c, 0xaf, 0x24,
	0x95, 0x97, 0xe1, 0xd3, 0xbf, 0x9f, 0xf5, 0xa5, 0xf6, 0xb5, 0xe2, 0x2e, 0xa1, 0x82, 0x24, 0x11,
	0x46, 0x8a, 0x40, 0xe7, 0x21, 0xe7, 0x4d, 0x03, 0x0d, 0xa9, 0x7d, 0xc1, 0x63, 0xe3, 0xc8, 0xe5,
	0x42, 0x18, 0x8b, 0x99, 0xa4, 0xa1, 0x17, 0xa5, 0x28, 0x68, 0xb5, 0x2d, 0x76, 0xf4, 0x3f, 0xe0,
	0xb0, 0x26, 0xe6, 0xaa, 0x94, 0xfe, 0x87, 0xee, 0xb6, 0x13, 0xdc, 0x9c, 0x52, 0x68, 0xb9, 0x39,
	0xb5, 0x40, 0xfb, 0xf1, 0x03, 0x42, 0x88, 0x4d, 0xf8, 0x6c, 0xfc, 0x56, 0xdc, 0x58, 0x41, 0xc7,
	0xf4, 0xbf, 0x16, 0x5a, 0xbf, 0x11, 0x5a, 0xed, 0xa3, 0x65, 0x36, 0x01, 0x5d, 0x09, 0xca, 0x9c,
	0x4b, 0x83, 0x4d, 0x2d, 0xe1, 0x53, 0x6c, 0x10, 0x59, 0xb5, 0xea, 0x65, 0x00, 0x30, 0xc1, 0x37,
	0x83, 0xd4, 0x4a, 0x63, 0x6a, 0x98, 0x47, 0xa0, 0xca, 0x8a, 0x40, 0x77, 0x1f, 0x6e, 0x40, 0xa8,
	0xdf, 0xe0, 0xaf, 0xf3, 0xd4, 0x8a, 0x86, 0xc0, 0xe4, 0x12, 0x49, 0xa1, 0x23, 0x05, 0x55, 0xd9,
	0x81, 0xf9, 0x93, 0xcc, 0x0f, 0xe3, 0x46, 0x98, 0x8a, 0x8d, 0x76, 0xb4, 0x77, 0x35, 0x6e, 0x88,
	0xd4, 0x58, 0x26, 0x0a, 0x30, 0xb0, 0xd7, 0x8a, 0xc5, 0x2e, 0xd6, 0xfc, 0x4a, 0x2c, 0xae, 0x09,
	0xb1, 0x2d, 0xb7, 0x96, 0x59, 0x30, 0xf0, 0x0f, 0x42, 0x9c, 0x6a, 0x34, 0xac, 0x67, 0xca, 0x6c,
	0x90, 0xff, 0xd5, 0x8c, 0x07, 0x99, 0x98, 0xd6, 0x3a, 0xc2, 0x7c, 0x2e, 0xd8, 0x75, 0x8e, 0x14,
	0x5a, 0xed, 0xeb, 0x92, 0x30, 0xc6, 0xdc, 0xa5, 0x7b, 0xbc, 0xfa, 0x87, 0x09, 0x6b, 0x35, 0xa1,
	0xd7, 0x39, 0x87, 0x68, 0xc2, 0x92, 0xbf, 0xb5, 0x27, 0xd8, 0x88, 0xd3, 0x6e, 0xfe, 0xbd, 0xac,
	0x12, 0x1a, 0x6f, 0xa5, 0xc3, 0x93, 0x45, 0x0d, 0xbb, 0x8c, 0x24, 0xb5, 0x67, 0xcb, 0x6c, 0x58,
	0xa1, 0xb1, 0xbd, 0xe7, 0xd8, 0x48, 0x64, 0x75, 0x6b, 0xe5, 0xf0, 0x7c, 0xdb, 0xa4, 0x4d, 0x35,
	0x69, 0xf7, 0xfc, 0xd6, 0xf9, 0xb8, 0x9d, 0xee, 0x2d, 0xbb, 0xc9, 0x30, 0x5e, 0xba, 0x2d, 0x69,
	0xb9, 0xb6, 0xb8, 0x40, 0x0c, 0x68, 0xb8, 0x67, 0xf7, 0x1d, 0xe9, 0xfa, 0xee, 0x00, 0xa1, 0xea,
	0x3b, 0x7b, 0xb6, 0x61, 0x46, 0xfd, 0x66, 0xfa, 0x4b, 0x35, 0xd7, 0x5f, 0x8a, 0xda, 0xa3, 0xef,
	0xf9, 0xb5, 0x47, 0xbf, 0xdb, 0x1e, 0x27, 0x56, 0x99, 0x9f, 0x97, 0x02, 0x4c, 0x3e, 0xdb, 0x62,
	0x4f, 0x0e, 0x14, 0xf8, 0xf4, 0xef, 0xb1, 0x23, 0xbf, 0x80, 0x1a, 0x9e, 0x9b, 0x3a, 0x64, 0x34,
	0x98, 0x27, 0x4a, 0x8f, 0x7b, 0xb5, 0x57, 0xb3, 0x13, 0xe4, 0xb8, 0x88, 0x54, 0xcb, 0x22, 0x0a,
	0xec, 0x88, 0x5f, 0x6e, 0x75, 0xbd, 0x5c, 0x75, 0x4f, 0xb1, 0xc1, 0x8d, 0xad, 0x30, 0x6a, 0x58,
	0x0f, 0x1e, 0x19, 0x40, 0x6e, 0xf0, 0x94, 0xf3, 0x83, 0xa7, 0xf6, 0x72, 0x76, 0xac, 0xb0, 0x7c,
	0x15, 0x9d, 0xf2, 0x79, 0x97, 0x5e, 0x9b, 0x64, 0xfe, 0x8a, 0x68, 0xaf, 0x26, 0x4d, 0x99, 0xb3,
	0x0e, 0x17, 0xda, 0x4e, 0x9a, 0x56, 0x86, 0xea, 0xb7, 0x76, 0x1f, 0xe3, 0x0e, 0x3d, 0x70, 0xd0,
	0x9d, 0xfa, 0x4b, 0x25, 0x36, 0x81, 0x84, 0xd9, 0x15, 0xc2, 0x72, 0x9e, 0xf5, 0x5c, 0xe7, 0x59,
	0x35, 0x6d, 0x96, 0xac, 0x69, 0x13, 0x76, 0x61, 0x58, 0xa1, 0xec, 0x2e, 0xcc, 0x06, 0xc2, 0x0c,
	0x13, 0x44, 0x11, 0x4c, 0x09, 0x56, 0x69, 0x72, 0x62, 0x2e, 0xc0, 0xf8, 0x8f, 0xb3, 0xa3, 0xbb,
	0x42, 0x6c, 0xcf, 0xca, 0xae, 0x6f, 0x27, 0x22, 0xb5, 0xa4, 0x1b, 0xda, 0x7f, 0x90, 0x1d, 0x02,
	0xd4, 0xaa, 0x08, 0x76, 0xec, 0x54, 0x74, 0x72, 0x51, 0x84, 0x82, 0x39, 0x4a, 0x0d, 0x31, 0xeb,
	0x10, 0xc3, 0x02, 0xa1, 0x10, 0x45, 0xb0, 0x03, 0x58, 0x3a, 0x5c, 0x54, 0xbf, 0x50, 0x7b, 0x98,
	0xcc, 0x16, 0x92, 0x4d, 0xd9, 0xe7, 0xe5, 0x2b, 0x8b, 0x0e, 0xb0, 0x36, 0x8d, 0x01, 0xf4, 0x8a,
	0x84, 0xad, 0x1a, 0xf5, 0x36, 0x36, 0xb4, 0x1b, 0x28, 0x71, 0xa9, 0xa6, 0xb2, 0x41, 0xb5, 0x8b,
	0x18, 0xe6, 0xa7, 0x38, 0x0f, 0x68, 0x68, 0x33, 0x83, 0xd1, 0x36, 0xb1, 0x90, 0x92, 0x66, 0xb0,
	0xcb, 0xec, 0x30, 0xf5, 0x58, 0x35, 0xa4, 0x2c, 0x2e, 0xec, 0x85, 0xd5, 0xcb, 0x2f, 0xac, 0x05,
	0x3d, 0xa0, 0xf6, 0xd5, 0xec, 0x50, 0x36, 0x3b, 0x60, 0xe8, 0x2e, 0x87, 0xa1, 0xa2, 0x41, 0x4c,
	0xdc, 0x4c, 0x60, 0x5c, 0xd7, 0x0c, 0x2b, 0xb5, 0x27, 0x18, 0x77, 0xa0, 0x6e, 0x8e, 0xe5, 0x9e,
	0x39, 0xfe, 0x60, 0x3f, 0x3b, 0x24, 0x75, 0x22, 0x15, 0xd4, 0x51, 0x3a, 0xa0, 0x64, 0xba, 0xaa,
	0x77, 0xf0, 0xae, 0x5a, 0x7a, 0x3e, 0x5d, 0xb5, 0xdc, 0xbb, 0xab, 0x3e, 0xc6, 0x8e, 0x34, 0x82,
	0xbd, 0xa2, 0x84, 0x34, 0x30, 0xba, 0x60, 0xbb, 0x75, 0xf1, 0x6a, 0xf7, 0x2e, 0xfe, 0x04, 0x3b,
	0xb6, 0x11, 0xc4, 0xf3, 0xa2, 0xad, 0xb2, 0xb3, 0x5e, 0xb1, 0xa4, 0x91, 0xd1, 0x15, 0x8f, 0xcb,
	0x52, 0x60, 0x27, 0xa0, 0x69, 0xdd, 0x05, 0x82, 0x14, 0x1c, 0x00, 0xaa, 0xd1, 0xb4, 0x00, 0xd1,
	0xa2, 0xdf, 0x0d, 0x2d, 0xa5, 0x90, 0x41, 0xcd, 0x83, 0xae, 0x3f, 0xa8, 0xa5, 0x50, 0x80, 0xf5,
	0xa7, 0xd9, 0x29, 0x18, 0x65, 0xcb, 0xa2, 0x19, 0x84, 0x69, 0x41, 0xbd, 0x48, 0x1b, 0xe8, 0x49,
	0x03, 0x6d, 0xad, 0xc4, 0x65, 0xa5, 0xa4, 0xc7, 0x45, 0x0a, 0x30, 0xfe, 0x39, 0x36, 0x41, 0x72,
	0xca, 0xa4, 0xa0, 0xe7, 0x46, 0x0a, 0x71, 0x50, 0x3f, 0xd4, 0x77, 0xf2, 0x7d, 0x8a, 0x1e, 0x21,
	0xe9, 0x82, 0xf5, 0xbf, 0x96, 0x9d, 0x04, 0xcc, 0xb5, 0x2e, 0x7d, 0x8b, 0x9e, 0x28, 0xe9, 0x45,
	0xe2, 0xff, 0x2f, 0xec, 0x04, 0xa0, 0x67, 0x8b, 0xfb, 0xd8, 0x18, 0x66, 0xd0, 0x83, 0x02, 0x6a,
	0x1b, 0x44, 0xe8, 0x84, 0xe9, 0x04, 0x48, 0x95, 0x4f, 0x9d, 0x14, 0xe2, 0xfc, 0x3a, 0xe3, 0x24,
	0x05, 0x8b, 0x9e, 0xde, 0x80, 0xcb, 0xc1, 0x6b, 0x53, 0x18, 0xae, 0xb3, 0x60, 0xa4, 0x1e, 0x7c,
	0x56, 0x9c, 0xc7, 0xd0, 0x9b, 0x85, 0x59, 0xc0, 0x8c, 0x71, 0x8f, 0x33, 0x07, 0x4d, 0x4c, 0x16,
	0x11, 0xd2, 0x9c, 0xf1, 0x57, 0x15, 0x36, 0x46, 0xea, 0x4d, 0xb8, 0xd3, 0x94, 0x57, 0x28, 0x9f,
	0xdb, 0x42, 0xf8, 0xfc, 0xe7, 0x81, 0x2e, 0xe3, 0xb9, 0x72, 0xe0, 0x25, 0xab, 0xda, 0x73, 0xc9,
	0xea, 0x73, 0x97, 0xac, 0xa2, 0x16, 0xea, 0x2f, 0x6e, 0xa1, 0xae, 0x3d, 0x60, 0xa0, 0x47, 0x0f,
	0x38, 0xd0, 0x92, 0x88, 0xc7, 0xa0, 0x18, 0xa6, 0x39, 0xd8, 0x14, 0x57, 0xd3, 0x48, 0x3e, 0xfa,
	0xe3, 0xc0, 0xb2, 0xf3, 0xb5, 0x7a, 0x43, 0xd1, 0x05, 0x1a, 0x1d, 0xcb, 0x7a, 0x70, 0xd4, 0x82,
	0x38, 0x1a, 0xe9, 0x48, 0x66, 0x87, 0x50, 0xf4, 0xb4, 0x5b, 0x9d, 0xf1, 0xd5, 0x64, 0x36, 0x28,
	0x18, 0x2b, 0x39, 0xb8, 0x7f, 0x17, 0x1b, 0x9d, 0x8a, 0x22, 0x9b, 0x92, 0xc6, 0x46, 0x06, 0x0a,
	0x3c, 0x4c, 0xd3, 0xcb, 0x9f, 0x2d, 0x39, 0x1a, 0xf4, 0x7f, 0xed, 0xcd, 0x1e, 0x1b, 0xc5, 0x9e,
	0x87, 0xfa, 0xbd, 0xba, 0x5e, 0x60, 0x37, 0xaf, 0xd7, 0xb3, 0x79, 0x4b, 0x6e, 0xf3, 0x1e, 0x63,
	0xfd, 0xd0, 0x63, 0x16, 0xc5, 0xae, 0xdc, 0x19, 0xa8, 0x5f, 0xff, 0x3e, 0xb4, 0x85, 0xd0, 0xd6,
	0x42, 0xdd, 0x7f, 0xcc, 0x74, 0xf9, 0x65, 0x4d, 0x51, 0xfb, 0x2a, 0x0c, 0xd6, 0xe9, 0x32, 0x76,
	0xf0, 0x71, 0xf9, 0xd5, 0x18, 0x17, 0x36, 0x9b, 0x1a, 0x86, 0xe4, 0xed, 0xce, 0x90, 0x1c, 0x9b,
	0xcc, 0xd0, 0xd0, 0x68, 0x3c, 0x8e, 0x61, 0x16, 0x67, 0xed, 0x89, 0x5f, 0x29, 0x06, 0x1b, 0x68,
	0x33, 0xc9, 0xa0, 0xa4, 0xae, 0x6d, 0xc5, 0x70, 0xf7, 0x72, 0x31, 0xdc, 0xeb, 0x8c, 0x07, 0x51,
	0xe4, 0xf6, 0xe3, 0x92, 0x7c, 0x14, 0x30, 0x03, 0xaf, 0xcd, 0xe3, 0xcc, 0xe4, 0x14, 0x32, 0x8d,
	0xd7, 0x09, 0x8c, 0x39, 0xb7, 0x62, 0x45, 0x94, 0xed, 0xfe, 0xa2, 0xc2, 0x5b, 0x3c, 0x9c, 0xa0,
	0x0a, 0x73, 0x92, 0x2a, 0xcd, 0x41, 0xf2, 0xc9, 0x54, 0xae, 0x94, 0xab, 0xdc, 0x24, 0xf3, 0x1b,
	0xa2, 0xd1, 0xd9, 0x68, 0x8b, 0xc6, 0x4c, 0x36, 0x90, 0x7d, 0x01, 0xa6, 0xf6, 0x4a, 0x76, 0xc7,
	0x4a, 0x70, 0x43, 0x4c, 0x45, 0x51, 0x18, 0xc4, 0x1b, 0x62, 0x41, 0x04, 0x0d, 0x91, 0xaa, 0x08,
	0xc6, 0xd6, 0x2d, 0xf2, 0x47, 0x65, 0xf0, 0x65, 0x52, 0xb9, 0xce, 0x4e, 0xee, 0x97, 0x40, 0x06,
	0x62, 0xfe, 0xfe, 0x32, 0xbb, 0x6d, 0xdf, 0xbc, 0xf7, 0x7b, 0x59, 0xed, 0x4e, 0xf5, 0x86, 0xd6,
	0x5a, 0xab, 0xd7, 0x53, 0xbc, 0x86, 0x2c, 0xe8, 0xf5, 0x16, 0xef, 0x19, 0x75, 0xf8, 0xb7, 0x16,
	0x17, 0x1f, 0x04, 0x39, 0x31, 0x6f, 0xab, 0x3d, 0x62, 0xde, 0xf6, 0xb9, 0x31, 0x6f, 0x6b, 0x6c,
	0x38, 0x15, 0x41, 0xa4, 0x2a, 0xa8, 0x0e, 0x24, 0x6c, 0x18, 0xbe, 0x9b, 0x45, 0x07, 0x35, 0x8a,
	0x6a, 0x40, 0xbe, 0x9b, 0xe5, 0x40, 0xf1, 0x99, 0x4b, 0xdd, 0x48, 0x4b, 0x22, 0xdd, 0x10, 0xf2,
	0x85, 0xe6, 0xea, 0x72, 0x1e, 0x91, 0xe9, 0x14, 0x2c, 0xd7, 0x29, 0x4e, 0x33, 0xd6, 0x41, 0xc3,
	0xa3, 0xfd, 0x64, 0x9a, 0x81, 0xd4, 0xee, 0xc6, 0x57, 0x4d, 0xdc, 0x76, 0xba, 0x1a, 0x53, 0x0b,
	0x35, 0xac, 0xd0, 0xe6, 0xb5, 0x97, 0x62, 0xc8, 0xf6, 0x9e, 0x84, 0xd0, 0x99, 0x27, 0x58, 0x15,
	0xe6, 0x1a, 0xf5, 0x2e, 0x17, 0xfd, 0xd4, 0x6a, 0x18, 0x3b, 0xbd, 0xb8, 0x37, 0xa8, 0x02, 0xfe,
	0x19, 0x6d, 0x90, 0xba, 0xd0, 0x40, 0xde, 0xf2, 0x00, 0x4b, 0x5f, 0x30, 0x29, 0x2f, 0xeb, 0xff,
	0xfd, 0x06, 0x47, 0x6d, 0xaa, 0x57, 0x3d, 0xed, 0x79, 0x4d, 0xce, 0x9d, 0x2b, 0x6d, 0x15, 0x9a,
	0x51, 0xfd, 0xd6, 0xfe, 0x59, 0x2f, 0x09, 0x98, 0xc9, 0xed, 0x79, 0x0e, 0x97, 0x3b, 0x0b, 0x72,
	0xcf, 0x13, 0xd7, 0x7e, 0xcf, 0x63, 0xb7, 0xaf, 0xec, 0x43, 0xd7, 0x16, 0x3b, 0xfb, 0x0e, 0xac,
	0x6c, 0x8f, 0x2d, 0x1d, 0xa8, 0xc7, 0x96, 0x0f, 0xde, 0x63, 0x2b, 0x07, 0xeb, 0xb1, 0xd5, 0x5c,
	0x4b, 0x7d, 0x9b, 0xc7, 0xee, 0xda, 0xa7, 0x86, 0xfb, 0xb6, 0x95, 0x3f, 0xab, 0x8e, 0x4d, 0xa1,
	0x67, 0x4a, 0xab, 0xff, 0x1d, 0x93, 0x07, 0x10, 0xdc, 0xb2, 0x95, 0xae, 0x76, 0x17, 0xbb, 0x63,
	0x5f, 0x4e, 0x9a, 0xd1, 0x5e, 0xed, 0x2c, 0x3b, 0x03, 0x93, 0x76, 0x46, 0x73, 0xc2, 0x10, 0xdc,
	0xaa, 0x77, 0x7f, 0xc0, 0x63, 0x13, 0x59, 0x02, 0x9c, 0x01, 0x9f, 0x60, 0xa3, 0x1b, 0xce, 0x6c,
	0xdf, 0x63, 0x1d, 0xc8, 0x50, 0xba, 0xd3, 0x55, 0xa9, 0xc7, 0x74, 0x55, 0x76, 0xa7, 0x2b, 0xb7,
	0x09, 0x2a, 0xb9, 0x26, 0xf8, 0xf6, 0x32, 0xae, 0x7d, 0x5d, 0x2a, 0x24, 0x3b, 0xb9, 0xb5, 0x82,
	0x1f, 0xa4, 0x93, 0x87, 0x32, 0xe2, 0xce, 0x46, 0x27, 0x05, 0xb5, 0x2c, 0xd3, 0xf1, 0xb2, 0x60,
	0xd0, 0xfb, 0xc4, 0x4d, 0xf9, 0x68, 0x15, 0x1e, 0x28, 0xc9, 0xc3, 0x48, 0x07, 0xe8, 0x4f, 0xa9,
	0x67, 0x40, 0x66, 0xdc, 0xea, 0x60, 0x00, 0xc9, 0x02, 0x69, 0x2f, 0xe7, 0xc8, 0xfd, 0x4b, 0xec,
	0x70, 0x2a, 0xa0, 0xee, 0x02, 0xf4, 0x8f, 0x19, 0xb7, 0x67, 0x76, 0xcd, 0xa7, 0x38, 0x8d, 0xff,
	0x14, 0x3b, 0xe6, 0x4a, 0x22, 0xb3, 0xc7, 0xee, 0x9a, 0x5f, 0xd7, 0x64, 0xb5, 0x8f, 0x50, 0xd4,
	0x65, 0xfb, 0x5d, 0x2e, 0xab, 0x5f, 0xf9, 0x47, 0x58, 0x5f, 0xa7, 0x25, 0x52, 0x73, 0x9e, 0x48,
	0x7f, 0xe6, 0x3d, 0x89, 0x52, 0xc1, 0x7b, 0x12, 0x65, 0xf3, 0x9e, 0x44, 0xc1, 0x53, 0x60, 0x95,
	0xe7, 0xf5, 0x14, 0x58, 0xb5, 0x38, 0xd2, 0x7b, 0x9e, 0x6f, 0x19, 0xe9, 0xdd, 0xca, 0x4c, 0x45,
	0x7a, 0xb7, 0x40, 0xfb, 0x44, 0x7a, 0x7f, 0x0f, 0x3d, 0xc6, 0x91, 0xcd, 0x7c, 0x49, 0xa4, 0xb3,
	0xc1, 0xde, 0xff, 0x0f, 0x44, 0x53, 0xbb, 0x4c, 0x8b, 0x59, 0x17, 0xfe, 0x40, 0x04, 0x2f, 0x72,
	0x96, 0x89, 0xa3, 0x93, 0x5d, 0x68, 0x69, 0x71, 0x98, 0x66, 0x47, 0x8a, 0xf1, 0xb0, 0x7b, 0x81,
	0xb5, 0x5c, 0x8a, 0x10, 0xbf, 0xbb, 0x3c, 0x49, 0x75, 0x02, 0xdb, 0xe3, 0x9a, 0x10, 0xdb, 0x79,
	0x85, 0xba, 0x81, 0xaa, 0x7a, 0x16, 0xf7, 0x42, 0x6b, 0xd4, 0xc7, 0xb0, 0x14, 0x65, 0x9b, 0xb6,
	0x16, 0xdd, 0xda, 0x4d, 0x7c, 0xf0, 0xc9, 0xc5, 0x90, 0x90, 0xec, 0x4b, 0xd9, 0x34, 0xd9, 0x0c,
	0x4d, 0x76, 0xb9, 0x90, 0xfd, 0x30, 0x74, 0x2a, 0x54, 0xf4, 0xac, 0x2b, 0xdc, 0xe3, 0x93, 0x97,
	0xf7, 0x5a, 0x5f, 0x1f, 0x4d, 0x19, 0xc4, 0xb2, 0x4d, 0x55, 0x7b, 0x1c, 0x2d, 0x8f, 0xa8, 0x47,
	0x5e, 0x5d, 0x5e, 0x50, 0x5d, 0x27, 0x6b, 0xf3, 0xf7, 0x0a, 0x6c, 0xfe, 0x17, 0xd0, 0x3a, 0x69,
	0x52, 0x02, 0xbf, 0x9c, 0x95, 0x3b, 0x69, 0xa4, 0xce, 0x31, 0x3a, 0x69, 0x94, 0xcb, 0xa9, 0x54,
	0x90, 0xd3, 0xfb, 0x3c, 0x36, 0x9a, 0x59, 0x15, 0xfe, 0x29, 0x4e, 0x68, 0x9d, 0x1d, 0x6a, 0x35,
	0xb3, 0x43, 0xa5, 0xb6, 0xbb, 0x2c, 0x8a, 0xfa, 0xce, 0x44, 0x0e, 0x23, 0x7b, 0xce, 0x4c, 0xae,
	0xe7, 0x58, 0x73, 0xe5, 0x7d, 0x6c, 0x7c, 0x8a, 0x6c, 0x07, 0xb9, 0xae, 0x93, 0x47, 0xd4, 0x1e,
	0x63, 0x27, 0xa6, 0xc3, 0xb8, 0xb1, 0x84, 0x7b, 0xfa, 0xe9, 0x3d, 0xb9, 0xc7, 0xb4, 0x14, 0x81,
	0x96, 0xb3, 0x11, 0x55, 0xbf, 0xe8, 0x46, 0x52, 0x94, 0x0e, 0x96, 0xed, 0x5d, 0x76, 0x74, 0x45,
	0x48, 0xc7, 0xc7, 0xd5, 0xc4, 0x39, 0x60, 0xc9, 0xbd, 0xe8, 0xec, 0x15, 0xbd, 0xe8, 0xec, 0x2a,
	0x59, 0xa5, 0x9c, 0x92, 0x75, 0x84, 0xf5, 0xc9, 0x73, 0x17, 0xda, 0x8e, 0xc8, 0xbf, 0xda, 0x51,
	0x76, 0x38, 0x5f, 0x30, 0x70, 0xf4, 0xbb, 0x1e, 0x3e, 0x50, 0x30, 0xb3, 0x15, 0x46, 0x8d, 0xe9,
	0x3d, 0x7d, 0xc4, 0x26, 0x99, 0x52, 0x96, 0x0a, 0xcf, 0x7d, 0x84, 0xbe, 0x19, 0xd0, 0x0b, 0xfe,
	0xd2, 0x08, 0x20, 0x7f, 0x9d, 0x17, 0x77, 0xca, 0x99, 0x17, 0x77, 0xee, 0x67, 0x03, 0xa1, 0x3a,
	0xd8, 0xab, 0x74, 0x3b, 0xd8, 0xd3, 0x24, 0xfe, 0x39, 0x36, 0x0c, 0x1b, 0x7b, 0x75, 0xae, 0x25,
	0xa3, 0x64, 0x8d, 0x4e, 0xba, 0xa7, 0x5d, 0x0e, 0x0d, 0x4c, 0x42, 0x11, 0xba, 0x5c, 0xd0, 0x56,
	0x89, 0x7e, 0x6a, 0xaf, 0xc0, 0x4d, 0x7d, 0xae, 0x7e, 0xd0, 0x5f, 0x6c, 0xd3, 0x84, 0xb7, 0x9f,
	0x69, 0xc2, 0x1e, 0x0c, 0x55, 0x1c, 0x0c, 0xb5, 0x77, 0x78, 0xec, 0xc4, 0x5c, 0x18, 0x37, 0xba,
	0x08, 0xaf, 0xbb, 0x21, 0xcf, 0x16, 0x46, 0xe9, 0xb9, 0x0b, 0xa3, 0xbc, 0xbf, 0x30, 0x6a, 0x5f,
	0xcb, 0x8e, 0x15, 0xb2, 0x06, 0xf5, 0xbe, 0xc3, 0x51, 0xa5, 0xf2, 0x75, 0x26, 0x6b, 0xc8, 0xfd,
	0x28, 0x38, 0x9a, 0x1e, 0xf7, 0xef, 0x16, 0xb5, 0x37, 0x78, 0xc6, 0xad, 0xc4, 0x2d, 0xce, 0xae,
	0xad, 0xb7, 0x7f, 0x6d, 0xdd, 0xd3, 0xcb, 0x52, 0xee, 0xf4, 0x32, 0x67, 0x9f, 0x2b, 0x38, 0xfa,
	0x9b, 0xad, 0xbd, 0xbb, 0xc4, 0x4e, 0xc8, 0x1b, 0x52, 0xb0, 0xd8, 0xc2, 0x27, 0xbe, 0xe1, 0x2b,
	0x9d, 0xa2, 0xcc, 0xbe, 0xdc, 0xaa, 0x88, 0xed, 0xe6, 0x69, 0xbf, 0xee, 0x5b, 0xea, 0xf5, 0xba,
	0xef, 0x81, 0x5e, 0x66, 0x31, 0x4e, 0x62, 0x15, 0xc7, 0x49, 0xec, 0x18, 0xeb, 0x4f, 0x93, 0x4e,
	0xdc, 0x30, 0x6f, 0x6b, 0xc9, 0x5f, 0xd8, 0x09, 0xe1, 0xe7, 0x8a, 0xd6, 0xb6, 0xa9, 0x57, 0x67,
	0xa0, 0x78, 0x8e, 0x81, 0x86, 0x16, 0xa5, 0xc7, 0x2e, 0x81, 0x32, 0xdc, 0x89, 0x95, 0x45, 0xa0,
	0x0b, 0xb6, 0xf6, 0x0b, 0x15, 0x36, 0x51, 0xf4, 0x5e, 0x9a, 0xf5, 0xb6, 0xb8, 0xe7, 0xbc, 0x2d,
	0x9e, 0x91, 0x58, 0xa9, 0x40, 0x62, 0x59, 0xc3, 0x49, 0xf9, 0x60, 0x86, 0x93, 0xca, 0x01, 0x0c,
	0x27, 0xf9, 0x17, 0xe7, 0x6f, 0x67, 0x23, 0x74, 0x49, 0x23, 0x91, 0x1c, 0x91, 0xf7, 0xcc, 0xb0,
	0x02, 0x22, 0x4f, 0xf7, 0xe2, 0xe5, 0x4a, 0x22, 0x52, 0x5c, 0x91, 0x37, 0xcd, 0x98, 0x82, 0x2b,
	0xbe, 0x6c, 0x52, 0xc5, 0xd9, 0x80, 0x4b, 0xaa, 0x78, 0xb3, 0x8b, 0x46, 0xee, 0x06, 0xdd, 0xa2,
	0x91, 0xbf, 0x07, 0xd9, 0x44, 0x20, 0x35, 0xec, 0xb5, 0x08, 0x55, 0x6c, 0x62, 0x93, 0x4c, 0xce,
	0x7e, 0xe0, 0x6e, 0xea, 0x81, 0x59, 0x3c, 0x96, 0x87, 0x96, 0x80, 0xa9, 0x95, 0xec, 0x26, 0x06,
	0xe0, 0xdf, 0xaa, 0x5e, 0x92, 0x5f, 0x83, 0x59, 0x88, 0x8e, 0x7e, 0x06, 0x09, 0x02, 0xe8, 0x93,
	0xf2, 0x21, 0x79, 0xc4, 0x4a, 0x83, 0x33, 0x02, 0x94, 0x63, 0x92, 0x79, 0xc5, 0x7e, 0x34, 0xf7,
	0x8a, 0xfd, 0x13, 0x6c, 0x84, 0xfe, 0xd6, 0xe4, 0xe2, 0x3e, 0x76, 0xe0, 0x97, 0x7d, 0x6b, 0x17,
	0x98, 0x3f, 0x9d, 0xa4, 0x69, 0xb2, 0x8b, 0x2e, 0xd7, 0xd6, 0xdc, 0xe7, 0x1e, 0x77, 0xaa, 0x5f,
	0xf2, 0xe7, 0xb3, 0x1d, 0x4c, 0xd5, 0x6f, 0xed, 0x41, 0xc6, 0x9d, 0x9c, 0xf6, 0x7f, 0x77, 0xe3,
	0x3e, 0xc6, 0xa7, 0x83, 0x8d, 0xed, 0x6c, 0xc9, 0x2a, 0x7f, 0xcf, 0xcd, 0x7f, 0x92, 0x8d, 0x5a,
	0xd4, 0xfb, 0xe7, 0x7e, 0x81, 0xf9, 0xb3, 0xa2, 0x19, 0x25, 0x7b, 0x2f, 0x44, 0xcd, 0x9c, 0x9c,
	0xf6, 0x2f, 0xfb, 0x95, 0x6c, 0xcc, 0xbc, 0x38, 0x47, 0x05, 0x3f, 0xc8, 0x0e, 0xad, 0x26, 0xd3,
	0x42, 0x81, 0x5d, 0x26, 0x8a, 0x50, 0x3d, 0x18, 0xba, 0x9f, 0x8d, 0x98, 0xec, 0xf7, 0xe7, 0xe6,
	0xa5, 0xb8, 0x39, 0x37, 0x4a, 0xb0, 0xd2, 0x6a, 0xf4, 0x6b, 0x96, 0x27, 0xd8, 0x80, 0x84, 0x28,
	0x33, 0x9c, 0xfe, 0xaf, 0x2d, 0xa0, 0x2d, 0xba, 0x30, 0x31, 0xad, 0x0e, 0x43, 0x06, 0xa7, 0xbc,
	0x98, 0x1c, 0x8d, 0xdb, 0xc6, 0xd7, 0x5e, 0xca, 0x0e, 0x2d, 0x0b, 0xf3, 0xd4, 0xa6, 0xa5, 0x3d,
	0xc5, 0x62, 0xd7, 0x7a, 0x9a, 0x53, 0x6a, 0x4f, 0x0e, 0xb0, 0x76, 0x8d, 0x8d, 0xbb, 0x89, 0x69,
	0x35, 0x3c, 0x40, 0xd2, 0x7d, 0xdc, 0x79, 0xef, 0x65, 0x23, 0xcb, 0x62, 0x11, 0x5f, 0x76, 0xd7,
	0xbd, 0x24, 0x16, 0xbb, 0x78, 0x36, 0x24, 0x7b, 0x89, 0xfc, 0xad, 0x9d, 0x67, 0x43, 0x8a, 0x54,
	0x7a, 0xca, 0x14, 0x13, 0xee, 0x53, 0xe2, 0x2a, 0x9b, 0x98, 0x0e, 0xe2, 0xed, 0x95, 0xe0, 0x86,
	0x38, 0x58, 0xf7, 0x47, 0x7f, 0xdf, 0x20, 0xde, 0x5e, 0x0a, 0x5a, 0xad, 0xdd, 0x24, 0x6d, 0x68,
	0x7f, 0x5f, 0x0b, 0x56, 0x5b, 0x60, 0x7e, 0x26, 0xd7, 0xfd, 0xdf, 0x5e, 0xe8, 0xde, 0xcb, 0x5e,
	0xce, 0x8e, 0x41, 0x6e, 0xd7, 0xc2, 0xf6, 0x16, 0x46, 0xcf, 0x79, 0xe1, 0xf8, 0x5c, 0x62, 0x47,
	0x0a, 0x72, 0xfe, 0x4a, 0x78, 0x5d, 0x63, 0xc7, 0xe5, 0x43, 0x4a, 0x56, 0x39, 0xd6, 0xc9, 0xd3,
	0xa2, 0xd8, 0xd5, 0x1c, 0xc9, 0x93, 0x27, 0x0b, 0x04, 0x14, 0x57, 0xa2, 0x46, 0x86, 0x67, 0x1b,
	0x54, 0x7b, 0x31, 0x3b, 0x5a, 0x54, 0xc0, 0xfe, 0x83, 0x2f, 0x50, 0x8a, 0xcc, 0xbc, 0x68, 0x4f,
	0x27, 0x71, 0xa7, 0x95, 0x0d, 0xaf, 0xf5, 0x95, 0xbf, 0x7d, 0xf4, 0x5a, 0x8f, 0x1d, 0x2b, 0x2c,
	0xe3, 0x05, 0x7b, 0x65, 0x0b, 0x24, 0x98, 0xa4, 0x3b, 0x41, 0x84, 0xb9, 0xab, 0x47, 0xdb, 0x2c,
	0x50, 0xed, 0x4b, 0x65, 0x36, 0x8a, 0x1b, 0xe7, 0x2b, 0xa9, 0x3a, 0x90, 0x3c, 0xca, 0xfa, 0x41,
	0xf9, 0x58, 0x93, 0x0a, 0x5a, 0x45, 0xeb, 0x22, 0x45, 0x6f, 0x56, 0x64, 0xf4, 0x93, 0x72, 0x4e,
	0x3f, 0x39, 0xcc, 0xfa, 0xda, 0x37, 0xe3, 0x35, 0x1d, 0x63, 0xa2, 0xda, 0xbe, 0x19, 0x5f, 0x6c,
	0xf8, 0x67, 0xd9, 0x70, 0x02, 0x25, 0xae, 0x51, 0x80, 0x11, 0xd4, 0x34, 0x4a, 0xcb, 0x43, 0x08,
	0x93, 0xd7, 0x47, 0xee, 0x67, 0xf4, 0xbb, 0xd6, 0x6a, 0x07, 0x6d, 0x21, 0xfd, 0x12, 0x87, 0x27,
	0x91, 0x51, 0xf9, 0x7c, 0x1c, 0x4b, 0xd4, 0x8f, 0xf0, 0x1f, 0x60, 0xc3, 0xcd, 0x34, 0x01, 0xad,
	0x6b, 0xcd, 0x7a, 0xff, 0x7c, 0x78, 0x72, 0x89, 0x80, 0x14, 0xfb, 0xbd, 0x69, 0x7e, 0x90, 0x75,
	0x99, 0x20, 0x96, 0xce, 0x5e, 0xe5, 0x65, 0x26, 0x41, 0xb0, 0x7e, 0x9f, 0x35, 0x39, 0x62, 0xe5,
	0x48, 0xdf, 0x50, 0x89, 0xa4, 0xa6, 0xd3, 0x0f, 0xcb, 0x72, 0x2c, 0xe8, 0x50, 0x7b, 0xf4, 0xdc,
	0xd8, 0xe4, 0x52, 0xb0, 0x77, 0x59, 0xbe, 0x3e, 0x1f, 0x8b, 0x68, 0x59, 0xe1, 0xa1, 0x38, 0xda,
	0x82, 0xaf, 0xb5, 0xad, 0x13, 0x1a, 0x6b, 0x57, 0x7e, 0x86, 0x0d, 0xd1, 0x79, 0x0d, 0x11, 0x0c,
	0x67, 0x8f, 0x70, 0x50, 0x9d, 0x15, 0x3b, 0x41, 0xba, 0x8d, 0x9a, 0x06, 0xa8, 0xb3, 0xf8, 0x07,
	0x5d, 0x65, 0x06, 0xad, 0xaa, 0x1b, 0x7b, 0xa8, 0x65, 0x40, 0x57, 0x51, 0x80, 0x65, 0x8d, 0xaa,
	0x7d, 0xda, 0x63, 0x13, 0x33, 0x49, 0x23, 0x58, 0x0a, 0xf0, 0xca, 0xde, 0xf5, 0x3d, 0xeb, 0x51,
	0xf7, 0x55, 0x68, 0x14, 0x39, 0xc2, 0xe8, 0x07, 0x06, 0x2d, 0xf5, 0x09, 0xfd, 0x1e, 0xb9, 0xfc,
	0xd5, 0xaf, 0x7d, 0x2e, 0xa5, 0xa1, 0xbc, 0x3c, 0x52, 0x5a, 0xb6, 0x20, 0xd0, 0xeb, 0x96, 0x82,
	0x3d, 0xc7, 0x96, 0x36, 0xb8, 0x6c, 0x83, 0xf0, 0x01, 0x4e, 0xd1, 0xea, 0x44, 0xed, 0x99, 0xa4,
	0xa1, 0xb5, 0x4c, 0x03, 0x81, 0x85, 0x6d, 0x66, 0x4b, 0x6c, 0x6c, 0xb7, 0xa4, 0x47, 0xc3, 0xe0,
	0xb2, 0xfe, 0xaf, 0xd5, 0xd9, 0xa8, 0x55, 0x03, 0x39, 0x99, 0xbb, 0xc3, 0x58, 0xfd, 0xd6, 0xea,
	0x8c, 0x93, 0xb7, 0x1a, 0xb2, 0xae, 0x6f, 0x8e, 0x34, 0x83, 0x3d, 0xb3, 0xe2, 0xc8, 0xbf, 0xda,
	0x2b, 0xd9, 0xc8, 0xbc, 0x68, 0x63, 0xdd, 0xb5, 0x5d, 0x23, 0x35, 0x4c, 0xca, 0xbd, 0x8a, 0x81,
	0xa0, 0xf5, 0x0d, 0xc5, 0x56, 0xb2, 0x3b, 0xb6, 0xc9, 0xbe, 0xec, 0x64, 0xef, 0xa3, 0x15, 0x49,
	0x3e, 0x2c, 0x21, 0x2d, 0x2a, 0xf7, 0xb3, 0x51, 0x0b, 0x06, 0x65, 0x9e, 0x74, 0x8c, 0x85, 0xfd,
	0x93, 0x12, 0x47, 0xc6, 0xc1, 0x8f, 0x79, 0xac, 0x4f, 0xde, 0x33, 0x1b, 0x65, 0xa5, 0x50, 0x6d,
	0x15, 0x4a, 0x21, 0x3d, 0x4e, 0x1f, 0xb6, 0x23, 0xa1, 0x79, 0x81, 0x1f, 0x10, 0xcc, 0x86, 0xbc,
	0xd5, 0x24, 0x23, 0xa3, 0xca, 0xdf, 0x6c, 0x67, 0xac, 0xec, 0xd7, 0x19, 0xab, 0xb9, 0xce, 0xe8,
	0xb3, 0xca, 0x56, 0xd8, 0x50, 0xfb, 0x23, 0xfc, 0x06, 0x65, 0x59, 0x8e, 0xd8, 0x24, 0x55, 0x97,
	0xb5, 0x06, 0x69, 0x88, 0x26, 0x69, 0xbb, 0xf6, 0x0a, 0x76, 0xe4, 0x42, 0x92, 0xb6, 0xc4, 0x72,
	0xb0, 0x21, 0x16, 0x82, 0x9d, 0xe6, 0x35, 0x15, 0x35, 0x3e, 0xaf, 0x8d, 0x78, 0xbd, 0xb4, 0x91,
	0xbc, 0x81, 0xac, 0xf6, 0x08, 0x3b, 0xed, 0x64, 0x6d, 0xa2, 0x9b, 0xf6, 0xda, 0x3c, 0x2f, 0xb2,
	0xe3, 0x4e, 0xaa, 0xa5, 0x34, 0x7c, 0x46, 0x4f, 0xf1, 0x0f, 0x15, 0xf1, 0x94, 0x0b, 0x14, 0xe9,
	0x68, 0x49, 0x97, 0xd8, 0xd1, 0xa2, 0xfc, 0xe4, 0x62, 0x13, 0x66, 0x17, 0x1b, 0x0d, 0x00, 0xe6,
	0xda, 0xe6, 0x68, 0x07, 0xbf, 0x6b, 0x4b, 0xec, 0x54, 0xd7, 0x2a, 0x3d, 0xbf, 0x1c, 0x77, 0x99,
	0x9f, 0x95, 0x3f, 0xbd, 0x57, 0x66, 0xdd, 0x99, 0xf4, 0x72, 0x3b, 0x3e, 0x7b, 0x21, 0x2a, 0x75,
	0x5f, 0x88, 0x28, 0xf4, 0xad, 0xba, 0xc1, 0xab, 0x42, 0xd7, 0xd3, 0x85, 0xd0, 0xb9, 0x4c, 0xc1,
	0xcf, 0xb7, 0x02, 0x2f, 0x82, 0xe5, 0xcc, 0x0c, 0x96, 0x9e, 0x19, 0xd4, 0x3e, 0x47, 0xcf, 0x77,
	0xe2, 0xc8, 0x7f, 0xe1, 0x9e, 0xef, 0xee, 0x1e, 0x6c, 0xf8, 0x1f, 0x78, 0xb9, 0xaa, 0xbd, 0x93,
	0x2c, 0x3d, 0x99, 0xfa, 0x7c, 0xc5, 0x0f, 0x72, 0x2f, 0xe7, 0x1f, 0xe4, 0xb6, 0x40, 0xfe, 0x9d,
	0xce, 0x83, 0xdc, 0xe3, 0x54, 0x1d, 0x19, 0xb3, 0x11, 0x0a, 0x97, 0x53, 0xd3, 0xeb, 0x2b, 0x8c,
	0x67, 0x51, 0x3d, 0x64, 0x65, 0xa9, 0x18, 0x95, 0x42, 0x15, 0xa3, 0xda, 0x5d, 0xc5, 0xe8, 0xeb,
	0xa1, 0x62, 0xf4, 0xf7, 0x52, 0x31, 0x06, 0xf6, 0x55, 0x31, 0x06, 0x9f, 0x63, 0x9b, 0xb1, 0xe7,
	0xa8, 0x62, 0x0c, 0xed, 0xab, 0x62, 0x0c, 0xf7, 0x54, 0x31, 0x46, 0x9e, 0x9b, 0x8a, 0x31, 0xba,
	0xdf, 0xac, 0x3e, 0xd6, 0x43, 0xc5, 0xe0, 0x5d, 0x55, 0x8c, 0xf1, 0xee, 0x2a, 0xc6, 0xff, 0x8a,
	0x47, 0x04, 0xff, 0x40, 0xea, 0xf2, 0xc7, 0x3c, 0x3c, 0xc2, 0xf9, 0xa7, 0x51, 0x94, 0xe9, 0xcd,
	0xf0, 0xf5, 0x84, 0x8a, 0x57, 0x0b, 0xa6, 0x81, 0x40, 0x0e, 0x2b, 0x7b, 0xad, 0xb6, 0xd8, 0x21,
	0x02, 0x5a, 0x30, 0x6d, 0x50, 0x6d, 0x97, 0x9d, 0xb8, 0x18, 0x6f, 0xa4, 0x26, 0xcd, 0x0b, 0x2e,
	0x22, 0xf3, 0x60, 0x45, 0x59, 0x9e, 0x78, 0x62, 0x64, 0xf1, 0xc7, 0xd9, 0xb1, 0xc2, 0x82, 0xf7,
	0xdf, 0x04, 0xa5, 0xec, 0x30, 0xa4, 0xfc, 0x47, 0xe5, 0xf6, 0x61, 0x76, 0x28, 0x5b, 0xe6, 0xfe,
	0x8c, 0x7e, 0x0d, 0xfa, 0x66, 0x62, 0x1a, 0x79, 0x41, 0xf4, 0x7e, 0x36, 0x98, 0xc4, 0xc2, 0xb9,
	0x3c, 0x39, 0x36, 0x79, 0x25, 0x16, 0x16, 0xcd, 0xb2, 0xa1, 0xa8, 0xcd, 0xb2, 0x51, 0x17, 0x09,
	0x05, 0xe2, 0xef, 0x42, 0x18, 0xeb, 0x67, 0xd1, 0x35, 0x00, 0x78, 0xb7, 0x5f, 0xca, 0xa6, 0x9f,
	0xda, 0x05, 0x76, 0x66, 0x45, 0x44, 0x82, 0x0c, 0xbf, 0x64, 0x75, 0xd1, 0x52, 0x79, 0x6e, 0x8f,
	0x4f, 0x5f, 0x60, 0xb7, 0x76, 0xcf, 0x09, 0xe4, 0x71, 0x37, 0x1b, 0x54, 0x28, 0x65, 0xbe, 0xb1,
	0x22, 0x46, 0x1a, 0x5c, 0xed, 0x1b, 0xd9, 0xb1, 0x59, 0x81, 0xbe, 0x3e, 0xcf, 0x97, 0x19, 0x58,
	0x42, 0x20, 0xbd, 0x75, 0x32, 0xa0, 0xff, 0xb1, 0xdf, 0x8b, 0xf4, 0x86, 0x1d, 0x86, 0x65, 0x70,
	0xd9, 0x06, 0xd5, 0x1e, 0x63, 0x47, 0x0a, 0x18, 0x38, 0xd0, 0xf3, 0xbe, 0x33, 0x91, 0x08, 0xd2,
	0x27, 0x93, 0xbd, 0x5e, 0xcf, 0xfb, 0x1a, 0x9a, 0x17, 0xf8, 0x6a, 0xff, 0x53, 0x6c, 0x44, 0xe5,
	0x8d, 0x5e, 0xca, 0xd0, 0xe6, 0xd7, 0xc2, 0x46, 0x7b, 0x4b, 0xae, 0xb1, 0xf4, 0x03, 0x53, 0xe6,
	0x05, 0x11, 0x6e, 0x6e, 0xa9, 0x58, 0x0a, 0xf2, 0x0f, 0x96, 0xb2, 0xe9, 0xa4, 0xa1, 0xc2, 0x99,
	0xe0, 0x37, 0x54, 0x09, 0x7a, 0x0f, 0x48, 0xa1, 0x57, 0x95, 0x0c, 0xcd, 0x0b, 0x5c, 0xa5, 0x7f,
	0xce, 0xb8, 0xca, 0x7b, 0x29, 0x69, 0x85, 0x78, 0x7e, 0x37, 0xcc, 0x3c, 0xa5, 0x35, 0x78, 0x37,
	0xe1, 0x6f, 0x4f, 0x56, 0xc4, 0xdb, 0xf3, 0x27, 0x59, 0xbf, 0x88, 0x8c, 0x5b, 0xfb, 0xe8, 0xb9,
	0x09, 0xcd, 0xdb, 0xf9, 0xc8, 0x78, 0x45, 0x28, 0xa2, 0xda, 0x4d, 0x7a, 0x6b, 0x1e, 0x8f, 0x7c,
	0x82, 0x26, 0x9d, 0xbf, 0xec, 0x1a, 0xaf, 0x66, 0xf9, 0x87, 0x26, 0xf7, 0x24, 0xea, 0xec, 0xc4,
	0xe6, 0x34, 0xd3, 0x00, 0xfc, 0x87, 0xd9, 0x90, 0xcc, 0x4f, 0x86, 0xc2, 0x20, 0xcd, 0x23, 0xcb,
	0xf8, 0xb2, 0x4d, 0x55, 0xfb, 0x88, 0x67, 0x44, 0x3b, 0x1d, 0xc6, 0x9b, 0x89, 0xba, 0x9d, 0x1b,
	0x85, 0xb1, 0xab, 0x19, 0x69, 0x40, 0xfe, 0x68, 0xd1, 0xbf, 0x9f, 0x0d, 0x34, 0x65, 0xf6, 0xdd,
	0xcb, 0xd5, 0x24, 0xb6, 0x78, 0x2a, 0x07, 0x10, 0x0f, 0x74, 0x89, 0xa4, 0xd1, 0x68, 0x49, 0x17,
	0x7e, 0xfc, 0xae, 0x7d, 0xa3, 0xe1, 0x1b, 0x8f, 0x88, 0xe4, 0x7b, 0x5c, 0xfd, 0x9b, 0x24, 0x43,
	0x7d, 0xe3, 0xdc, 0x92, 0xeb, 0xb2, 0x42, 0x42, 0x0d, 0x76, 0x43, 0x75, 0x98, 0x0e, 0x9f, 0xfe,
	0x83, 0x6c, 0x70, 0x5d, 0x55, 0x5f, 0x56, 0xc1, 0x9f, 0xcc, 0x09, 0x66, 0xd9, 0x10, 0xd5, 0x5e,
	0xc9, 0x0e, 0xe9, 0x2a, 0x46, 0xc6, 0xee, 0x8d, 0xe1, 0xbc, 0x36, 0xe9, 0x72, 0xb0, 0xa7, 0xc2,
	0x79, 0xd1, 0xbf, 0x5f, 0x67, 0xfd, 0xad, 0xce, 0xfa, 0xbc, 0xba, 0x14, 0x31, 0x7a, 0x8e, 0xeb,
	0x22, 0x56, 0x3a, 0xeb, 0x54, 0x67, 0x49, 0x50, 0xdb, 0x31, 0xf5, 0xa3, 0xec, 0x61, 0xe0, 0x5b,
	0x19, 0x78, 0xfb, 0x64, 0xe0, 0xdf, 0xc7, 0xfa, 0x83, 0x28, 0xb2, 0x42, 0xe4, 0x98, 0xfa, 0x68,
	0x81, 0x2d, 0x2b, 0x92, 0xda, 0x25, 0xc6, 0xce, 0xef, 0x04, 0x61, 0x74, 0xfe, 0x66, 0x3b, 0x0d,
	0xfc, 0x17, 0xc1, 0x16, 0x7e, 0x37, 0x48, 0x1b, 0xd6, 0xf0, 0x1a, 0x9a, 0x5c, 0xd6, 0xa0, 0x65,
	0x0b, 0x0d, 0xc2, 0x5c, 0x34, 0xbb, 0xca, 0xc5, 0xce, 0x4e, 0xed, 0xaf, 0xcb, 0x6c, 0x38, 0x89,
	0x05, 0x66, 0x88, 0xd1, 0x6b, 0x8e, 0xb1, 0x7e, 0xfc, 0x31, 0xa7, 0x10, 0xf2, 0x17, 0xd4, 0x83,
	0x15, 0x74, 0x12, 0xb3, 0xe3, 0xd7, 0x18, 0x88, 0x7f, 0x07, 0x1b, 0xa1, 0xbf, 0xcc, 0xcd, 0x49,
	0x07, 0xe8, 0xdf, 0xc3, 0xc6, 0x08, 0x70, 0x41, 0x5d, 0x8d, 0x90, 0xd6, 0x93, 0x2c, 0xd8, 0x94,
	0xb7, 0x68, 0x9d, 0xd3, 0x19, 0x88, 0xd4, 0xec, 0x45, 0x78, 0x43, 0x58, 0xa1, 0x55, 0x6c, 0x10,
	0xbd, 0xa0, 0x8b, 0xbf, 0x2b, 0xce, 0x11, 0x5d, 0x06, 0xea, 0xd7, 0x19, 0x97, 0x10, 0xc3, 0x14,
	0x9d, 0xd0, 0xe5, 0xe0, 0x56, 0xa9, 0x8b, 0xe6, 0x80, 0xce, 0x06, 0xe1, 0x91, 0x85, 0x72, 0x56,
	0x94, 0x57, 0xb8, 0xd5, 0x3f, 0xda, 0xa1, 0xd0, 0x9d, 0x69, 0x48, 0xda, 0xa1, 0xe0, 0x07, 0x52,
	0xac, 0x8a, 0x9b, 0x6d, 0x90, 0xbf, 0x54, 0x8f, 0xf5, 0x3f, 0xb4, 0xef, 0x54, 0xbb, 0x1d, 0x6c,
	0x6c, 0x21, 0x76, 0x44, 0x1e, 0x62, 0x98, 0x0e, 0xb0, 0x6c, 0xa1, 0x81, 0x58, 0x00, 0x06, 0x75,
	0x79, 0x69, 0x28, 0x93, 0xc4, 0x08, 0x5a, 0xb6, 0xd0, 0xb5, 0xef, 0xf4, 0x18, 0x07, 0xc6, 0x10,
	0xbd, 0xff, 0x21, 0x94, 0x66, 0xbd, 0xd4, 0x8d, 0xf5, 0x72, 0x4f, 0xd6, 0x2b, 0x3d, 0x59, 0xaf,
	0x4d, 0xb2, 0x51, 0x8b, 0x99, 0xfd, 0x97, 0x4e, 0x8a, 0x35, 0x71, 0x99, 0x7a, 0xae, 0xed, 0xdc,
	0xbd, 0x8a, 0xb1, 0x26, 0x1c, 0x84, 0x74, 0xb8, 0x46, 0x88, 0x35, 0xd8, 0xd5, 0xbf, 0x7f, 0x56,
	0xee, 0x00, 0x69, 0xf0, 0x8d, 0x4c, 0xda, 0x03, 0x42, 0xee, 0xfe, 0x1e, 0x60, 0x87, 0x96, 0x45,
	0xd0, 0xb8, 0x22, 0x31, 0x96, 0xb8, 0x8a, 0x47, 0x4b, 0xed, 0x31, 0x36, 0xee, 0x26, 0x00, 0x26,
	0xce, 0x6a, 0xdb, 0x97, 0xd7, 0xad, 0xa0, 0x87, 0xb0, 0x5e, 0x08, 0x25, 0xe9, 0xec, 0x5f, 0x14,
	0xd5, 0xd8, 0x49, 0xb2, 0xff, 0x81, 0xc5, 0x19, 0xa7, 0xce, 0x4e, 0xb3, 0x10, 0x23, 0xe4, 0x63,
	0x77, 0x39, 0x8c, 0xc3, 0x78, 0x73, 0x29, 0x4d, 0x36, 0x53, 0xd1, 0x6a, 0x29, 0x19, 0xaf, 0x91,
	0xf0, 0x6d, 0x9c, 0x76, 0x99, 0x57, 0xc1, 0x49, 0x50, 0x67, 0xc4, 0x1f, 0x64, 0xdd, 0xf5, 0xde,
	0x95, 0xbf, 0x18, 0x42, 0x06, 0xa7, 0x27, 0xb9, 0xdd, 0x90, 0x7f, 0xd2, 0x94, 0x48, 0x05, 0xa8,
	0x42, 0x5f, 0x8d, 0xa6, 0x44, 0x05, 0x3b, 0xd0, 0x91, 0x0c, 0xe5, 0xd6, 0x52, 0x47, 0x32, 0xf2,
	0xd7, 0x7f, 0x84, 0x0d, 0x2e, 0x8a, 0x5d, 0xca, 0x49, 0xc6, 0xa1, 0x3a, 0x32, 0x59, 0x58, 0xa1,
	0x65, 0x43, 0x58, 0x7b, 0x15, 0xf0, 0xb4, 0x73, 0x2d, 0x48, 0x5b, 0xbd, 0xa2, 0x30, 0x69, 0x92,
	0x17, 0x5c, 0xaf, 0x19, 0x97, 0x59, 0x5b, 0x51, 0x98, 0xee, 0xcd, 0x3e, 0x0d, 0x3f, 0x36, 0x69,
	0x88, 0x9e, 0xdb, 0xc3, 0xf0, 0x33, 0x6c, 0xcc, 0xce, 0x5f, 0x19, 0x37, 0x5c, 0xa3, 0x73, 0x6b,
	0x9f, 0x57, 0xd1, 0x1f, 0xc1, 0xcd, 0xf1, 0xca, 0x4e, 0x6b, 0x26, 0x68, 0xb6, 0x37, 0xb6, 0x02,
	0xcb, 0x18, 0xb5, 0x93, 0xac, 0x87, 0x91, 0x50, 0xa3, 0x6f, 0x70, 0xd9, 0x00, 0xe4, 0x8d, 0x69,
	0x3b, 0x55, 0x33, 0xda, 0xab, 0x6d, 0xb2, 0xf1, 0xe9, 0x30, 0x6e, 0x5c, 0x46, 0xb2, 0x03, 0x65,
	0x84, 0xc6, 0x60, 0xca, 0x42, 0xd9, 0xf3, 0xe5, 0x2f, 0x59, 0x88, 0xe4, 0x11, 0x9a, 0x9c, 0xa6,
	0xd4, 0x7f, 0xed, 0x01, 0x36, 0x66, 0x17, 0x24, 0x3b, 0x56, 0xf7, 0x62, 0xea, 0x11, 0x1b, 0x40,
	0x35, 0x25, 0x69, 0x08, 0x7f, 0x9c, 0x8d, 0xa8, 0xef, 0xb5, 0xc5, 0x24, 0x16, 0xfc, 0x16, 0x07,
	0x34, 0x9f, 0x44, 0x0d, 0xee, 0x39, 0xa0, 0x99, 0x20, 0x6d, 0xf0, 0x92, 0x4b, 0x95, 0x06, 0xeb,
	0xbc, 0xec, 0x4f, 0x30, 0x6e, 0xe5, 0x85, 0x01, 0x27, 0x79, 0xa5, 0xfe, 0x03, 0xf7, 0xb1, 0xc1,
	0xf3, 0x69, 0x9a, 0xa4, 0x68, 0x91, 0x3f, 0xcc, 0xc6, 0x2f, 0xc6, 0x6d, 0x91, 0x5e, 0x0f, 0x30,
	0x2a, 0xea, 0x1c, 0xa8, 0x07, 0xfc, 0x16, 0xff, 0x10, 0x1b, 0x93, 0x3e, 0x24, 0x1a, 0xe8, 0xf9,
	0x9c, 0x0d, 0x4b, 0xe0, 0xf9, 0x9b, 0x61, 0xab, 0xcd, 0x4b, 0x00, 0x81, 0xa9, 0x46, 0xd3, 0x94,
	0xfd, 0x11, 0x36, 0x08, 0x10, 0x22, 0xa8, 0x20, 0x57, 0x22, 0x86, 0xc5, 0x73, 0x2e, 0x08, 0x23,
	0xd1, 0xe0, 0x55, 0xe4, 0x4a, 0xc4, 0x72, 0x15, 0x90, 0xd0, 0x3e, 0x7f, 0x4c, 0xed, 0x89, 0x90,
	0x35, 0xde, 0xaf, 0xea, 0x03, 0xbd, 0x9d, 0x40, 0x03, 0xbe, 0xcf, 0x46, 0xe7, 0xd5, 0x4e, 0x98,
	0x60, 0x83, 0xc0, 0xc1, 0xd5, 0x96, 0x48, 0x17, 0x13, 0xba, 0x3b, 0xc9, 0x19, 0xb0, 0x8e, 0x48,
	0x60, 0x63, 0x2e, 0x49, 0x77, 0x82, 0x36, 0x1f, 0x82, 0xec, 0x17, 0x93, 0xf6, 0x93, 0x49, 0x18,
	0x43, 0xcf, 0xe2, 0xc3, 0x90, 0x0e, 0xbe, 0x16, 0x13, 0x59, 0x97, 0x11, 0xe0, 0x7c, 0x31, 0x69,
	0x5f, 0x24, 0x82, 0x51, 0x60, 0x73, 0x31, 0x69, 0x4f, 0x45, 0x51, 0xb2, 0x7b, 0xfe, 0x66, 0x88,
	0x7b, 0x4a, 0x3e, 0xe6, 0x1f, 0x63, 0x13, 0x8b, 0x89, 0x8c, 0xed, 0xaf, 0x9d, 0xb6, 0xda, 0x82,
	0x73, 0x60, 0xee, 0x5a, 0x9a, 0xc4, 0x9b, 0x40, 0x48, 0xb0, 0x71, 0x28, 0xf5, 0x62, 0xfc, 0xb2,
	0x20, 0x0a, 0x31, 0x9a, 0x25, 0xf7, 0x81, 0xe8, 0x52, 0xb8, 0xb1, 0xbd, 0x22, 0xa2, 0xeb, 0xb2,
	0xe6, 0x87, 0x80, 0x13, 0x64, 0xfd, 0x4a, 0x7c, 0xa5, 0xbd, 0x25, 0x52, 0x3e, 0x01, 0x85, 0x2c,
	0x88, 0x56, 0x6b, 0x75, 0x2b, 0x88, 0xcf, 0xc7, 0x6d, 0x1d, 0x5e, 0x8c, 0x1f, 0x86, 0xf4, 0x32,
	0xc3, 0x79, 0xd1, 0x9e, 0x0f, 0xaf, 0xb7, 0xf9, 0x11, 0xa8, 0x2f, 0x3e, 0xe8, 0x03, 0x53, 0x91,
	0xcc, 0xf4, 0xa8, 0x3f, 0xc4, 0xfa, 0x17, 0x3b, 0x3b, 0x90, 0x0b, 0x3f, 0x06, 0xa2, 0x94, 0x32,
	0xc2, 0xba, 0xb6, 0xf8, 0x71, 0xff, 0x28, 0x06, 0xc3, 0x12, 0xed, 0xb0, 0x1d, 0xde, 0x90, 0x4f,
	0x7f, 0x84, 0x49, 0xcc, 0x4f, 0x40, 0x6e, 0xb2, 0x04, 0x7a, 0xe7, 0xac, 0x21, 0xf8, 0x49, 0xc8,
	0x00, 0xfd, 0xb8, 0x00, 0x04, 0x45, 0xf0, 0x53, 0xaa, 0x6f, 0x49, 0x67, 0x54, 0xc4, 0xf2, 0x5b,
	0xa1, 0xc2, 0x58, 0x17, 0xc9, 0xc7, 0x6d, 0xc4, 0xf0, 0x0d, 0xcc, 0x8e, 0x46, 0x1c, 0x3f, 0x0b,
	0x5d, 0xee, 0x42, 0xd0, 0x5a, 0x4c, 0xe8, 0x11, 0x22, 0x92, 0x22, 0xaf, 0x01, 0x58, 0x1d, 0x0c,
	0xa0, 0x20, 0x20, 0x7b, 0x7e, 0x3b, 0x94, 0xad, 0xce, 0xa0, 0xa9, 0xcd, 0xef, 0xf0, 0x4f, 0xb0,
	0x23, 0x92, 0x47, 0x7c, 0x00, 0x6c, 0x66, 0x2b, 0x48, 0x37, 0x05, 0x4a, 0xe3, 0x4e, 0xff, 0x8c,
	0x3a, 0x83, 0xbe, 0x10, 0xdc, 0x10, 0x8b, 0xc9, 0x92, 0x48, 0xa5, 0x97, 0x6c, 0xeb, 0x4a, 0xb3,
	0xcd, 0xbf, 0xe0, 0xf9, 0xa7, 0xd9, 0x89, 0xf9, 0x20, 0xde, 0xbc, 0xd0, 0x09, 0x64, 0x84, 0xc0,
	0xf3, 0x29, 0x8e, 0x04, 0xaa, 0xc2, 0x69, 0xff, 0x61, 0xf6, 0x40, 0x21, 0xbe, 0x47, 0xae, 0x67,
	0xfc, 0x53, 0xec, 0x58, 0x61, 0xa2, 0xf3, 0x71, 0x83, 0xcf, 0xf9, 0x0f, 0xb2, 0xfb, 0xc8, 0x40,
	0x02, 0xea, 0xdc, 0x4c, 0x10, 0xc7, 0x49, 0xfb, 0xfc, 0x4e, 0xb3, 0xbd, 0x37, 0x15, 0x37, 0x2e,
	0x07, 0x37, 0x17, 0x44, 0xbc, 0xd9, 0xde, 0x52, 0x0d, 0x7e, 0xee, 0xd1, 0xc7, 0xb8, 0xf0, 0x6f,
	0x67, 0x67, 0x28, 0xc5, 0xcb, 0x82, 0xa8, 0x23, 0x88, 0xc8, 0xd0, 0x3c, 0xf4, 0xe0, 0xb9, 0x47,
	0xf8, 0x75, 0x43, 0xb4, 0x8c, 0x06, 0xc7, 0x2c, 0x15, 0xe4, 0xb4, 0x09, 0xe2, 0x43, 0xb1, 0xa9,
	0xb1, 0xc4, 0xb7, 0xa0, 0x4d, 0x34, 0x08, 0xc7, 0x12, 0x0f, 0x01, 0xa6, 0xdd, 0xc0, 0xb1, 0xb9,
	0xf8, 0xd7, 0x41, 0x57, 0x50, 0x92, 0x57, 0xc0, 0x6d, 0x6b, 0x62, 0x98, 0x0d, 0x5b, 0xc1, 0x3a,
	0xb4, 0x32, 0xac, 0xc7, 0x87, 0xa6, 0x3a, 0xed, 0xad, 0x24, 0x0d, 0x9f, 0xc1, 0x7e, 0x34, 0x2b,
	0xe2, 0x50, 0x34, 0xf8, 0xf7, 0xe2, 0x14, 0x24, 0x7b, 0x2f, 0xf4, 0xbe, 0x38, 0xe9, 0x6c, 0x6e,
	0xf1, 0x1d, 0xab, 0x57, 0xc8, 0x50, 0xc6, 0x3c, 0xa6, 0x89, 0x08, 0x61, 0x4b, 0x41, 0x1a, 0xec,
	0x88, 0xb6, 0x48, 0x5b, 0x3c, 0x01, 0xd2, 0x2b, 0x9d, 0xf6, 0x95, 0xeb, 0xb0, 0xba, 0x2f, 0xc3,
	0xa8, 0xe3, 0x4d, 0x80, 0xc9, 0x99, 0x1d, 0x65, 0x9c, 0xa6, 0xfc, 0xeb, 0x21, 0x39, 0x5a, 0x9a,
	0xce, 0xa7, 0xa9, 0x29, 0x29, 0xf5, 0xcf, 0xb2, 0x5b, 0xe9, 0xa2, 0x0d, 0xd9, 0x5b, 0xd1, 0x8d,
	0xff, 0x62, 0x4b, 0x0d, 0x6c, 0xd1, 0xe0, 0x2d, 0x7f, 0x9c, 0x0d, 0xe3, 0xb8, 0x97, 0xee, 0xdc,
	0xfc, 0xad, 0x9e, 0xef, 0xeb, 0x01, 0x23, 0xa7, 0x83, 0xb7, 0x79, 0xfe, 0x11, 0x36, 0x6e, 0x16,
	0x4a, 0x25, 0x8f, 0xb7, 0x7b, 0xfe, 0x49, 0x76, 0xc4, 0x09, 0x02, 0x68, 0x4a, 0x7f, 0x87, 0x4e,
	0x04, 0x42, 0x31, 0xf0, 0x77, 0x7a, 0xfe, 0x04, 0x1b, 0xa3, 0xd8, 0x70, 0xd4, 0x1b, 0xa6, 0x45,
	0x9b, 0xbf, 0xcb, 0xf3, 0x4f, 0xb0, 0xc3, 0x94, 0x95, 0x1c, 0x55, 0x17, 0x65, 0xf8, 0x3e, 0xfe,
	0x7d, 0xc8, 0x92, 0x8c, 0x26, 0x77, 0xb1, 0x35, 0xd7, 0x89, 0x22, 0xfe, 0x6e, 0xcf, 0xbf, 0x8f,
	0xdd, 0xfd, 0x64, 0x18, 0x6f, 0x75, 0x82, 0xfd, 0xbb, 0xe8, 0x67, 0x3c, 0xff, 0x6e, 0x56, 0x73,
	0xa8, 0x2f, 0x04, 0xad, 0x99, 0x20, 0x8a, 0xe6, 0xd1, 0xd4, 0x9d, 0xae, 0x62, 0xa0, 0xf2, 0x9b,
	0xfc, 0x97, 0x3c, 0xff, 0x36, 0x76, 0xd2, 0x21, 0xc4, 0xce, 0xb2, 0x1c, 0x84, 0x2d, 0xea, 0x40,
	0xbf, 0xec, 0xf9, 0x35, 0x76, 0xeb, 0x42, 0x18, 0x6f, 0x5f, 0x6d, 0xda, 0x14, 0xd7, 0x82, 0xf6,
	0xc6, 0xd6, 0x45, 0x3c, 0x9e, 0xe4, 0x9f, 0xc5, 0xe2, 0xba, 0xd0, 0x00, 0x05, 0xcd, 0x45, 0x6d,
	0xfe, 0x39, 0xcf, 0x9f, 0x64, 0xf7, 0xba, 0x21, 0x3b, 0xf5, 0xe2, 0x64, 0xd7, 0x82, 0x22, 0x23,
	0xf3, 0x5f, 0xf3, 0xfc, 0x7b, 0xd8, 0xed, 0x5d, 0xe9, 0xcd, 0x3b, 0x5a, 0xfc, 0xdf, 0xa3, 0x7c,
	0x0e, 0x90, 0xf3, 0x52, 0x12, 0x6f, 0xf2, 0x5f, 0xf7, 0xfc, 0xbb, 0xd8, 0xd9, 0xee, 0xd4, 0x32,
	0x70, 0x36, 0xff, 0x0f, 0x07, 0xcd, 0xf5, 0x12, 0xe4, 0xfa, 0x1b, 0xbd, 0x73, 0x55, 0xe1, 0xb8,
	0xf9, 0x6f, 0x7a, 0xfe, 0x8b, 0xd8, 0x5d, 0x07, 0xc8, 0xf5, 0x5a, 0x18, 0xf3, 0xdf, 0xf2, 0xfc,
	0x07, 0x58, 0xdd, 0x8d, 0x2d, 0xaf, 0x89, 0xf5, 0x53, 0x0e, 0x18, 0x8f, 0x9e, 0x26, 0xcc, 0x3f,
	0x44, 0x19, 0x77, 0x49, 0x50, 0x20, 0xe3, 0x3f, 0xc2, 0x06, 0xee, 0x42, 0x2f, 0x69, 0xbe, 0x84,
	0x72, 0x38, 0x40, 0x9e, 0x28, 0xdd, 0x3f, 0xc6, 0x4e, 0xd5, 0x85, 0x1a, 0x29, 0xfe, 0xe4, 0xa0,
	0xf9, 0xa1, 0x5c, 0xff, 0xb4, 0x57, 0x7e, 0x48, 0xf1, 0x67, 0x28, 0xd1, 0x03, 0xe4, 0x07, 0x12,
	0xfd, 0x73, 0x58, 0x15, 0x8e, 0xcf, 0x44, 0x9d, 0xf5, 0xf3, 0x69, 0x3a, 0x1b, 0xb6, 0x5a, 0x80,
	0x13, 0x8d, 0xe9, 0xbd, 0xcb, 0x41, 0xab, 0x2d, 0x52, 0xfe, 0xa3, 0x25, 0xff, 0x56, 0x76, 0x4c,
	0xe2, 0x2f, 0x8b, 0x9d, 0x75, 0x91, 0x9e, 0xbf, 0xb9, 0x21, 0x44, 0x63, 0x21, 0xdc, 0x09, 0xdb,
	0xfc, 0xc7, 0x4a, 0x20, 0x2f, 0x89, 0x9e, 0x6a, 0x36, 0xa3, 0x70, 0x23, 0x88, 0xdb, 0x7a, 0x0c,
	0x03, 0x82, 0xff, 0x78, 0x3e, 0x0b, 0xd8, 0x4a, 0x5e, 0x6c, 0xe1, 0x42, 0xc0, 0x3f, 0x58, 0xf2,
	0x6f, 0x67, 0xa7, 0x25, 0xfa, 0x4a, 0x93, 0x08, 0x70, 0xfa, 0x31, 0xb4, 0xfc, 0x27, 0x4a, 0x16,
	0x9b, 0x57, 0x9a, 0xa6, 0x0e, 0x72, 0xba, 0xfd, 0x90, 0x5d, 0xc6, 0x52, 0x67, 0x3d, 0x0a, 0x5b,
	0x5b, 0x74, 0xf6, 0x8b, 0x6b, 0xf6, 0x4f, 0x96, 0x40, 0x68, 0x12, 0x4d, 0x27, 0xe3, 0x17, 0xe3,
	0x1b, 0x61, 0x1b, 0xef, 0xda, 0x20, 0xc5, 0x87, 0xed, 0x0c, 0x66, 0x3b, 0x58, 0x91, 0xb6, 0x80,
	0x7f, 0x58, 0xb8, 0xf8, 0x4f, 0xd9, 0xe5, 0x5f, 0x8c, 0x5b, 0x22, 0x6d, 0xc3, 0xcf, 0xc5, 0xf8,
	0x7a, 0x82, 0xc9, 0x3f, 0x52, 0x82, 0xc9, 0x50, 0xe2, 0xe7, 0x85, 0x8b, 0xfc, 0x69, 0x87, 0xb9,
	0x20, 0x6d, 0x09, 0x07, 0xfd, 0x33, 0x25, 0xff, 0x2c, 0x3b, 0x25, 0xd1, 0x2b, 0x22, 0x0d, 0x83,
	0x28, 0x7c, 0xc6, 0x25, 0xf9, 0x68, 0x09, 0x86, 0xbe, 0x24, 0x99, 0x4b, 0x85, 0x78, 0x46, 0x4e,
	0x78, 0x33, 0x41, 0x8c, 0x9a, 0x1d, 0xa0, 0x70, 0xb6, 0xfe, 0xd7, 0x25, 0x50, 0x03, 0x54, 0x59,
	0x74, 0x2c, 0x9f, 0x20, 0x3b, 0xb2, 0x41, 0xff, 0x4d, 0x09, 0x86, 0x90, 0x43, 0xa0, 0x32, 0x41,
	0x9b, 0xbb, 0xd8, 0x08, 0x3a, 0xc4, 0xe0, 0x4c, 0x94, 0xb4, 0x44, 0x83, 0xff, 0xac, 0x5d, 0x75,
	0x25, 0x10, 0x5a, 0xb8, 0xaf, 0xdc, 0x10, 0x29, 0xff, 0x58, 0xc9, 0x3f, 0xcc, 0xb8, 0x6e, 0x9a,
	0xf3, 0x37, 0x9b, 0x61, 0x2a, 0x1a, 0xfc, 0xe3, 0x4e, 0x32, 0x14, 0xb9, 0x62, 0x12, 0xab, 0xf4,
	0x09, 0x1b, 0xaf, 0x56, 0xe8, 0xc5, 0xa4, 0xbd, 0xd2, 0x69, 0x36, 0x93, 0xb4, 0xcd, 0x7f, 0xce,
	0xae, 0x08, 0x72, 0x27, 0x97, 0x9f, 0x16, 0x9a, 0xad, 0x1a, 0xfc, 0x93, 0x25, 0xff, 0x5e, 0x76,
	0x47, 0x9e, 0x60, 0x65, 0x2b, 0xe9, 0x34, 0xa6, 0xc5, 0xb9, 0x47, 0x2e, 0x24, 0x9d, 0x74, 0x01,
	0xe6, 0x77, 0xfe, 0xf3, 0x25, 0xff, 0x38, 0x9b, 0xb0, 0xab, 0xa0, 0xd5, 0xc1, 0x4f, 0xd9, 0x0d,
	0x87, 0x32, 0x6f, 0xcd, 0x86, 0x72, 0x10, 0xf0, 0x4f, 0x63, 0xef, 0x5e, 0x10, 0xc1, 0x66, 0x07,
	0xe6, 0x70, 0xfa, 0xc8, 0x54, 0xff, 0xf7, 0x5c, 0x9a, 0xc2, 0xce, 0xf5, 0xfb, 0x2e, 0x0d, 0xf5,
	0x1f, 0xfa, 0xd5, 0x4d, 0xfc, 0x9f, 0xb1, 0x17, 0x68, 0x1a, 0xdd, 0x05, 0x4d, 0xa1, 0xfc, 0x0f,
	0x4a, 0xfe, 0x9d, 0xec, 0x36, 0x4d, 0x02, 0xc3, 0x6d, 0x6f, 0x59, 0x5c, 0xef, 0xb4, 0xc4, 0x54,
	0x14, 0xcd, 0x25, 0xe9, 0x7a, 0xd8, 0x68, 0x88, 0x98, 0xff, 0x1f, 0x28, 0x59, 0xc3, 0x11, 0x2e,
	0xb3, 0x73, 0xb0, 0x2b, 0xc3, 0xf1, 0xc4, 0xff, 0x4b, 0x11, 0xc7, 0xf4, 0xab, 0x5b, 0xe7, 0xff,
	0x2c, 0xc1, 0x8a, 0xac, 0x69, 0xe6, 0xc3, 0x1b, 0x62, 0x5a, 0x04, 0xa8, 0xdb, 0xf2, 0x3f, 0xc4,
	0x1e, 0x54, 0x88, 0x83, 0xef, 0x94, 0x14, 0x5c, 0x5a, 0xf0, 0x01, 0xc1, 0xff, 0xa8, 0xe4, 0x3f,
	0xcc, 0x26, 0x0d, 0xdf, 0x91, 0x32, 0xf9, 0x80, 0xbc, 0x5b, 0x17, 0x82, 0x16, 0xb4, 0x9e, 0x68,
	0x48, 0x35, 0x85, 0xe8, 0xf8, 0x97, 0x70, 0xc8, 0x16, 0xc8, 0xfe, 0x62, 0x4b, 0x36, 0xdd, 0x1f,
	0x97, 0xfc, 0x73, 0xec, 0xfe, 0x4c, 0x3d, 0x1a, 0x52, 0xac, 0x2d, 0x77, 0x6d, 0x57, 0x2a, 0xcf,
	0x9f, 0x60, 0xaf, 0xca, 0xe4, 0x8a, 0x4a, 0x91, 0xcc, 0xf4, 0x4f, 0xdd, 0x62, 0x75, 0xa7, 0x33,
	0x14, 0x7f, 0x56, 0xf2, 0xef, 0x60, 0x67, 0x32, 0xe2, 0xd5, 0xba, 0x11, 0x75, 0xbb, 0x16, 0xff,
	0x73, 0x1c, 0xf3, 0x9a, 0x8a, 0x44, 0x8f, 0x92, 0x59, 0x4e, 0x22, 0xc1, 0xff, 0x2f, 0xec, 0x76,
	0x79, 0x34, 0x22, 0xff, 0x6f, 0x9c, 0x11, 0x73, 0x25, 0xec, 0x24, 0x37, 0x64, 0x1c, 0x41, 0x20,
	0xfa, 0xaf, 0x19, 0x36, 0xb4, 0xbb, 0x8f, 0xa3, 0xe2, 0xfd, 0x3f, 0x6e, 0x5b, 0xab, 0x51, 0xee,
	0xd0, 0xfc, 0x37, 0x57, 0x26, 0x4a, 0x13, 0x4d, 0x93, 0xeb, 0x21, 0xa8, 0x6f, 0x82, 0xff, 0xf7,
	0x92, 0x5f, 0x67, 0x77, 0x9a, 0xa2, 0xa0, 0xd5, 0xba, 0x09, 0xf8, 0xff, 0x2d, 0xf9, 0x87, 0xd8,
	0xa8, 0x92, 0xab, 0x9c, 0x42, 0xfe, 0xc2, 0xcd, 0xe0, 0x15, 0x49, 0x67, 0x26, 0x88, 0xaf, 0xc4,
	0xd1, 0xde, 0x4c, 0x14, 0x84, 0x3b, 0x57, 0xe2, 0x0d, 0x61, 0x04, 0xf7, 0x97, 0xb0, 0x9d, 0x1f,
	0x56, 0x91, 0xdb, 0x50, 0xdd, 0x7b, 0x63, 0x19, 0x3a, 0x23, 0x5e, 0x92, 0x92, 0x2b, 0xcb, 0x85,
	0xa0, 0x45, 0x37, 0xf7, 0xf8, 0x9b, 0xca, 0xfe, 0x18, 0x63, 0x8b, 0x89, 0xba, 0x23, 0xca, 0xdf,
	0x5c, 0x06, 0xcd, 0x73, 0x26, 0x88, 0x61, 0x2e, 0x31, 0x77, 0x47, 0xf9, 0x5b, 0xca, 0xa8, 0xda,
	0xa2, 0xc5, 0x1b, 0xda, 0xb2, 0x15, 0xb6, 0xf9, 0x5b, 0x11, 0x46, 0x01, 0xec, 0x14, 0xec, 0x6d,
	0x65, 0x9f, 0xd3, 0xb1, 0x14, 0x94, 0x0f, 0x6a, 0xe1, 0xdb, 0xcb, 0x30, 0x7b, 0x28, 0x88, 0x74,
	0x0a, 0xc7, 0xbe, 0xc6, 0xdf, 0x51, 0x06, 0xfd, 0xdf, 0x46, 0xad, 0x26, 0xc9, 0x02, 0x2c, 0xc2,
	0xef, 0x44, 0x9e, 0xad, 0x6c, 0xb0, 0x14, 0x52, 0x4a, 0xde, 0x55, 0x26, 0xc5, 0xdb, 0x5c, 0x63,
	0xe4, 0xdf, 0x57, 0x06, 0xb1, 0xa9, 0xf9, 0x5a, 0xd6, 0xed, 0xdd, 0x65, 0xff, 0x28, 0xf3, 0x1d,
	0xb5, 0x98, 0xea, 0xf2, 0x1e, 0xcc, 0xdc, 0x5e, 0xca, 0xe7, 0x12, 0x39, 0x97, 0xf3, 0x7f, 0x89,
	0x2c, 0x99, 0xac, 0x8d, 0xee, 0xfd, 0x5e, 0x2a, 0x83, 0xa2, 0x1f, 0x25, 0x74, 0x07, 0x8c, 0xbf,
	0x0f, 0xf6, 0x29, 0x78, 0x8b, 0x01, 0xd7, 0xdc, 0x16, 0x41, 0xff, 0x55, 0x99, 0xd4, 0xf7, 0x2c,
	0xfc, 0xfb, 0xcb, 0x30, 0xd7, 0x2f, 0x26, 0x3a, 0x16, 0x1c, 0x81, 0x7f, 0x00, 0x33, 0x91, 0x63,
	0x40, 0x67, 0xfd, 0x83, 0x65, 0x18, 0x02, 0x2b, 0xa2, 0xbd, 0x92, 0xc4, 0xab, 0x49, 0x73, 0x51,
	0x88, 0xc6, 0x6a, 0xd2, 0x54, 0x77, 0xc9, 0xf8, 0x0f, 0x61, 0x19, 0x06, 0xad, 0x92, 0xbd, 0x1f,
	0x93, 0xa9, 0x8b, 0x0f, 0x97, 0x3b, 0xad, 0xf6, 0xe5, 0x24, 0x15, 0xd0, 0xcd, 0x9e, 0x16, 0x69,
	0xc2, 0xff, 0x02, 0x59, 0x50, 0xe8, 0xc5, 0xa4, 0x3d, 0x17, 0x25, 0x41, 0x9b, 0xff, 0xa5, 0xae,
	0x87, 0x04, 0xaf, 0x88, 0xe8, 0x3a, 0xff, 0x2b, 0x14, 0xc6, 0x6a, 0x92, 0x5c, 0x0e, 0xe2, 0x3d,
	0x3a, 0xe3, 0x26, 0x4b, 0x0b, 0xff, 0x6b, 0xa4, 0x9f, 0x8a, 0xdb, 0xf2, 0x44, 0x9f, 0x5a, 0xe6,
	0x7f, 0x94, 0xfd, 0x11, 0x3a, 0xbc, 0xc6, 0x8e, 0xf7, 0x3f, 0xb1, 0xe5, 0x2f, 0x07, 0x37, 0xe5,
	0x3a, 0x69, 0x51, 0xfe, 0x0d, 0xb5, 0x4d, 0x80, 0xf1, 0x7a, 0x6c, 0xc4, 0xdf, 0x96, 0x61, 0xf6,
	0x85, 0x2c, 0xe4, 0x1b, 0x63, 0x8b, 0x9d, 0x1d, 0x1b, 0xff, 0x77, 0x58, 0xb0, 0x1c, 0x64, 0x2a,
	0x9c, 0x15, 0xff, 0x7b, 0xec, 0x89, 0x28, 0x69, 0x0d, 0xfb, 0x32, 0xf6, 0x44, 0x84, 0x2d, 0x76,
	0x70, 0xe6, 0x7e, 0x4d, 0x05, 0xea, 0x4e, 0x8b, 0xcf, 0x62, 0xd2, 0xbe, 0x0c, 0x3b, 0x0a, 0xd1,
	0xe0, 0xaf, 0xad, 0xd0, 0xa6, 0x4a, 0xed, 0xc1, 0x48, 0x22, 0xdf, 0x54, 0x81, 0x4e, 0x22, 0xa1,
	0x20, 0xc6, 0x8b, 0x2d, 0x3a, 0x93, 0xbc, 0x21, 0xf8, 0xeb, 0x2a, 0xd8, 0xbe, 0x96, 0x8f, 0x3b,
	0x31, 0xf7, 0xfa, 0x0a, 0x54, 0x18, 0xe0, 0xb9, 0x1d, 0xdd, 0x37, 0x63, 0xd9, 0x17, 0x82, 0xd6,
	0x4a, 0x53, 0x6c, 0x84, 0x41, 0xb4, 0xb2, 0xb7, 0xb3, 0x9e, 0x44, 0xfc, 0x5b, 0x10, 0x8c, 0xa6,
	0x1a, 0xbb, 0x96, 0xdf, 0x8a, 0x19, 0x2d, 0x8a, 0x5d, 0xe9, 0x5c, 0x7f, 0x2d, 0x49, 0x1b, 0x53,
	0xad, 0x15, 0x58, 0xc5, 0xbe, 0x0d, 0x53, 0x58, 0x4e, 0xf7, 0x94, 0xe2, 0xdb, 0x11, 0x0c, 0x7c,
	0x2e, 0x76, 0x76, 0xa6, 0xe2, 0xc6, 0x82, 0x68, 0xc3, 0xd2, 0xfd, 0x1d, 0x15, 0x68, 0x41, 0x34,
	0xa8, 0xe3, 0x21, 0x09, 0x55, 0x1e, 0xf6, 0xbd, 0xdf, 0x59, 0x81, 0x16, 0x20, 0x8c, 0xb8, 0xd9,
	0x36, 0x88, 0x37, 0x18, 0x04, 0x99, 0xf0, 0xa1, 0xfd, 0x93, 0x54, 0xf0, 0x67, 0x11, 0x21, 0x45,
	0x6f, 0xe1, 0xf9, 0x77, 0x21, 0xb7, 0xf2, 0xdc, 0x49, 0x9d, 0x64, 0x5c, 0x6c, 0xad, 0x26, 0x4d,
	0xfe, 0xdd, 0x15, 0x18, 0x34, 0x32, 0x8d, 0xf4, 0xa0, 0xe2, 0x5f, 0x44, 0x20, 0xf2, 0xbd, 0x94,
	0x6c, 0x8b, 0x14, 0xf7, 0x86, 0xbf, 0x8d, 0xf2, 0x26, 0x60, 0x14, 0x6c, 0x88, 0x95, 0xa6, 0x68,
	0x87, 0x41, 0x84, 0xb8, 0xff, 0x48, 0xb5, 0xd0, 0x38, 0x93, 0xea, 0x3f, 0x55, 0xa0, 0xe1, 0x57,
	0x44, 0xd0, 0x86, 0x39, 0x4d, 0x24, 0xcd, 0x48, 0xf0, 0xef, 0xac, 0x82, 0x28, 0x00, 0x86, 0x07,
	0xcf, 0x6a, 0xc3, 0xfd, 0x06, 0x04, 0x6b, 0x9d, 0xee, 0x62, 0xbc, 0x1a, 0xac, 0x47, 0x82, 0x3f,
	0x5b, 0x05, 0xe6, 0x33, 0x9b, 0x67, 0x42, 0x7d, 0x57, 0x15, 0x9a, 0x59, 0xa7, 0xb8, 0x24, 0x44,
	0x13, 0x72, 0xe5, 0xdf, 0x5d, 0x05, 0xfe, 0x65, 0x13, 0xc3, 0x8c, 0x25, 0x5a, 0x2d, 0xfe, 0x3d,
	0x19, 0x20, 0x8a, 0xec, 0x8d, 0x55, 0xe8, 0x5a, 0xab, 0x49, 0xf3, 0x2a, 0x8e, 0xdf, 0x15, 0x9a,
	0xf6, 0xde, 0x54, 0x05, 0x41, 0x92, 0x29, 0x1f, 0xb4, 0xcb, 0x24, 0x6e, 0xe0, 0x09, 0x37, 0xff,
	0xde, 0x2a, 0x2c, 0x6b, 0xab, 0x69, 0x10, 0xb7, 0x82, 0x0d, 0x80, 0xa8, 0x36, 0x5e, 0x0c, 0x23,
	0xfe, 0xe6, 0x2a, 0xac, 0x33, 0x05, 0xc8, 0xab, 0xb1, 0xf8, 0xfa, 0x4e, 0x10, 0xf1, 0xb7, 0x60,
	0x4d, 0x56, 0x93, 0x64, 0x0e, 0x23, 0x3a, 0xc4, 0x6d, 0x63, 0x9c, 0x7b, 0x6b, 0x15, 0xa6, 0xcc,
	0x95, 0x1d, 0x54, 0xfe, 0xa8, 0xc3, 0xbc, 0x0d, 0x2b, 0x27, 0x6b, 0x6c, 0x8c, 0xce, 0xfc, 0xed,
	0x48, 0x2a, 0x8d, 0x24, 0x44, 0xfa, 0x8e, 0x2a, 0xcd, 0x7c, 0xd2, 0xa0, 0xd3, 0x5a, 0x84, 0xc1,
	0xfd, 0x4e, 0x4c, 0x4f, 0x89, 0xac, 0x5c, 0xf8, 0xbb, 0xaa, 0xf5, 0x8f, 0x7b, 0x8c, 0x83, 0xe6,
	0x62, 0x5f, 0xa8, 0xf3, 0x8f, 0xb3, 0xc3, 0x59, 0x98, 0xb2, 0x52, 0x17, 0xa1, 0x60, 0x2a, 0xe2,
	0x9e, 0x7f, 0x8a, 0x1d, 0xcb, 0xa1, 0x64, 0x47, 0xe3, 0x25, 0xff, 0x18, 0x9b, 0xc8, 0x61, 0xa7,
	0x45, 0x9b, 0x97, 0xfd, 0x93, 0xec, 0x68, 0x0e, 0x43, 0xd6, 0x1c, 0x5e, 0xf1, 0xcf, 0xb0, 0x93,
	0x39, 0xa4, 0xb5, 0x98, 0x54, 0xeb, 0xff, 0x76, 0x08, 0xba, 0x73, 0xfe, 0x56, 0xa0, 0x3f, 0xca,
	0x18, 0x7d, 0x49, 0xce, 0x47, 0x19, 0x93, 0x26, 0x44, 0x32, 0xae, 0x8f, 0xb1, 0xa1, 0xe9, 0xa4,
	0xd5, 0xc2, 0x8e, 0xbe, 0x29, 0xc8, 0xb4, 0xee, 0x04, 0x28, 0xe3, 0x65, 0xb4, 0xf6, 0x3a, 0x11,
	0x21, 0x38, 0x0c, 0x87, 0x31, 0x7d, 0x1d, 0x69, 0x7a, 0x0f, 0x26, 0x10, 0x0e, 0x7d, 0xe4, 0x90,
	0x73, 0xf7, 0x47, 0x22, 0xfa, 0x20, 0x87, 0xc5, 0x24, 0xbd, 0x1c, 0x44, 0x6a, 0xbe, 0xe6, 0xfd,
	0x50, 0x32, 0xce, 0xff, 0x74, 0x05, 0x8f, 0x0f, 0x68, 0x00, 0xdd, 0x36, 0xe4, 0x83, 0xfe, 0x08,
	0x1b, 0x24, 0x40, 0xb0, 0xb1, 0xcd, 0x99, 0xcf, 0xd9, 0xf0, 0x4a, 0xb8, 0x19, 0xcf, 0x87, 0xd7,
	0xdb, 0xc8, 0xbc, 0x00, 0x26, 0x56, 0x53, 0x21, 0x66, 0x83, 0x3d, 0x0d, 0xbc, 0x0e, 0x4c, 0x64,
	0x2c, 0xa5, 0x88, 0xd8, 0x04, 0xb5, 0x61, 0x35, 0x68, 0x6d, 0x93, 0xf1, 0x98, 0x7f, 0x06, 0xea,
	0xce, 0x56, 0x9a, 0xb0, 0x8d, 0xd8, 0x95, 0x36, 0x14, 0xbd, 0x22, 0x6b, 0x36, 0x7f, 0xc7, 0x83,
	0xbe, 0xa5, 0x8e, 0xcd, 0x90, 0xee, 0x77, 0xd1, 0x76, 0x35, 0x93, 0xec, 0x34, 0x83, 0x54, 0x4c,
	0x77, 0xa2, 0x88, 0x5a, 0x09, 0x0b, 0xf9, 0xe3, 0x7e, 0x5c, 0xca, 0x1c, 0xeb, 0xa8, 0x85, 0xfe,
	0xef, 0xfd, 0xb8, 0x54, 0xa7, 0xc1, 0x33, 0x7b, 0x99, 0x84, 0x7f, 0xd7, 0x8f, 0x7b, 0x2a, 0x85,
	0x41, 0xeb, 0xde, 0xc5, 0x98, 0xff, 0x7d, 0x3f, 0xea, 0x36, 0x0e, 0xf8, 0x4a, 0xa7, 0xcd, 0xbf,
	0xdc, 0x0f, 0x3c, 0x5c, 0xe8, 0xc4, 0x8d, 0x54, 0x34, 0x32, 0x59, 0x7d, 0xeb, 0x00, 0x0c, 0x2a,
	0x0b, 0x77, 0x0d, 0xb4, 0xb6, 0xe9, 0x30, 0x8a, 0xf8, 0xb7, 0x0d, 0xc0, 0x30, 0xb6, 0x50, 0xaa,
	0x9c, 0x6f, 0x1f, 0x00, 0xc6, 0xb2, 0x08, 0x28, 0xe9, 0x3b, 0x06, 0x80, 0x31, 0x32, 0x91, 0x59,
	0x85, 0xbc, 0x71, 0x00, 0x18, 0x98, 0x4d, 0x83, 0xcd, 0x24, 0x5e, 0x0d, 0x37, 0x45, 0x6a, 0xe1,
	0xde, 0x85, 0x0c, 0x58, 0x38, 0xc3, 0xc0, 0xf7, 0x21, 0x03, 0x16, 0x4a, 0x31, 0xf0, 0x6e, 0x64,
	0x20, 0x8b, 0x00, 0x06, 0xde, 0x83, 0x0c, 0x90, 0x75, 0xcd, 0x2a, 0xe4, 0x07, 0xb1, 0x90, 0x95,
	0xad, 0x70, 0x25, 0x88, 0x57, 0xb6, 0x3a, 0xa1, 0x85, 0xfa, 0xf1, 0x01, 0xd4, 0xc4, 0x0b, 0x5e,
	0xc6, 0x41, 0xf4, 0x47, 0x31, 0x25, 0xbe, 0xcb, 0x91, 0xac, 0xaf, 0x87, 0xb1, 0x85, 0xfa, 0x14,
	0x72, 0x61, 0x50, 0x86, 0xf1, 0x4f, 0x23, 0xe3, 0xcb, 0xa2, 0x31, 0x1d, 0x05, 0x1b, 0xdb, 0x56,
	0x92, 0xcf, 0x0d, 0x40, 0x0b, 0x29, 0x84, 0x49, 0xf0, 0x2b, 0x03, 0xa4, 0x21, 0x11, 0x5c, 0x55,
	0xf3, 0x57, 0xb1, 0x32, 0x0e, 0x14, 0xea, 0xf8, 0x79, 0xcc, 0x7d, 0x3a, 0xd8, 0xd8, 0x08, 0xd2,
	0xa0, 0x6d, 0xe5, 0xfe, 0x9b, 0x03, 0xb4, 0xd0, 0x13, 0x42, 0xe5, 0xf2, 0x5b, 0x98, 0x8b, 0x03,
	0x85, 0x5c, 0xbe, 0x38, 0x00, 0x1b, 0x4a, 0xd7, 0x0c, 0x64, 0x9e, 0xe2, 0xc2, 0xfc, 0xfe, 0xf3,
	0x00, 0x6c, 0x34, 0x5c, 0x12, 0x69, 0x32, 0x36, 0x44, 0x7f, 0x80, 0xdc, 0x68, 0x7f, 0x1b, 0xc3,
	0xcd, 0x9f, 0x0e, 0xc0, 0xd2, 0xa5, 0x10, 0xd7, 0x82, 0x4d, 0x91, 0xf2, 0x3f, 0x43, 0x5e, 0x66,
	0x83, 0x97, 0x77, 0x02, 0x5b, 0x92, 0x3f, 0x31, 0x08, 0x8c, 0x13, 0xd8, 0x08, 0xe5, 0x43, 0x83,
	0x90, 0x01, 0x41, 0x55, 0x65, 0x7e, 0x72, 0x10, 0x86, 0x9d, 0x05, 0x83, 0xaa, 0x7c, 0x78, 0x10,
	0xfb, 0x09, 0x02, 0x9f, 0xea, 0x84, 0xa2, 0xbd, 0x24, 0xe2, 0x20, 0x6a, 0xef, 0xf1, 0x9f, 0x1a,
	0x84, 0xf1, 0x48, 0x88, 0xab, 0xb4, 0xb6, 0x7d, 0xc4, 0x2a, 0x4a, 0x5f, 0x24, 0xe6, 0x3f, 0x3d,
	0x08, 0xba, 0x14, 0x41, 0x71, 0x35, 0xe3, 0x3f, 0x33, 0x68, 0x38, 0xc5, 0x8b, 0x17, 0x58, 0x1a,
	0xff, 0x28, 0x10, 0x32, 0xb3, 0x9b, 0xe2, 0xef, 0x7d, 0xb6, 0xcf, 0x3f, 0xcc, 0xc6, 0x96, 0x82,
	0xbd, 0xb9, 0x24, 0xc5, 0xc3, 0x19, 0x04, 0xbf, 0xef, 0xd9, 0x3e, 0x7f, 0x94, 0x0d, 0xa8, 0x88,
	0x05, 0xfc, 0x5f, 0x3d, 0xdb, 0x87, 0x09, 0xcd, 0xa4, 0xf8, 0xfd, 0xcf, 0xf6, 0xf9, 0xe3, 0x34,
	0x9d, 0xaa, 0xca, 0xfd, 0xc0, 0xb3, 0x30, 0xf7, 0x0d, 0x6b, 0x10, 0xd4, 0xed, 0x07, 0x9f, 0xed,
	0xf3, 0x8f, 0xb2, 0x71, 0x1a, 0x52, 0xe8, 0x75, 0x25, 0x89, 0x7f, 0xe8, 0xd9, 0xbe, 0xfa, 0x6f,
	0x79, 0x6a, 0xc1, 0x5f, 0xc1, 0xb9, 0x1c, 0xcf, 0xbf, 0x8f, 0x2b, 0x53, 0xb9, 0x81, 0xa9, 0x85,
	0xe8, 0x84, 0x32, 0xc8, 0x5b, 0xa8, 0x85, 0x64, 0x23, 0x88, 0xb8, 0x07, 0x2b, 0x4a, 0x0e, 0x77,
	0x0d, 0x1a, 0xba, 0xcd, 0x4b, 0x30, 0x4b, 0xe6, 0x90, 0x4f, 0x3d, 0x45, 0xeb, 0x50, 0x0e, 0x31,
	0x15, 0x85, 0xcd, 0x60, 0x8f, 0x57, 0x0a, 0x91, 0xf3, 0x78, 0x02, 0xcf, 0xab, 0xfe, 0xad, 0xec,
	0x78, 0x0e, 0x39, 0x17, 0x6c, 0x88, 0xf5, 0x24, 0xd9, 0xe6, 0x7d, 0xf5, 0xf7, 0xbf, 0x84, 0xf1,
	0xcc, 0xc1, 0xc9, 0x75, 0xa8, 0x5a, 0x16, 0x46, 0x2b, 0xf8, 0x2d, 0xfa, 0x78, 0x6d, 0x8d, 0xce,
	0x3a, 0x3d, 0xff, 0x30, 0x8c, 0xb3, 0xcd, 0xb0, 0xd5, 0x16, 0xe9, 0x9a, 0xfa, 0xe0, 0x25, 0x58,
	0x5b, 0x88, 0x6e, 0x79, 0x7a, 0x95, 0x48, 0xf1, 0x24, 0x86, 0x94, 0xd3, 0xb5, 0x79, 0xd1, 0x9e,
	0x8f, 0x92, 0xf5, 0x20, 0xe2, 0x15, 0x0b, 0xba, 0xa2, 0xa1, 0x55, 0x58, 0x92, 0x2d, 0xda, 0x60,
	0x47, 0x2a, 0xf7, 0xbc, 0xcf, 0xaf, 0xb1, 0xd3, 0x45, 0x18, 0xe3, 0xa5, 0xca, 0xfb, 0xfd, 0x3a,
	0xbb, 0xab, 0x37, 0xcd, 0x54, 0xdc, 0xa0, 0x73, 0xa7, 0x01, 0xab, 0xa4, 0x15, 0xa7, 0xa4, 0x41,
	0x10, 0x5d, 0x11, 0x66, 0x1a, 0xf4, 0x7d, 0xce, 0xa0, 0xb1, 0xac, 0xf5, 0x66, 0x39, 0xe9, 0xb4,
	0xc5, 0xda, 0x6c, 0xc2, 0x87, 0xfc, 0x23, 0xcc, 0xa7, 0xba, 0x5f, 0x0e, 0x62, 0x18, 0x8e, 0x54,
	0xff, 0x61, 0xff, 0x34, 0x3b, 0x01, 0x62, 0x95, 0x50, 0x60, 0x6d, 0x56, 0x5c, 0x0f, 0x3a, 0x51,
	0x1b, 0xa0, 0x7c, 0xc4, 0x3f, 0xcb, 0x6e, 0xa5, 0x12, 0x14, 0x85, 0x16, 0x88, 0x64, 0x69, 0xd4,
	0xbf, 0x83, 0xdd, 0xe6, 0x92, 0xcc, 0xbb, 0x24, 0x53, 0x51, 0xc4, 0xc7, 0x40, 0x31, 0xc9, 0x67,
	0x64, 0x6a, 0xc6, 0x8d, 0x0c, 0xed, 0x6c, 0x34, 0x01, 0x64, 0x32, 0xee, 0xdf, 0xc9, 0xce, 0xca,
	0x63, 0x36, 0x8b, 0x48, 0x42, 0xd4, 0x4d, 0x16, 0xee, 0x83, 0x90, 0x32, 0x64, 0x8b, 0x62, 0x57,
	0x42, 0xf8, 0x21, 0xff, 0x36, 0x76, 0x2a, 0x83, 0x96, 0x0f, 0xed, 0x48, 0x8a, 0x89, 0x02, 0x8a,
	0x59, 0x11, 0x09, 0x43, 0x71, 0xd8, 0xbf, 0x9d, 0x9d, 0xc9, 0x50, 0xac, 0x68, 0x4e, 0xe8, 0xbe,
	0x07, 0x3f, 0x02, 0xfd, 0x50, 0x3d, 0xa5, 0xb6, 0xa6, 0x3e, 0xf8, 0x51, 0x90, 0x79, 0x61, 0x4d,
	0xa9, 0xf5, 0x8f, 0xe5, 0x65, 0x4e, 0x85, 0x1b, 0x92, 0xe3, 0x05, 0x35, 0xbc, 0x14, 0x6e, 0x6c,
	0xcb, 0x7d, 0xfe, 0x49, 0x10, 0x76, 0x06, 0xad, 0x58, 0xdb, 0x00, 0xd5, 0xfd, 0x14, 0xcc, 0x06,
	0xae, 0xee, 0xa1, 0xbb, 0xca, 0xad, 0xd0, 0xf9, 0x40, 0x17, 0x02, 0xae, 0x94, 0x16, 0x85, 0x8c,
	0x9f, 0xd6, 0x18, 0xe5, 0xd7, 0x27, 0xb1, 0xfc, 0x0c, 0x54, 0x89, 0x02, 0x61, 0x4c, 0x27, 0x41,
	0xda, 0x80, 0xa4, 0xd6, 0x2f, 0xbf, 0xad, 0xb8, 0x71, 0xc3, 0xeb, 0xed, 0xa9, 0x48, 0xf5, 0xa3,
	0xb3, 0x79, 0x1a, 0x32, 0x86, 0x02, 0x99, 0xa4, 0xa9, 0xe5, 0x69, 0xa8, 0xe5, 0x2c, 0x9a, 0xdb,
	0xf3, 0x34, 0x52, 0x7c, 0x86, 0xe6, 0x0e, 0x50, 0x6e, 0x41, 0xc3, 0x5b, 0x7b, 0xaa, 0x23, 0xd2,
	0x3d, 0x7e, 0x27, 0x4c, 0x0d, 0xf8, 0xaf, 0x5d, 0x06, 0xf8, 0x5d, 0xd0, 0x09, 0x66, 0xa2, 0x50,
	0x3f, 0x8b, 0xb4, 0x86, 0xb6, 0x7b, 0xf3, 0xcf, 0xef, 0xce, 0xf7, 0xe9, 0x79, 0xd1, 0x86, 0x6c,
	0x24, 0xc1, 0x3d, 0xdd, 0xaa, 0x64, 0xd1, 0xdc, 0xdb, 0xad, 0x4a, 0x16, 0x4d, 0xbd, 0x5b, 0x95,
	0x2c, 0x9a, 0x17, 0x41, 0x95, 0x40, 0x47, 0x95, 0x55, 0xba, 0x0f, 0xaa, 0x84, 0xff, 0xa6, 0x4a,
	0xf7, 0xbb, 0xb0, 0x8d, 0x24, 0x6d, 0xf0, 0x49, 0x50, 0x96, 0x69, 0xae, 0x97, 0xd3, 0xe7, 0x03,
	0xe8, 0x0b, 0x20, 0xd5, 0xda, 0x35, 0xf5, 0xa1, 0x83, 0x3e, 0xf0, 0x07, 0xfd, 0x7b, 0xd8, 0x1d,
	0x4e, 0x40, 0x88, 0xb5, 0xe2, 0xf0, 0x10, 0xfc, 0x21, 0xd8, 0xe2, 0xe8, 0x89, 0x18, 0xa3, 0x43,
	0xe2, 0xce, 0x6b, 0x69, 0x2b, 0x69, 0x27, 0xfc, 0x1c, 0x74, 0x62, 0x0a, 0x5a, 0x84, 0xa5, 0xc3,
	0xf6, 0xcd, 0xfc, 0xf2, 0x87, 0xa1, 0xd2, 0xce, 0x5d, 0x3f, 0xc8, 0xc1, 0x01, 0xf0, 0x47, 0xf2,
	0x34, 0x53, 0x8d, 0x86, 0x4b, 0xf3, 0x68, 0x9e, 0xe6, 0x6a, 0x33, 0x43, 0xf3, 0x58, 0x9e, 0x66,
	0x56, 0x44, 0x2e, 0xcd, 0x8b, 0xa5, 0xeb, 0x4b, 0xb8, 0x21, 0xd6, 0xf4, 0x55, 0x5b, 0xfe, 0xb8,
	0x05, 0x9d, 0x6a, 0xc8, 0x47, 0xdc, 0xf9, 0x4b, 0x2c, 0xe8, 0xd5, 0xa6, 0x82, 0x3e, 0x61, 0x41,
	0x67, 0x45, 0x24, 0xa1, 0x2f, 0xf5, 0xef, 0x62, 0xb5, 0xde, 0xf5, 0x5c, 0x82, 0x3d, 0xe9, 0x57,
	0x81, 0x30, 0x2d, 0xb5, 0x77, 0x2e, 0xdc, 0xdc, 0x6a, 0xeb, 0x51, 0x3b, 0x07, 0x79, 0x2b, 0x6d,
	0x51, 0x43, 0xe7, 0x61, 0x3d, 0xb0, 0x74, 0x75, 0x8d, 0x58, 0x82, 0x9e, 0x40, 0x7a, 0x85, 0x86,
	0x3d, 0x0d, 0xd3, 0x95, 0xde, 0x40, 0x68, 0x70, 0x03, 0x97, 0x4d, 0x54, 0xaa, 0x35, 0x4c, 0xc0,
	0x72, 0x62, 0x34, 0x6a, 0x0d, 0x8f, 0x80, 0x96, 0xf4, 0x26, 0x0d, 0xdb, 0x81, 0xb9, 0xc6, 0x55,
	0xb1, 0x35, 0xee, 0x3a, 0xe4, 0x63, 0x94, 0x68, 0x0d, 0xdf, 0x24, 0x07, 0x09, 0xd2, 0x5a, 0x35,
	0x74, 0x0b, 0x24, 0x95, 0x1b, 0x6f, 0x78, 0x17, 0x69, 0x0a, 0x8d, 0x06, 0x72, 0x28, 0x84, 0xfe,
	0xbd, 0xec, 0xce, 0xa2, 0x61, 0x97, 0x27, 0xfd, 0xba, 0x3c, 0x29, 0x8d, 0xbe, 0x3c, 0xe9, 0xb6,
	0xff, 0x22, 0x76, 0x77, 0xaf, 0xd2, 0xe7, 0xd3, 0xa4, 0xd3, 0x94, 0xc4, 0xb1, 0x3f, 0xc9, 0xea,
	0xfb, 0xb0, 0x60, 0xd3, 0x27, 0x79, 0xfa, 0x1c, 0x1f, 0x36, 0x7d, 0xb3, 0x70, 0x0d, 0x41, 0x62,
	0x5c, 0x02, 0x5b, 0x20, 0x2a, 0xfc, 0xcd, 0xa2, 0xe5, 0xbf, 0xcc, 0xa7, 0x0d, 0x53, 0xfa, 0x6c,
	0xd2, 0x59, 0x8f, 0x04, 0x34, 0xb1, 0x68, 0x68, 0x61, 0x77, 0x0a, 0x27, 0x37, 0x73, 0x95, 0x8a,
	0xdf, 0x80, 0xc5, 0x38, 0x5b, 0xc5, 0xdc, 0xd5, 0x30, 0xbe, 0x8b, 0x8b, 0x86, 0x33, 0x5b, 0x50,
	0xf4, 0x14, 0x7e, 0x13, 0xe7, 0x99, 0x0c, 0xc6, 0x04, 0x6c, 0xe1, 0x7b, 0x68, 0x02, 0x09, 0xe2,
	0xed, 0xb5, 0xac, 0xf9, 0xe0, 0x19, 0x34, 0x9d, 0x00, 0xa6, 0xc8, 0x86, 0xf0, 0x0d, 0x68, 0x20,
	0x01, 0x6c, 0x3e, 0x5c, 0x07, 0x7f, 0x15, 0x68, 0x2b, 0xa0, 0xa5, 0x9b, 0x55, 0x5b, 0x5d, 0x8d,
	0xb2, 0x94, 0xb5, 0x7f, 0x01, 0x4b, 0xb0, 0x4d, 0x95, 0xbb, 0x75, 0xc4, 0x5f, 0x0d, 0xdd, 0xda,
	0xdd, 0x1e, 0x69, 0xd9, 0x7d, 0xa3, 0x7f, 0x0f, 0xbb, 0x7d, 0x59, 0x34, 0x93, 0x14, 0x7d, 0xb9,
	0x2c, 0xd1, 0xd1, 0xa4, 0xab, 0x35, 0x95, 0xd7, 0x78, 0x78, 0xbc, 0x9b, 0x13, 0xa2, 0x25, 0xbf,
	0xd7, 0xa2, 0x2b, 0x8d, 0xd1, 0x22, 0x9c, 0x36, 0xf8, 0x26, 0x72, 0x99, 0xa1, 0x47, 0x23, 0x75,
	0xf1, 0xaf, 0xf3, 0xd4, 0xa1, 0x31, 0x9d, 0xeb, 0xaa, 0x9c, 0xcd, 0x49, 0x2b, 0xff, 0x8c, 0xa7,
	0xce, 0xe6, 0x5d, 0x12, 0x79, 0xbe, 0x89, 0x34, 0xbf, 0xe4, 0xf9, 0x75, 0x76, 0x67, 0x9e, 0xe6,
	0x42, 0x10, 0x37, 0x22, 0xa1, 0x4e, 0x96, 0xf1, 0xa4, 0x91, 0xff, 0xb2, 0xe7, 0xdf, 0xc9, 0x6e,
	0xeb, 0x55, 0x24, 0xee, 0x8c, 0x3e, 0xeb, 0xf9, 0x77, 0xb0, 0x33, 0x05, 0x64, 0x51, 0xd2, 0x32,
	0x54, 0x9f, 0x43, 0xf7, 0x90, 0x3c, 0x15, 0x2e, 0x6c, 0x08, 0xa6, 0xc3, 0xca, 0x5f, 0xf1, 0xd4,
	0x29, 0x6f, 0x17, 0x3a, 0xed, 0x74, 0xc0, 0x7f, 0x15, 0xfd, 0x1e, 0x8a, 0x0a, 0x56, 0x90, 0xd9,
	0x34, 0x91, 0xfe, 0x05, 0xfc, 0xf3, 0x9e, 0x7f, 0x3f, 0xbb, 0x27, 0x4f, 0xac, 0x4f, 0xc4, 0x37,
	0x44, 0x64, 0xc9, 0xf2, 0x0b, 0x9e, 0x3a, 0x80, 0xcf, 0x90, 0x93, 0xab, 0x81, 0x3c, 0x53, 0x86,
	0xa9, 0xfe, 0xd7, 0xba, 0x48, 0x09, 0xfa, 0x82, 0x45, 0xf6, 0xef, 0xf7, 0x65, 0x76, 0x45, 0xa8,
	0x71, 0xcc, 0x7f, 0xbd, 0x4b, 0x4b, 0x02, 0x04, 0x76, 0xd9, 0x61, 0xbc, 0xc9, 0xff, 0x03, 0xba,
	0x1d, 0xe5, 0x69, 0xc8, 0x5b, 0xc0, 0x92, 0xe8, 0x6f, 0x74, 0x91, 0xe8, 0x0a, 0x79, 0x2d, 0xa0,
	0xeb, 0x23, 0x54, 0x3c, 0x49, 0xf9, 0x6f, 0x9a, 0xa6, 0xc4, 0xb4, 0x5a, 0xcf, 0x84, 0xfe, 0xa0,
	0x3a, 0x07, 0xff, 0x1b, 0xc3, 0x9d, 0x43, 0x85, 0x4d, 0x74, 0x19, 0x1b, 0x89, 0xff, 0xad, 0x91,
	0x8a, 0x43, 0x63, 0x20, 0x4f, 0x75, 0xc2, 0x36, 0xff, 0x3b, 0x74, 0x85, 0xe9, 0x45, 0x86, 0xe3,
	0x28, 0xdd, 0x81, 0x96, 0xe4, 0x7f, 0x6f, 0x64, 0xe8, 0x50, 0xdb, 0x6d, 0xa8, 0xb9, 0xfc, 0xf2,
	0xbe, 0x59, 0x23, 0xbf, 0xb2, 0x79, 0x5e, 0x53, 0x2a, 0xae, 0xb9, 0xee, 0x76, 0xa8, 0x2c, 0xbf,
	0x56, 0xbb, 0xae, 0xb8, 0x54, 0x8e, 0x47, 0xc6, 0x37, 0x95, 0x8a, 0xab, 0x4e, 0x67, 0x26, 0x51,
	0x67, 0x7d, 0x21, 0x59, 0x5f, 0xdf, 0xe3, 0xaf, 0x2b, 0x15, 0x57, 0x46, 0x97, 0xd8, 0x52, 0x3e,
	0x39, 0x17, 0x67, 0xf9, 0xeb, 0x4b, 0xd0, 0xd8, 0xd9, 0xd9, 0x07, 0xef, 0x38, 0xb9, 0x93, 0xcf,
	0x8f, 0x62, 0xae, 0x59, 0xc2, 0x15, 0x11, 0x5d, 0x2f, 0x20, 0xfe, 0xb1, 0x92, 0xff, 0x20, 0x7b,
	0x51, 0x6e, 0x4e, 0xa3, 0x13, 0x01, 0x3b, 0xfc, 0xa0, 0x4e, 0xf1, 0xe3, 0x25, 0xff, 0x11, 0xf6,
	0x40, 0x51, 0xf6, 0xbd, 0x52, 0x7d, 0x90, 0x24, 0x92, 0x5b, 0x77, 0xa2, 0x24, 0x69, 0xac, 0x44,
	0x89, 0x52, 0xbd, 0x7f, 0x82, 0x9c, 0x5e, 0x0a, 0x16, 0xcc, 0x2c, 0xe5, 0x87, 0x50, 0x1c, 0x2e,
	0xe5, 0x54, 0x24, 0xd2, 0x5c, 0x96, 0x3f, 0x59, 0x90, 0x25, 0x69, 0xd9, 0x59, 0xca, 0x0f, 0x17,
	0x50, 0xce, 0x8b, 0xf6, 0x95, 0x38, 0x47, 0xf9, 0x53, 0x25, 0x32, 0xf2, 0x9a, 0xc9, 0x5b, 0x79,
	0x0f, 0x63, 0x1f, 0x21, 0x7f, 0x9b, 0xc2, 0x16, 0xd0, 0xb1, 0xdd, 0x1c, 0xe9, 0xfc, 0x6c, 0xc9,
	0x7f, 0x29, 0x7b, 0x2c, 0x9b, 0x40, 0x47, 0x81, 0x4c, 0xe2, 0x56, 0x67, 0xa7, 0xd9, 0x56, 0x61,
	0xd7, 0xa7, 0xf7, 0x6c, 0x11, 0xf3, 0x8f, 0x95, 0xfc, 0xaf, 0x61, 0x4f, 0x14, 0x95, 0x76, 0xc0,
	0x0c, 0x3e, 0x5e, 0xf2, 0x1f, 0x63, 0x0f, 0x1d, 0xa0, 0xf4, 0x4c, 0xba, 0x4f, 0x94, 0xfc, 0x27,
	0xd8, 0xa3, 0x07, 0x2c, 0x38, 0x93, 0xf6, 0xe7, 0xd0, 0x93, 0xa7, 0x6b, 0x99, 0x36, 0xe9, 0x27,
	0x4b, 0x30, 0x6d, 0xf7, 0x2c, 0xc6, 0x26, 0xff, 0x79, 0x74, 0x6d, 0xc8, 0x92, 0x2f, 0x45, 0x41,
	0x9b, 0xdc, 0x1b, 0xf8, 0xa7, 0x2c, 0x77, 0x05, 0xbd, 0xb6, 0xbe, 0xb1, 0xec, 0xdf, 0xc6, 0x4e,
	0xe6, 0x8c, 0x4b, 0xd3, 0x7b, 0xea, 0x38, 0x9f, 0xff, 0x45, 0x37, 0x0a, 0x75, 0x2e, 0xce, 0xff,
	0xb2, 0x0c, 0x53, 0x83, 0x13, 0xfb, 0xf5, 0x5a, 0x1a, 0xb6, 0xc5, 0x9a, 0xed, 0x93, 0xf0, 0x57,
	0x65, 0x58, 0x04, 0x25, 0x51, 0x80, 0x3b, 0xea, 0xa2, 0xa7, 0xf9, 0xf8, 0x5f, 0x97, 0x61, 0xc0,
	0xe4, 0xe9, 0xdc, 0xe0, 0xd0, 0xfc, 0x7f, 0x20, 0x57, 0x79, 0x32, 0xfd, 0x82, 0x0e, 0xff, 0x9f,
	0x65, 0x9c, 0xd6, 0x0a, 0x86, 0x94, 0xf5, 0x4e, 0x30, 0xff, 0x9b, 0x72, 0x5e, 0x63, 0x71, 0x9f,
	0x1c, 0x56, 0xa7, 0xdc, 0x59, 0x01, 0xe8, 0x9a, 0xfd, 0x1d, 0xe2, 0x1d, 0x56, 0xec, 0x28, 0xde,
	0xfc, 0xef, 0xcb, 0x45, 0x13, 0x87, 0x55, 0xef, 0xc2, 0x89, 0xe3, 0xcb, 0xe5, 0xa2, 0x09, 0xca,
	0x09, 0x26, 0x9e, 0x55, 0xbe, 0x2a, 0x96, 0x84, 0xed, 0x66, 0x70, 0x5f, 0x25, 0xe4, 0xef, 0xaf,
	0xc0, 0x28, 0x75, 0xf8, 0x85, 0x4e, 0x85, 0x92, 0x2b, 0x6c, 0x92, 0xff, 0x0d, 0x4f, 0x7b, 0x9d,
	0x04, 0x3a, 0xb3, 0xff, 0xbd, 0x02, 0xfd, 0x39, 0x97, 0x59, 0x51, 0x93, 0x7d, 0xa0, 0x02, 0x0d,
	0x52, 0x4c, 0x6a, 0x9a, 0xed, 0x87, 0x0d, 0x95, 0xde, 0xe8, 0xaf, 0x65, 0x9f, 0x0e, 0xe2, 0x3f,
	0x52, 0xd1, 0xbd, 0xc4, 0xa1, 0xca, 0x1c, 0xd6, 0xfd, 0x68, 0x85, 0x8e, 0x4a, 0x28, 0x3e, 0xf9,
	0x9a, 0x15, 0xab, 0x9c, 0xff, 0x58, 0xc5, 0x7f, 0x9c, 0x3d, 0x5c, 0x34, 0xba, 0xf6, 0x6b, 0x99,
	0x1f, 0xaf, 0x74, 0x5b, 0x08, 0x7a, 0xb5, 0xce, 0x07, 0x2b, 0xa0, 0x7d, 0xe6, 0x6a, 0x3f, 0x2b,
	0x5a, 0xe1, 0x26, 0xbd, 0xe6, 0x67, 0x7a, 0xcc, 0x4f, 0x54, 0xf4, 0x80, 0x72, 0x6a, 0x67, 0x07,
	0x18, 0xe7, 0x3f, 0x69, 0x32, 0x24, 0x36, 0xc9, 0x96, 0xb3, 0x56, 0x10, 0xea, 0x9b, 0x7f, 0xb8,
	0x02, 0x8b, 0x46, 0x9e, 0x36, 0x1b, 0x81, 0x9b, 0xff, 0x54, 0x25, 0x37, 0xfa, 0x80, 0xcb, 0x4c,
	0xd0, 0x66, 0xfe, 0x91, 0x4c, 0x8f, 0xb0, 0x62, 0x89, 0xf2, 0x9f, 0xc6, 0xf3, 0x7f, 0x83, 0x33,
	0x07, 0x13, 0x3f, 0x93, 0x49, 0x65, 0xc5, 0x56, 0xe5, 0x1f, 0xad, 0xf8, 0x0f, 0xb1, 0xfb, 0xf6,
	0x69, 0x76, 0xdc, 0x1d, 0x61, 0xf4, 0x60, 0x10, 0xc0, 0xbf, 0xae, 0xf8, 0xe7, 0xd8, 0xfd, 0xf9,
	0x24, 0x3d, 0xde, 0xe7, 0xe1, 0xff, 0xe6, 0xb9, 0xa5, 0xc1, 0xd6, 0xf8, 0xd9, 0x8a, 0xff, 0x30,
	0x9b, 0xcc, 0xa4, 0xd9, 0xe7, 0x4d, 0x14, 0xfe, 0xb1, 0x0a, 0xa8, 0x60, 0xf9, 0x82, 0x0a, 0xdf,
	0x13, 0xe1, 0x1f, 0xaf, 0x14, 0xad, 0x44, 0x99, 0xce, 0x98, 0x7f, 0xde, 0x81, 0x7f, 0xa2, 0x52,
	0x34, 0x49, 0x14, 0xa5, 0x53, 0x29, 0x7e, 0xae, 0x02, 0x8b, 0xca, 0x7e, 0x02, 0x50, 0x95, 0xe1,
	0x9f, 0xac, 0xc0, 0xa2, 0x92, 0x9f, 0x66, 0x75, 0x4f, 0xf8, 0xf9, 0x8a, 0x3b, 0xad, 0xcf, 0x85,
	0x71, 0xa3, 0xa8, 0xc7, 0x7c, 0xaa, 0xdb, 0xe4, 0xa4, 0x9d, 0xa2, 0xa8, 0x03, 0x7e, 0x1a, 0xdd,
	0x4d, 0xd4, 0xd9, 0x89, 0xb4, 0xe0, 0x7d, 0x91, 0x84, 0x99, 0x33, 0x94, 0x5f, 0x89, 0xa3, 0x30,
	0x16, 0x59, 0x73, 0xf9, 0x6f, 0x57, 0x8a, 0xb6, 0xab, 0x05, 0x4b, 0x33, 0xff, 0x8f, 0x85, 0x94,
	0xfa, 0xfa, 0xfc, 0x4a, 0x3b, 0x68, 0x87, 0xad, 0x76, 0xb8, 0xd1, 0xe2, 0xff, 0xa9, 0xa2, 0x9c,
	0xaa, 0xad, 0xe2, 0xe1, 0x57, 0x97, 0xfa, 0x3b, 0x38, 0x72, 0xb2, 0x79, 0xd1, 0x49, 0xbc, 0x95,
	0xd1, 0xef, 0x16, 0x92, 0xd1, 0x9a, 0x62, 0x91, 0xfd, 0x1e, 0xce, 0x00, 0xb9, 0x65, 0x49, 0x3a,
	0xe5, 0xc8, 0x85, 0xe9, 0x63, 0x55, 0xdc, 0x57, 0x16, 0x58, 0x65, 0x5c, 0xba, 0x8f, 0x17, 0xd0,
	0xd1, 0x4a, 0xe8, 0xd2, 0x7d, 0xa2, 0x80, 0x8e, 0x34, 0x46, 0x97, 0xee, 0xe7, 0xaa, 0x85, 0xcc,
	0xc9, 0x50, 0x4f, 0x92, 0xe8, 0x93, 0x5d, 0x99, 0x73, 0xe9, 0x7e, 0xbe, 0x2b, 0x73, 0x2e, 0xdd,
	0xa7, 0xba, 0x32, 0xe7, 0xd2, 0x7d, 0xba, 0x0a, 0x93, 0x8c, 0x0e, 0xd9, 0xb9, 0x66, 0x05, 0x39,
	0xe4, 0xff, 0xb6, 0x0a, 0xea, 0xab, 0xc1, 0xe1, 0x7e, 0x03, 0x7f, 0xb1, 0x09, 0x7f, 0x01, 0x9d,
	0x76, 0x6c, 0x73, 0x9f, 0xec, 0x37, 0x2d, 0x82, 0xf1, 0x7f, 0x57, 0x95, 0x07, 0xf2, 0x2a, 0xc4,
	0x02, 0xe9, 0x50, 0xbf, 0x58, 0x05, 0x05, 0x20, 0x93, 0x8e, 0xf6, 0x1c, 0x37, 0x42, 0xb1, 0xcb,
	0x3f, 0x83, 0x2c, 0x65, 0xf3, 0x25, 0xad, 0xed, 0x97, 0x90, 0x25, 0xf2, 0xb2, 0x58, 0xcb, 0xdd,
	0x9b, 0xe6, 0xbf, 0x8c, 0x25, 0x66, 0xd1, 0xfc, 0xb3, 0x55, 0x98, 0xcf, 0xed, 0x1c, 0xaf, 0x36,
	0x1b, 0x05, 0xde, 0x46, 0xfc, 0x73, 0xe8, 0xf8, 0xb3, 0xb2, 0xd3, 0x5a, 0x73, 0x6e, 0xca, 0xf2,
	0x5f, 0x41, 0x2f, 0x21, 0x80, 0x5b, 0xde, 0x44, 0xbf, 0x5a, 0xad, 0x7f, 0x2d, 0x63, 0x57, 0x5b,
	0x2a, 0xc0, 0x97, 0x3f, 0xc4, 0xfa, 0x43, 0xe9, 0x90, 0x75, 0x8b, 0xcf, 0x58, 0x5f, 0x8c, 0x41,
	0x9f, 0xb8, 0xe7, 0x0f, 0xb3, 0x81, 0x86, 0xba, 0x16, 0x56, 0x02, 0xb2, 0x06, 0xb6, 0x44, 0x83,
	0x97, 0xeb, 0x9f, 0x2d, 0xd1, 0x2d, 0x57, 0x3c, 0xbe, 0x1d, 0x60, 0x15, 0x79, 0x5a, 0x3b, 0xc6,
	0x86, 0xac, 0x73, 0x3c, 0xee, 0xd1, 0x25, 0x4f, 0xfb, 0xc0, 0x86, 0x97, 0xfc, 0x09, 0xc6, 0xb3,
	0x06, 0x61, 0x5e, 0x86, 0x82, 0xc9, 0x5c, 0xcb, 0x2b, 0x90, 0x8d, 0x65, 0xfe, 0xe5, 0x55, 0x7f,
	0x84, 0x0d, 0x6a, 0x13, 0x2f, 0xef, 0x03, 0x5a, 0xb2, 0x02, 0xf3, 0x7e, 0x60, 0x6b, 0xb9, 0x13,
	0xcf, 0x05, 0xad, 0x36, 0x1f, 0xc0, 0xc3, 0x04, 0x6d, 0xdf, 0xe5, 0x83, 0x50, 0x03, 0x65, 0x5d,
	0xe6, 0x4c, 0x5a, 0x84, 0x2d, 0x8b, 0x2e, 0x1f, 0x82, 0x14, 0xc6, 0x92, 0xcb, 0x87, 0x21, 0x85,
	0xb2, 0xe0, 0xf2, 0x11, 0xbc, 0x11, 0x6b, 0x99, 0x19, 0xf9, 0x28, 0x14, 0x2d, 0xbb, 0xc9, 0x18,
	0xe4, 0xe7, 0x9a, 0xd2, 0x38, 0x87, 0xf4, 0x2a, 0x66, 0x0e, 0x1f, 0x07, 0xe6, 0xa4, 0x99, 0x8b,
	0xfb, 0x80, 0x52, 0x9d, 0x8a, 0x1f, 0x02, 0x94, 0xbc, 0x51, 0xcd, 0x27, 0xea, 0x1f, 0x2c, 0x53,
	0x30, 0x23, 0x8a, 0xb2, 0x36, 0xce, 0x46, 0xf4, 0x8f, 0x14, 0xac, 0xcf, 0x46, 0x35, 0x88, 0xae,
	0xfe, 0x7a, 0x0e, 0xd9, 0xac, 0x08, 0x22, 0xf2, 0x6d, 0xd2, 0x20, 0xbc, 0xba, 0x55, 0xf6, 0x0f,
	0xb1, 0x31, 0x0d, 0xd2, 0xee, 0x56, 0xf2, 0xbe, 0x2c, 0x02, 0xa7, 0x45, 0x9b, 0x57, 0x9d, 0x94,
	0x73, 0xa9, 0x10, 0xbc, 0x0f, 0x8f, 0xa3, 0x15, 0x68, 0x21, 0xd9, 0x20, 0xb7, 0xb5, 0x7e, 0xff,
	0x18, 0x05, 0xf0, 0x27, 0x56, 0x3a, 0xad, 0xad, 0x97, 0x85, 0x51, 0x14, 0x6c, 0x0a, 0x3e, 0x80,
	0xb6, 0x7c, 0x85, 0x91, 0xdd, 0x80, 0xee, 0xf4, 0x9a, 0x6c, 0x82, 0x84, 0x33, 0xff, 0x08, 0xf3,
	0x35, 0xe4, 0xe9, 0xad, 0x4e, 0x10, 0x6f, 0x02, 0x7c, 0x08, 0xaf, 0xb1, 0x6a, 0xae, 0x82, 0x78,
	0x9b, 0x94, 0x18, 0x3e, 0xec, 0x70, 0x02, 0xd5, 0x9a, 0x0d, 0x37, 0x04, 0x1f, 0xf1, 0x6f, 0x25,
	0xaf, 0x54, 0x2a, 0x8f, 0xa2, 0xca, 0x6f, 0xa5, 0x42, 0xc0, 0xfc, 0xdf, 0xe2, 0xa3, 0x4e, 0x31,
	0xfa, 0x26, 0x15, 0x1f, 0xf3, 0x8f, 0xb3, 0xc3, 0x56, 0x05, 0xa0, 0xdd, 0x37, 0x29, 0x09, 0x77,
	0xe5, 0x17, 0xa4, 0x6d, 0x3e, 0xee, 0xe4, 0x32, 0xa5, 0xfc, 0x90, 0xb8, 0x5f, 0xff, 0x63, 0x8f,
	0x8d, 0x91, 0x56, 0x65, 0x1a, 0x4e, 0xfb, 0x1c, 0x64, 0x9b, 0x2f, 0x8f, 0x40, 0x19, 0x7b, 0x20,
	0xcc, 0x0c, 0x82, 0x5a, 0xb7, 0x54, 0x90, 0x44, 0x36, 0x68, 0x3e, 0x09, 0xde, 0xc3, 0xe3, 0x15,
	0xe3, 0x2b, 0xa1, 0x31, 0xea, 0x42, 0x26, 0x4c, 0x5d, 0x27, 0xb2, 0x05, 0x59, 0x6d, 0xd7, 0x67,
	0x1c, 0x1f, 0x34, 0x5e, 0xfb, 0x56, 0xf6, 0xd7, 0xbf, 0xab, 0xc4, 0x06, 0xd0, 0xc1, 0x73, 0xb1,
	0xb3, 0x03, 0xed, 0xa9, 0xbe, 0x65, 0xed, 0x46, 0xd8, 0xa0, 0x82, 0x3c, 0xc4, 0x3d, 0xfb, 0xf7,
	0x1c, 0x2f, 0xd9, 0xbf, 0x0f, 0xd3, 0x95, 0x72, 0xf5, 0xfb, 0x08, 0xaf, 0xd8, 0xbf, 0x8f, 0xd2,
	0x40, 0x57, 0xbf, 0x8f, 0xf1, 0x3e, 0xfb, 0xf7, 0xc5, 0xbc, 0xdf, 0xfe, 0x7d, 0x9c, 0x0f, 0xd8,
	0xbf, 0x2f, 0xe1, 0x83, 0x38, 0x94, 0x15, 0x1b, 0x0f, 0x72, 0x66, 0xa3, 0x9f, 0xe4, 0x43, 0xf6,
	0xef, 0x53, 0x7c, 0xd8, 0xfe, 0xbd, 0xc4, 0x47, 0xf0, 0x44, 0x47, 0xfe, 0xae, 0xec, 0x04, 0x51,
	0xf4, 0x24, 0xfc, 0xf0, 0x09, 0xe8, 0xd3, 0x0a, 0x3e, 0x1d, 0x6e, 0x12, 0xf4, 0x70, 0xbd, 0x23,
	0x8b, 0xc2, 0x7b, 0x79, 0x30, 0x38, 0xcd, 0x9f, 0x94, 0xc9, 0x61, 0x36, 0x6e, 0x60, 0xb3, 0x61,
	0xb0, 0x93, 0xe0, 0xa5, 0x7b, 0x87, 0x14, 0xad, 0x78, 0x25, 0xbc, 0x99, 0xab, 0x61, 0x17, 0x04,
	0x74, 0xbb, 0xb2, 0x0b, 0x5c, 0x69, 0x06, 0x0d, 0xc1, 0x2b, 0xf5, 0x0f, 0x79, 0x6c, 0x58, 0x4e,
	0x35, 0x54, 0xf2, 0x04, 0xe3, 0xf6, 0xbf, 0x2c, 0xfb, 0x10, 0x1b, 0xb3, 0xa1, 0xb3, 0x49, 0x9b,
	0x7b, 0x50, 0x41, 0x1b, 0x38, 0x1d, 0xec, 0xac, 0x27, 0x09, 0x2f, 0xc1, 0x68, 0xb0, 0xe1, 0xa0,
	0xca, 0x04, 0x1b, 0x6d, 0x91, 0xf2, 0x72, 0x36, 0x09, 0x4d, 0xda, 0xe4, 0x66, 0x62, 0xc3, 0xaf,
	0x85, 0x71, 0x83, 0x57, 0xb3, 0xd4, 0x73, 0x51, 0xb2, 0x2b, 0x52, 0xde, 0x57, 0xff, 0xa8, 0xc7,
	0x98, 0x44, 0xd0, 0x9b, 0xfa, 0xa3, 0xe6, 0xcf, 0x2c, 0x1b, 0x06, 0xf6, 0x10, 0x39, 0x6d, 0x1a,
	0x00, 0x74, 0x22, 0x07, 0x00, 0xdd, 0xc8, 0x01, 0x3c, 0x42, 0x6b, 0x86, 0x01, 0x40, 0x57, 0x72,
	0x00, 0x8f, 0x51, 0x50, 0x02, 0x03, 0x78, 0x31, 0x39, 0x68, 0x1a, 0xc0, 0xe3, 0xe4, 0xa0, 0x69,
	0x00, 0x2f, 0xe1, 0x83, 0xf5, 0xb7, 0x7b, 0xec, 0xb0, 0xbb, 0x7e, 0x5d, 0x0b, 0xe9, 0x41, 0xc2,
	0xb3, 0xec, 0xd6, 0x42, 0xc4, 0x9a, 0x59, 0x4a, 0x47, 0xd8, 0x20, 0x2d, 0xa5, 0xd7, 0xd0, 0xbb,
	0xe7, 0x56, 0x76, 0xfc, 0x5a, 0x18, 0xc3, 0xc2, 0x0e, 0x1b, 0x9c, 0xa9, 0x28, 0x5a, 0x0a, 0xc2,
	0x54, 0x34, 0x56, 0xc3, 0x48, 0xb4, 0x78, 0x09, 0x97, 0x2e, 0x71, 0x43, 0xc4, 0x00, 0x6d, 0xf1,
	0x32, 0x0c, 0x58, 0xf3, 0x7f, 0xe5, 0x3a, 0x09, 0x7f, 0x26, 0x0a, 0x76, 0xd1, 0x59, 0xb4, 0x52,
	0xff, 0x48, 0x11, 0x6b, 0x97, 0xc2, 0xb8, 0x51, 0xc8, 0x1a, 0x20, 0x2c, 0xd6, 0x46, 0x19, 0x5b,
	0x0c, 0xda, 0x9d, 0x54, 0xf1, 0x36, 0xc6, 0x86, 0xce, 0x07, 0x69, 0x7b, 0x2b, 0xda, 0xbb, 0x10,
	0xc4, 0x0d, 0xe2, 0x66, 0xea, 0x7a, 0x5b, 0xa4, 0x53, 0x90, 0x13, 0x2f, 0x63, 0xb0, 0x08, 0xf8,
	0x5f, 0xdd, 0x4d, 0x10, 0x52, 0xc1, 0x3b, 0xe6, 0x08, 0x81, 0x29, 0x17, 0x61, 0xb8, 0x88, 0x5c,
	0x8d, 0xc3, 0xaf, 0xef, 0x88, 0x4b, 0x01, 0xac, 0x8a, 0x9b, 0xbc, 0x0f, 0x13, 0x46, 0xd1, 0x95,
	0xeb, 0x57, 0x62, 0x81, 0xd3, 0x6f, 0x7f, 0xfd, 0x9b, 0x3d, 0x76, 0xca, 0xe5, 0x0f, 0x74, 0x91,
	0x85, 0xa0, 0x25, 0x1d, 0x50, 0xf0, 0x9c, 0xbe, 0x07, 0xde, 0xaa, 0x06, 0xa8, 0x24, 0x61, 0x6b,
	0x03, 0xb6, 0x30, 0x18, 0xcf, 0x62, 0x37, 0x8c, 0xa7, 0xf7, 0x66, 0x25, 0x04, 0xdd, 0x7a, 0x11,
	0x82, 0x3b, 0xf0, 0x34, 0xd8, 0x85, 0xbe, 0x3b, 0xc0, 0x2a, 0x51, 0xd2, 0x12, 0xbc, 0x5a, 0x7f,
	0x9a, 0x8d, 0x90, 0x12, 0x71, 0xa5, 0xd3, 0x96, 0x8f, 0xe5, 0xf8, 0x0e, 0x40, 0xb9, 0xa0, 0xe5,
	0xe0, 0x73, 0xe4, 0x59, 0x7c, 0x9c, 0x1d, 0x76, 0xe1, 0x6a, 0xcd, 0x2b, 0xd5, 0xff, 0x39, 0x1b,
	0x5c, 0x0a, 0xf6, 0x64, 0x7d, 0x7c, 0x8c, 0xd7, 0x2d, 0x99, 0x37, 0xeb, 0xb9, 0x81, 0x5d, 0x0b,
	0xc2, 0x36, 0xb9, 0x7f, 0x19, 0x98, 0x0c, 0x53, 0x43, 0xee, 0x5f, 0x06, 0x8c, 0xd7, 0xd5, 0xca,
	0xf5, 0x69, 0xd6, 0x2f, 0x2f, 0x6a, 0xe0, 0x74, 0x4c, 0x9f, 0x6b, 0xd6, 0xd4, 0x23, 0x21, 0x64,
	0x5e, 0x5f, 0x0a, 0x40, 0x5d, 0x80, 0xe9, 0x51, 0x82, 0xa7, 0xa6, 0x78, 0xa9, 0xfe, 0x66, 0x8f,
	0xee, 0x85, 0x60, 0x2e, 0x72, 0xe1, 0xb3, 0xb3, 0x91, 0x8a, 0x83, 0x04, 0x49, 0x95, 0x50, 0x2e,
	0xd1, 0x08, 0x34, 0xeb, 0x05, 0x2f, 0xa9, 0x25, 0x9a, 0xe4, 0xa0, 0x0e, 0x0a, 0xca, 0x0e, 0xbd,
	0xb9, 0x90, 0xc7, 0x2b, 0x0e, 0x82, 0x62, 0x84, 0x22, 0xa2, 0x5a, 0xff, 0xa2, 0xc7, 0xc6, 0x2d,
	0x1d, 0x92, 0x22, 0xe5, 0x40, 0x1b, 0x38, 0x40, 0xcb, 0x3d, 0xd0, 0x85, 0xeb, 0xa0, 0x20, 0x5e,
	0x1e, 0xa7, 0x23, 0x7f, 0x94, 0xc8, 0x1f, 0xcd, 0xc6, 0x91, 0xfe, 0x40, 0xa1, 0x3e, 0xca, 0xf9,
	0xa4, 0x57, 0x9a, 0x22, 0xc6, 0xad, 0x72, 0xc5, 0x3f, 0xc5, 0x8e, 0x65, 0x92, 0x1a, 0xd7, 0xca,
	0x2a, 0xac, 0xa3, 0x2e, 0x56, 0x87, 0xda, 0xe0, 0x7d, 0xf5, 0x77, 0x96, 0xd8, 0x98, 0xd6, 0x63,
	0x65, 0xcd, 0x26, 0x2c, 0xaf, 0x68, 0x53, 0xaf, 0x63, 0x6c, 0xc2, 0x86, 0x5a, 0xb5, 0xca, 0x60,
	0xac, 0x3a, 0x41, 0xd1, 0x16, 0xc6, 0xad, 0x51, 0x26, 0x99, 0x55, 0x9f, 0x4c, 0x32, 0x5b, 0x2d,
	0xa8, 0x66, 0xb9, 0x9b, 0x16, 0xed, 0x16, 0xef, 0x43, 0xf1, 0xd8, 0x25, 0x19, 0x01, 0xf4, 0xc3,
	0xa8, 0xb0, 0x71, 0xa6, 0xfa, 0x03, 0x28, 0x39, 0xa7, 0x24, 0x4b, 0xf7, 0x1a, 0xac, 0xff, 0x79,
	0x89, 0xf9, 0xb6, 0xb2, 0x2d, 0xe5, 0x73, 0x94, 0x1d, 0x72, 0xa1, 0x4a, 0x44, 0x27, 0xd9, 0xd1,
	0x0c, 0xc2, 0x92, 0x52, 0x1e, 0x69, 0x09, 0xea, 0x34, 0x3b, 0x91, 0x41, 0xba, 0xb2, 0xca, 0x27,
	0xb6, 0xc4, 0x95, 0x4f, 0xec, 0x4a, 0x2c, 0xcf, 0xaf, 0x14, 0xda, 0x91, 0x6c, 0xf5, 0xd6, 0x40,
	0xeb, 0xed, 0x87, 0xae, 0x98, 0xe5, 0xc6, 0xc8, 0x73, 0x20, 0xeb, 0xe9, 0x30, 0x9b, 0xac, 0xa1,
	0x5e, 0xc0, 0x07, 0xd1, 0xb1, 0xc6, 0xc5, 0x18, 0x61, 0x33, 0xff, 0x0c, 0x3b, 0x99, 0xe3, 0xd3,
	0x92, 0xf7, 0x50, 0xfd, 0xd3, 0x1e, 0xbe, 0x4b, 0x84, 0x5b, 0x1d, 0x29, 0xeb, 0x43, 0xc6, 0x15,
	0xdb, 0xc8, 0xf9, 0x28, 0x3b, 0x64, 0x01, 0x2d, 0x19, 0xbb, 0x08, 0x4b, 0xbe, 0x27, 0xd8, 0x11,
	0x0b, 0x91, 0x1b, 0x59, 0x16, 0xce, 0x16, 0x5d, 0x25, 0x53, 0x3c, 0x8a, 0x0d, 0x15, 0xd7, 0xe2,
	0x04, 0xb3, 0xc9, 0x6e, 0xcc, 0xfb, 0xea, 0x6f, 0x2a, 0xb3, 0x09, 0x6b, 0xc4, 0xe9, 0x7b, 0x48,
	0x99, 0x71, 0x3a, 0x23, 0x83, 0x1c, 0xaa, 0x5a, 0xb9, 0x13, 0x80, 0xc6, 0xc2, 0xcf, 0x43, 0xb4,
	0x58, 0x77, 0x43, 0x9f, 0xcb, 0x4d, 0x1f, 0x0e, 0x1a, 0x94, 0x93, 0x1e, 0x68, 0x50, 0x55, 0x7a,
	0xa0, 0x1f, 0x25, 0x37, 0xe3, 0x6e, 0x68, 0x50, 0x63, 0x7a, 0xa0, 0x5f, 0x4c, 0xdd, 0xa9, 0x1b,
	0x1a, 0x54, 0x9c, 0x1e, 0x68, 0xd0, 0xa1, 0x6f, 0x63, 0xa7, 0xba, 0xa1, 0x71, 0xef, 0xdd, 0x20,
	0x9b, 0x50, 0x9e, 0x62, 0x21, 0x84, 0x7d, 0x11, 0xd2, 0xfc, 0xa2, 0x57, 0xff, 0x54, 0x85, 0xf9,
	0x7a, 0xa8, 0x9b, 0x26, 0xb1, 0xe7, 0x8d, 0x6c, 0x83, 0xd8, 0xd3, 0x50, 0xae, 0x39, 0xba, 0x22,
	0xcf, 0x65, 0xe6, 0xbd, 0x5c, 0x53, 0x74, 0x45, 0x3e, 0x92, 0x99, 0xfa, 0x72, 0xcd, 0xd0, 0x15,
	0xf9, 0x18, 0x6d, 0x97, 0x8a, 0x91, 0xd0, 0x04, 0x5d, 0x91, 0xd0, 0x00, 0x5d, 0x91, 0x20, 0xfe,
	0xd3, 0xec, 0x44, 0x31, 0x12, 0x05, 0xcb, 0xb0, 0x79, 0x72, 0x78, 0x4b, 0xf4, 0xbc, 0x4b, 0x0e,
	0x49, 0xb2, 0x83, 0xf8, 0x31, 0xf4, 0x7a, 0xce, 0xe1, 0x57, 0x82, 0x1d, 0x41, 0xfa, 0x3a, 0x52,
	0x8d, 0xa2, 0x13, 0x55, 0x8e, 0x6a, 0x3e, 0xe9, 0xa4, 0x64, 0x90, 0x19, 0x29, 0x26, 0x98, 0x8a,
	0x92, 0x78, 0x13, 0x09, 0x86, 0xd1, 0x19, 0x38, 0x5f, 0x4e, 0x3b, 0x15, 0xc1, 0x36, 0x59, 0x71,
	0x86, 0x8a, 0xf3, 0x98, 0x8b, 0x3a, 0xad, 0x2d, 0x24, 0x18, 0xaf, 0xbf, 0xa7, 0xc4, 0x0e, 0xdb,
	0x73, 0x98, 0xe9, 0x48, 0x99, 0x39, 0x33, 0xdb, 0x97, 0x6e, 0x67, 0x67, 0x0a, 0xd1, 0x06, 0x48,
	0x43, 0xbc, 0x90, 0x68, 0x35, 0x0d, 0x13, 0x1a, 0xe2, 0x85, 0x68, 0xd0, 0xc7, 0x49, 0x3d, 0x2f,
	0x44, 0x3f, 0x3c, 0x1f, 0x2c, 0x04, 0xbc, 0x02, 0x2d, 0x55, 0x9c, 0x7b, 0x27, 0x59, 0x08, 0x9e,
	0x0c, 0x79, 0x15, 0x5a, 0xa2, 0x90, 0xe2, 0xa9, 0x30, 0xde, 0x54, 0x54, 0x7d, 0xd9, 0xb5, 0xc8,
	0x94, 0xb3, 0xc4, 0xfb, 0x41, 0x9f, 0x20, 0x53, 0x86, 0x08, 0xda, 0x2d, 0xe7, 0x56, 0xdc, 0x69,
	0x76, 0xa2, 0x10, 0xa1, 0x24, 0xd4, 0x15, 0x0f, 0xf3, 0x3b, 0xf7, 0xba, 0xe3, 0x31, 0xce, 0x4f,
	0x89, 0xfc, 0xf4, 0x8a, 0xf0, 0x97, 0xc2, 0x8d, 0x6d, 0x15, 0x0c, 0x8c, 0x97, 0xfd, 0xbb, 0xd9,
	0xed, 0xbd, 0xe8, 0x54, 0x2c, 0xb4, 0x0a, 0x28, 0xfd, 0xdd, 0x09, 0x41, 0xa5, 0x4f, 0xe2, 0x58,
	0x6c, 0xb4, 0x79, 0xb5, 0x7b, 0xd1, 0x00, 0x9d, 0x0d, 0x5b, 0x2b, 0x49, 0x74, 0x43, 0xf0, 0xbe,
	0xfa, 0x02, 0xab, 0x2e, 0x27, 0x91, 0x68, 0xf9, 0x83, 0xac, 0xaa, 0xae, 0x5c, 0x0c, 0xb2, 0xea,
	0x3c, 0x1e, 0x90, 0x78, 0x3e, 0x63, 0x7d, 0xd2, 0xef, 0xbc, 0x04, 0x60, 0x3a, 0x97, 0xa8, 0xc0,
	0x96, 0x42, 0xf9, 0x28, 0x0d, 0x00, 0x1c, 0x1d, 0x03, 0x39, 0xaf, 0xbf, 0xb6, 0xc4, 0x26, 0xdc,
	0x5d, 0x89, 0xd1, 0x4f, 0x5c, 0xb8, 0x35, 0xa1, 0x65, 0x10, 0xae, 0x7e, 0x92, 0x41, 0xba, 0xfa,
	0x49, 0x06, 0xe9, 0xae, 0xa1, 0xb7, 0x65, 0x37, 0x50, 0x6b, 0xf4, 0x1e, 0xa3, 0xb2, 0xf6, 0x54,
	0xf2, 0x7e, 0xf2, 0x6b, 0xc6, 0x12, 0x94, 0x8b, 0x6e, 0xb6, 0xf6, 0xf2, 0x30, 0x20, 0x33, 0x1c,
	0xa9, 0x76, 0x19, 0xec, 0xe5, 0x20, 0x9c, 0x0d, 0x83, 0x98, 0xf7, 0xd7, 0xbf, 0x50, 0x62, 0xc7,
	0x5d, 0xa4, 0xcc, 0x15, 0x05, 0x51, 0x63, 0xa7, 0xbb, 0x22, 0x95, 0x4c, 0xee, 0x66, 0xb7, 0x77,
	0xa7, 0x99, 0x4d, 0x16, 0x93, 0xf6, 0x56, 0x18, 0x6f, 0x72, 0xcf, 0xbf, 0x93, 0x9d, 0xed, 0x41,
	0x28, 0x77, 0x78, 0xa5, 0xde, 0x65, 0x62, 0x28, 0xa2, 0x72, 0x6f, 0x1a, 0x0c, 0x2f, 0x54, 0xe9,
	0xcd, 0xd7, 0x32, 0xc5, 0x67, 0x40, 0x23, 0x47, 0x6e, 0x6f, 0x6d, 0x13, 0xc2, 0x5e, 0xba, 0xcf,
	0xbf, 0x8f, 0xdd, 0xd3, 0x9d, 0x84, 0xfc, 0x36, 0xb5, 0x3a, 0xd9, 0x5f, 0x7f, 0x9b, 0x97, 0x15,
	0x38, 0xb0, 0x24, 0xdf, 0xce, 0x38, 0x59, 0x8c, 0xb1, 0x06, 0x71, 0x17, 0x82, 0xa7, 0xb7, 0x42,
	0x9a, 0xe1, 0xba, 0xe0, 0xa7, 0x3b, 0x34, 0xc3, 0x75, 0x41, 0x4f, 0xc5, 0xbc, 0x5c, 0xbf, 0xcc,
	0x06, 0xe6, 0xc3, 0xeb, 0xb4, 0x35, 0x1e, 0xa6, 0x6f, 0x59, 0xee, 0x30, 0x1b, 0xd0, 0x77, 0x28,
	0x70, 0xdf, 0x8d, 0x36, 0x00, 0x79, 0x49, 0x95, 0x0c, 0x5a, 0xd9, 0x50, 0x7e, 0xe5, 0xfa, 0x03,
	0x8c, 0xc1, 0x97, 0x39, 0x73, 0x98, 0x09, 0xe2, 0xb5, 0x38, 0x69, 0xf3, 0x5b, 0xfc, 0x7e, 0x56,
	0x9e, 0x09, 0x60, 0xd6, 0x19, 0x62, 0xfd, 0xf2, 0xde, 0x32, 0x2f, 0xd5, 0xa7, 0x19, 0x33, 0x71,
	0xaa, 0xe9, 0x9a, 0x2f, 0xfc, 0x49, 0x1e, 0x18, 0xeb, 0x9b, 0x4f, 0xa2, 0x86, 0x90, 0xc9, 0x56,
	0x9a, 0x61, 0xbc, 0xd8, 0xd9, 0xa1, 0x63, 0x0a, 0x65, 0x6e, 0x2b, 0xd7, 0x9f, 0x60, 0x63, 0xd6,
	0x85, 0x0e, 0xcc, 0x68, 0x84, 0x0d, 0xda, 0x32, 0x1c, 0x64, 0xd5, 0xc5, 0x60, 0x3d, 0x59, 0x27,
	0xbb, 0xe5, 0x74, 0xb8, 0x79, 0x2d, 0x8c, 0x63, 0x98, 0x14, 0xea, 0xef, 0xf3, 0x28, 0x28, 0xe2,
	0x4c, 0xd0, 0x16, 0xf3, 0x49, 0xba, 0xa7, 0x6e, 0xaa, 0x65, 0x61, 0x2a, 0xa7, 0x53, 0xe4, 0x32,
	0xe5, 0xa0, 0xd4, 0xb9, 0x80, 0x47, 0xe3, 0x2a, 0x83, 0x25, 0x45, 0xbe, 0x54, 0x98, 0x52, 0x9e,
	0x7f, 0x90, 0xc6, 0x9c, 0xc3, 0xd2, 0xa1, 0x49, 0xa5, 0xbe, 0xcc, 0x86, 0xac, 0xa7, 0x57, 0xd0,
	0x58, 0x69, 0x7e, 0x15, 0x63, 0x19, 0xe8, 0x0c, 0x99, 0x4b, 0x8e, 0xb2, 0x43, 0x36, 0x54, 0xc9,
	0xac, 0x54, 0x7f, 0xab, 0x67, 0x9e, 0x3a, 0xf1, 0xc7, 0xd9, 0x88, 0xfa, 0xb6, 0xae, 0x86, 0x6b,
	0xd0, 0xe5, 0xbd, 0x20, 0xde, 0x09, 0xd2, 0xb5, 0xed, 0xbd, 0xa0, 0xcd, 0xb7, 0xfc, 0xa3, 0xcc,
	0xd7, 0xa8, 0xd5, 0xad, 0x20, 0x5c, 0x5b, 0x0f, 0xb6, 0xda, 0xfc, 0x6f, 0xab, 0xe8, 0x4d, 0xa9,
	0x10, 0x57, 0xe3, 0xb0, 0x2d, 0x1a, 0x6b, 0x38, 0x99, 0xb5, 0xd6, 0x1a, 0x49, 0x14, 0x05, 0x29,
	0xff, 0xc5, 0x3e, 0x8c, 0x8d, 0xa4, 0x68, 0x2e, 0xc6, 0x8d, 0x24, 0x16, 0xad, 0x30, 0x88, 0xd7,
	0xd2, 0x4e, 0x33, 0x0c, 0xb6, 0xf8, 0x97, 0x4a, 0xf5, 0xaf, 0x61, 0x03, 0xab, 0x41, 0x6b, 0x5b,
	0xb7, 0x62, 0xd0, 0xda, 0xb6, 0x82, 0xaa, 0xe2, 0xaf, 0xbe, 0xbc, 0xe8, 0x69, 0xd0, 0xb2, 0xd8,
	0xc0, 0x6e, 0xc8, 0x4b, 0xf5, 0x90, 0x6e, 0xcf, 0xc8, 0x2e, 0x78, 0x88, 0x8d, 0x99, 0x3f, 0x4b,
	0x56, 0x16, 0x70, 0x36, 0xa1, 0xd9, 0xe8, 0x30, 0x1b, 0xb7, 0xa0, 0x74, 0xb8, 0x4f, 0xa6, 0x53,
	0x0b, 0x2c, 0x7b, 0x2e, 0xa0, 0xca, 0xf5, 0x67, 0x18, 0xa3, 0x93, 0x4a, 0xb5, 0xaf, 0x32, 0x7f,
	0x96, 0x99, 0xc6, 0x02, 0xca, 0xdb, 0x7a, 0x9e, 0xb9, 0xc3, 0x47, 0xe0, 0x60, 0x07, 0xad, 0x83,
	0x19, 0x68, 0x78, 0xbd, 0xdd, 0xb2, 0x6f, 0x01, 0x92, 0x6a, 0x11, 0xb4, 0xb6, 0x5b, 0xbc, 0x52,
	0xff, 0x05, 0x0f, 0xa3, 0xcd, 0x6c, 0x5f, 0x6d, 0xca, 0x25, 0x6a, 0x1c, 0xef, 0xb4, 0xe2, 0xbf,
	0x55, 0xb8, 0x06, 0x59, 0xcb, 0x92, 0x0d, 0xb6, 0x16, 0xa4, 0x63, 0x18, 0x2c, 0x86, 0xc0, 0xee,
	0x52, 0x74, 0x04, 0xef, 0xd1, 0x4a, 0x4c, 0x24, 0x82, 0xf4, 0xe2, 0x06, 0x9a, 0x88, 0xf5, 0xe5,
	0x8b, 0xd9, 0x64, 0x8d, 0x8e, 0x27, 0x70, 0x67, 0x6c, 0x68, 0xcd, 0x16, 0xb7, 0xcf, 0xc9, 0xc4,
	0x6c, 0x61, 0xd1, 0x52, 0x38, 0x22, 0xcf, 0xf6, 0x64, 0x4d, 0x7c, 0x36, 0xaa, 0x01, 0x96, 0x79,
	0xce, 0xc0, 0xac, 0xba, 0x38, 0x70, 0xab, 0x32, 0xc7, 0xd9, 0x61, 0x03, 0x77, 0x6b, 0x73, 0x98,
	0x8d, 0x1b, 0x94, 0x5e, 0x4d, 0xeb, 0xaf, 0x54, 0xb7, 0x6f, 0x2f, 0x27, 0xf1, 0x26, 0x31, 0x02,
	0xbb, 0x72, 0x17, 0x64, 0x6d, 0x97, 0xb3, 0x98, 0x97, 0x87, 0x1d, 0x1a, 0x70, 0x59, 0xc4, 0xd3,
	0x49, 0x87, 0x97, 0xea, 0x4d, 0x85, 0x58, 0x0a, 0xd2, 0x36, 0xce, 0x09, 0x73, 0x51, 0xb0, 0x89,
	0xdb, 0xfb, 0x3c, 0xd8, 0xda, 0xbf, 0x16, 0x61, 0x29, 0xee, 0xa9, 0xd7, 0x2d, 0xf1, 0x6a, 0x10,
	0x46, 0xbc, 0x54, 0xff, 0x5d, 0x8f, 0x8d, 0x13, 0x5a, 0x56, 0x72, 0xa5, 0x2d, 0x9a, 0x68, 0xa0,
	0xb0, 0x81, 0xb6, 0xa1, 0xc5, 0x81, 0xcf, 0x8a, 0x20, 0xc2, 0x09, 0xde, 0x2e, 0x48, 0x21, 0x57,
	0x9a, 0x22, 0xd8, 0x26, 0x6c, 0x29, 0x8f, 0x85, 0xa4, 0x2b, 0x62, 0x03, 0x67, 0x67, 0x53, 0x07,
	0x27, 0xad, 0x44, 0x57, 0x8a, 0xcb, 0x5d, 0xdd, 0x0a, 0xd3, 0x06, 0x69, 0x31, 0x05, 0x69, 0x09,
	0xdb, 0x57, 0xff, 0xf3, 0x92, 0xba, 0x43, 0x6d, 0x86, 0x80, 0xfa, 0xb7, 0x86, 0x80, 0x06, 0xb9,
	0x43, 0x40, 0x83, 0xdd, 0x21, 0xa0, 0xc1, 0xb2, 0x48, 0x34, 0x03, 0x97, 0x8b, 0x30, 0x4b, 0x41,
	0xab, 0xc5, 0x2b, 0x45, 0x98, 0x99, 0x00, 0xcf, 0xb3, 0x4f, 0xb0, 0x23, 0x05, 0xb9, 0x45, 0xc9,
	0x2e, 0xef, 0x2b, 0xcc, 0x2f, 0xea, 0xb4, 0xc8, 0xb4, 0x96, 0xc5, 0x4c, 0x45, 0xd1, 0xc5, 0x98,
	0x0f, 0xc0, 0x0c, 0xa3, 0x51, 0xf2, 0xda, 0xf8, 0xa0, 0x53, 0x95, 0xd9, 0x64, 0x37, 0x46, 0x30,
	0x73, 0xc0, 0xfa, 0x90, 0x6f, 0xc8, 0x01, 0x4f, 0x63, 0x0c, 0x80, 0xa0, 0xcd, 0x87, 0x1d, 0xc9,
	0xe1, 0x91, 0x28, 0x9d, 0x8a, 0x23, 0x68, 0x8d, 0x2e, 0x9e, 0x8f, 0xd6, 0x13, 0x55, 0x3c, 0xfa,
	0x51, 0xa0, 0xc4, 0x75, 0x76, 0x08, 0x5a, 0xc3, 0x43, 0x35, 0x5a, 0x3d, 0x1c, 0x30, 0x36, 0x76,
	0x90, 0xee, 0xd9, 0x92, 0x27, 0xd4, 0x02, 0xcd, 0xda, 0xa6, 0x6a, 0x04, 0x9e, 0x8a, 0x22, 0x5e,
	0x86, 0x9d, 0x0f, 0x97, 0x43, 0xd5, 0xec, 0x0a, 0xcd, 0xf0, 0x45, 0x98, 0x65, 0x4b, 0x75, 0xc0,
	0x57, 0x62, 0x21, 0xd7, 0xc0, 0x6c, 0x02, 0xdc, 0xdb, 0xa1, 0x62, 0xe4, 0x80, 0x51, 0xbd, 0x99,
	0x0e, 0xe2, 0xc6, 0xea, 0x6e, 0xc2, 0xcb, 0xd6, 0x04, 0x42, 0xe8, 0x15, 0x0c, 0xed, 0x82, 0xbb,
	0x18, 0xd8, 0x36, 0xe5, 0x52, 0x6a, 0x7c, 0x35, 0xc7, 0xca, 0xe5, 0x0e, 0x9e, 0x02, 0xc9, 0xc3,
	0x76, 0x1b, 0x73, 0x29, 0x6c, 0x0b, 0xde, 0x9f, 0x03, 0x4f, 0x27, 0x3b, 0xeb, 0x64, 0x49, 0x75,
	0xc0, 0x73, 0x49, 0x27, 0x55, 0x0c, 0x0e, 0xd6, 0x3f, 0xe9, 0xe9, 0xa9, 0xcf, 0x56, 0xd0, 0x4f,
	0xb2, 0xa3, 0x79, 0xa8, 0x12, 0xd2, 0x6d, 0xec, 0x54, 0x01, 0xd2, 0x56, 0xc9, 0x4d, 0xdd, 0xba,
	0xea, 0xe2, 0x05, 0xf8, 0xd5, 0xb4, 0xd3, 0x6a, 0x0b, 0xd1, 0xda, 0x0a, 0x9b, 0xbc, 0x8c, 0xbb,
	0xbc, 0x3c, 0x0d, 0xdd, 0x6b, 0xb0, 0x29, 0x2b, 0xf5, 0xbf, 0xf6, 0x18, 0x37, 0xae, 0x1c, 0x72,
	0x14, 0x1f, 0x66, 0xe3, 0x36, 0xcc, 0xd2, 0x48, 0x1c, 0xb0, 0x35, 0x9a, 0xb3, 0x28, 0x6b, 0x44,
	0x9f, 0x62, 0xc7, 0x1c, 0x94, 0xbb, 0x14, 0x9c, 0x61, 0x27, 0x1d, 0xec, 0x54, 0xa7, 0x9d, 0x98,
	0x40, 0x47, 0x34, 0x3b, 0x39, 0x04, 0x16, 0x12, 0x4d, 0x78, 0x0e, 0x72, 0x5e, 0x98, 0x6e, 0xca,
	0xfb, 0x72, 0x45, 0x4f, 0xb5, 0xb6, 0xe7, 0x64, 0x1c, 0x25, 0xde, 0x5f, 0xff, 0x43, 0xcf, 0x66,
	0x5a, 0x1a, 0xdb, 0x70, 0x86, 0x76, 0xca, 0x94, 0x08, 0x39, 0xe5, 0xdf, 0x52, 0x8c, 0xbc, 0x20,
	0x82, 0xa6, 0x34, 0xa0, 0x15, 0x23, 0xa5, 0x01, 0xad, 0x18, 0x29, 0x0d, 0x68, 0x05, 0x65, 0x6e,
	0x25, 0x49, 0x9b, 0x2c, 0x99, 0x05, 0x29, 0x93, 0x1d, 0xb1, 0xdc, 0x89, 0xb3, 0x62, 0xd0, 0x69,
	0x29, 0xda, 0x16, 0xef, 0xab, 0x7f, 0xbe, 0x8f, 0x1d, 0x32, 0x78, 0xc7, 0x72, 0x5b, 0x00, 0xb6,
	0x7a, 0x6a, 0x11, 0xf6, 0x42, 0xb8, 0xb9, 0x25, 0x87, 0x75, 0x97, 0xf4, 0x72, 0x74, 0xd7, 0xd8,
	0xe9, 0x22, 0x2c, 0x59, 0x59, 0xa4, 0x75, 0xa7, 0x4b, 0x0e, 0x68, 0x1a, 0xaa, 0x74, 0xe3, 0x60,
	0xa5, 0x9d, 0x06, 0xa8, 0x97, 0x67, 0x2a, 0x6e, 0x28, 0xd0, 0xb8, 0xc5, 0xfb, 0x30, 0x8e, 0x75,
	0x11, 0xba, 0x13, 0x45, 0x17, 0x92, 0x4e, 0x0b, 0x06, 0xfe, 0xed, 0xec, 0x4c, 0x21, 0x49, 0xd2,
	0x49, 0xaf, 0x5c, 0x9f, 0xba, 0x14, 0xc6, 0x0d, 0x3e, 0x00, 0xbb, 0xe4, 0x5e, 0x8c, 0x50, 0x71,
	0x83, 0xdd, 0x8a, 0x83, 0xda, 0x10, 0x09, 0xf3, 0xef, 0x60, 0xb7, 0x75, 0x23, 0xd1, 0xd5, 0x1a,
	0xf2, 0xef, 0x62, 0xb5, 0xc2, 0xf2, 0xc2, 0x9b, 0x20, 0x37, 0x98, 0x80, 0xae, 0xc4, 0x82, 0x0f,
	0xc3, 0x30, 0x2f, 0x64, 0x3e, 0xbc, 0x21, 0x14, 0x21, 0x8a, 0x72, 0x04, 0x36, 0xde, 0xdd, 0xaa,
	0x09, 0x14, 0x2a, 0xcb, 0xd1, 0x6e, 0x75, 0x58, 0xc1, 0x48, 0x0b, 0x51, 0x92, 0xf2, 0xb1, 0x6e,
	0xcd, 0x32, 0x15, 0x45, 0xb4, 0xf8, 0xa0, 0x71, 0xb4, 0x0b, 0xc5, 0x74, 0xb8, 0xc9, 0xc7, 0xbb,
	0xd5, 0x8f, 0x8e, 0xb8, 0xd3, 0xa4, 0xd3, 0x04, 0xbe, 0xb8, 0xef, 0xd7, 0xd9, 0x5d, 0x5d, 0xe9,
	0x5c, 0xe1, 0x1f, 0xea, 0xd6, 0x46, 0xab, 0xbb, 0x22, 0xba, 0x21, 0x96, 0x93, 0x3d, 0x8c, 0xfa,
	0x32, 0xd1, 0x8d, 0x35, 0xe9, 0x73, 0x71, 0xb8, 0x6b, 0x53, 0x77, 0x9a, 0xa9, 0xd8, 0x11, 0x92,
	0xec, 0x48, 0xfd, 0x1a, 0x1b, 0x00, 0x0d, 0x5c, 0x9d, 0x0c, 0xab, 0x6f, 0x73, 0xea, 0xac, 0x20,
	0x53, 0x71, 0x48, 0x27, 0xba, 0xe3, 0x6c, 0x44, 0xc1, 0xe6, 0xd2, 0x0e, 0x1a, 0xf7, 0x2c, 0xb2,
	0xf9, 0x54, 0x88, 0xb8, 0xc5, 0xcb, 0xf5, 0xef, 0xf0, 0x58, 0x3f, 0x00, 0x17, 0x3b, 0x3b, 0xf8,
	0x10, 0x02, 0x7d, 0x1a, 0x83, 0x80, 0x04, 0x3c, 0x44, 0x6e, 0x83, 0xf2, 0x0f, 0x26, 0x17, 0xf3,
	0x07, 0xb3, 0x89, 0xf9, 0x7b, 0x84, 0x57, 0xac, 0xbf, 0x47, 0x79, 0xd5, 0xfa, 0x7b, 0x8c, 0xf7,
	0x59, 0x7f, 0x2f, 0xe6, 0xfd, 0xd6, 0xdf, 0xe3, 0x7c, 0xa0, 0xfe, 0x05, 0x8f, 0x1d, 0xc9, 0xba,
	0x10, 0xca, 0x25, 0xe2, 0xb8, 0x13, 0xb4, 0x09, 0x31, 0xb6, 0xca, 0x9c, 0x45, 0x59, 0x4b, 0x45,
	0x11, 0x3a, 0x73, 0x68, 0x98, 0x45, 0xcb, 0x50, 0xf1, 0x18, 0xde, 0xac, 0x28, 0xf9, 0xd5, 0xa6,
	0x0c, 0xf9, 0x8e, 0x01, 0xce, 0x72, 0x68, 0xd0, 0xc9, 0x24, 0x41, 0xb5, 0xfe, 0x1a, 0x8f, 0xf1,
	0x4b, 0xe1, 0xc6, 0x36, 0x01, 0xa4, 0x19, 0x57, 0xbe, 0x30, 0x41, 0x30, 0xb3, 0x45, 0x35, 0x30,
	0x72, 0x6e, 0x20, 0x55, 0xc6, 0x86, 0x92, 0xbb, 0x7d, 0x29, 0x4b, 0x2c, 0x4f, 0xe5, 0x33, 0xc4,
	0xe8, 0x06, 0xcd, 0x2b, 0xf5, 0x55, 0x27, 0x40, 0x15, 0x4c, 0xa6, 0xf8, 0x36, 0x0c, 0x67, 0xc3,
	0xea, 0xdb, 0xc4, 0x58, 0x83, 0x3f, 0xd9, 0xeb, 0xd0, 0x72, 0x02, 0xff, 0x98, 0x8c, 0x9a, 0x5c,
	0xa2, 0x77, 0x79, 0xb9, 0xbe, 0xc0, 0xc6, 0xac, 0x5c, 0x95, 0x39, 0xc9, 0xea, 0x95, 0xa3, 0x8c,
	0xc1, 0x9f, 0x9d, 0x1b, 0xfc, 0x5b, 0xb9, 0x49, 0x34, 0xe4, 0x76, 0xc3, 0xdc, 0xb0, 0xd7, 0x0c,
	0x5a, 0xb7, 0xee, 0xf3, 0x4c, 0x4a, 0xcb, 0x26, 0x76, 0x74, 0xf3, 0x3f, 0xdb, 0x09, 0xc9, 0xab,
	0x08, 0x40, 0x2f, 0x0f, 0x83, 0x18, 0x00, 0x65, 0xc5, 0x39, 0x00, 0x78, 0xc5, 0x67, 0xac, 0x0f,
	0xfe, 0x2e, 0x08, 0x5e, 0xad, 0xa7, 0x6c, 0x58, 0x95, 0xa1, 0x4c, 0x2d, 0xf6, 0xbf, 0x5b, 0x15,
	0xbb, 0x4c, 0xf3, 0xaf, 0xcb, 0x04, 0x90, 0x53, 0xa6, 0x02, 0x50, 0x99, 0xf0, 0x87, 0x65, 0xfe,
	0x57, 0x8f, 0x8d, 0x5b, 0x7e, 0xb0, 0xc6, 0x61, 0xc0, 0x02, 0x5a, 0x4a, 0xae, 0x0d, 0x75, 0x1d,
	0x06, 0x6c, 0x8c, 0xbb, 0x13, 0xb6, 0x31, 0x76, 0x6f, 0xce, 0x24, 0xb2, 0x3a, 0xf2, 0x09, 0x76,
	0xc4, 0xc6, 0xd8, 0x7d, 0x18, 0xc6, 0x80, 0x8d, 0x93, 0x7e, 0xd5, 0xd7, 0xc2, 0x78, 0x21, 0xd9,
	0xa4, 0x65, 0xaf, 0x00, 0x4d, 0xc5, 0xa2, 0x6b, 0x76, 0x7f, 0x3d, 0x72, 0x02, 0x3f, 0xe8, 0x16,
	0x96, 0xed, 0xe2, 0xb6, 0xac, 0x2c, 0x96, 0xcc, 0x86, 0xa9, 0x08, 0x56, 0xb6, 0xf7, 0x4c, 0xe7,
	0x5b, 0x08, 0x70, 0x8b, 0xa9, 0xba, 0x62, 0x90, 0x6e, 0xf3, 0x8a, 0x4a, 0xf8, 0x0a, 0x81, 0x5b,
	0xad, 0x6a, 0xfd, 0xd5, 0x6e, 0xac, 0x38, 0xf9, 0x16, 0x52, 0x3f, 0x2b, 0x43, 0x56, 0xb7, 0xf8,
	0x03, 0xac, 0x82, 0xd9, 0x78, 0xf0, 0x85, 0x59, 0x94, 0xa0, 0x7d, 0x64, 0x72, 0x74, 0x65, 0x5c,
	0xd9, 0xde, 0x23, 0xc5, 0x81, 0x72, 0x07, 0x72, 0xf9, 0x5f, 0x85, 0x7f, 0x48, 0x24, 0xff, 0xd1,
	0x15, 0x8a, 0x92, 0x4a, 0x48, 0x7f, 0xfd, 0x8f, 0x3c, 0xc6, 0x8d, 0xf7, 0xb1, 0x39, 0x84, 0x37,
	0x30, 0xcb, 0xaa, 0x60, 0x01, 0xdd, 0x43, 0x78, 0x0b, 0xe1, 0x6e, 0x58, 0x2d, 0x84, 0xdd, 0xb6,
	0x6e, 0x12, 0xab, 0x69, 0x8f, 0xb3, 0xc3, 0x16, 0xc2, 0x69, 0xd9, 0x53, 0xec, 0x98, 0x85, 0xca,
	0x36, 0xec, 0x6d, 0xec, 0x54, 0x1e, 0xeb, 0xb4, 0xeb, 0x6f, 0x94, 0xed, 0xbc, 0xa5, 0x59, 0x14,
	0xab, 0x7b, 0x9a, 0x9d, 0x28, 0x44, 0xa8, 0x9a, 0x9f, 0x65, 0xb7, 0x76, 0xc1, 0x63, 0x04, 0x59,
	0x58, 0x70, 0xf6, 0x21, 0x81, 0x55, 0x68, 0x1f, 0x12, 0x58, 0x9a, 0xf6, 0x21, 0x81, 0xf5, 0x6a,
	0x1f, 0x92, 0x47, 0xe9, 0x80, 0xa0, 0x17, 0xc9, 0x63, 0x34, 0x0c, 0x7a, 0x91, 0xc0, 0x72, 0xb7,
	0x0f, 0xc9, 0xe3, 0x7c, 0x60, 0x3f, 0x92, 0x97, 0x90, 0xde, 0x57, 0x4c, 0xb2, 0x20, 0x92, 0x26,
	0xa8, 0xca, 0x0c, 0x43, 0x9a, 0x15, 0x92, 0xc0, 0x08, 0x18, 0x72, 0x1b, 0xd6, 0x46, 0x4f, 0x77,
	0x1a, 0x8d, 0xad, 0x80, 0x0f, 0xd7, 0x9f, 0xf5, 0xec, 0x50, 0x28, 0x7a, 0xc0, 0x3a, 0x01, 0x52,
	0xac, 0xa1, 0xeb, 0xf4, 0x4a, 0x67, 0x10, 0x1f, 0x66, 0xe3, 0x2e, 0x86, 0x86, 0x73, 0x2e, 0xa3,
	0x2b, 0xeb, 0x62, 0x8f, 0x0c, 0x8f, 0x2e, 0x1c, 0x47, 0x6a, 0xa5, 0xfe, 0x94, 0x9d, 0x8d, 0x1a,
	0xd1, 0x3e, 0x1b, 0xb5, 0xfa, 0x27, 0x0d, 0x6e, 0x77, 0x98, 0x61, 0xae, 0x5e, 0x06, 0x88, 0x59,
	0x96, 0xea, 0x3f, 0xe2, 0xd1, 0x63, 0x00, 0x74, 0x8b, 0x5d, 0x5a, 0x8f, 0x8f, 0x30, 0xdf, 0xc0,
	0x30, 0x7a, 0xc0, 0xc5, 0x78, 0x93, 0xdf, 0x02, 0x83, 0x9c, 0x9c, 0xee, 0xa6, 0x36, 0x36, 0x44,
	0x53, 0x9e, 0x8f, 0x10, 0x84, 0x02, 0xdb, 0x93, 0x45, 0x43, 0xc7, 0x78, 0xa0, 0xbd, 0x2f, 0x2f,
	0xc3, 0x6c, 0x61, 0x85, 0x0d, 0xa8, 0x90, 0x13, 0x2f, 0x85, 0x78, 0x50, 0xb1, 0x3a, 0xd1, 0xc7,
	0x76, 0x29, 0x68, 0xb5, 0xc2, 0x1b, 0xe2, 0x29, 0x7c, 0x15, 0x04, 0x23, 0x07, 0xd0, 0x85, 0x08,
	0x8a, 0x8a, 0xc0, 0xfb, 0xeb, 0xef, 0xf7, 0x18, 0xc3, 0x30, 0x0a, 0xc4, 0x28, 0x5e, 0x48, 0xe8,
	0xac, 0x4b, 0xf9, 0xc3, 0x5a, 0xae, 0xc2, 0x5f, 0x5c, 0x54, 0x4b, 0x14, 0x19, 0x63, 0x8d, 0xc7,
	0x21, 0x10, 0x91, 0x7d, 0x96, 0x38, 0x26, 0x43, 0xb3, 0x0e, 0x1d, 0x21, 0x59, 0xc6, 0xe7, 0xc0,
	0x24, 0x8b, 0x14, 0x7f, 0x83, 0x57, 0xd1, 0xdd, 0xb3, 0xb1, 0x13, 0xc6, 0x0a, 0xd2, 0x87, 0x93,
	0x0a, 0xb1, 0xac, 0xa2, 0x74, 0x48, 0xae, 0xfb, 0xeb, 0xf3, 0xc4, 0xda, 0x72, 0x12, 0xa1, 0x65,
	0x57, 0x7d, 0xcb, 0x67, 0x1d, 0x6e, 0x71, 0x60, 0x14, 0xe9, 0x01, 0x5b, 0xc8, 0xd0, 0xd1, 0x39,
	0x6d, 0xb9, 0xfe, 0x2f, 0x18, 0x27, 0xe7, 0x42, 0x22, 0xc3, 0x0c, 0x61, 0x36, 0xa6, 0x08, 0xfb,
	0xba, 0xe6, 0x36, 0x0d, 0x35, 0x8c, 0x84, 0x04, 0x32, 0xd2, 0xde, 0x38, 0x1b, 0x51, 0x10, 0xca,
	0xba, 0x62, 0x40, 0x4b, 0x41, 0xda, 0x8e, 0xf1, 0x54, 0x78, 0x8c, 0x0d, 0x11, 0x88, 0xce, 0x8c,
	0x79, 0xfd, 0xbd, 0x9e, 0xca, 0xc9, 0x78, 0x7c, 0x4a, 0x0a, 0xd3, 0x31, 0x8e, 0xb2, 0x43, 0x04,
	0x73, 0xa5, 0x8d, 0x76, 0x6a, 0x1b, 0xa1, 0x7b, 0xc9, 0x09, 0x15, 0x4d, 0x3f, 0x27, 0xf9, 0xb2,
	0xc9, 0xcc, 0x95, 0x7f, 0x05, 0x32, 0xb3, 0xe5, 0x2f, 0x5f, 0x1e, 0xa8, 0xd6, 0x5f, 0xa5, 0x12,
	0xc8, 0x6a, 0x48, 0x46, 0x75, 0x19, 0x12, 0x6c, 0x42, 0x8f, 0xdc, 0x42, 0xef, 0x96, 0xd9, 0x49,
	0x34, 0xc7, 0x59, 0x0c, 0xe8, 0x92, 0x49, 0xa7, 0x4d, 0x5e, 0xa0, 0x0e, 0x06, 0xfb, 0x72, 0xb9,
	0xfe, 0xdd, 0x9e, 0xaa, 0xa3, 0x33, 0x86, 0x8e, 0xab, 0xf7, 0x18, 0xcc, 0x28, 0x52, 0x85, 0x9b,
	0x0a, 0x52, 0x02, 0x5d, 0x76, 0x06, 0x61, 0x8a, 0x9e, 0x70, 0xfb, 0x00, 0x95, 0x6c, 0x84, 0x4b,
	0xd0, 0xb9, 0x34, 0x79, 0x46, 0xc4, 0xbc, 0x52, 0x7f, 0xab, 0xa7, 0xc8, 0xad, 0xa1, 0xa2, 0x9b,
	0xcd, 0x1a, 0x30, 0xa6, 0x75, 0xd4, 0xb0, 0xd1, 0x47, 0x42, 0x56, 0x7a, 0x3d, 0x74, 0x26, 0xec,
	0x6c, 0xf5, 0xf0, 0x71, 0x88, 0x15, 0xcb, 0x15, 0xb7, 0x3c, 0x64, 0xb8, 0x5a, 0xff, 0x78, 0x9f,
	0xea, 0x4b, 0xd6, 0xe1, 0x8d, 0xfc, 0xb7, 0xec, 0x5d, 0x1a, 0x64, 0xbf, 0x75, 0x61, 0x8b, 0x47,
	0x9a, 0xc1, 0x24, 0xa2, 0xe4, 0x20, 0xa0, 0x28, 0x89, 0x28, 0xcb, 0x10, 0x78, 0x84, 0x30, 0x31,
	0x72, 0xd4, 0x45, 0xd2, 0x8a, 0x93, 0xd0, 0x0a, 0xe0, 0x52, 0x75, 0xb8, 0xa0, 0xc9, 0x47, 0x8e,
	0xac, 0x3e, 0x53, 0x5f, 0x4a, 0x43, 0xe3, 0xa4, 0x1f, 0xf6, 0x40, 0x39, 0xb0, 0xf5, 0x28, 0xc3,
	0x80, 0x93, 0x4e, 0x3d, 0xc2, 0xc1, 0x07, 0x1d, 0x16, 0xac, 0x83, 0x23, 0xe6, 0xd0, 0x6b, 0x9d,
	0x68, 0xc8, 0xe1, 0x6c, 0x36, 0x6c, 0xb5, 0x12, 0xdc, 0x69, 0xe3, 0x43, 0x81, 0xba, 0xeb, 0xce,
	0xea, 0xb8, 0x16, 0x0b, 0xf4, 0x60, 0xe0, 0x29, 0xf5, 0xb6, 0x05, 0x61, 0x2e, 0xef, 0xd1, 0x1f,
	0x62, 0x47, 0xfd, 0x93, 0xec, 0xa8, 0x93, 0x8e, 0xc4, 0x83, 0xc8, 0x31, 0x87, 0x3f, 0xbc, 0xbf,
	0x0d, 0x62, 0x68, 0x71, 0x6e, 0x86, 0x17, 0x21, 0xcc, 0xfb, 0x28, 0x64, 0x6b, 0x28, 0xc6, 0x4d,
	0xef, 0x99, 0xb7, 0x56, 0xb8, 0x0f, 0x4b, 0xb0, 0xcb, 0xd7, 0x4a, 0x67, 0xdd, 0x84, 0xba, 0x69,
	0x51, 0x5c, 0x48, 0x4d, 0x41, 0x77, 0x2a, 0xe5, 0x64, 0x24, 0xe3, 0xe8, 0x4c, 0x38, 0xdc, 0x2b,
	0x81, 0xc8, 0x0e, 0x70, 0xd8, 0xe9, 0x00, 0x3a, 0xb8, 0xa5, 0xbe, 0x7f, 0x7e, 0xc4, 0x69, 0xb5,
	0x7c, 0x98, 0x06, 0x8a, 0x0b, 0xa9, 0x09, 0x64, 0x88, 0x45, 0x0b, 0x7f, 0xcc, 0xbf, 0x87, 0xdd,
	0x91, 0xaf, 0xe9, 0x4a, 0x67, 0x3d, 0x9b, 0xd3, 0xf1, 0x6c, 0x5d, 0x61, 0x6b, 0x0b, 0x12, 0xb9,
	0x72, 0x5d, 0x32, 0x7b, 0x22, 0x4b, 0x61, 0xc7, 0x0c, 0xc7, 0x8b, 0x96, 0x27, 0xeb, 0x3f, 0xec,
	0xb1, 0xa3, 0xa6, 0xe7, 0xab, 0x17, 0x74, 0x68, 0x80, 0xdf, 0xc1, 0x6e, 0xeb, 0x82, 0x5a, 0xb3,
	0x66, 0xea, 0x1a, 0x3b, 0xdd, 0x95, 0x4a, 0x2d, 0xea, 0x3d, 0x68, 0xf4, 0x04, 0xde, 0x83, 0x46,
	0x4d, 0xe4, 0xf5, 0x4f, 0x78, 0xf4, 0x22, 0x90, 0x0c, 0x05, 0x84, 0x55, 0xa1, 0x80, 0x3d, 0x38,
	0xf8, 0x6f, 0xb7, 0x23, 0xf6, 0x64, 0xb1, 0x96, 0x53, 0x4d, 0x0f, 0x22, 0x1d, 0x2e, 0xc8, 0xdb,
	0x87, 0x10, 0x35, 0x0a, 0xba, 0x91, 0x54, 0xb7, 0xc3, 0xf6, 0xe4, 0x08, 0xed, 0x68, 0x5b, 0xe5,
	0xfa, 0x07, 0x3d, 0x36, 0x4c, 0xd7, 0x20, 0xcc, 0x84, 0xa5, 0xfe, 0xad, 0xa3, 0x36, 0x0d, 0x72,
	0x8f, 0xda, 0x34, 0xd8, 0xdd, 0xb9, 0x68, 0xb0, 0x6b, 0x94, 0x9f, 0x50, 0x81, 0xba, 0xed, 0xe3,
	0x59, 0x18, 0x7e, 0x86, 0xde, 0xf6, 0xc5, 0xd7, 0x17, 0x37, 0x32, 0x6e, 0xf8, 0x9f, 0xf7, 0xd8,
	0x18, 0x21, 0x8c, 0xcd, 0x59, 0x67, 0x92, 0xf5, 0x25, 0xcc, 0x23, 0x56, 0xd3, 0xb0, 0xc9, 0x3d,
	0xe8, 0x8a, 0x19, 0x84, 0x6b, 0xfa, 0xb3, 0x2a, 0xe2, 0x7a, 0x37, 0x92, 0x51, 0xbd, 0x4b, 0x5a,
	0xbb, 0x3e, 0xae, 0xcf, 0x61, 0xd5, 0x5c, 0x38, 0x31, 0xa9, 0xc2, 0x78, 0x13, 0xf6, 0x96, 0xf5,
	0xcf, 0x97, 0x94, 0x2c, 0xed, 0x13, 0x9f, 0x13, 0xec, 0x48, 0x0e, 0x68, 0x9d, 0xea, 0xe6, 0x71,
	0xf8, 0x2e, 0x20, 0x79, 0xab, 0xe4, 0x91, 0x78, 0x76, 0x59, 0xc2, 0x41, 0x54, 0x88, 0x0b, 0xe3,
	0x4d, 0xbc, 0xdb, 0x8e, 0x21, 0xf5, 0x0b, 0xb3, 0x9f, 0xd9, 0x12, 0x1b, 0xdb, 0x64, 0x43, 0xc8,
	0x23, 0xf1, 0x38, 0x15, 0x6d, 0x08, 0x05, 0x09, 0xe5, 0xcd, 0x9a, 0xbe, 0xe2, 0x7c, 0xe9, 0x14,
	0x14, 0x63, 0x15, 0x17, 0xb1, 0x86, 0x91, 0xcf, 0x5c, 0x06, 0x07, 0x60, 0x5a, 0xcb, 0xd3, 0x2e,
	0x04, 0xad, 0xf6, 0xea, 0x16, 0x06, 0xe7, 0xaf, 0x7f, 0x54, 0xf7, 0x12, 0xfd, 0x5a, 0xa2, 0x69,
	0x51, 0x0d, 0xb2, 0x2e, 0xa2, 0x64, 0x31, 0x18, 0xee, 0xe3, 0x21, 0x5b, 0x9a, 0x19, 0xdc, 0x39,
	0xd2, 0xf2, 0x0a, 0x71, 0x0f, 0x93, 0xe7, 0x4f, 0x21, 0xee, 0x11, 0xba, 0x85, 0x52, 0x88, 0xbb,
	0x1c, 0xdc, 0xe4, 0xd5, 0xfa, 0x37, 0xa8, 0x9e, 0x72, 0x2d, 0x08, 0x9d, 0x33, 0xc0, 0xd3, 0xec,
	0x44, 0x21, 0xc2, 0x3a, 0x5c, 0x29, 0xc6, 0xcb, 0x47, 0x66, 0xbc, 0xee, 0x14, 0xca, 0x9b, 0xb2,
	0xfe, 0x72, 0xc6, 0x88, 0x02, 0x9f, 0x40, 0x3e, 0xa4, 0xa4, 0x68, 0x3f, 0x82, 0xac, 0x7b, 0x32,
	0xbd, 0x79, 0x9c, 0xec, 0xec, 0x24, 0x31, 0x7c, 0xda, 0xc2, 0x42, 0x14, 0x6e, 0x1d, 0x24, 0xae,
	0x54, 0x7f, 0xbd, 0xa7, 0x26, 0x00, 0xda, 0x36, 0x2a, 0x8b, 0x6f, 0x16, 0x96, 0xeb, 0xe3, 0x16,
	0x4a, 0xfa, 0x77, 0x79, 0x85, 0xc8, 0xe9, 0xbd, 0xd5, 0x4e, 0x1a, 0xd3, 0x91, 0x58, 0x0e, 0xb9,
	0x1c, 0xc4, 0x8d, 0x64, 0x87, 0x97, 0xeb, 0xbf, 0xc3, 0xd8, 0x90, 0x15, 0xe1, 0x92, 0xee, 0x3d,
	0xeb, 0x5f, 0xdb, 0x2f, 0xc5, 0x82, 0x52, 0x14, 0x0b, 0x75, 0x85, 0xca, 0x82, 0x5f, 0xbf, 0x8e,
	0x88, 0x12, 0x5d, 0xac, 0x36, 0x08, 0xed, 0xb8, 0x54, 0xa6, 0xe0, 0x8f, 0x06, 0x63, 0xf9, 0xdf,
	0x9b, 0xe9, 0x54, 0xf4, 0xa2, 0xd2, 0xb3, 0xeb, 0x75, 0x3c, 0xe8, 0xed, 0x42, 0x85, 0x17, 0x8c,
	0x37, 0xb3, 0xf9, 0x58, 0xc6, 0x5b, 0x53, 0xda, 0x5e, 0x2f, 0x2a, 0x5d, 0xda, 0x33, 0xd9, 0xd2,
	0x6c, 0x2a, 0x2c, 0xed, 0x1b, 0x7a, 0xe4, 0x83, 0xc1, 0x30, 0x91, 0xea, 0x55, 0x7e, 0x8d, 0xdd,
	0xea, 0xca, 0x86, 0x2e, 0xf5, 0x1b, 0x86, 0x5e, 0xe7, 0x75, 0xa5, 0xd1, 0xec, 0xbc, 0xde, 0xa3,
	0x87, 0x8c, 0x0a, 0x68, 0xb0, 0x98, 0x6f, 0xee, 0x9a, 0x87, 0x61, 0xe5, 0x5b, 0x30, 0xec, 0x9f,
	0x4d, 0x53, 0x68, 0x76, 0x7d, 0xb6, 0x27, 0x99, 0xe6, 0xe8, 0xbb, 0x30, 0xe6, 0x65, 0x37, 0x32,
	0x2c, 0xf0, 0xbb, 0x7b, 0xe5, 0x64, 0xf8, 0x7a, 0x37, 0x3e, 0xa2, 0x69, 0x93, 0x91, 0x4b, 0x95,
	0x61, 0xe9, 0x7b, 0xba, 0x51, 0x68, 0x6e, 0xde, 0xe8, 0xf9, 0xa7, 0xd8, 0xd1, 0x02, 0x0a, 0x2c,
	0xe1, 0x4d, 0x9e, 0x7f, 0x3b, 0x3b, 0xed, 0xf4, 0x1d, 0xe5, 0xbd, 0x6f, 0x0a, 0xf9, 0xde, 0x1e,
	0x44, 0xba, 0x9c, 0x37, 0x7b, 0x18, 0xc3, 0xac, 0x90, 0x08, 0x8b, 0x7a, 0x4b, 0x8e, 0x55, 0x1a,
	0x8c, 0xa6, 0x9c, 0xb7, 0x76, 0xa3, 0xd0, 0x85, 0xbc, 0x2d, 0x57, 0x19, 0x49, 0x81, 0x25, 0xbc,
	0x3d, 0xd7, 0xd4, 0xca, 0x9a, 0x6f, 0xca, 0x78, 0x47, 0x77, 0x1a, 0x5d, 0xca, 0x3b, 0x73, 0x5d,
	0x4a, 0xd3, 0x60, 0x39, 0xef, 0xea, 0x9a, 0x87, 0x69, 0xba, 0xef, 0xc3, 0x98, 0x94, 0x36, 0x4d,
	0x91, 0xa9, 0xf7, 0x3d, 0xbd, 0xa8, 0x34, 0x3f, 0xff, 0x32, 0x27, 0x97, 0x8c, 0x11, 0x98, 0xbf,
	0xb7, 0x47, 0x3e, 0x86, 0xa7, 0xf7, 0x61, 0x74, 0xd0, 0x4c, 0x57, 0xb0, 0x22, 0x67, 0x18, 0xbe,
	0x3e, 0xb0, 0x1f, 0xa5, 0xe6, 0xed, 0x87, 0x73, 0x25, 0x67, 0x28, 0xb1, 0xe4, 0x1f, 0xf1, 0xea,
	0xbf, 0x5e, 0x62, 0x8c, 0x62, 0xe7, 0x28, 0x83, 0xb8, 0xf9, 0xb3, 0x56, 0x10, 0x0b, 0x68, 0x42,
	0x3f, 0x92, 0x6e, 0x6e, 0xa1, 0x0a, 0xc2, 0x36, 0xf2, 0x12, 0xac, 0xfe, 0x36, 0x4d, 0x76, 0x1b,
	0x81, 0xc7, 0x79, 0x76, 0xfe, 0x4e, 0x60, 0x43, 0x72, 0x01, 0xb0, 0xd0, 0x56, 0x18, 0x26, 0x49,
	0x51, 0xcd, 0x70, 0x51, 0x10, 0x33, 0x8c, 0xf7, 0xf9, 0x77, 0xb2, 0xb3, 0x16, 0x8d, 0xb4, 0x05,
	0x64, 0xc9, 0xd0, 0x17, 0xc0, 0x22, 0x2b, 0x0c, 0x0b, 0x38, 0x90, 0xe1, 0xc8, 0x0a, 0xdb, 0x4b,
	0x50, 0x3e, 0x58, 0x7f, 0x5d, 0x89, 0x8d, 0xd9, 0x01, 0xa3, 0xa4, 0x42, 0x93, 0x01, 0x59, 0xee,
	0xcc, 0x59, 0x8c, 0x0e, 0x05, 0x88, 0x7e, 0x35, 0x59, 0x2c, 0xed, 0xf2, 0xf1, 0xa0, 0x34, 0x8b,
	0xc2, 0x8b, 0xec, 0x84, 0xc7, 0xc5, 0x2c, 0x8b, 0x57, 0x8f, 0xd1, 0x59, 0xcf, 0x2f, 0xdd, 0xcb,
	0xee, 0xcc, 0x52, 0x41, 0x75, 0x76, 0x76, 0x82, 0xb8, 0xe1, 0x90, 0x56, 0xfd, 0xfb, 0xd8, 0x3d,
	0x39, 0x5e, 0x9c, 0x38, 0x57, 0x16, 0x75, 0x5f, 0xfd, 0x33, 0x25, 0x36, 0xee, 0xc6, 0xe6, 0x92,
	0x9a, 0x72, 0x0e, 0x68, 0x75, 0xb5, 0x3c, 0x6e, 0x16, 0xef, 0x54, 0x17, 0x26, 0xbb, 0x26, 0xc4,
	0x36, 0x2f, 0xe1, 0x15, 0x86, 0x1c, 0x0e, 0x25, 0xe1, 0xbc, 0x3d, 0x55, 0x48, 0x96, 0xdd, 0x1a,
	0x57, 0xfc, 0x17, 0xb1, 0xbb, 0xf3, 0x64, 0x24, 0x11, 0x91, 0x93, 0xc8, 0x24, 0xab, 0x17, 0xe4,
	0xd9, 0x55, 0x26, 0xfe, 0x63, 0xec, 0xdc, 0x7e, 0xf4, 0x26, 0xb0, 0x96, 0x4e, 0xd7, 0x5f, 0xff,
	0x1e, 0x8f, 0x8d, 0xe9, 0xe0, 0xa1, 0x72, 0x8f, 0x7d, 0x8c, 0x4d, 0x64, 0x40, 0xf6, 0x45, 0xd2,
	0x0c, 0xe6, 0x7c, 0xd0, 0x96, 0x17, 0x49, 0x33, 0x88, 0x2b, 0x1d, 0xf9, 0x86, 0x4b, 0x16, 0x71,
	0x0d, 0x9f, 0x3f, 0x29, 0x28, 0x64, 0x21, 0x69, 0x09, 0x5e, 0xa9, 0xbf, 0xc3, 0x63, 0xa3, 0x6a,
	0xd5, 0x36, 0x1b, 0x52, 0xbd, 0xce, 0x9b, 0x0d, 0x69, 0x5e, 0x85, 0xf0, 0x1c, 0xb0, 0xb5, 0x21,
	0x3d, 0x62, 0x1e, 0x46, 0x72, 0x0e, 0xd2, 0x6c, 0x72, 0xeb, 0x18, 0x0d, 0x14, 0x3c, 0x05, 0x76,
	0x8e, 0xf8, 0x7f, 0xdf, 0x33, 0x09, 0xcc, 0xce, 0x13, 0x67, 0x32, 0x02, 0x16, 0xdc, 0x89, 0xcc,
	0xa1, 0xe4, 0x96, 0xcf, 0x2b, 0x4c, 0x67, 0x39, 0x30, 0xe6, 0xd2, 0xa9, 0x0d, 0x26, 0xee, 0x2b,
	0x72, 0x68, 0xda, 0x99, 0x56, 0x68, 0xda, 0xea, 0x92, 0x94, 0x68, 0xaa, 0x85, 0x25, 0xe3, 0xa6,
	0xb8, 0xaf, 0xfe, 0x6a, 0x13, 0xce, 0x5f, 0x9f, 0x05, 0x65, 0xc8, 0x01, 0x66, 0xbb, 0x66, 0x66,
	0x51, 0xcb, 0xa2, 0x41, 0x23, 0x2b, 0x87, 0xa1, 0x38, 0x4e, 0xa5, 0xc2, 0x0c, 0x17, 0x3a, 0x1b,
	0xdb, 0xbc, 0x5c, 0x5f, 0xd1, 0xa1, 0x4f, 0x2e, 0x25, 0xf1, 0xe6, 0xf9, 0xb8, 0xb3, 0x03, 0x42,
	0xcc, 0x80, 0xae, 0xc6, 0x0d, 0x71, 0x3d, 0x54, 0xd7, 0x48, 0x00, 0x3a, 0x1d, 0xd0, 0x31, 0x32,
	0x7c, 0x3f, 0xbd, 0x15, 0xd2, 0x39, 0x2f, 0xfc, 0xe0, 0x4d, 0x98, 0x0f, 0x79, 0x3a, 0xb4, 0x89,
	0xdc, 0xf0, 0x60, 0xc6, 0xa7, 0xd9, 0x89, 0x3c, 0xd4, 0xca, 0x7b, 0x80, 0x55, 0x5a, 0x02, 0x8f,
	0x8f, 0x19, 0xeb, 0x4b, 0xe8, 0xa5, 0xf5, 0x12, 0x40, 0xe5, 0xc5, 0xa4, 0x01, 0x56, 0x91, 0xd7,
	0x8f, 0x06, 0x58, 0x65, 0x66, 0x2b, 0xd9, 0xa5, 0xf3, 0x93, 0xd9, 0x34, 0xd8, 0xd5, 0x17, 0x84,
	0xfa, 0xfc, 0x7e, 0x56, 0x86, 0x3e, 0xdf, 0x8f, 0x09, 0x83, 0x56, 0x8b, 0xe2, 0xde, 0x98, 0x78,
	0x46, 0x83, 0x78, 0x38, 0x93, 0x8d, 0x7e, 0xc4, 0xea, 0x9f, 0xf0, 0xd8, 0x84, 0x89, 0xff, 0x41,
	0x2f, 0x16, 0x21, 0xdb, 0x67, 0xd9, 0xad, 0x45, 0x70, 0xc5, 0x78, 0x83, 0x38, 0x47, 0x77, 0x0b,
	0x8f, 0x6e, 0xd3, 0x28, 0x0f, 0xcf, 0x61, 0x36, 0x30, 0x9f, 0x06, 0xeb, 0x97, 0x88, 0xfd, 0x71,
	0x36, 0x02, 0x44, 0x18, 0x04, 0x44, 0xd6, 0x63, 0x82, 0x71, 0x49, 0x6d, 0xa0, 0x55, 0x1d, 0xd9,
	0x64, 0xa5, 0x1d, 0xa4, 0x92, 0xfd, 0x55, 0x11, 0x5f, 0x89, 0x1a, 0x97, 0x85, 0xb4, 0xee, 0x3a,
	0xf9, 0xc8, 0xd3, 0x71, 0x56, 0x7f, 0x6b, 0x59, 0x87, 0x8a, 0xb9, 0x16, 0xc6, 0x99, 0xb6, 0x94,
	0x90, 0x0c, 0xd7, 0x4b, 0x64, 0x9c, 0xe7, 0x6c, 0x98, 0x5e, 0xf9, 0xbf, 0x42, 0x3c, 0x20, 0xeb,
	0xf0, 0x2f, 0x25, 0x3f, 0xc2, 0x06, 0xe7, 0x3a, 0x51, 0xa4, 0xfa, 0xfc, 0x08, 0x1b, 0xd4, 0xa1,
	0x56, 0xe4, 0xb9, 0x3d, 0xee, 0x42, 0xa4, 0x6b, 0x2e, 0xd4, 0x0a, 0x79, 0xb2, 0xa0, 0xfd, 0xd0,
	0xa6, 0x2b, 0x22, 0x58, 0x17, 0xb0, 0xf6, 0x82, 0x60, 0x92, 0xa8, 0x71, 0x21, 0x49, 0xb6, 0xf9,
	0x20, 0xc8, 0xec, 0x4a, 0x2c, 0x16, 0xa1, 0x13, 0x30, 0xf8, 0x81, 0x04, 0xe7, 0x1e, 0x7d, 0x9c,
	0x0f, 0xa1, 0xef, 0xc7, 0x56, 0x98, 0xb6, 0x85, 0x88, 0x2f, 0x07, 0x09, 0x1f, 0xc6, 0x60, 0x38,
	0x61, 0xa3, 0x11, 0x89, 0x85, 0xa0, 0x85, 0xfe, 0x2c, 0xe4, 0x5d, 0xbd, 0x12, 0x36, 0x0c, 0x64,
	0x94, 0x62, 0x92, 0x35, 0xa8, 0x61, 0xc7, 0xe8, 0x76, 0xd5, 0x0d, 0xb1, 0x14, 0x75, 0x76, 0xa6,
	0xa3, 0xa4, 0xd5, 0x4a, 0x76, 0x38, 0x87, 0xd5, 0xda, 0x15, 0x8c, 0x25, 0xf1, 0xf1, 0xbc, 0xd8,
	0x8c, 0xfc, 0x7d, 0x6c, 0xe2, 0x34, 0xd8, 0x5d, 0xd9, 0xde, 0xe3, 0x87, 0x80, 0x43, 0xd9, 0x82,
	0x78, 0xf8, 0x39, 0x01, 0x1c, 0x9e, 0x87, 0xb1, 0x2f, 0x44, 0x3c, 0x95, 0x6e, 0x05, 0xed, 0x16,
	0x3f, 0x5c, 0xff, 0x03, 0x0f, 0xef, 0x83, 0x58, 0xaa, 0x9b, 0xb9, 0x0b, 0x99, 0x51, 0xe9, 0xcc,
	0x44, 0xd6, 0x4d, 0x7f, 0xf4, 0x0a, 0x90, 0xae, 0xdb, 0x55, 0x06, 0x99, 0x8b, 0x27, 0x90, 0xc1,
	0x1b, 0xc3, 0xe0, 0xad, 0xec, 0x78, 0x36, 0xad, 0x6d, 0x1e, 0x3c, 0x95, 0x7d, 0x43, 0xcf, 0x31,
	0x12, 0xbe, 0xa6, 0xc4, 0x26, 0xdc, 0xe8, 0x6e, 0xa6, 0x92, 0x2e, 0xdc, 0xaa, 0x64, 0x06, 0xe1,
	0x56, 0x32, 0x83, 0x74, 0x2b, 0x99, 0x41, 0xe6, 0x2a, 0x99, 0xc1, 0x3b, 0x95, 0xcc, 0xa6, 0xcd,
	0x54, 0x32, 0x83, 0xb6, 0x2a, 0x59, 0x80, 0x35, 0x13, 0x4b, 0x7f, 0x3d, 0xd5, 0xdd, 0x66, 0x1a,
	0xef, 0x97, 0x52, 0xec, 0x33, 0x1c, 0x88, 0x77, 0xb2, 0xb3, 0x5d, 0x50, 0x6b, 0x1d, 0x6b, 0x48,
	0x0e, 0xb3, 0x01, 0xe8, 0x5b, 0x18, 0xb2, 0x08, 0x83, 0x5f, 0xa1, 0x05, 0x90, 0xae, 0x9a, 0x2f,
	0x85, 0x9b, 0x14, 0x68, 0x08, 0x61, 0xf2, 0xc2, 0x70, 0xfd, 0x4d, 0x1e, 0x1b, 0x91, 0x21, 0xf3,
	0xa4, 0xbc, 0x39, 0x1b, 0x96, 0x00, 0xeb, 0x92, 0x96, 0x82, 0x58, 0x12, 0xb6, 0xa0, 0x96, 0x68,
	0x0f, 0xb3, 0x71, 0x05, 0xb5, 0x97, 0x6e, 0x8b, 0xd8, 0x5a, 0xb9, 0x8f, 0x30, 0x5f, 0x41, 0x9d,
	0x85, 0xfb, 0x8d, 0x25, 0xc6, 0x51, 0x25, 0x5b, 0xe9, 0xac, 0xab, 0x58, 0xa7, 0xd0, 0x28, 0x59,
	0x98, 0xd4, 0x81, 0xb1, 0x2b, 0xe4, 0x70, 0xd2, 0x3e, 0xe6, 0x15, 0x22, 0x49, 0xc9, 0x22, 0x47,
	0x95, 0x1c, 0x72, 0x56, 0x34, 0x3b, 0xed, 0x3d, 0x49, 0x82, 0x5b, 0x93, 0x1c, 0xc9, 0xd5, 0x58,
	0x66, 0x5f, 0x29, 0xcc, 0x81, 0xae, 0x59, 0xc8, 0x1c, 0xaa, 0xf8, 0x4e, 0x58, 0x96, 0x04, 0xaf,
	0xce, 0x48, 0x8a, 0xbe, 0x42, 0x8a, 0xb9, 0x24, 0x6d, 0x6f, 0x49, 0x8a, 0xfe, 0xfa, 0xb7, 0x7a,
	0xf2, 0x9d, 0x71, 0x15, 0xe8, 0x15, 0xcf, 0x9e, 0x6d, 0x80, 0x6a, 0xae, 0x33, 0x3a, 0x82, 0xb7,
	0x84, 0x63, 0x18, 0x68, 0x6b, 0x33, 0xa1, 0x38, 0x76, 0x09, 0xae, 0xc6, 0x9a, 0xa4, 0xa4, 0x85,
	0xad, 0x49, 0x56, 0x93, 0x26, 0x52, 0x61, 0x30, 0xa4, 0xd1, 0xa5, 0x60, 0xef, 0xb2, 0x8c, 0x7a,
	0x1c, 0x8b, 0x08, 0x3d, 0x9c, 0x1c, 0x88, 0xed, 0x46, 0xe5, 0x22, 0x66, 0x92, 0x46, 0xc0, 0xbd,
	0xfa, 0x26, 0x1b, 0xc2, 0x08, 0xa1, 0x52, 0x89, 0x9d, 0x60, 0xdc, 0xfa, 0xb5, 0x22, 0x22, 0xd9,
	0xd0, 0xa5, 0xa9, 0x57, 0x90, 0xf2, 0x6a, 0x03, 0x9d, 0xa3, 0x60, 0x1b, 0x31, 0x37, 0x75, 0x71,
	0x81, 0x97, 0xeb, 0xaf, 0xf7, 0xd8, 0xb8, 0xf3, 0x4a, 0x12, 0xf6, 0xf1, 0x31, 0x36, 0xd4, 0xc2,
	0x20, 0x48, 0x6b, 0x4d, 0x58, 0x92, 0xf0, 0x42, 0x63, 0x92, 0x36, 0xc2, 0x38, 0x48, 0xf7, 0x08,
	0x84, 0x31, 0xba, 0x28, 0xfe, 0x26, 0x01, 0xd0, 0x93, 0xb0, 0x83, 0xc7, 0x7d, 0x04, 0xc0, 0x98,
	0x71, 0x8d, 0xe0, 0x66, 0x27, 0x88, 0xd3, 0x24, 0x91, 0x39, 0xe1, 0x9a, 0x4c, 0xc0, 0x66, 0x1a,
	0x3e, 0x23, 0x49, 0xab, 0xf5, 0x8e, 0xba, 0x86, 0x83, 0x7a, 0xe8, 0x4a, 0x10, 0x5f, 0xe8, 0x04,
	0xca, 0x40, 0x5c, 0x88, 0xc8, 0xdf, 0x3b, 0xcb, 0xe0, 0x57, 0x85, 0x0c, 0x72, 0x56, 0x8c, 0x5e,
	0x09, 0x6f, 0xf2, 0x52, 0xfd, 0x37, 0x3c, 0x7d, 0x2f, 0x4d, 0xe9, 0xbf, 0xf8, 0x52, 0xa5, 0x0a,
	0xa9, 0xd6, 0x0d, 0xa7, 0x4a, 0xbf, 0x4b, 0x85, 0x43, 0x2d, 0x20, 0x59, 0x0d, 0xb1, 0x34, 0x75,
	0x7d, 0xbc, 0x2b, 0xdd, 0x6c, 0x27, 0x21, 0xb2, 0x12, 0xc6, 0x89, 0xe8, 0x41, 0x36, 0xdb, 0x49,
	0x78, 0xb9, 0x27, 0xd1, 0xd3, 0x5b, 0xc1, 0x6c, 0x10, 0xf3, 0x4a, 0xfd, 0xdf, 0x0d, 0xa8, 0x5b,
	0x4a, 0x46, 0xb1, 0xd7, 0x17, 0xb9, 0x8c, 0xbb, 0x36, 0xbe, 0xf7, 0x6e, 0xdd, 0x11, 0x34, 0x98,
	0x2b, 0xca, 0x36, 0x9c, 0x45, 0xac, 0xee, 0xca, 0x28, 0x7d, 0x39, 0x04, 0x68, 0x7b, 0xf6, 0xfd,
	0x33, 0xd7, 0x7d, 0xde, 0xbe, 0x7f, 0xe6, 0xba, 0xe0, 0xcb, 0x20, 0x45, 0x19, 0x0c, 0x34, 0x50,
	0x5f, 0x51, 0x39, 0xa8, 0x49, 0xd8, 0xb7, 0xcf, 0x0c, 0x0a, 0x35, 0x03, 0x19, 0xa3, 0x28, 0x83,
	0x42, 0xf5, 0x67, 0x30, 0xd3, 0x9d, 0xa4, 0x15, 0x01, 0x16, 0xdc, 0xe4, 0xc9, 0xb0, 0xc3, 0x99,
	0x89, 0xa8, 0x6b, 0xf0, 0xd7, 0x3a, 0x0b, 0x49, 0xbc, 0x09, 0xe8, 0xff, 0xd6, 0x6f, 0x22, 0xf5,
	0x5a, 0xfc, 0x6c, 0x05, 0xc9, 0xca, 0x56, 0x08, 0x04, 0xbf, 0x3d, 0x66, 0x5d, 0x74, 0xd4, 0x04,
	0xd3, 0x41, 0x7c, 0xad, 0x03, 0xe8, 0x09, 0xff, 0x2c, 0x3b, 0x55, 0x54, 0x3c, 0xae, 0xae, 0x40,
	0xf1, 0xb7, 0xfd, 0x45, 0x1c, 0x5c, 0x16, 0xa1, 0x2c, 0xe0, 0xbf, 0x8c, 0x99, 0x5b, 0x88, 0xd6,
	0x55, 0x13, 0x41, 0xf9, 0x9f, 0x46, 0xaf, 0xee, 0x6c, 0xfe, 0x22, 0xde, 0x54, 0x15, 0xb8, 0x27,
	0x33, 0x1e, 0x24, 0x03, 0xf3, 0x9d, 0x20, 0x06, 0xf4, 0xb9, 0xa2, 0xf4, 0xd0, 0x8d, 0x15, 0xc1,
	0x57, 0x99, 0x8b, 0x82, 0x4e, 0x7a, 0xe8, 0xbd, 0x73, 0x45, 0x55, 0xc7, 0xc4, 0x80, 0x5d, 0x2a,
	0x2e, 0xf9, 0xc9, 0xb0, 0x73, 0x0d, 0xd0, 0x4f, 0x77, 0x4b, 0x8c, 0xd8, 0x46, 0x51, 0x5b, 0xcf,
	0x76, 0xc2, 0xa7, 0x43, 0x1e, 0x17, 0xa1, 0x2e, 0x74, 0x56, 0x93, 0x0e, 0xbf, 0xe9, 0x9f, 0xca,
	0x8b, 0x4a, 0x36, 0x16, 0xff, 0xfd, 0x01, 0xff, 0x64, 0xbe, 0x2a, 0x97, 0x83, 0x04, 0xf4, 0xe0,
	0x5f, 0xe4, 0x45, 0xc8, 0xf9, 0x20, 0x79, 0x45, 0x90, 0xf0, 0x0f, 0x1e, 0x2b, 0x4c, 0x89, 0x4d,
	0xc4, 0xbf, 0xc9, 0x2b, 0x2a, 0x74, 0x3a, 0x88, 0xa1, 0x15, 0xf8, 0x9f, 0xe0, 0x3b, 0xc9, 0x59,
	0x2c, 0x36, 0xfe, 0x4a, 0x10, 0xf3, 0x5f, 0xe3, 0x26, 0x60, 0xb3, 0xdd, 0xb8, 0x4b, 0x41, 0xc8,
	0xdf, 0xe0, 0x15, 0x95, 0xba, 0x8c, 0x7b, 0x04, 0xfe, 0x56, 0xaf, 0x28, 0xe1, 0x6c, 0x08, 0xb8,
	0xf7, 0x16, 0x72, 0x04, 0xa2, 0x05, 0xec, 0x07, 0xbc, 0xa2, 0xfe, 0x06, 0x5d, 0x92, 0xa6, 0xa4,
	0x0f, 0x7b, 0xf5, 0x37, 0x78, 0x6c, 0x54, 0x45, 0x10, 0x36, 0x1e, 0xc1, 0x06, 0x62, 0x2d, 0x65,
	0x16, 0xd0, 0xf5, 0x08, 0xb6, 0x10, 0x6e, 0x58, 0x2e, 0x0b, 0xe1, 0x6a, 0x98, 0x6e, 0x22, 0xfc,
	0x5c, 0x0a, 0x37, 0x78, 0xa5, 0x7e, 0x89, 0x8d, 0xe9, 0x87, 0x92, 0x3b, 0xeb, 0x6a, 0x5e, 0xcb,
	0x80, 0xac, 0x80, 0x14, 0x59, 0xcc, 0x72, 0xb2, 0x13, 0xc4, 0x53, 0xa9, 0x88, 0x61, 0x95, 0xbd,
	0x80, 0x17, 0xd3, 0x11, 0x8f, 0x67, 0x83, 0x74, 0xdd, 0x5c, 0xff, 0x5b, 0x2e, 0xbf, 0x0e, 0x78,
	0x59, 0xec, 0x24, 0x37, 0xc4, 0xda, 0x6c, 0x9a, 0x34, 0xd7, 0xe6, 0xc2, 0x28, 0xe2, 0x5e, 0x3d,
	0xc2, 0xfb, 0xe5, 0x48, 0x62, 0x84, 0x64, 0x20, 0x96, 0x90, 0x2c, 0xa0, 0x2b, 0x24, 0x0b, 0x61,
	0x09, 0xc9, 0xcd, 0x86, 0x42, 0xee, 0xd6, 0xbf, 0x58, 0x32, 0xe4, 0xe7, 0x23, 0x63, 0x3d, 0xa5,
	0x1d, 0x44, 0x16, 0x6c, 0xe9, 0x3d, 0xc5, 0xd8, 0x74, 0x27, 0xc0, 0x73, 0xe1, 0x9e, 0x04, 0xe7,
	0xc8, 0x4a, 0xdd, 0x9d, 0xe0, 0x61, 0xba, 0xa5, 0xd8, 0x9d, 0xe0, 0x11, 0xba, 0x76, 0xd2, 0x9d,
	0xe0, 0x51, 0x5e, 0xed, 0x4d, 0xf0, 0x18, 0xef, 0xeb, 0x4d, 0x40, 0x01, 0xc7, 0x0a, 0x85, 0x70,
	0x2d, 0x8c, 0x1a, 0xfc, 0x4b, 0x38, 0xbf, 0x16, 0xa1, 0xa7, 0x93, 0x4e, 0xdc, 0xe2, 0x9f, 0x1d,
	0xa8, 0x3f, 0xeb, 0x31, 0x76, 0x7e, 0x27, 0x08, 0x23, 0x0a, 0xa1, 0x7c, 0x88, 0x8d, 0x99, 0x3f,
	0xcb, 0x5c, 0x67, 0x01, 0xaf, 0xc6, 0xb0, 0x59, 0x20, 0x65, 0xc3, 0x01, 0x63, 0xfc, 0x05, 0xe9,
	0x81, 0x44, 0x56, 0x30, 0x0b, 0x2d, 0xc3, 0x33, 0x28, 0x74, 0x39, 0x93, 0x29, 0x05, 0x99, 0xe7,
	0x95, 0x7a, 0x83, 0x8d, 0xc8, 0xb8, 0xdc, 0x66, 0xff, 0x21, 0x01, 0xd6, 0xfe, 0x43, 0x41, 0xdc,
	0xfd, 0x87, 0x82, 0xba, 0xfb, 0x0f, 0x05, 0xb5, 0xf6, 0x1f, 0xf5, 0xb7, 0x94, 0xd8, 0xa8, 0x84,
	0x2b, 0x27, 0xe5, 0xa3, 0xec, 0x90, 0x0b, 0x59, 0x33, 0xd1, 0x71, 0x55, 0x16, 0x64, 0x1b, 0x1b,
	0xd7, 0x2c, 0xae, 0xe1, 0xfd, 0x2c, 0xba, 0xb2, 0xa5, 0x40, 0xfa, 0x7a, 0x82, 0xc5, 0xf8, 0x74,
	0xd4, 0x91, 0x61, 0xbf, 0x75, 0x42, 0xf2, 0xb6, 0xb0, 0x2b, 0xd7, 0xd9, 0x79, 0x88, 0x6e, 0x29,
	0x58, 0x90, 0x73, 0xbc, 0x3f, 0x03, 0x79, 0x98, 0x0f, 0x64, 0x20, 0x8f, 0x50, 0x90, 0x6f, 0x0b,
	0xf2, 0x28, 0x67, 0x19, 0xc8, 0x63, 0x7c, 0x28, 0x03, 0x79, 0x31, 0x1f, 0xce, 0x40, 0x1e, 0xe7,
	0x23, 0xe7, 0x16, 0xd9, 0xc8, 0xfc, 0xf2, 0xd2, 0xcc, 0x4c, 0xb2, 0xd3, 0x4c, 0x62, 0x11, 0xb7,
	0xfd, 0xaf, 0x66, 0x23, 0xe4, 0x95, 0x78, 0x59, 0xb4, 0x5a, 0xc1, 0xa6, 0xf0, 0x0f, 0x4f, 0x3a,
	0xff, 0xd2, 0xaf, 0xea, 0xc4, 0xa1, 0x2c, 0xb8, 0x19, 0xed, 0xd5, 0x6e, 0x59, 0xef, 0x6b, 0xa6,
	0x49, 0x3b, 0x79, 0xf8, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x4e, 0x4e, 0x45, 0x0e, 0x96,
	0x02, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GRPCComponentClient is the client API for GRPCComponent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GRPCComponentClient interface {
	//定义服务中的方法
	HandleMessage(ctx context.Context, in *HandleMessageRequest, opts ...grpc.CallOption) (*HandleMessageReply, error)
}

type gRPCComponentClient struct {
	cc *grpc.ClientConn
}

func NewGRPCComponentClient(cc *grpc.ClientConn) GRPCComponentClient {
	return &gRPCComponentClient{cc}
}

func (c *gRPCComponentClient) HandleMessage(ctx context.Context, in *HandleMessageRequest, opts ...grpc.CallOption) (*HandleMessageReply, error) {
	out := new(HandleMessageReply)
	err := c.cc.Invoke(ctx, "/GRPCComponent/HandleMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GRPCComponentServer is the server API for GRPCComponent service.
type GRPCComponentServer interface {
	//定义服务中的方法
	HandleMessage(context.Context, *HandleMessageRequest) (*HandleMessageReply, error)
}

// UnimplementedGRPCComponentServer can be embedded to have forward compatible implementations.
type UnimplementedGRPCComponentServer struct {
}

func (*UnimplementedGRPCComponentServer) HandleMessage(ctx context.Context, req *HandleMessageRequest) (*HandleMessageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMessage not implemented")
}

func RegisterGRPCComponentServer(s *grpc.Server, srv GRPCComponentServer) {
	s.RegisterService(&_GRPCComponent_serviceDesc, srv)
}

func _GRPCComponent_HandleMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCComponentServer).HandleMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GRPCComponent/HandleMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCComponentServer).HandleMessage(ctx, req.(*HandleMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GRPCComponent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GRPCComponent",
	HandlerType: (*GRPCComponentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleMessage",
			Handler:    _GRPCComponent_HandleMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}
